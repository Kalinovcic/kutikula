// Generated by aspelc v1.0

#include "W:\aspel\aspelc/modules/core.h"

//////////////////////////////////////////////////
 // Types
//////////////////////////////////////////////////

typedef CORE$U8 TYPE$2;
typedef CORE$ARRAY TYPE$1;
typedef CORE$ARRAY TYPE$3;
typedef CORE$DELEGATE TYPE$0;
typedef CORE$S64 TYPE$4;
typedef CORE$U64 TYPE$5;
typedef CORE$BOOL TYPE$6;
typedef CORE$VOID TYPE$8;
typedef CORE$PTR TYPE$7;
typedef CORE$DELEGATE TYPE$9;
typedef CORE$PTR TYPE$10;
typedef CORE$DELEGATE TYPE$11;
typedef CORE$DELEGATE TYPE$12;
typedef CORE$DELEGATE TYPE$13;
typedef CORE$DELEGATE TYPE$14;
typedef CORE$S32 TYPE$16;
typedef CORE$DELEGATE TYPE$15;
typedef CORE$DELEGATE TYPE$17;
typedef CORE$DELEGATE TYPE$18;
typedef CORE$U32 TYPE$19;
typedef CORE$DELEGATE TYPE$20;
typedef CORE$DELEGATE TYPE$21;
typedef CORE$DELEGATE TYPE$22;
typedef CORE$DELEGATE TYPE$23;
typedef CORE$DELEGATE TYPE$24;
union TYPE$25;
typedef CORE$PTR TYPE$27;
typedef CORE$U16 TYPE$28;
typedef CORE$DELEGATE TYPE$26;
typedef CORE$DELEGATE TYPE$29;
typedef CORE$ARRAY TYPE$30;
typedef CORE$PTR TYPE$31;
typedef CORE$DELEGATE TYPE$32;
typedef CORE$ANY TYPE$35;
typedef CORE$ARRAY TYPE$34;
typedef CORE$DELEGATE TYPE$33;
typedef CORE$DELEGATE TYPE$36;
typedef CORE$DELEGATE TYPE$37;
typedef CORE$DELEGATE TYPE$38;
typedef CORE$DELEGATE TYPE$39;
typedef CORE$DELEGATE TYPE$40;
typedef CORE$DELEGATE TYPE$41;
typedef CORE$DELEGATE TYPE$42;
typedef CORE$DELEGATE TYPE$43;
typedef CORE$DELEGATE TYPE$44;
union TYPE$45;
typedef CORE$DELEGATE TYPE$46;
typedef CORE$DELEGATE TYPE$47;
typedef CORE$PTR TYPE$49;
typedef CORE$DELEGATE TYPE$48;
typedef CORE$F64 TYPE$51;
typedef CORE$DELEGATE TYPE$50;
typedef CORE$DELEGATE TYPE$52;
typedef CORE$DELEGATE TYPE$53;
typedef CORE$PTR TYPE$54;
union TYPE$55;
union TYPE$56;
typedef CORE$ARRAY TYPE$57;
typedef CORE$ARRAY TYPE$58;
typedef CORE$PTR TYPE$60;
typedef CORE$DELEGATE TYPE$59;
typedef CORE$DELEGATE TYPE$61;
typedef CORE$PTR TYPE$62;
union TYPE$63;
union TYPE$64;
typedef CORE$PTR TYPE$66;
typedef CORE$DELEGATE TYPE$65;
typedef CORE$DELEGATE TYPE$67;
typedef CORE$PTR TYPE$68;
typedef CORE$DELEGATE TYPE$69;
typedef CORE$DELEGATE TYPE$70;
typedef CORE$DELEGATE TYPE$71;
typedef CORE$DELEGATE TYPE$72;
union TYPE$73;
union TYPE$74;
typedef CORE$PTR TYPE$76;
typedef CORE$DELEGATE TYPE$75;
typedef CORE$DELEGATE TYPE$77;
typedef CORE$PTR TYPE$78;
typedef CORE$DELEGATE TYPE$79;
typedef CORE$DELEGATE TYPE$80;
typedef CORE$DELEGATE TYPE$81;
typedef CORE$DELEGATE TYPE$82;
typedef CORE$DELEGATE TYPE$83;
typedef CORE$DELEGATE TYPE$84;
typedef CORE$PTR TYPE$86;
typedef CORE$DELEGATE TYPE$85;
typedef CORE$DELEGATE TYPE$87;
union TYPE$88;
typedef CORE$PTR TYPE$90;
typedef CORE$DELEGATE TYPE$89;
typedef CORE$DELEGATE TYPE$91;
typedef CORE$DELEGATE TYPE$92;
typedef CORE$DELEGATE TYPE$93;
typedef CORE$DELEGATE TYPE$94;
typedef CORE$DELEGATE TYPE$95;
typedef CORE$DELEGATE TYPE$96;
typedef CORE$DELEGATE TYPE$97;
union TYPE$98;
typedef CORE$DELEGATE TYPE$99;
typedef CORE$PTR TYPE$100;
typedef CORE$DELEGATE TYPE$101;
typedef CORE$DELEGATE TYPE$102;
typedef CORE$PTR TYPE$103;
typedef CORE$PTR TYPE$104;
typedef CORE$DELEGATE TYPE$105;
typedef CORE$DELEGATE TYPE$106;
typedef CORE$DELEGATE TYPE$107;
union TYPE$108;
typedef CORE$PTR TYPE$109;
union TYPE$110;
union TYPE$111;
typedef CORE$PTR TYPE$112;
union TYPE$113;
typedef CORE$ARRAY TYPE$114;
typedef CORE$ARRAY TYPE$115;
typedef CORE$ARRAY TYPE$116;
typedef CORE$ARRAY TYPE$117;
typedef CORE$PTR TYPE$119;
typedef CORE$DELEGATE TYPE$118;
typedef CORE$PTR TYPE$121;
typedef CORE$DELEGATE TYPE$120;
typedef CORE$DELEGATE TYPE$122;
typedef CORE$DELEGATE TYPE$123;
typedef CORE$DELEGATE TYPE$124;
typedef CORE$PTR TYPE$125;
typedef CORE$DELEGATE TYPE$126;
typedef CORE$DELEGATE TYPE$127;
typedef CORE$DELEGATE TYPE$128;
typedef CORE$DELEGATE TYPE$129;
typedef CORE$DELEGATE TYPE$130;
typedef CORE$DELEGATE TYPE$131;
typedef CORE$DELEGATE TYPE$132;
union TYPE$133;
typedef CORE$PTR TYPE$135;
typedef CORE$DELEGATE TYPE$134;
typedef CORE$DELEGATE TYPE$136;
typedef CORE$DELEGATE TYPE$137;
typedef CORE$PTR TYPE$139;
typedef CORE$DELEGATE TYPE$138;
typedef CORE$DELEGATE TYPE$140;
typedef CORE$DELEGATE TYPE$141;
typedef CORE$PTR TYPE$143;
typedef CORE$DELEGATE TYPE$142;
typedef CORE$DELEGATE TYPE$144;
typedef CORE$DELEGATE TYPE$145;
typedef CORE$DELEGATE TYPE$146;
typedef CORE$DELEGATE TYPE$147;
typedef CORE$DELEGATE TYPE$148;
typedef CORE$DELEGATE TYPE$149;
union TYPE$152;
typedef CORE$PTR TYPE$151;
typedef CORE$DELEGATE TYPE$150;
union TYPE$154;
typedef CORE$PTR TYPE$153;
typedef CORE$DELEGATE TYPE$155;
typedef CORE$DELEGATE TYPE$156;
typedef CORE$DELEGATE TYPE$157;
typedef CORE$DELEGATE TYPE$158;
typedef CORE$DELEGATE TYPE$159;
typedef CORE$DELEGATE TYPE$160;
typedef CORE$DELEGATE TYPE$161;
typedef CORE$DELEGATE TYPE$162;
typedef CORE$DELEGATE TYPE$163;
typedef CORE$DELEGATE TYPE$164;
union TYPE$165;
typedef CORE$PTR TYPE$167;
typedef CORE$DELEGATE TYPE$166;
typedef CORE$TYPEID TYPE$169;
typedef CORE$DELEGATE TYPE$168;
typedef CORE$S8 TYPE$170;
typedef CORE$S16 TYPE$171;
typedef CORE$F32 TYPE$172;
union TYPE$173;
typedef CORE$DELEGATE TYPE$174;
typedef CORE$DELEGATE TYPE$175;
typedef CORE$DELEGATE TYPE$176;
typedef CORE$DELEGATE TYPE$177;
typedef CORE$DELEGATE TYPE$178;
typedef CORE$DELEGATE TYPE$179;
typedef CORE$DELEGATE TYPE$180;
typedef CORE$DELEGATE TYPE$181;
typedef CORE$PTR TYPE$183;
typedef CORE$DELEGATE TYPE$182;
typedef CORE$ARRAY TYPE$184;
union TYPE$185;
typedef CORE$PTR TYPE$187;
typedef CORE$DELEGATE TYPE$186;
typedef CORE$DELEGATE TYPE$188;
typedef CORE$DELEGATE TYPE$189;
typedef CORE$DELEGATE TYPE$190;
union TYPE$191;
typedef CORE$DELEGATE TYPE$192;
union TYPE$193;
typedef CORE$DELEGATE TYPE$194;
typedef CORE$PTR TYPE$196;
typedef CORE$DELEGATE TYPE$195;
typedef CORE$DELEGATE TYPE$197;
typedef CORE$DELEGATE TYPE$198;
typedef CORE$DELEGATE TYPE$199;
typedef CORE$DELEGATE TYPE$200;
typedef CORE$DELEGATE TYPE$201;
typedef CORE$DELEGATE TYPE$202;
typedef CORE$DELEGATE TYPE$203;
typedef CORE$DELEGATE TYPE$204;
typedef CORE$DELEGATE TYPE$205;
typedef CORE$DELEGATE TYPE$206;
typedef CORE$DELEGATE TYPE$207;
typedef CORE$DELEGATE TYPE$208;
typedef CORE$DELEGATE TYPE$209;
typedef CORE$DELEGATE TYPE$210;
typedef CORE$PTR TYPE$212;
typedef CORE$PTR TYPE$213;
typedef CORE$DELEGATE TYPE$211;
typedef CORE$DELEGATE TYPE$214;
typedef CORE$DELEGATE TYPE$215;
typedef CORE$DELEGATE TYPE$216;
typedef CORE$DELEGATE TYPE$217;
typedef CORE$DELEGATE TYPE$218;
typedef CORE$DELEGATE TYPE$219;
typedef CORE$DELEGATE TYPE$220;
typedef CORE$DELEGATE TYPE$221;
typedef CORE$DELEGATE TYPE$222;
typedef CORE$DELEGATE TYPE$223;
typedef CORE$DELEGATE TYPE$224;
typedef CORE$DELEGATE TYPE$225;
typedef CORE$DELEGATE TYPE$226;
union TYPE$227;
typedef CORE$DELEGATE TYPE$228;
typedef CORE$DELEGATE TYPE$229;
typedef CORE$DELEGATE TYPE$230;
typedef CORE$DELEGATE TYPE$231;
typedef CORE$DELEGATE TYPE$232;
typedef CORE$DELEGATE TYPE$233;
typedef CORE$DELEGATE TYPE$234;
typedef CORE$DELEGATE TYPE$235;
typedef CORE$DELEGATE TYPE$236;
typedef CORE$DELEGATE TYPE$237;
typedef CORE$DELEGATE TYPE$238;
typedef CORE$DELEGATE TYPE$239;
typedef CORE$DELEGATE TYPE$240;
typedef CORE$DELEGATE TYPE$241;
typedef CORE$DELEGATE TYPE$242;
union TYPE$243;
typedef CORE$PTR TYPE$244;
typedef CORE$DELEGATE TYPE$245;
typedef CORE$PTR TYPE$246;
typedef CORE$DELEGATE TYPE$247;
typedef CORE$DELEGATE TYPE$248;
union TYPE$249;
typedef CORE$PTR TYPE$250;
typedef CORE$DELEGATE TYPE$251;
typedef CORE$DELEGATE TYPE$252;
typedef CORE$DELEGATE TYPE$253;
typedef CORE$DELEGATE TYPE$254;
typedef CORE$DELEGATE TYPE$255;
typedef CORE$DELEGATE TYPE$256;
union TYPE$257;
typedef CORE$PTR TYPE$258;
union TYPE$259;
typedef CORE$DELEGATE TYPE$260;
typedef CORE$PTR TYPE$261;
typedef CORE$DELEGATE TYPE$262;
typedef CORE$DELEGATE TYPE$263;
typedef CORE$DELEGATE TYPE$264;
union TYPE$265;
typedef CORE$PTR TYPE$267;
typedef CORE$DELEGATE TYPE$266;
typedef CORE$DELEGATE TYPE$268;
union TYPE$271;
typedef CORE$PTR TYPE$270;
typedef CORE$DELEGATE TYPE$269;
union TYPE$273;
typedef CORE$PTR TYPE$272;
typedef CORE$DELEGATE TYPE$274;
typedef CORE$DELEGATE TYPE$275;
typedef CORE$DELEGATE TYPE$276;
typedef CORE$DELEGATE TYPE$277;
typedef CORE$DELEGATE TYPE$278;
union TYPE$279;
typedef CORE$PTR TYPE$280;
typedef CORE$DELEGATE TYPE$281;
typedef CORE$PTR TYPE$282;
typedef CORE$DELEGATE TYPE$283;
typedef CORE$DELEGATE TYPE$284;
typedef CORE$DELEGATE TYPE$285;
typedef CORE$DELEGATE TYPE$286;
typedef CORE$DELEGATE TYPE$287;
typedef CORE$DELEGATE TYPE$288;
typedef CORE$DELEGATE TYPE$289;
typedef CORE$DELEGATE TYPE$290;
typedef CORE$DELEGATE TYPE$291;
typedef CORE$DELEGATE TYPE$292;
typedef CORE$DELEGATE TYPE$293;
typedef CORE$DELEGATE TYPE$294;
typedef CORE$DELEGATE TYPE$295;
union TYPE$298;
typedef CORE$PTR TYPE$297;
typedef CORE$ARRAY TYPE$296;
typedef CORE$DELEGATE TYPE$299;
typedef CORE$DELEGATE TYPE$300;
typedef CORE$DELEGATE TYPE$301;
union TYPE$302;
typedef CORE$PTR TYPE$303;
typedef CORE$DELEGATE TYPE$304;
typedef CORE$DELEGATE TYPE$305;
typedef CORE$DELEGATE TYPE$306;
union TYPE$307;
typedef CORE$PTR TYPE$308;
typedef CORE$DELEGATE TYPE$309;
typedef CORE$PTR TYPE$310;
typedef CORE$DELEGATE TYPE$311;
typedef CORE$DELEGATE TYPE$312;
typedef CORE$DELEGATE TYPE$313;
typedef CORE$DELEGATE TYPE$314;
typedef CORE$DELEGATE TYPE$315;
typedef CORE$DELEGATE TYPE$316;
union TYPE$317;
typedef CORE$DELEGATE TYPE$318;
typedef CORE$PTR TYPE$319;
typedef CORE$PTR TYPE$320;
typedef CORE$DELEGATE TYPE$321;
typedef CORE$DELEGATE TYPE$322;
typedef CORE$DELEGATE TYPE$323;
typedef CORE$DELEGATE TYPE$324;
typedef CORE$DELEGATE TYPE$325;
union TYPE$326;
typedef CORE$PTR TYPE$328;
typedef CORE$DELEGATE TYPE$327;
typedef CORE$DELEGATE TYPE$329;
union TYPE$330;
union TYPE$331;
typedef CORE$DELEGATE TYPE$332;
typedef CORE$PTR TYPE$333;
typedef CORE$PTR TYPE$334;
typedef CORE$DELEGATE TYPE$335;
typedef CORE$DELEGATE TYPE$336;
typedef CORE$DELEGATE TYPE$337;
typedef CORE$DELEGATE TYPE$338;
typedef CORE$DELEGATE TYPE$339;
typedef CORE$DELEGATE TYPE$340;
typedef CORE$DELEGATE TYPE$341;
typedef CORE$DELEGATE TYPE$342;
typedef CORE$DELEGATE TYPE$343;
typedef CORE$DELEGATE TYPE$344;
typedef CORE$DELEGATE TYPE$345;
typedef CORE$DELEGATE TYPE$346;
typedef CORE$DELEGATE TYPE$347;
typedef CORE$DELEGATE TYPE$348;
typedef CORE$DELEGATE TYPE$349;
typedef CORE$DELEGATE TYPE$350;
typedef CORE$PTR TYPE$352;
typedef CORE$DELEGATE TYPE$351;
typedef CORE$DELEGATE TYPE$353;
typedef CORE$DELEGATE TYPE$354;
typedef CORE$DELEGATE TYPE$355;
typedef CORE$DELEGATE TYPE$356;
typedef CORE$DELEGATE TYPE$357;
typedef CORE$DELEGATE TYPE$358;
typedef CORE$PTR TYPE$360;
typedef CORE$DELEGATE TYPE$359;
typedef CORE$DELEGATE TYPE$361;
typedef CORE$DELEGATE TYPE$362;
typedef CORE$ARRAY TYPE$364;
typedef CORE$DELEGATE TYPE$363;
typedef CORE$DELEGATE TYPE$365;
typedef CORE$DELEGATE TYPE$366;
typedef CORE$DELEGATE TYPE$367;
union TYPE$368;
typedef CORE$PTR TYPE$369;
typedef CORE$DELEGATE TYPE$370;
typedef CORE$DELEGATE TYPE$371;
union TYPE$372;
union TYPE$374;
typedef CORE$ARRAY TYPE$373;
typedef CORE$PTR TYPE$376;
typedef CORE$DELEGATE TYPE$375;
typedef CORE$DELEGATE TYPE$377;
typedef CORE$PTR TYPE$379;
typedef CORE$DELEGATE TYPE$378;
typedef CORE$DELEGATE TYPE$380;
typedef CORE$DELEGATE TYPE$381;
union TYPE$382;
typedef CORE$PTR TYPE$384;
typedef CORE$DELEGATE TYPE$383;
typedef CORE$DELEGATE TYPE$385;
typedef CORE$DELEGATE TYPE$386;
typedef CORE$DELEGATE TYPE$387;
typedef CORE$DELEGATE TYPE$388;
typedef CORE$DELEGATE TYPE$389;
typedef CORE$DELEGATE TYPE$390;
typedef CORE$DELEGATE TYPE$391;
typedef CORE$DELEGATE TYPE$392;
typedef CORE$DELEGATE TYPE$393;
typedef CORE$DELEGATE TYPE$394;
typedef CORE$DELEGATE TYPE$395;
union TYPE$398;
typedef CORE$PTR TYPE$397;
typedef CORE$DELEGATE TYPE$396;
typedef CORE$DELEGATE TYPE$399;
union TYPE$401;
typedef CORE$DELEGATE TYPE$400;
typedef CORE$DELEGATE TYPE$402;
typedef CORE$DELEGATE TYPE$403;
typedef CORE$DELEGATE TYPE$404;
typedef CORE$DELEGATE TYPE$405;
typedef CORE$DELEGATE TYPE$406;
union TYPE$407;
typedef CORE$DELEGATE TYPE$408;
typedef CORE$DELEGATE TYPE$409;
typedef CORE$DELEGATE TYPE$410;
typedef CORE$DELEGATE TYPE$411;
union TYPE$412;
typedef CORE$DELEGATE TYPE$413;
typedef CORE$DELEGATE TYPE$414;
typedef CORE$DELEGATE TYPE$415;
union TYPE$416;
typedef CORE$DELEGATE TYPE$417;
typedef CORE$DELEGATE TYPE$418;
typedef CORE$PTR TYPE$419;
union TYPE$420;
typedef CORE$DELEGATE TYPE$421;
typedef CORE$DELEGATE TYPE$422;
typedef CORE$PTR TYPE$423;
union TYPE$424;
typedef CORE$DELEGATE TYPE$425;
typedef CORE$PTR TYPE$426;
typedef CORE$DELEGATE TYPE$427;
typedef CORE$PTR TYPE$428;
typedef CORE$PTR TYPE$429;
typedef CORE$PTR TYPE$430;
typedef CORE$DELEGATE TYPE$431;
typedef CORE$DELEGATE TYPE$432;
typedef CORE$DELEGATE TYPE$433;
typedef CORE$DELEGATE TYPE$434;
union TYPE$435;
typedef CORE$DELEGATE TYPE$436;
typedef CORE$ARRAY TYPE$437;
typedef CORE$PTR TYPE$438;
union TYPE$439;
union TYPE$440;
union TYPE$441;
union TYPE$442;
union TYPE$443;
union TYPE$444;
union TYPE$445;
typedef CORE$PTR TYPE$447;
typedef CORE$DELEGATE TYPE$446;
typedef CORE$DELEGATE TYPE$448;
typedef CORE$DELEGATE TYPE$449;
typedef CORE$DELEGATE TYPE$450;
union TYPE$451;
union TYPE$452;
typedef CORE$PTR TYPE$454;
typedef CORE$DELEGATE TYPE$453;
typedef CORE$DELEGATE TYPE$455;
typedef CORE$DELEGATE TYPE$456;
typedef CORE$PTR TYPE$458;
typedef CORE$DELEGATE TYPE$457;
typedef CORE$DELEGATE TYPE$459;
typedef CORE$DELEGATE TYPE$460;
union TYPE$461;
union TYPE$462;
union TYPE$464;
typedef CORE$ARRAY TYPE$463;
union TYPE$466;
typedef CORE$ARRAY TYPE$465;
union TYPE$467;
union TYPE$468;
typedef CORE$DELEGATE TYPE$469;
typedef CORE$PTR TYPE$470;
union TYPE$471;
typedef CORE$DELEGATE TYPE$472;
typedef CORE$PTR TYPE$474;
typedef CORE$DELEGATE TYPE$473;
typedef CORE$DELEGATE TYPE$475;
typedef CORE$PTR TYPE$476;
typedef CORE$DELEGATE TYPE$477;
typedef CORE$DELEGATE TYPE$478;
typedef CORE$DELEGATE TYPE$479;
typedef CORE$DELEGATE TYPE$480;
typedef CORE$DELEGATE TYPE$481;
typedef CORE$DELEGATE TYPE$482;
typedef CORE$DELEGATE TYPE$483;
typedef CORE$DELEGATE TYPE$484;
typedef CORE$DELEGATE TYPE$485;
typedef CORE$DELEGATE TYPE$486;
typedef CORE$DELEGATE TYPE$487;
typedef CORE$DELEGATE TYPE$488;
typedef CORE$PTR TYPE$489;
typedef CORE$DELEGATE TYPE$490;
typedef CORE$DELEGATE TYPE$491;
typedef CORE$DELEGATE TYPE$492;
typedef CORE$PTR TYPE$494;
typedef CORE$PTR TYPE$495;
typedef CORE$DELEGATE TYPE$493;
typedef CORE$PTR TYPE$496;
typedef CORE$DELEGATE TYPE$497;
union TYPE$498;
union TYPE$500;
typedef CORE$ARRAY TYPE$499;
typedef CORE$DELEGATE TYPE$501;
typedef CORE$PTR TYPE$502;
typedef CORE$PTR TYPE$503;
typedef CORE$DELEGATE TYPE$504;
typedef CORE$PTR TYPE$506;
typedef CORE$PTR TYPE$507;
typedef CORE$DELEGATE TYPE$505;
typedef CORE$DELEGATE TYPE$508;
typedef CORE$DELEGATE TYPE$509;
typedef CORE$DELEGATE TYPE$510;
typedef CORE$DELEGATE TYPE$511;
typedef CORE$DELEGATE TYPE$512;
typedef CORE$DELEGATE TYPE$513;
typedef CORE$DELEGATE TYPE$514;
typedef CORE$DELEGATE TYPE$515;
typedef CORE$DELEGATE TYPE$516;
typedef CORE$DELEGATE TYPE$517;
typedef CORE$ARRAY TYPE$519;
typedef CORE$DELEGATE TYPE$518;
typedef CORE$PTR TYPE$520;
typedef CORE$DELEGATE TYPE$521;
typedef CORE$DELEGATE TYPE$522;
typedef CORE$PTR TYPE$523;
typedef CORE$ARRAY TYPE$525;
typedef CORE$DELEGATE TYPE$524;
typedef CORE$DELEGATE TYPE$526;
typedef CORE$DELEGATE TYPE$527;
typedef CORE$DELEGATE TYPE$528;
typedef CORE$DELEGATE TYPE$529;
typedef CORE$DELEGATE TYPE$530;
typedef CORE$DELEGATE TYPE$531;
typedef CORE$DELEGATE TYPE$532;
typedef CORE$DELEGATE TYPE$533;
typedef CORE$DELEGATE TYPE$534;
typedef CORE$DELEGATE TYPE$535;
typedef CORE$DELEGATE TYPE$536;
typedef CORE$DELEGATE TYPE$537;
typedef CORE$DELEGATE TYPE$538;
typedef CORE$DELEGATE TYPE$539;
typedef CORE$DELEGATE TYPE$540;
typedef CORE$DELEGATE TYPE$541;
typedef CORE$DELEGATE TYPE$542;
typedef CORE$DELEGATE TYPE$543;
typedef CORE$DELEGATE TYPE$544;
typedef CORE$DELEGATE TYPE$545;
typedef CORE$DELEGATE TYPE$546;
typedef CORE$DELEGATE TYPE$547;
typedef CORE$DELEGATE TYPE$548;
typedef CORE$DELEGATE TYPE$549;
typedef CORE$DELEGATE TYPE$550;
typedef CORE$DELEGATE TYPE$551;
typedef CORE$DELEGATE TYPE$552;
typedef CORE$DELEGATE TYPE$553;
typedef CORE$DELEGATE TYPE$554;
typedef CORE$DELEGATE TYPE$555;
typedef CORE$DELEGATE TYPE$556;
typedef CORE$DELEGATE TYPE$557;
union TYPE$558;
union TYPE$559;
union TYPE$560;
union TYPE$561;
union TYPE$562;
union TYPE$563;
union TYPE$564;
typedef CORE$PTR TYPE$566;
typedef CORE$DELEGATE TYPE$565;
typedef CORE$PTR TYPE$567;
typedef CORE$PTR TYPE$568;
typedef CORE$PTR TYPE$569;
typedef CORE$PTR TYPE$570;
typedef CORE$PTR TYPE$571;
typedef CORE$PTR TYPE$572;
union TYPE$573;
union TYPE$574;
typedef CORE$DELEGATE TYPE$575;
typedef CORE$PTR TYPE$576;
typedef CORE$PTR TYPE$577;
typedef CORE$PTR TYPE$578;
typedef CORE$DELEGATE TYPE$579;
typedef CORE$PTR TYPE$580;
typedef CORE$DELEGATE TYPE$581;
typedef CORE$PTR TYPE$582;
typedef CORE$DELEGATE TYPE$583;
typedef CORE$PTR TYPE$584;
typedef CORE$DELEGATE TYPE$585;
typedef CORE$PTR TYPE$586;
typedef CORE$DELEGATE TYPE$587;
typedef CORE$PTR TYPE$588;
typedef CORE$DELEGATE TYPE$589;
typedef CORE$PTR TYPE$590;
typedef CORE$DELEGATE TYPE$591;
typedef CORE$PTR TYPE$592;
union TYPE$593;
union TYPE$594;
typedef CORE$DELEGATE TYPE$595;
typedef CORE$PTR TYPE$596;
typedef CORE$PTR TYPE$597;
typedef CORE$PTR TYPE$598;
union TYPE$599;
union TYPE$600;
typedef CORE$DELEGATE TYPE$601;
typedef CORE$PTR TYPE$602;
typedef CORE$PTR TYPE$603;
typedef CORE$PTR TYPE$604;
typedef CORE$DELEGATE TYPE$605;
typedef CORE$PTR TYPE$606;
typedef CORE$DELEGATE TYPE$607;
typedef CORE$PTR TYPE$608;
typedef CORE$DELEGATE TYPE$609;
typedef CORE$PTR TYPE$610;
typedef CORE$PTR TYPE$611;
typedef CORE$DELEGATE TYPE$612;
typedef CORE$PTR TYPE$613;
typedef CORE$PTR TYPE$614;
typedef CORE$DELEGATE TYPE$615;
typedef CORE$PTR TYPE$616;
typedef CORE$DELEGATE TYPE$617;
typedef CORE$PTR TYPE$618;
typedef CORE$DELEGATE TYPE$619;
typedef CORE$PTR TYPE$620;
typedef CORE$DELEGATE TYPE$621;
typedef CORE$PTR TYPE$622;
typedef CORE$DELEGATE TYPE$623;
typedef CORE$PTR TYPE$624;
typedef CORE$DELEGATE TYPE$625;
typedef CORE$PTR TYPE$626;
typedef CORE$PTR TYPE$627;
typedef CORE$PTR TYPE$628;
typedef CORE$DELEGATE TYPE$629;
typedef CORE$PTR TYPE$630;
typedef CORE$DELEGATE TYPE$631;
typedef CORE$PTR TYPE$632;
typedef CORE$PTR TYPE$633;
union TYPE$634;
union TYPE$635;
union TYPE$636;
typedef CORE$DELEGATE TYPE$637;
typedef CORE$PTR TYPE$638;
typedef CORE$PTR TYPE$639;
typedef CORE$PTR TYPE$640;
typedef CORE$DELEGATE TYPE$641;
typedef CORE$PTR TYPE$642;
typedef CORE$DELEGATE TYPE$643;
typedef CORE$PTR TYPE$644;
union TYPE$645;
union TYPE$646;
typedef CORE$DELEGATE TYPE$647;
typedef CORE$PTR TYPE$648;
typedef CORE$PTR TYPE$649;
typedef CORE$PTR TYPE$650;
typedef CORE$DELEGATE TYPE$651;
typedef CORE$PTR TYPE$652;
typedef CORE$DELEGATE TYPE$653;
typedef CORE$PTR TYPE$654;
typedef CORE$DELEGATE TYPE$655;
typedef CORE$PTR TYPE$656;
typedef CORE$DELEGATE TYPE$657;
typedef CORE$PTR TYPE$658;
typedef CORE$DELEGATE TYPE$659;
typedef CORE$PTR TYPE$660;
typedef CORE$DELEGATE TYPE$661;
typedef CORE$PTR TYPE$662;
typedef CORE$DELEGATE TYPE$663;
typedef CORE$PTR TYPE$664;
typedef CORE$DELEGATE TYPE$665;
typedef CORE$PTR TYPE$666;
typedef CORE$DELEGATE TYPE$667;
typedef CORE$DELEGATE TYPE$668;
typedef CORE$DELEGATE TYPE$669;
typedef CORE$PTR TYPE$671;
typedef CORE$DELEGATE TYPE$670;
typedef CORE$DELEGATE TYPE$672;
typedef CORE$PTR TYPE$673;
typedef CORE$PTR TYPE$674;
union TYPE$675;
typedef CORE$PTR TYPE$676;
typedef CORE$PTR TYPE$677;
typedef CORE$PTR TYPE$678;
typedef CORE$DELEGATE TYPE$679;
typedef CORE$PTR TYPE$680;
typedef CORE$PTR TYPE$681;
typedef CORE$PTR TYPE$682;
typedef CORE$PTR TYPE$683;
typedef CORE$PTR TYPE$684;
typedef CORE$PTR TYPE$685;
union TYPE$686;
typedef CORE$DELEGATE TYPE$687;
typedef CORE$DELEGATE TYPE$688;
typedef CORE$PTR TYPE$689;
typedef CORE$PTR TYPE$691;
typedef CORE$DELEGATE TYPE$690;
typedef CORE$ARRAY TYPE$693;
typedef CORE$DELEGATE TYPE$692;
typedef CORE$PTR TYPE$695;
typedef CORE$DELEGATE TYPE$694;
typedef CORE$ARRAY TYPE$697;
typedef CORE$DELEGATE TYPE$696;
typedef CORE$DELEGATE TYPE$698;
typedef CORE$ARRAY TYPE$700;
typedef CORE$DELEGATE TYPE$699;
typedef CORE$DELEGATE TYPE$701;
typedef CORE$ARRAY TYPE$703;
typedef CORE$DELEGATE TYPE$702;
typedef CORE$DELEGATE TYPE$704;
typedef CORE$DELEGATE TYPE$705;
typedef CORE$DELEGATE TYPE$706;
typedef CORE$DELEGATE TYPE$707;
typedef CORE$DELEGATE TYPE$708;
typedef CORE$DELEGATE TYPE$709;
typedef CORE$DELEGATE TYPE$710;
typedef CORE$ARRAY TYPE$712;
typedef CORE$DELEGATE TYPE$711;
typedef CORE$DELEGATE TYPE$713;
typedef CORE$ARRAY TYPE$715;
typedef CORE$DELEGATE TYPE$714;
typedef CORE$DELEGATE TYPE$716;
typedef CORE$DELEGATE TYPE$717;
typedef CORE$DELEGATE TYPE$718;
typedef CORE$DELEGATE TYPE$719;
typedef CORE$DELEGATE TYPE$720;
typedef CORE$DELEGATE TYPE$721;
typedef CORE$DELEGATE TYPE$722;
typedef CORE$DELEGATE TYPE$723;
typedef CORE$DELEGATE TYPE$724;
typedef CORE$DELEGATE TYPE$725;
typedef CORE$DELEGATE TYPE$726;
typedef CORE$DELEGATE TYPE$727;
typedef CORE$DELEGATE TYPE$728;
typedef CORE$DELEGATE TYPE$729;
typedef CORE$DELEGATE TYPE$730;
typedef CORE$DELEGATE TYPE$731;
typedef CORE$DELEGATE TYPE$732;
typedef CORE$DELEGATE TYPE$733;
typedef CORE$DELEGATE TYPE$734;
typedef CORE$DELEGATE TYPE$735;
typedef CORE$DELEGATE TYPE$736;
typedef CORE$DELEGATE TYPE$737;
typedef CORE$DELEGATE TYPE$738;
typedef CORE$DELEGATE TYPE$739;
typedef CORE$DELEGATE TYPE$740;
typedef CORE$DELEGATE TYPE$741;
typedef CORE$DELEGATE TYPE$742;
typedef CORE$DELEGATE TYPE$743;
typedef CORE$DELEGATE TYPE$744;
typedef CORE$DELEGATE TYPE$745;
typedef CORE$DELEGATE TYPE$746;
typedef CORE$DELEGATE TYPE$747;
typedef CORE$DELEGATE TYPE$748;
typedef CORE$DELEGATE TYPE$749;
typedef CORE$DELEGATE TYPE$750;
typedef CORE$DELEGATE TYPE$751;
typedef CORE$DELEGATE TYPE$752;
typedef CORE$DELEGATE TYPE$753;
typedef CORE$DELEGATE TYPE$754;
typedef CORE$DELEGATE TYPE$755;
typedef CORE$DELEGATE TYPE$756;
typedef CORE$DELEGATE TYPE$757;
typedef CORE$DELEGATE TYPE$758;
typedef CORE$DELEGATE TYPE$759;
typedef CORE$DELEGATE TYPE$760;
typedef CORE$DELEGATE TYPE$761;
typedef CORE$DELEGATE TYPE$762;
typedef CORE$DELEGATE TYPE$763;
typedef CORE$DELEGATE TYPE$764;
typedef CORE$DELEGATE TYPE$765;
union TYPE$766;
typedef CORE$PTR TYPE$768;
typedef CORE$DELEGATE TYPE$767;
typedef CORE$DELEGATE TYPE$769;
typedef CORE$DELEGATE TYPE$770;
union TYPE$771;
union TYPE$772;
typedef CORE$DELEGATE TYPE$773;
typedef CORE$DELEGATE TYPE$774;
typedef CORE$PTR TYPE$775;
typedef CORE$PTR TYPE$776;
union TYPE$777;
typedef CORE$DELEGATE TYPE$778;
typedef CORE$DELEGATE TYPE$779;
typedef CORE$DELEGATE TYPE$780;
typedef CORE$DELEGATE TYPE$781;
typedef CORE$DELEGATE TYPE$782;
typedef CORE$DELEGATE TYPE$783;
typedef CORE$DELEGATE TYPE$784;
typedef CORE$DELEGATE TYPE$785;
union TYPE$786;
union TYPE$787;
union TYPE$788;
union TYPE$789;
union TYPE$790;
union TYPE$791;
union TYPE$792;
union TYPE$793;
union TYPE$794;
union TYPE$795;
union TYPE$796;
union TYPE$797;
typedef CORE$DELEGATE TYPE$798;
typedef CORE$DELEGATE TYPE$799;
typedef CORE$DELEGATE TYPE$800;
typedef CORE$DELEGATE TYPE$801;
typedef CORE$DELEGATE TYPE$802;
typedef CORE$DELEGATE TYPE$803;
typedef CORE$DELEGATE TYPE$804;
typedef CORE$DELEGATE TYPE$805;
typedef CORE$DELEGATE TYPE$806;
typedef CORE$DELEGATE TYPE$807;
typedef CORE$DELEGATE TYPE$808;
typedef CORE$DELEGATE TYPE$809;
typedef CORE$DELEGATE TYPE$810;
typedef CORE$DELEGATE TYPE$811;
typedef CORE$DELEGATE TYPE$812;
typedef CORE$DELEGATE TYPE$813;
typedef CORE$DELEGATE TYPE$814;
typedef CORE$DELEGATE TYPE$815;
typedef CORE$DELEGATE TYPE$816;
typedef CORE$DELEGATE TYPE$817;
typedef CORE$DELEGATE TYPE$818;
typedef CORE$DELEGATE TYPE$819;
typedef CORE$DELEGATE TYPE$820;
typedef CORE$DELEGATE TYPE$821;
typedef CORE$DELEGATE TYPE$822;
typedef CORE$DELEGATE TYPE$823;
typedef CORE$DELEGATE TYPE$824;
typedef CORE$DELEGATE TYPE$825;
typedef CORE$DELEGATE TYPE$826;
typedef CORE$DELEGATE TYPE$827;
typedef CORE$DELEGATE TYPE$828;
typedef CORE$DELEGATE TYPE$829;
typedef CORE$DELEGATE TYPE$830;
typedef CORE$DELEGATE TYPE$831;
typedef CORE$DELEGATE TYPE$832;
typedef CORE$DELEGATE TYPE$833;
typedef CORE$DELEGATE TYPE$834;
typedef CORE$DELEGATE TYPE$835;
typedef CORE$DELEGATE TYPE$836;
union TYPE$837;
union TYPE$838;
typedef CORE$DELEGATE TYPE$839;
typedef CORE$DELEGATE TYPE$840;
typedef CORE$DELEGATE TYPE$841;
typedef CORE$DELEGATE TYPE$842;
typedef CORE$DELEGATE TYPE$843;
union TYPE$844;
union TYPE$845;
union TYPE$846;
union TYPE$847;
union TYPE$848;
union TYPE$849;
union TYPE$850;
union TYPE$851;
typedef CORE$DELEGATE TYPE$852;
typedef CORE$DELEGATE TYPE$853;
typedef CORE$DELEGATE TYPE$854;
typedef CORE$DELEGATE TYPE$855;
typedef CORE$DELEGATE TYPE$856;
typedef CORE$DELEGATE TYPE$857;
typedef CORE$DELEGATE TYPE$858;
typedef CORE$DELEGATE TYPE$859;
typedef CORE$DELEGATE TYPE$860;
typedef CORE$DELEGATE TYPE$861;
typedef CORE$DELEGATE TYPE$862;
typedef CORE$DELEGATE TYPE$863;
union TYPE$864;
union TYPE$865;
union TYPE$866;
typedef CORE$DELEGATE TYPE$867;
typedef CORE$DELEGATE TYPE$868;
union TYPE$869;
typedef CORE$DELEGATE TYPE$870;
typedef CORE$DELEGATE TYPE$871;
typedef CORE$DELEGATE TYPE$872;
typedef CORE$DELEGATE TYPE$873;
typedef CORE$DELEGATE TYPE$874;
typedef CORE$DELEGATE TYPE$875;
typedef CORE$DELEGATE TYPE$876;
typedef CORE$DELEGATE TYPE$877;
typedef CORE$DELEGATE TYPE$878;
typedef CORE$DELEGATE TYPE$879;
union TYPE$880;
union TYPE$881;
union TYPE$882;
typedef CORE$DELEGATE TYPE$883;
typedef CORE$DELEGATE TYPE$884;
typedef CORE$DELEGATE TYPE$885;
typedef CORE$DELEGATE TYPE$886;
typedef CORE$DELEGATE TYPE$887;
typedef CORE$DELEGATE TYPE$888;
typedef CORE$DELEGATE TYPE$889;
typedef CORE$DELEGATE TYPE$890;
typedef CORE$DELEGATE TYPE$891;
typedef CORE$DELEGATE TYPE$892;
typedef CORE$DELEGATE TYPE$893;
typedef CORE$DELEGATE TYPE$894;
typedef CORE$DELEGATE TYPE$895;
typedef CORE$DELEGATE TYPE$896;
typedef CORE$DELEGATE TYPE$897;
typedef CORE$DELEGATE TYPE$898;
union TYPE$899;
union TYPE$900;
union TYPE$901;
union TYPE$902;
union TYPE$903;
union TYPE$904;
union TYPE$905;
union TYPE$906;
union TYPE$907;
union TYPE$908;
typedef CORE$DELEGATE TYPE$909;
typedef CORE$DELEGATE TYPE$910;
typedef CORE$DELEGATE TYPE$911;
typedef CORE$DELEGATE TYPE$912;
typedef CORE$DELEGATE TYPE$913;
typedef CORE$DELEGATE TYPE$914;
typedef CORE$DELEGATE TYPE$915;
union TYPE$916;
union TYPE$917;
typedef CORE$DELEGATE TYPE$918;
typedef CORE$DELEGATE TYPE$919;
typedef CORE$DELEGATE TYPE$920;
typedef CORE$DELEGATE TYPE$921;
typedef CORE$DELEGATE TYPE$922;
typedef CORE$DELEGATE TYPE$923;
typedef CORE$DELEGATE TYPE$924;
typedef CORE$DELEGATE TYPE$925;
typedef CORE$DELEGATE TYPE$926;
typedef CORE$DELEGATE TYPE$927;
typedef CORE$DELEGATE TYPE$928;
typedef CORE$DELEGATE TYPE$929;
typedef CORE$DELEGATE TYPE$930;
typedef CORE$DELEGATE TYPE$931;
typedef CORE$DELEGATE TYPE$932;
union TYPE$933;
typedef CORE$DELEGATE TYPE$934;
typedef CORE$DELEGATE TYPE$935;
union TYPE$936;
union TYPE$937;
typedef CORE$DELEGATE TYPE$938;
typedef CORE$DELEGATE TYPE$939;
typedef CORE$DELEGATE TYPE$940;
typedef CORE$DELEGATE TYPE$941;
typedef CORE$DELEGATE TYPE$942;
typedef CORE$DELEGATE TYPE$943;
typedef CORE$DELEGATE TYPE$944;
typedef CORE$DELEGATE TYPE$945;
typedef CORE$DELEGATE TYPE$946;
union TYPE$947;

union TYPE$25 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$45 {
  CORE$MEMBER(TYPE$5, m0, 0ULL);
  CORE$MEMBER(TYPE$5, m1, 8ULL);
  CORE$MEMBER(TYPE$6, m2, 16ULL);
};
union TYPE$55 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$54, m2, 8ULL);
  CORE$MEMBER(TYPE$37, m3, 16ULL);
};
union TYPE$56 {
  CORE$MEMBER(TYPE$57, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 16ULL);
  CORE$MEMBER(TYPE$58, m2, 20ULL);
  CORE$MEMBER(TYPE$19, m3, 36ULL);
  CORE$MEMBER(TYPE$19, m4, 40ULL);
  CORE$MEMBER(TYPE$6, m5, 44ULL);
};
union TYPE$64 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
};
union TYPE$63 {
  CORE$MEMBER(TYPE$64, m0, 0ULL);
};
union TYPE$74 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$73 {
  CORE$MEMBER(TYPE$74, m0, 0ULL);
};
union TYPE$88 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
};
union TYPE$98 {
  CORE$MEMBER(TYPE$37, m0, 0ULL);
  CORE$MEMBER(TYPE$7, m1, 8ULL);
};
union TYPE$108 {
  CORE$MEMBER(TYPE$2, m0, 0ULL);
  CORE$MEMBER(TYPE$109, m1, 1ULL);
  CORE$MEMBER(TYPE$109, m2, 9ULL);
  CORE$MEMBER(TYPE$5, m3, 17ULL);
};
union TYPE$110 {
  CORE$MEMBER(TYPE$6, m0, 0ULL);
  CORE$MEMBER(TYPE$7, m1, 4ULL);
  CORE$MEMBER(TYPE$7, m2, 12ULL);
};
union TYPE$111 {
  CORE$MEMBER(TYPE$109, m0, 0ULL);
  CORE$MEMBER(TYPE$112, m1, 8ULL);
};
union TYPE$113 {
  CORE$MEMBER(TYPE$114, m0, 0ULL);
  CORE$MEMBER(TYPE$115, m1, 16ULL);
  CORE$MEMBER(TYPE$116, m2, 32ULL);
  CORE$MEMBER(TYPE$4, m3, 48ULL);
  CORE$MEMBER(TYPE$4, m4, 56ULL);
  CORE$MEMBER(TYPE$4, m5, 64ULL);
  CORE$MEMBER(TYPE$117, m6, 72ULL);
  CORE$MEMBER(TYPE$117, m7, 88ULL);
  CORE$MEMBER(TYPE$109, m8, 104ULL);
};
union TYPE$133 {
  CORE$MEMBER(TYPE$117, m0, 0ULL);
  CORE$MEMBER(TYPE$4, m1, 16ULL);
};
union TYPE$152 {
  CORE$MEMBER(TYPE$153, m0, 0ULL);
  CORE$MEMBER(TYPE$150, m1, 8ULL);
  CORE$MEMBER(TYPE$7, m2, 16ULL);
  CORE$MEMBER(TYPE$19, m3, 24ULL);
  CORE$MEMBER(TYPE$19, m4, 28ULL);
  CORE$MEMBER(TYPE$19, m5, 32ULL);
};
union TYPE$154 {
  CORE$MEMBER(TYPE$236, m0, 0ULL);
  CORE$MEMBER(TYPE$245, m1, 8ULL);
  CORE$MEMBER(TYPE$160, m2, 16ULL);
  CORE$MEMBER(TYPE$160, m3, 24ULL);
  CORE$MEMBER(TYPE$237, m4, 32ULL);
  CORE$MEMBER(TYPE$237, m5, 40ULL);
};
union TYPE$165 {
  CORE$MEMBER(TYPE$1, m0, 0ULL);
  CORE$MEMBER(TYPE$1, m1, 16ULL);
  CORE$MEMBER(TYPE$4, m2, 32ULL);
  CORE$MEMBER(TYPE$4, m3, 40ULL);
  CORE$MEMBER(TYPE$19, m4, 48ULL);
  CORE$MEMBER(TYPE$35, m5, 52ULL);
};
union TYPE$173 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$184, m1, 4ULL);
  CORE$MEMBER(TYPE$5, m2, 20ULL);
};
union TYPE$185 {
  CORE$MEMBER(TYPE$1, m0, 0ULL);
};
union TYPE$191 {
  CORE$MEMBER(TYPE$5, m0, 0ULL);
  CORE$MEMBER(TYPE$5, m1, 8ULL);
};
union TYPE$193 {
  CORE$MEMBER(TYPE$185, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 16ULL);
  CORE$MEMBER(TYPE$5, m2, 20ULL);
};
union TYPE$227 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$16, m8, 32ULL);
  CORE$MEMBER(TYPE$16, m9, 36ULL);
  CORE$MEMBER(TYPE$16, m10, 40ULL);
  CORE$MEMBER(TYPE$16, m11, 44ULL);
  CORE$MEMBER(TYPE$16, m12, 48ULL);
  CORE$MEMBER(TYPE$16, m13, 52ULL);
  CORE$MEMBER(TYPE$16, m14, 56ULL);
  CORE$MEMBER(TYPE$16, m15, 60ULL);
};
union TYPE$243 {
  CORE$MEMBER(TYPE$154, m0, 0ULL);
  CORE$MEMBER(TYPE$5, m1, 48ULL);
};
union TYPE$249 {
  CORE$MEMBER(TYPE$154, m0, 0ULL);
  CORE$MEMBER(TYPE$10, m1, 48ULL);
  CORE$MEMBER(TYPE$4, m2, 56ULL);
  CORE$MEMBER(TYPE$4, m3, 64ULL);
};
union TYPE$257 {
  CORE$MEMBER(TYPE$10, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 8ULL);
  CORE$MEMBER(TYPE$19, m2, 12ULL);
  CORE$MEMBER(TYPE$258, m3, 16ULL);
};
union TYPE$259 {
  CORE$MEMBER(TYPE$154, m0, 0ULL);
  CORE$MEMBER(TYPE$258, m1, 48ULL);
  CORE$MEMBER(TYPE$258, m2, 56ULL);
  CORE$MEMBER(TYPE$258, m3, 64ULL);
  CORE$MEMBER(TYPE$5, m4, 72ULL);
  CORE$MEMBER(TYPE$19, m5, 80ULL);
  CORE$MEMBER(TYPE$66, m6, 84ULL);
};
union TYPE$265 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 4ULL);
  CORE$MEMBER(TYPE$28, m2, 6ULL);
  CORE$MEMBER(TYPE$19, m3, 8ULL);
};
union TYPE$271 {
  CORE$MEMBER(TYPE$272, m0, 0ULL);
  CORE$MEMBER(TYPE$7, m1, 8ULL);
  CORE$MEMBER(TYPE$6, m2, 16ULL);
  CORE$MEMBER(TYPE$265, m3, 20ULL);
  CORE$MEMBER(TYPE$88, m4, 32ULL);
  CORE$MEMBER(TYPE$90, m5, 36ULL);
  CORE$MEMBER(TYPE$5, m6, 44ULL);
  CORE$MEMBER(TYPE$7, m7, 52ULL);
  CORE$MEMBER(TYPE$66, m8, 60ULL);
  CORE$MEMBER(TYPE$19, m9, 68ULL);
  CORE$MEMBER(TYPE$276, m10, 72ULL);
  CORE$MEMBER(TYPE$153, m11, 80ULL);
};
union TYPE$279 {
  CORE$MEMBER(TYPE$7, m0, 0ULL);
  CORE$MEMBER(TYPE$1, m1, 8ULL);
  CORE$MEMBER(TYPE$88, m2, 24ULL);
  CORE$MEMBER(TYPE$280, m3, 28ULL);
};
union TYPE$273 {
  CORE$MEMBER(TYPE$285, m0, 0ULL);
  CORE$MEMBER(TYPE$285, m1, 8ULL);
  CORE$MEMBER(TYPE$284, m2, 16ULL);
  CORE$MEMBER(TYPE$290, m3, 24ULL);
  CORE$MEMBER(TYPE$277, m4, 32ULL);
  CORE$MEMBER(TYPE$274, m5, 40ULL);
  CORE$MEMBER(TYPE$277, m6, 48ULL);
  CORE$MEMBER(TYPE$277, m7, 56ULL);
  CORE$MEMBER(TYPE$278, m8, 64ULL);
  CORE$MEMBER(TYPE$277, m9, 72ULL);
  CORE$MEMBER(TYPE$66, m10, 80ULL);
  CORE$MEMBER(TYPE$280, m11, 88ULL);
  CORE$MEMBER(TYPE$19, m12, 96ULL);
  CORE$MEMBER(TYPE$280, m13, 100ULL);
  CORE$MEMBER(TYPE$19, m14, 108ULL);
  CORE$MEMBER(TYPE$279, m15, 112ULL);
  CORE$MEMBER(TYPE$279, m16, 148ULL);
  CORE$MEMBER(TYPE$6, m17, 184ULL);
  CORE$MEMBER(TYPE$6, m18, 188ULL);
  CORE$MEMBER(TYPE$7, m19, 192ULL);
};
union TYPE$298 {
  CORE$MEMBER(TYPE$1, m0, 0ULL);
  CORE$MEMBER(TYPE$294, m1, 16ULL);
};
union TYPE$302 {
  CORE$MEMBER(TYPE$5, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 8ULL);
  CORE$MEMBER(TYPE$303, m2, 12ULL);
  CORE$MEMBER(TYPE$303, m3, 20ULL);
};
union TYPE$307 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
};
union TYPE$317 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
  CORE$MEMBER(TYPE$5, m3, 8ULL);
};
union TYPE$326 {
  CORE$MEMBER(TYPE$303, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 8ULL);
};
union TYPE$771 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
};
union TYPE$772 {
  CORE$MEMBER(TYPE$771, m0, 0ULL);
  CORE$MEMBER(TYPE$771, m1, 32ULL);
  CORE$MEMBER(TYPE$771, m2, 64ULL);
  CORE$MEMBER(TYPE$771, m3, 96ULL);
  CORE$MEMBER(TYPE$771, m4, 128ULL);
  CORE$MEMBER(TYPE$771, m5, 160ULL);
  CORE$MEMBER(TYPE$771, m6, 192ULL);
  CORE$MEMBER(TYPE$771, m7, 224ULL);
};
union TYPE$330 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$772, m1, 4ULL);
};
union TYPE$331 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
};
union TYPE$368 {
  CORE$MEMBER(TYPE$1, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 16ULL);
  CORE$MEMBER(TYPE$369, m2, 20ULL);
};
union TYPE$372 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$373, m1, 4ULL);
};
union TYPE$374 {
  CORE$MEMBER(TYPE$2, m0, 0ULL);
  CORE$MEMBER(TYPE$51, m1, 1ULL);
  CORE$MEMBER(TYPE$51, m2, 9ULL);
  CORE$MEMBER(TYPE$51, m3, 17ULL);
  CORE$MEMBER(TYPE$51, m4, 25ULL);
  CORE$MEMBER(TYPE$19, m5, 33ULL);
};
union TYPE$382 {
  CORE$MEMBER(TYPE$51, m0, 0ULL);
  CORE$MEMBER(TYPE$51, m1, 8ULL);
  CORE$MEMBER(TYPE$51, m2, 16ULL);
  CORE$MEMBER(TYPE$6, m3, 24ULL);
  CORE$MEMBER(TYPE$19, m4, 28ULL);
  CORE$MEMBER(TYPE$19, m5, 32ULL);
};
union TYPE$398 {
  CORE$MEMBER(TYPE$7, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 8ULL);
  CORE$MEMBER(TYPE$16, m2, 12ULL);
  CORE$MEMBER(TYPE$16, m3, 16ULL);
  CORE$MEMBER(TYPE$16, m4, 20ULL);
  CORE$MEMBER(TYPE$191, m5, 24ULL);
  CORE$MEMBER(TYPE$191, m6, 40ULL);
  CORE$MEMBER(TYPE$6, m7, 56ULL);
  CORE$MEMBER(TYPE$6, m8, 60ULL);
  CORE$MEMBER(TYPE$16, m9, 64ULL);
  CORE$MEMBER(TYPE$16, m10, 68ULL);
  CORE$MEMBER(TYPE$6, m11, 72ULL);
  CORE$MEMBER(TYPE$437, m12, 76ULL);
  CORE$MEMBER(TYPE$5, m13, 92ULL);
  CORE$MEMBER(TYPE$1, m14, 100ULL);
  CORE$MEMBER(TYPE$5, m15, 116ULL);
  CORE$MEMBER(TYPE$1, m16, 124ULL);
  CORE$MEMBER(TYPE$1, m17, 140ULL);
  CORE$MEMBER(TYPE$5, m18, 156ULL);
};
union TYPE$401 {
  CORE$MEMBER(TYPE$5, m0, 0ULL);
  CORE$MEMBER(TYPE$169, m1, 8ULL);
  CORE$MEMBER(TYPE$5, m2, 16ULL);
};
union TYPE$407 {
  CORE$MEMBER(TYPE$2, m0, 0ULL);
  CORE$MEMBER(TYPE$2, m1, 1ULL);
  CORE$MEMBER(TYPE$2, m2, 2ULL);
  CORE$MEMBER(TYPE$2, m3, 3ULL);
};
union TYPE$412 {
  CORE$MEMBER(TYPE$413, m0, 0ULL);
  CORE$MEMBER(TYPE$413, m1, 8ULL);
  CORE$MEMBER(TYPE$414, m2, 16ULL);
  CORE$MEMBER(TYPE$414, m3, 24ULL);
  CORE$MEMBER(TYPE$415, m4, 32ULL);
  CORE$MEMBER(TYPE$5, m5, 40ULL);
};
union TYPE$420 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
};
union TYPE$416 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$420, m8, 32ULL);
  CORE$MEMBER(TYPE$16, m9, 48ULL);
  CORE$MEMBER(TYPE$16, m10, 52ULL);
};
union TYPE$424 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$420, m8, 32ULL);
};
union TYPE$435 {
  CORE$MEMBER(TYPE$412, m0, 0ULL);
  CORE$MEMBER(TYPE$5, m1, 48ULL);
};
union TYPE$439 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$28, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 10ULL);
};
union TYPE$440 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$5, m2, 8ULL);
  CORE$MEMBER(TYPE$5, m3, 16ULL);
  CORE$MEMBER(TYPE$5, m4, 24ULL);
  CORE$MEMBER(TYPE$5, m5, 32ULL);
  CORE$MEMBER(TYPE$5, m6, 40ULL);
  CORE$MEMBER(TYPE$5, m7, 48ULL);
};
union TYPE$441 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$2, m3, 12ULL);
  CORE$MEMBER(TYPE$2, m4, 13ULL);
  CORE$MEMBER(TYPE$2, m5, 14ULL);
  CORE$MEMBER(TYPE$2, m6, 15ULL);
  CORE$MEMBER(TYPE$16, m7, 16ULL);
  CORE$MEMBER(TYPE$16, m8, 20ULL);
};
union TYPE$442 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$2, m3, 12ULL);
  CORE$MEMBER(TYPE$2, m4, 13ULL);
  CORE$MEMBER(TYPE$2, m5, 14ULL);
  CORE$MEMBER(TYPE$2, m6, 15ULL);
  CORE$MEMBER(TYPE$439, m7, 16ULL);
};
union TYPE$443 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$16, m8, 32ULL);
};
union TYPE$444 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$2, m4, 16ULL);
  CORE$MEMBER(TYPE$2, m5, 17ULL);
  CORE$MEMBER(TYPE$2, m6, 18ULL);
  CORE$MEMBER(TYPE$2, m7, 19ULL);
  CORE$MEMBER(TYPE$16, m8, 20ULL);
  CORE$MEMBER(TYPE$16, m9, 24ULL);
};
union TYPE$445 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
};
union TYPE$451 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
};
union TYPE$452 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$10, m4, 16ULL);
};
union TYPE$462 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$16, m8, 32ULL);
  CORE$MEMBER(TYPE$16, m9, 36ULL);
  CORE$MEMBER(TYPE$16, m10, 40ULL);
  CORE$MEMBER(TYPE$16, m11, 44ULL);
};
union TYPE$467 {
  CORE$MEMBER(TYPE$10, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 8ULL);
  CORE$MEMBER(TYPE$16, m2, 12ULL);
  CORE$MEMBER(TYPE$16, m3, 16ULL);
  CORE$MEMBER(TYPE$7, m4, 20ULL);
};
union TYPE$468 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
  CORE$MEMBER(TYPE$19, m8, 32ULL);
  CORE$MEMBER(TYPE$19, m9, 36ULL);
};
union TYPE$461 {
  CORE$MEMBER(TYPE$462, m0, 0ULL);
  CORE$MEMBER(TYPE$463, m1, 48ULL);
  CORE$MEMBER(TYPE$465, m2, 64ULL);
  CORE$MEMBER(TYPE$19, m3, 80ULL);
  CORE$MEMBER(TYPE$6, m4, 84ULL);
  CORE$MEMBER(TYPE$467, m5, 88ULL);
  CORE$MEMBER(TYPE$468, m6, 116ULL);
};
union TYPE$464 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$28, m2, 4ULL);
  CORE$MEMBER(TYPE$28, m3, 6ULL);
  CORE$MEMBER(TYPE$172, m4, 8ULL);
  CORE$MEMBER(TYPE$172, m5, 12ULL);
  CORE$MEMBER(TYPE$172, m6, 16ULL);
  CORE$MEMBER(TYPE$172, m7, 20ULL);
  CORE$MEMBER(TYPE$172, m8, 24ULL);
};
union TYPE$466 {
  CORE$MEMBER(TYPE$172, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$467, m3, 12ULL);
};
union TYPE$471 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$172, m1, 4ULL);
  CORE$MEMBER(TYPE$467, m2, 8ULL);
  CORE$MEMBER(TYPE$172, m3, 36ULL);
  CORE$MEMBER(TYPE$172, m4, 40ULL);
  CORE$MEMBER(TYPE$16, m5, 44ULL);
  CORE$MEMBER(TYPE$16, m6, 48ULL);
  CORE$MEMBER(TYPE$172, m7, 52ULL);
  CORE$MEMBER(TYPE$172, m8, 56ULL);
  CORE$MEMBER(TYPE$16, m9, 60ULL);
  CORE$MEMBER(TYPE$16, m10, 64ULL);
};
union TYPE$498 {
  CORE$MEMBER(TYPE$172, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$2, m5, 20ULL);
  CORE$MEMBER(TYPE$2, m6, 21ULL);
};
union TYPE$500 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
};
union TYPE$558 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 4ULL);
  CORE$MEMBER(TYPE$28, m2, 6ULL);
  CORE$MEMBER(TYPE$5, m3, 8ULL);
};
union TYPE$559 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
  CORE$MEMBER(TYPE$19, m3, 8ULL);
  CORE$MEMBER(TYPE$28, m4, 12ULL);
  CORE$MEMBER(TYPE$28, m5, 14ULL);
  CORE$MEMBER(TYPE$28, m6, 16ULL);
};
union TYPE$560 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
  CORE$MEMBER(TYPE$19, m8, 32ULL);
  CORE$MEMBER(TYPE$19, m9, 36ULL);
  CORE$MEMBER(TYPE$19, m10, 40ULL);
  CORE$MEMBER(TYPE$19, m11, 44ULL);
  CORE$MEMBER(TYPE$19, m12, 48ULL);
  CORE$MEMBER(TYPE$19, m13, 52ULL);
  CORE$MEMBER(TYPE$19, m14, 56ULL);
  CORE$MEMBER(TYPE$19, m15, 60ULL);
  CORE$MEMBER(TYPE$19, m16, 64ULL);
  CORE$MEMBER(TYPE$19, m17, 68ULL);
  CORE$MEMBER(TYPE$19, m18, 72ULL);
  CORE$MEMBER(TYPE$19, m19, 76ULL);
  CORE$MEMBER(TYPE$19, m20, 80ULL);
  CORE$MEMBER(TYPE$19, m21, 84ULL);
  CORE$MEMBER(TYPE$19, m22, 88ULL);
  CORE$MEMBER(TYPE$19, m23, 92ULL);
};
union TYPE$561 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
};
union TYPE$562 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
};
union TYPE$563 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
};
union TYPE$564 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$573 {
  CORE$MEMBER(TYPE$563, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 12ULL);
  CORE$MEMBER(TYPE$19, m2, 16ULL);
  CORE$MEMBER(TYPE$19, m3, 20ULL);
  CORE$MEMBER(TYPE$19, m4, 24ULL);
  CORE$MEMBER(TYPE$19, m5, 28ULL);
  CORE$MEMBER(TYPE$19, m6, 32ULL);
  CORE$MEMBER(TYPE$19, m7, 36ULL);
  CORE$MEMBER(TYPE$19, m8, 40ULL);
};
union TYPE$574 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$593 {
  CORE$MEMBER(TYPE$573, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 44ULL);
};
union TYPE$594 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$599 {
  CORE$MEMBER(TYPE$563, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 12ULL);
  CORE$MEMBER(TYPE$19, m2, 16ULL);
  CORE$MEMBER(TYPE$19, m3, 20ULL);
  CORE$MEMBER(TYPE$19, m4, 24ULL);
  CORE$MEMBER(TYPE$19, m5, 28ULL);
  CORE$MEMBER(TYPE$19, m6, 32ULL);
  CORE$MEMBER(TYPE$19, m7, 36ULL);
  CORE$MEMBER(TYPE$19, m8, 40ULL);
  CORE$MEMBER(TYPE$19, m9, 44ULL);
  CORE$MEMBER(TYPE$19, m10, 48ULL);
  CORE$MEMBER(TYPE$19, m11, 52ULL);
  CORE$MEMBER(TYPE$19, m12, 56ULL);
  CORE$MEMBER(TYPE$19, m13, 60ULL);
  CORE$MEMBER(TYPE$19, m14, 64ULL);
  CORE$MEMBER(TYPE$19, m15, 68ULL);
  CORE$MEMBER(TYPE$19, m16, 72ULL);
  CORE$MEMBER(TYPE$19, m17, 76ULL);
  CORE$MEMBER(TYPE$19, m18, 80ULL);
};
union TYPE$600 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$634 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
};
union TYPE$635 {
  CORE$MEMBER(TYPE$563, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 12ULL);
  CORE$MEMBER(TYPE$19, m2, 16ULL);
  CORE$MEMBER(TYPE$19, m3, 20ULL);
};
union TYPE$636 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$645 {
  CORE$MEMBER(TYPE$563, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 12ULL);
  CORE$MEMBER(TYPE$19, m2, 16ULL);
  CORE$MEMBER(TYPE$19, m3, 20ULL);
  CORE$MEMBER(TYPE$19, m4, 24ULL);
  CORE$MEMBER(TYPE$19, m5, 28ULL);
  CORE$MEMBER(TYPE$19, m6, 32ULL);
  CORE$MEMBER(TYPE$19, m7, 36ULL);
  CORE$MEMBER(TYPE$19, m8, 40ULL);
  CORE$MEMBER(TYPE$19, m9, 44ULL);
};
union TYPE$646 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$675 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$1, m7, 28ULL);
};
union TYPE$686 {
  CORE$MEMBER(TYPE$154, m0, 0ULL);
  CORE$MEMBER(TYPE$153, m1, 48ULL);
  CORE$MEMBER(TYPE$4, m2, 56ULL);
  CORE$MEMBER(TYPE$4, m3, 64ULL);
};
union TYPE$766 {
  CORE$MEMBER(TYPE$10, m0, 0ULL);
  CORE$MEMBER(TYPE$10, m1, 8ULL);
  CORE$MEMBER(TYPE$10, m2, 16ULL);
  CORE$MEMBER(TYPE$6, m3, 24ULL);
  CORE$MEMBER(TYPE$1, m4, 28ULL);
  CORE$MEMBER(TYPE$10, m5, 44ULL);
  CORE$MEMBER(TYPE$10, m6, 52ULL);
  CORE$MEMBER(TYPE$5, m7, 60ULL);
};
union TYPE$777 {
  CORE$MEMBER(TYPE$171, m0, 0ULL);
  CORE$MEMBER(TYPE$171, m1, 2ULL);
};
union TYPE$786 {
  CORE$MEMBER(TYPE$171, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
};
union TYPE$787 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
};
union TYPE$788 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$777, m1, 4ULL);
};
union TYPE$789 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
};
union TYPE$791 {
  CORE$MEMBER(TYPE$171, m0, 0ULL);
  CORE$MEMBER(TYPE$171, m1, 2ULL);
  CORE$MEMBER(TYPE$171, m2, 4ULL);
  CORE$MEMBER(TYPE$171, m3, 6ULL);
};
union TYPE$790 {
  CORE$MEMBER(TYPE$777, m0, 0ULL);
  CORE$MEMBER(TYPE$777, m1, 4ULL);
  CORE$MEMBER(TYPE$28, m2, 8ULL);
  CORE$MEMBER(TYPE$791, m3, 10ULL);
  CORE$MEMBER(TYPE$777, m4, 18ULL);
};
union TYPE$792 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$777, m1, 4ULL);
  CORE$MEMBER(TYPE$791, m2, 8ULL);
};
union TYPE$793 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$191, m1, 2ULL);
};
union TYPE$794 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 4ULL);
  CORE$MEMBER(TYPE$28, m2, 6ULL);
  CORE$MEMBER(TYPE$28, m3, 8ULL);
  CORE$MEMBER(TYPE$171, m4, 10ULL);
  CORE$MEMBER(TYPE$19, m5, 12ULL);
};
union TYPE$795 {
  CORE$MEMBER(TYPE$777, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
};
union TYPE$796 {
  CORE$MEMBER(TYPE$777, m0, 0ULL);
};
union TYPE$797 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
};
union TYPE$837 {
  CORE$MEMBER(TYPE$16, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
};
union TYPE$838 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
};
union TYPE$844 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$2, m2, 8ULL);
};
union TYPE$845 {
  CORE$MEMBER(TYPE$5, m0, 0ULL);
  CORE$MEMBER(TYPE$5, m1, 8ULL);
  CORE$MEMBER(TYPE$19, m2, 16ULL);
  CORE$MEMBER(TYPE$28, m3, 20ULL);
};
union TYPE$847 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
};
union TYPE$846 {
  CORE$MEMBER(TYPE$847, m0, 0ULL);
  CORE$MEMBER(TYPE$845, m1, 16ULL);
};
union TYPE$848 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
  CORE$MEMBER(TYPE$19, m3, 8ULL);
};
union TYPE$849 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
};
union TYPE$850 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$28, m2, 4ULL);
  CORE$MEMBER(TYPE$28, m3, 6ULL);
  CORE$MEMBER(TYPE$19, m4, 8ULL);
  CORE$MEMBER(TYPE$19, m5, 12ULL);
};
union TYPE$851 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
  CORE$MEMBER(TYPE$19, m3, 8ULL);
  CORE$MEMBER(TYPE$16, m4, 12ULL);
  CORE$MEMBER(TYPE$16, m5, 16ULL);
  CORE$MEMBER(TYPE$19, m6, 20ULL);
};
union TYPE$864 {
  CORE$MEMBER(TYPE$5, m0, 0ULL);
  CORE$MEMBER(TYPE$5, m1, 8ULL);
  CORE$MEMBER(TYPE$5, m2, 16ULL);
  CORE$MEMBER(TYPE$5, m3, 24ULL);
  CORE$MEMBER(TYPE$5, m4, 32ULL);
  CORE$MEMBER(TYPE$5, m5, 40ULL);
  CORE$MEMBER(TYPE$5, m6, 48ULL);
  CORE$MEMBER(TYPE$5, m7, 56ULL);
};
union TYPE$865 {
  CORE$MEMBER(TYPE$864, m0, 0ULL);
  CORE$MEMBER(TYPE$864, m1, 64ULL);
  CORE$MEMBER(TYPE$864, m2, 128ULL);
  CORE$MEMBER(TYPE$864, m3, 192ULL);
};
union TYPE$866 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$864, m1, 4ULL);
  CORE$MEMBER(TYPE$865, m2, 68ULL);
  CORE$MEMBER(TYPE$19, m3, 324ULL);
  CORE$MEMBER(TYPE$865, m4, 328ULL);
  CORE$MEMBER(TYPE$865, m5, 584ULL);
};
union TYPE$869 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
  CORE$MEMBER(TYPE$2, m3, 8ULL);
  CORE$MEMBER(TYPE$2, m4, 9ULL);
  CORE$MEMBER(TYPE$2, m5, 10ULL);
  CORE$MEMBER(TYPE$2, m6, 11ULL);
  CORE$MEMBER(TYPE$2, m7, 12ULL);
  CORE$MEMBER(TYPE$2, m8, 13ULL);
  CORE$MEMBER(TYPE$2, m9, 14ULL);
  CORE$MEMBER(TYPE$2, m10, 15ULL);
  CORE$MEMBER(TYPE$2, m11, 16ULL);
  CORE$MEMBER(TYPE$2, m12, 17ULL);
  CORE$MEMBER(TYPE$2, m13, 18ULL);
  CORE$MEMBER(TYPE$2, m14, 19ULL);
  CORE$MEMBER(TYPE$2, m15, 20ULL);
  CORE$MEMBER(TYPE$2, m16, 21ULL);
  CORE$MEMBER(TYPE$2, m17, 22ULL);
  CORE$MEMBER(TYPE$2, m18, 23ULL);
  CORE$MEMBER(TYPE$2, m19, 24ULL);
  CORE$MEMBER(TYPE$2, m20, 25ULL);
  CORE$MEMBER(TYPE$2, m21, 26ULL);
  CORE$MEMBER(TYPE$2, m22, 27ULL);
  CORE$MEMBER(TYPE$19, m23, 28ULL);
  CORE$MEMBER(TYPE$19, m24, 32ULL);
  CORE$MEMBER(TYPE$19, m25, 36ULL);
};
union TYPE$881 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
};
union TYPE$880 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$881, m3, 12ULL);
};
union TYPE$882 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$331, m5, 20ULL);
};
union TYPE$899 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$16, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$331, m8, 32ULL);
};
union TYPE$900 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
};
union TYPE$901 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$16, m6, 24ULL);
  CORE$MEMBER(TYPE$16, m7, 28ULL);
  CORE$MEMBER(TYPE$16, m8, 32ULL);
  CORE$MEMBER(TYPE$19, m9, 36ULL);
  CORE$MEMBER(TYPE$19, m10, 40ULL);
  CORE$MEMBER(TYPE$19, m11, 44ULL);
};
union TYPE$902 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$19, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
  CORE$MEMBER(TYPE$420, m8, 32ULL);
};
union TYPE$903 {
  CORE$MEMBER(TYPE$331, m0, 0ULL);
  CORE$MEMBER(TYPE$331, m1, 8ULL);
  CORE$MEMBER(TYPE$331, m2, 16ULL);
  CORE$MEMBER(TYPE$331, m3, 24ULL);
  CORE$MEMBER(TYPE$331, m4, 32ULL);
};
union TYPE$904 {
  CORE$MEMBER(TYPE$420, m0, 0ULL);
  CORE$MEMBER(TYPE$420, m1, 16ULL);
  CORE$MEMBER(TYPE$420, m2, 32ULL);
  CORE$MEMBER(TYPE$19, m3, 48ULL);
};
union TYPE$905 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
};
union TYPE$906 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$420, m1, 4ULL);
  CORE$MEMBER(TYPE$420, m2, 20ULL);
  CORE$MEMBER(TYPE$19, m3, 36ULL);
  CORE$MEMBER(TYPE$19, m4, 40ULL);
  CORE$MEMBER(TYPE$19, m5, 44ULL);
  CORE$MEMBER(TYPE$19, m6, 48ULL);
  CORE$MEMBER(TYPE$19, m7, 52ULL);
  CORE$MEMBER(TYPE$28, m8, 56ULL);
  CORE$MEMBER(TYPE$28, m9, 58ULL);
};
union TYPE$907 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$331, m3, 12ULL);
  CORE$MEMBER(TYPE$331, m4, 20ULL);
  CORE$MEMBER(TYPE$420, m5, 28ULL);
};
union TYPE$908 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$16, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
};
union TYPE$916 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
  CORE$MEMBER(TYPE$19, m8, 32ULL);
  CORE$MEMBER(TYPE$19, m9, 36ULL);
};
union TYPE$917 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$19, m2, 8ULL);
  CORE$MEMBER(TYPE$16, m3, 12ULL);
  CORE$MEMBER(TYPE$16, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$19, m7, 28ULL);
  CORE$MEMBER(TYPE$19, m8, 32ULL);
  CORE$MEMBER(TYPE$19, m9, 36ULL);
  CORE$MEMBER(TYPE$19, m10, 40ULL);
  CORE$MEMBER(TYPE$19, m11, 44ULL);
};
union TYPE$933 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
  CORE$MEMBER(TYPE$16, m2, 8ULL);
};
union TYPE$936 {
  CORE$MEMBER(TYPE$19, m0, 0ULL);
  CORE$MEMBER(TYPE$19, m1, 4ULL);
};
union TYPE$937 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
  CORE$MEMBER(TYPE$936, m3, 8ULL);
  CORE$MEMBER(TYPE$19, m4, 16ULL);
  CORE$MEMBER(TYPE$19, m5, 20ULL);
  CORE$MEMBER(TYPE$19, m6, 24ULL);
  CORE$MEMBER(TYPE$28, m7, 28ULL);
  CORE$MEMBER(TYPE$28, m8, 30ULL);
};
union TYPE$947 {
  CORE$MEMBER(TYPE$28, m0, 0ULL);
  CORE$MEMBER(TYPE$28, m1, 2ULL);
  CORE$MEMBER(TYPE$19, m2, 4ULL);
};

//////////////////////////////////////////////////
 // Function headers
//////////////////////////////////////////////////

TYPE$1 V$51734936/*aspel.concatenate*/(TYPE$3);
TYPE$10 V$51735016/*aspel.c_style_string*/(TYPE$1);
TYPE$8 V$51735096/*aspel.repeat*/(TYPE$7, TYPE$5, TYPE$2);
TYPE$8 V$51735176/*aspel.copy*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$8 V$51735256/*aspel.move*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$6 V$51735336/*aspel.compare*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$6 V$51735416/*aspel.compare*/(TYPE$1, TYPE$1);
TYPE$16 V$51735496/*aspel.difference*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$16 V$51735576/*aspel.difference*/(TYPE$1, TYPE$1);
TYPE$5 V$51735656/*aspel.find_first_from_left*/(TYPE$1, TYPE$2);
TYPE$5 V$51735736/*aspel.find_first_from_right*/(TYPE$1, TYPE$2);
TYPE$7 V$15376048/*aspel.memory.memcopy*/(TYPE$7, TYPE$7, TYPE$5);
CORE$FOREIGN TYPE$19 memcpy(TYPE$19, TYPE$19, TYPE$19);
#define V$15376128/*aspel.memory.crt_memcpy*/ memcpy
TYPE$7 V$15376208/*aspel.memory.memmove*/(TYPE$7, TYPE$7, TYPE$5);
CORE$FOREIGN TYPE$19 memmove(TYPE$19, TYPE$19, TYPE$19);
#define V$15376288/*aspel.memory.crt_memmove*/ memmove
TYPE$16 V$15376368/*aspel.memory.memcompare*/(TYPE$7, TYPE$7, TYPE$5);
CORE$FOREIGN TYPE$16 memcmp(TYPE$19, TYPE$19, TYPE$19);
#define V$15376448/*aspel.memory.crt_memcmp*/ memcmp
TYPE$7 V$15376528/*aspel.memory.memset*/(TYPE$7, TYPE$2, TYPE$5);
CORE$FOREIGN TYPE$19 memset(TYPE$19, TYPE$2, TYPE$19);
#define V$15376608/*aspel.memory.crt_memset*/ memset
TYPE$6 V$15395808/*aspel.memory.open_interprocess_object*/(TYPE$27, TYPE$1, TYPE$5, TYPE$28);
TYPE$8 V$15395888/*aspel.memory.close_interprocess_object*/(TYPE$25);
TYPE$7 V$15395968/*aspel.memory.open_interprocess_view*/(TYPE$25, TYPE$5, TYPE$5, TYPE$28);
TYPE$8 V$15396048/*aspel.memory.close_interprocess_view*/(TYPE$7, TYPE$5);
TYPE$45 V$15376688/*aspel.time.stopwatch.start_stopwatch*/();
TYPE$8 V$15376768/*aspel.time.stopwatch.reset_stopwatch*/(TYPE$49);
TYPE$8 V$15376848/*aspel.time.stopwatch.pause_stopwatch*/(TYPE$49);
TYPE$8 V$15376928/*aspel.time.stopwatch.resume_stopwatch*/(TYPE$49);
TYPE$51 V$15377008/*aspel.time.stopwatch.query_stopwatch*/(TYPE$49);
TYPE$5 V$15377088/*aspel.time.stopwatch.query_stopwatch_ticks*/(TYPE$49);
TYPE$5 V$15377168/*aspel.time.stopwatch.get_high_precision_frequency*/();
TYPE$5 V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/();
TYPE$60 V$15377328/*aspel.thread.pool.create_thread_pool*/(TYPE$19, TYPE$19, TYPE$6);
TYPE$8 V$15377408/*aspel.thread.pool.wait_workers*/(TYPE$60);
TYPE$8 V$15377488/*aspel.thread.pool.detach_workers*/(TYPE$60);
TYPE$8 V$15377568/*aspel.thread.pool.destroy_thread_pool*/(TYPE$60);
TYPE$66 V$15377648/*aspel.thread.mutex.create_mutex*/();
TYPE$8 V$15377728/*aspel.thread.mutex.destroy_mutex*/(TYPE$66);
TYPE$6 V$15377808/*aspel.thread.mutex.try_lock_mutex*/(TYPE$66);
TYPE$8 V$15377888/*aspel.thread.mutex.lock_mutex*/(TYPE$66);
TYPE$8 V$15377968/*aspel.thread.mutex.unlock_mutex*/(TYPE$66);
TYPE$76 V$15378048/*aspel.thread.condition.create_condition*/();
TYPE$8 V$15378128/*aspel.thread.condition.destroy_condition*/(TYPE$76);
TYPE$6 V$15378208/*aspel.thread.condition.wait*/(TYPE$76, TYPE$66);
TYPE$8 V$15378288/*aspel.thread.condition.notify*/(TYPE$76);
TYPE$8 V$15378368/*aspel.thread.condition.broadcast*/(TYPE$76);
CORE$FOREIGN TYPE$16 CORE$STDCALL InterlockedCompareExchange(TYPE$19, TYPE$16, TYPE$16);
#define V$15378448/*aspel.thread.atomic.InterlockedCompareExchange*/ InterlockedCompareExchange
CORE$FOREIGN TYPE$16 CORE$STDCALL InterlockedDecrement(TYPE$19);
#define V$15378528/*aspel.thread.atomic.InterlockedDecrement*/ InterlockedDecrement
CORE$FOREIGN TYPE$16 CORE$STDCALL InterlockedExchange(TYPE$19, TYPE$16);
#define V$15378608/*aspel.thread.atomic.InterlockedExchange*/ InterlockedExchange
CORE$FOREIGN TYPE$16 CORE$STDCALL InterlockedExchangeAdd(TYPE$19, TYPE$16);
#define V$15378688/*aspel.thread.atomic.InterlockedExchangeAdd*/ InterlockedExchangeAdd
CORE$FOREIGN TYPE$16 CORE$STDCALL InterlockedIncrement(TYPE$19);
#define V$15378768/*aspel.thread.atomic.InterlockedIncrement*/ InterlockedIncrement
TYPE$6 V$15378848/*aspel.thread.atomic.atomic_try_lock*/(TYPE$86);
TYPE$8 V$15378928/*aspel.thread.atomic.atomic_lock*/(TYPE$86);
TYPE$8 V$15379008/*aspel.thread.atomic.atomic_unlock*/(TYPE$86);
TYPE$6 V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/(TYPE$90, TYPE$16, TYPE$16);
TYPE$16 V$15379168/*aspel.thread.atomic.atomic_get*/(TYPE$90);
TYPE$16 V$15379248/*aspel.thread.atomic.atomic_set*/(TYPE$90, TYPE$16);
TYPE$16 V$15379328/*aspel.thread.atomic.atomic_add*/(TYPE$90, TYPE$16);
TYPE$8 V$15379408/*aspel.thread.atomic.atomic_increment*/(TYPE$90);
TYPE$6 V$15379488/*aspel.thread.atomic.atomic_decrement*/(TYPE$90);
TYPE$19 V$15379568/*aspel.thread.atomic.atomic_and*/(TYPE$90, TYPE$19);
TYPE$19 V$15379648/*aspel.thread.atomic.atomic_or*/(TYPE$90, TYPE$19);
TYPE$19 V$15379728/*aspel.thread.atomic.atomic_xor*/(TYPE$90, TYPE$19);
TYPE$19 CORE$STDCALL V$15379808/*aspel.thread.win32_thread_start*/(TYPE$19);
TYPE$6 V$15379888/*aspel.thread.create_thread*/(TYPE$54, TYPE$37, TYPE$7);
TYPE$8 V$15379968/*aspel.thread.wait_thread*/(TYPE$5);
TYPE$8 V$15380048/*aspel.thread.detach_thread*/(TYPE$5);
TYPE$8 V$15380128/*aspel.thread.sleep*/(TYPE$19);
TYPE$109 V$15380208/*aspel.text.push_node*/(TYPE$119);
TYPE$121 V$15380288/*aspel.text.push_fragment*/(TYPE$119);
TYPE$112 V$15380368/*aspel.text.single*/(TYPE$119, TYPE$7);
TYPE$112 V$15380448/*aspel.text.append*/(TYPE$119, TYPE$112, TYPE$112);
TYPE$8 V$15380528/*aspel.text.patch*/(TYPE$112, TYPE$109);
TYPE$2 V$15380608/*aspel.text.peek_byte*/(TYPE$1, TYPE$5);
TYPE$121 V$15380688/*aspel.text.parse_leaf*/(TYPE$119, TYPE$1, TYPE$54);
TYPE$121 V$15380768/*aspel.text.parse_concat*/(TYPE$119, TYPE$1, TYPE$54);
TYPE$6 V$15380848/*aspel.text.compile_pattern*/(TYPE$119, TYPE$1);
TYPE$5 V$15380928/*aspel.text.get_node_id*/(TYPE$119, TYPE$109);
TYPE$8 V$15381008/*aspel.text.debug_print_nodes*/(TYPE$119, TYPE$109);
TYPE$6 V$15381088/*aspel.text.reached_matching_states*/(TYPE$135);
TYPE$8 V$15381168/*aspel.text.add_node*/(TYPE$135, TYPE$109, TYPE$5);
TYPE$6 V$15381248/*aspel.text.matches_pattern*/(TYPE$119, TYPE$1);
TYPE$8 V$15381328/*aspel.text.destroy_pattern*/(TYPE$119);
TYPE$6 V$15381408/*aspel.text.could_be_parsed_as_integer*/(TYPE$1);
TYPE$6 V$15381488/*aspel.text.try_parse_integer*/(TYPE$1, TYPE$139);
TYPE$4 V$15381568/*aspel.text.parse_integer*/(TYPE$1);
TYPE$6 V$15381648/*aspel.text.could_be_parsed_as_float*/(TYPE$1);
CORE$FOREIGN TYPE$51 atof(TYPE$19);
#define V$15381728/*aspel.text.atof*/ atof
TYPE$6 V$15381808/*aspel.text.try_parse_float*/(TYPE$1, TYPE$143);
TYPE$51 V$15381888/*aspel.text.parse_float*/(TYPE$1);
TYPE$1 V$15381968/*aspel.text.integer_to_string*/(TYPE$1, TYPE$6, TYPE$5, TYPE$1);
TYPE$1 V$15382048/*aspel.text.integer_to_string*/(TYPE$1, TYPE$6, TYPE$5, TYPE$19);
TYPE$1 V$15382128/*aspel.text.integer_to_string*/(TYPE$1, TYPE$4, TYPE$1);
TYPE$1 V$15382208/*aspel.text.integer_to_string*/(TYPE$1, TYPE$4, TYPE$19);
TYPE$6 V$15382288/*aspel.text.is_code_point_whitespace*/(TYPE$19);
TYPE$6 V$15382368/*aspel.text.is_code_point_digit*/(TYPE$19);
TYPE$6 V$15382448/*aspel.text.is_code_point_word_beginning*/(TYPE$19);
TYPE$6 V$15382528/*aspel.text.is_code_point_word_letter*/(TYPE$19);
TYPE$19 V$15382608/*aspel.text.aspel_tokenization_rule_state_machine*/(TYPE$151, TYPE$19);
TYPE$152 V$15382688/*aspel.text.create_tokenization_context*/(TYPE$153);
TYPE$8 V$15382768/*aspel.text.set_tokenization_state_machine*/(TYPE$151, TYPE$150);
TYPE$19 V$15382848/*aspel.text.abort_utf8_reading*/(TYPE$151);
TYPE$19 V$15382928/*aspel.text.read_utf8_from_stream*/(TYPE$151);
TYPE$1 V$15383008/*aspel.text.next_token*/(TYPE$151, TYPE$1);
TYPE$166 V$15383088/*aspel.text.standard_format_provider*/(TYPE$169);
TYPE$6 V$15383168/*aspel.text.parse_format_item_number*/(TYPE$167, TYPE$139, TYPE$139);
TYPE$6 V$15383248/*aspel.text.parse_format_item*/(TYPE$167);
TYPE$4 V$15383328/*aspel.text.format*/(TYPE$1, TYPE$34);
TYPE$4 V$15383408/*aspel.text.format*/(TYPE$153, TYPE$1, TYPE$34);
TYPE$4 V$15383488/*aspel.text.format*/(TYPE$168, TYPE$1, TYPE$34);
TYPE$4 V$15383568/*aspel.text.format*/(TYPE$153, TYPE$168, TYPE$1, TYPE$34);
TYPE$8 V$15383648/*aspel.text.determine_padding*/(TYPE$167, TYPE$4, TYPE$139, TYPE$139);
TYPE$6 V$15383728/*aspel.text.write_padding*/(TYPE$153, TYPE$167, TYPE$4);
TYPE$19 V$15383808/*aspel.text.format_string*/(TYPE$153, TYPE$167);
TYPE$19 V$15383888/*aspel.text.format_bool*/(TYPE$153, TYPE$167);
TYPE$19 V$15383968/*aspel.text.format_integer*/(TYPE$153, TYPE$167);
CORE$FOREIGN TYPE$8 aspel_lazy_float_to_string(TYPE$183, TYPE$51, TYPE$1, TYPE$16, TYPE$16);
#define V$15384048/*aspel.text.aspel_lazy_float_to_string*/ aspel_lazy_float_to_string
TYPE$19 V$15384128/*aspel.text.format_floating_point*/(TYPE$153, TYPE$167);
TYPE$19 V$15384208/*aspel.text.format_big_integer*/(TYPE$153, TYPE$167);
TYPE$6 V$15384288/*aspel.text.try_make_string*/(TYPE$1, TYPE$187);
TYPE$185 V$15384368/*aspel.text.make_string*/(TYPE$1);
TYPE$185 V$15384448/*aspel.text.make_string_unchecked*/(TYPE$1);
TYPE$185 V$15384528/*aspel.text.copy_string*/(TYPE$185);
TYPE$191 V$15384608/*aspel.text.get_string_length*/(TYPE$185);
TYPE$193 V$15384688/*aspel.text.make_code_point_iterator*/(TYPE$185);
TYPE$6 V$15384768/*aspel.text.next_code_point*/(TYPE$196);
TYPE$6 V$15384848/*aspel.text.is_legal_code_point*/(TYPE$19);
TYPE$2 V$15384928/*aspel.text.assume_utf16_sequence_length*/(TYPE$28);
TYPE$2 V$15385008/*aspel.text.get_utf16_sequence_length*/(TYPE$19);
TYPE$6 V$15385088/*aspel.text.is_legal_utf16_sequence*/(TYPE$31, TYPE$2);
TYPE$6 V$15385168/*aspel.text.encode_utf16_sequence*/(TYPE$19, TYPE$31, TYPE$2);
TYPE$8 V$15385248/*aspel.text.encode_utf16_sequence_unchecked*/(TYPE$19, TYPE$31, TYPE$2);
TYPE$6 V$15385328/*aspel.text.decode_utf16_sequence*/(TYPE$31, TYPE$2, TYPE$103);
TYPE$19 V$15385408/*aspel.text.decode_utf16_sequence_unchecked*/(TYPE$31, TYPE$2);
TYPE$2 V$15385488/*aspel.text.assume_utf8_sequence_length*/(TYPE$2);
TYPE$2 V$15385568/*aspel.text.get_utf8_sequence_length*/(TYPE$19);
TYPE$6 V$15385648/*aspel.text.is_legal_utf8_sequence*/(TYPE$10, TYPE$2);
TYPE$6 V$15385728/*aspel.text.encode_utf8_sequence*/(TYPE$19, TYPE$10, TYPE$2);
TYPE$8 V$15385808/*aspel.text.encode_utf8_sequence_unchecked*/(TYPE$19, TYPE$10, TYPE$2);
TYPE$6 V$15385888/*aspel.text.decode_utf8_sequence*/(TYPE$10, TYPE$2, TYPE$103);
TYPE$19 V$15385968/*aspel.text.decode_utf8_sequence_unchecked*/(TYPE$10, TYPE$2);
TYPE$8 V$15386048/*aspel.text.get_utf8_length*/(TYPE$10, TYPE$5, TYPE$54, TYPE$54);
TYPE$8 V$15386128/*aspel.text.get_utf8_length_unchecked*/(TYPE$10, TYPE$5, TYPE$54, TYPE$54);
TYPE$19 V$15386208/*aspel.text.read_utf8_sequence*/(TYPE$153, TYPE$103, TYPE$6);
TYPE$19 V$15386288/*aspel.text.read_utf16_sequence*/(TYPE$153, TYPE$103, TYPE$6);
TYPE$5 V$15386368/*aspel.text.length_utf16_as_utf8*/(TYPE$31, TYPE$5);
TYPE$5 V$15386448/*aspel.text.length_utf16_as_utf8*/(TYPE$30);
TYPE$5 V$15386528/*aspel.text.length_utf8_as_utf16*/(TYPE$10, TYPE$5);
TYPE$5 V$15386608/*aspel.text.length_utf8_as_utf16*/(TYPE$1);
TYPE$19 V$15386688/*aspel.text.convert_utf16_to_utf8*/(TYPE$212, TYPE$54, TYPE$213, TYPE$54);
TYPE$19 V$15386768/*aspel.text.convert_utf16_to_utf8*/(TYPE$30, TYPE$1);
TYPE$1 V$15386848/*aspel.text.convert_utf16_to_utf8*/(TYPE$30);
TYPE$19 V$15386928/*aspel.text.convert_utf8_to_utf16*/(TYPE$213, TYPE$54, TYPE$212, TYPE$54);
TYPE$19 V$15387008/*aspel.text.convert_utf8_to_utf16*/(TYPE$1, TYPE$30);
TYPE$30 V$15387088/*aspel.text.convert_utf8_to_utf16*/(TYPE$1);
TYPE$7 V$15387168/*aspel.system.load_shared_object*/(TYPE$1);
TYPE$8 V$15387248/*aspel.system.unload_shared_object*/(TYPE$7);
TYPE$7 V$15387328/*aspel.system.lookup_function_address*/(TYPE$7, TYPE$1);
TYPE$35 V$15387408/*aspel.system.lookup_function_address*/(TYPE$7, TYPE$1, TYPE$169);
TYPE$8 V$15387488/*aspel.system.abandon*/();
TYPE$8 V$15387568/*aspel.system.exit*/();
TYPE$28 V$15387648/*aspel.system.swap_bytes16*/(TYPE$28);
TYPE$19 V$15387728/*aspel.system.swap_bytes32*/(TYPE$19);
TYPE$5 V$15387808/*aspel.system.swap_bytes64*/(TYPE$5);
TYPE$28 V$15387888/*aspel.system.big_endian_to_native16*/(TYPE$28);
TYPE$8 V$15388128/*aspel.system.big_endian_to_native16*/(TYPE$31);
TYPE$19 V$15387968/*aspel.system.big_endian_to_native32*/(TYPE$19);
TYPE$8 V$15388208/*aspel.system.big_endian_to_native32*/(TYPE$103);
TYPE$5 V$15388048/*aspel.system.big_endian_to_native64*/(TYPE$5);
TYPE$8 V$15388288/*aspel.system.big_endian_to_native64*/(TYPE$54);
TYPE$28 V$15388368/*aspel.system.little_endian_to_native16*/(TYPE$28);
TYPE$8 V$15388608/*aspel.system.little_endian_to_native16*/(TYPE$31);
TYPE$19 V$15388448/*aspel.system.little_endian_to_native32*/(TYPE$19);
TYPE$8 V$15388688/*aspel.system.little_endian_to_native32*/(TYPE$103);
TYPE$5 V$15388528/*aspel.system.little_endian_to_native64*/(TYPE$5);
TYPE$8 V$15388768/*aspel.system.little_endian_to_native64*/(TYPE$54);
TYPE$28 V$15388848/*aspel.system.native_to_big_endian16*/(TYPE$28);
TYPE$8 V$15389088/*aspel.system.native_to_big_endian16*/(TYPE$31);
TYPE$19 V$15388928/*aspel.system.native_to_big_endian32*/(TYPE$19);
TYPE$8 V$15389168/*aspel.system.native_to_big_endian32*/(TYPE$103);
TYPE$5 V$15389008/*aspel.system.native_to_big_endian64*/(TYPE$5);
TYPE$8 V$15389248/*aspel.system.native_to_big_endian64*/(TYPE$54);
TYPE$28 V$15389328/*aspel.system.native_to_little_endian16*/(TYPE$28);
TYPE$8 V$15389568/*aspel.system.native_to_little_endian16*/(TYPE$31);
TYPE$19 V$15389408/*aspel.system.native_to_little_endian32*/(TYPE$19);
TYPE$8 V$15389648/*aspel.system.native_to_little_endian32*/(TYPE$103);
TYPE$5 V$15389488/*aspel.system.native_to_little_endian64*/(TYPE$5);
TYPE$8 V$15389728/*aspel.system.native_to_little_endian64*/(TYPE$54);
TYPE$1 V$15389808/*aspel.io.read_all_bytes_from_file*/(TYPE$1);
CORE$FOREIGN TYPE$19 CORE$STDCALL CreateFileW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$15389888/*aspel.io.CreateFile*/ CreateFileW
CORE$FOREIGN TYPE$16 CORE$STDCALL SetFilePointerEx(TYPE$19, TYPE$4, TYPE$19, TYPE$19);
#define V$15389968/*aspel.io.SetFilePointerEx*/ SetFilePointerEx
CORE$FOREIGN TYPE$16 CORE$STDCALL GetFileSizeEx(TYPE$19, TYPE$19);
#define V$15390048/*aspel.io.GetFileSizeEx*/ GetFileSizeEx
CORE$FOREIGN TYPE$16 CORE$STDCALL ReadFile(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$15390128/*aspel.io.ReadFile*/ ReadFile
CORE$FOREIGN TYPE$16 CORE$STDCALL WriteFile(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$15390208/*aspel.io.WriteFile*/ WriteFile
CORE$FOREIGN TYPE$16 CORE$STDCALL FlushFileBuffers(TYPE$19);
#define V$15390288/*aspel.io.FlushFileBuffers*/ FlushFileBuffers
TYPE$4 V$15390368/*aspel.io.file_available*/(TYPE$153);
TYPE$4 V$15390448/*aspel.io.file_seek*/(TYPE$153, TYPE$4, TYPE$19);
TYPE$4 V$15390528/*aspel.io.file_read*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$4 V$15390608/*aspel.io.file_write*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$15390688/*aspel.io.file_flush*/(TYPE$153);
TYPE$6 V$15390768/*aspel.io.file_close*/(TYPE$153);
TYPE$6 V$15390848/*aspel.io.standard_stream_close*/(TYPE$153);
TYPE$153 V$15390928/*aspel.io.open_file_stream*/(TYPE$1, TYPE$19, TYPE$19);
TYPE$153 V$15391008/*aspel.io.get_standard_stream*/(TYPE$19);
TYPE$4 V$15391808/*aspel.io.memory_available*/(TYPE$153);
TYPE$4 V$15391888/*aspel.io.memory_seek*/(TYPE$153, TYPE$4, TYPE$19);
TYPE$4 V$15391968/*aspel.io.memory_read*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$4 V$15392048/*aspel.io.memory_write*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$4 V$15392128/*aspel.io.memory_write_constant*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$15392208/*aspel.io.memory_flush*/(TYPE$153);
TYPE$6 V$15392288/*aspel.io.memory_close*/(TYPE$153);
TYPE$153 V$15392368/*aspel.io.open_memory_stream*/(TYPE$7, TYPE$4);
TYPE$153 V$15392448/*aspel.io.open_constant_memory_stream*/(TYPE$7, TYPE$4);
TYPE$4 V$15392528/*aspel.io.available*/(TYPE$153);
TYPE$4 V$15392608/*aspel.io.seek*/(TYPE$153, TYPE$4, TYPE$19);
TYPE$4 V$15392688/*aspel.io.position*/(TYPE$153);
TYPE$4 V$15392768/*aspel.io.read*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$4 V$15392848/*aspel.io.write*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$15392928/*aspel.io.flush*/(TYPE$153);
TYPE$6 V$15393008/*aspel.io.close*/(TYPE$153);
TYPE$6 V$15393088/*aspel.io.read_u8*/(TYPE$153, TYPE$10);
TYPE$6 V$15393168/*aspel.io.read_u16*/(TYPE$153, TYPE$31);
TYPE$6 V$15393248/*aspel.io.read_u32*/(TYPE$153, TYPE$103);
TYPE$6 V$15393328/*aspel.io.read_u64*/(TYPE$153, TYPE$54);
TYPE$6 V$15393408/*aspel.io.read_be16*/(TYPE$153, TYPE$31);
TYPE$6 V$15393488/*aspel.io.read_be32*/(TYPE$153, TYPE$103);
TYPE$6 V$15393568/*aspel.io.read_be64*/(TYPE$153, TYPE$54);
TYPE$6 V$15393648/*aspel.io.read_le16*/(TYPE$153, TYPE$31);
TYPE$6 V$15393728/*aspel.io.read_le32*/(TYPE$153, TYPE$103);
TYPE$6 V$15393808/*aspel.io.read_le64*/(TYPE$153, TYPE$54);
TYPE$6 V$15393888/*aspel.io.write_u8*/(TYPE$153, TYPE$2);
TYPE$6 V$15393968/*aspel.io.write_u16*/(TYPE$153, TYPE$28);
TYPE$6 V$15394048/*aspel.io.write_u32*/(TYPE$153, TYPE$19);
TYPE$6 V$15394128/*aspel.io.write_u64*/(TYPE$153, TYPE$5);
TYPE$6 V$15394208/*aspel.io.write_be16*/(TYPE$153, TYPE$28);
TYPE$6 V$15394288/*aspel.io.write_be32*/(TYPE$153, TYPE$19);
TYPE$6 V$15394368/*aspel.io.write_be64*/(TYPE$153, TYPE$5);
TYPE$6 V$15394448/*aspel.io.write_le16*/(TYPE$153, TYPE$28);
TYPE$6 V$15394528/*aspel.io.write_le32*/(TYPE$153, TYPE$19);
TYPE$6 V$15394608/*aspel.io.write_le64*/(TYPE$153, TYPE$5);
TYPE$153 V$15391088/*aspel.audio.open_data_queue*/(TYPE$19, TYPE$19, TYPE$66);
TYPE$258 V$15391168/*aspel.audio.allocate_buffer*/(TYPE$261);
TYPE$8 V$15391248/*aspel.audio.delete_buffer_list*/(TYPE$258);
TYPE$4 V$15391328/*aspel.audio.queue_available*/(TYPE$153);
TYPE$4 V$15391408/*aspel.audio.queue_seek*/(TYPE$153, TYPE$4, TYPE$19);
TYPE$4 V$15391488/*aspel.audio.queue_read*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$4 V$15391568/*aspel.audio.queue_write*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$15391648/*aspel.audio.queue_flush*/(TYPE$153);
TYPE$6 V$15391728/*aspel.audio.queue_close*/(TYPE$153);
TYPE$2 V$47872880/*aspel.audio.get_silence_value*/(TYPE$28);
TYPE$28 V$47872960/*aspel.audio.next_sample_format*/(TYPE$28, TYPE$28);
TYPE$6 V$47873040/*aspel.audio.resolve_audio_format*/(TYPE$267);
TYPE$19 V$47873120/*aspel.audio.get_audio_buffer_size*/(TYPE$267);
TYPE$6 V$47873200/*aspel.audio.start_audio_thread*/(TYPE$270);
TYPE$8 V$47873280/*aspel.audio.playback*/();
TYPE$8 V$47873360/*aspel.audio.recording*/();
TYPE$6 V$47873440/*aspel.audio.add_audio_device*/(TYPE$272, TYPE$1, TYPE$7, TYPE$6);
TYPE$8 V$47873520/*aspel.audio.free_audio_device_list*/(TYPE$272, TYPE$280);
TYPE$8 V$47873600/*aspel.audio.free_audio_devices*/(TYPE$272);
TYPE$280 V$47873680/*aspel.audio.get_default_audio_device*/(TYPE$272, TYPE$6);
TYPE$19 V$47873760/*aspel.audio.get_audio_device_count*/(TYPE$272, TYPE$6);
TYPE$280 V$47873840/*aspel.audio.get_audio_device_list*/(TYPE$272, TYPE$6);
TYPE$280 V$47873920/*aspel.audio.find_audio_device*/(TYPE$272, TYPE$1, TYPE$6);
TYPE$270 V$47874000/*aspel.audio.open_audio_device*/(TYPE$272, TYPE$280, TYPE$267, TYPE$267);
TYPE$8 V$47874080/*aspel.audio.close_audio_device*/(TYPE$270);
TYPE$8 V$47874160/*aspel.audio.set_audio_callback*/(TYPE$270, TYPE$276);
TYPE$8 V$47874240/*aspel.audio.set_audio_stream*/(TYPE$270, TYPE$153);
TYPE$8 V$47874320/*aspel.audio.lock_audio_device*/(TYPE$270);
TYPE$8 V$47874400/*aspel.audio.unlock_audio_device*/(TYPE$270);
TYPE$6 V$47874480/*aspel.audio.is_audio_device_paused*/(TYPE$270);
TYPE$8 V$47874560/*aspel.audio.pause_audio_device*/(TYPE$270, TYPE$6);
TYPE$8 V$47874640/*aspel.audio.uninit_stub*/(TYPE$272);
TYPE$8 V$47874720/*aspel.audio.detect_devices_stub*/(TYPE$272);
TYPE$6 V$47874800/*aspel.audio.open_device_stub*/(TYPE$272, TYPE$270);
TYPE$8 V$47874880/*aspel.audio.close_device_stub*/(TYPE$272, TYPE$270);
TYPE$1 V$47874960/*aspel.audio.get_buffer_stub*/(TYPE$272, TYPE$270);
TYPE$8 V$47875040/*aspel.audio.play_stub*/(TYPE$272, TYPE$270);
TYPE$8 V$47875120/*aspel.audio.wait_stub*/(TYPE$272, TYPE$270);
TYPE$19 V$47875200/*aspel.audio.input_stub*/(TYPE$272, TYPE$270, TYPE$10, TYPE$19);
TYPE$8 V$47875280/*aspel.audio.flush_input_stub*/(TYPE$272, TYPE$270);
TYPE$6 V$47875360/*aspel.audio.fill_stubs*/(TYPE$272);
TYPE$6 V$47875440/*aspel.audio.create_audio_context*/(TYPE$272, TYPE$19);
TYPE$8 V$47875520/*aspel.audio.destroy_audio_context*/(TYPE$272);
TYPE$19 V$47875600/*aspel.audio.get_default_backend_index*/();
TYPE$19 V$47875680/*aspel.audio.get_audio_backend_count*/();
TYPE$1 V$47875760/*aspel.audio.get_audio_backend_name*/(TYPE$19);
TYPE$19 V$47875840/*aspel.audio.get_audio_backend_index*/(TYPE$1);
TYPE$8 V$15394688/*aspel.net.socket_invalidate*/(TYPE$303);
TYPE$6 V$15394768/*aspel.net.socket_is_valid*/(TYPE$303);
TYPE$6 V$15394848/*aspel.net.socket_open*/(TYPE$303, TYPE$1, TYPE$1);
TYPE$8 V$15394928/*aspel.net.socket_close*/(TYPE$303);
TYPE$6 V$15395008/*aspel.net.socket_accept*/(TYPE$303, TYPE$303);
TYPE$6 V$15395088/*aspel.net.socket_send*/(TYPE$303, TYPE$7, TYPE$19);
TYPE$6 V$15395168/*aspel.net.socket_send*/(TYPE$303, TYPE$1);
TYPE$16 V$15395248/*aspel.net.socket_receive*/(TYPE$303, TYPE$7, TYPE$19);
TYPE$1 V$15395328/*aspel.net.socket_receive*/(TYPE$303, TYPE$1);
TYPE$8 V$15395408/*aspel.net.add_socket_to_set*/(TYPE$328, TYPE$303);
TYPE$8 V$15395488/*aspel.net.remove_socket_from_set*/(TYPE$328, TYPE$303);
TYPE$6 V$15395568/*aspel.net.sockets_ready*/(TYPE$328, TYPE$172);
TYPE$6 V$15395648/*aspel.net.initialize_network_subsystem*/();
TYPE$8 V$15395728/*aspel.net.uninitialize_network_subsystem*/();
TYPE$51 V$15396128/*aspel.math.to_radians*/(TYPE$51);
TYPE$51 V$15396208/*aspel.math.to_degrees*/(TYPE$51);
CORE$FOREIGN TYPE$51 tanh(TYPE$51);
#define V$15396288/*aspel.math.tanh*/ tanh
CORE$FOREIGN TYPE$51 tan(TYPE$51);
#define V$15396368/*aspel.math.tan*/ tan
CORE$FOREIGN TYPE$51 sqrt(TYPE$51);
#define V$15396448/*aspel.math.sqrt*/ sqrt
CORE$FOREIGN TYPE$51 sinh(TYPE$51);
#define V$47844000/*aspel.math.sinh*/ sinh
CORE$FOREIGN TYPE$51 sin(TYPE$51);
#define V$47844080/*aspel.math.sin*/ sin
CORE$FOREIGN TYPE$51 round(TYPE$51);
#define V$47844160/*aspel.math.round*/ round
CORE$FOREIGN TYPE$51 rint(TYPE$51);
#define V$47844240/*aspel.math.rint*/ rint
CORE$FOREIGN TYPE$51 remainder(TYPE$51, TYPE$51);
#define V$47844320/*aspel.math.remainder*/ remainder
CORE$FOREIGN TYPE$51 pow(TYPE$51, TYPE$51);
#define V$47844400/*aspel.math.pow*/ pow
TYPE$4 V$47844480/*aspel.math.min*/(TYPE$4, TYPE$4);
TYPE$5 V$47844560/*aspel.math.min*/(TYPE$5, TYPE$5);
TYPE$51 V$47844640/*aspel.math.min*/(TYPE$51, TYPE$51);
TYPE$4 V$47844720/*aspel.math.max*/(TYPE$4, TYPE$4);
TYPE$5 V$47844800/*aspel.math.max*/(TYPE$5, TYPE$5);
TYPE$51 V$47844880/*aspel.math.max*/(TYPE$51, TYPE$51);
CORE$FOREIGN TYPE$51 log10(TYPE$51);
#define V$47844960/*aspel.math.log10*/ log10
CORE$FOREIGN TYPE$51 log1p(TYPE$51);
#define V$47845040/*aspel.math.log1p*/ log1p
CORE$FOREIGN TYPE$51 log(TYPE$51);
#define V$47845120/*aspel.math.log*/ log
CORE$FOREIGN TYPE$51 hypot(TYPE$51, TYPE$51);
#define V$47845200/*aspel.math.hypot*/ hypot
CORE$FOREIGN TYPE$51 fmod(TYPE$51, TYPE$51);
#define V$47845280/*aspel.math.fmod*/ fmod
CORE$FOREIGN TYPE$51 floor(TYPE$51);
#define V$47845360/*aspel.math.floor*/ floor
TYPE$6 V$47845440/*aspel.math.is_nan*/(TYPE$51);
TYPE$5 V$47845520/*aspel.math.float_to_bits*/(TYPE$51);
TYPE$51 V$47845600/*aspel.math.bits_to_float*/(TYPE$5);
CORE$FOREIGN TYPE$51 expm1(TYPE$51);
#define V$47845680/*aspel.math.expm1*/ expm1
CORE$FOREIGN TYPE$51 exp(TYPE$51);
#define V$47845760/*aspel.math.exp*/ exp
CORE$FOREIGN TYPE$51 cosh(TYPE$51);
#define V$47845840/*aspel.math.cosh*/ cosh
CORE$FOREIGN TYPE$51 cos(TYPE$51);
#define V$47845920/*aspel.math.cos*/ cos
TYPE$4 V$47846000/*aspel.math.clamp*/(TYPE$4, TYPE$4, TYPE$4);
TYPE$5 V$47846080/*aspel.math.clamp*/(TYPE$5, TYPE$5, TYPE$5);
TYPE$51 V$47846160/*aspel.math.clamp*/(TYPE$51, TYPE$51, TYPE$51);
TYPE$19 V$47846240/*aspel.math.choose*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$19 V$47846320/*aspel.math.ceil_pow2*/(TYPE$19);
CORE$FOREIGN TYPE$51 ceil(TYPE$51);
#define V$47846400/*aspel.math.ceil*/ ceil
CORE$FOREIGN TYPE$51 cbrt(TYPE$51);
#define V$47846480/*aspel.math.cbrt*/ cbrt
TYPE$8 V$47846560/*aspel.math.delete_big_integer*/(TYPE$352);
TYPE$6 V$47846640/*aspel.math.set_value*/(TYPE$352, TYPE$4);
TYPE$173 V$47846720/*aspel.math.value_of*/(TYPE$4);
TYPE$6 V$47846800/*aspel.math.copy*/(TYPE$352, TYPE$352);
TYPE$6 V$47846880/*aspel.math.negate*/(TYPE$352, TYPE$352);
TYPE$5 V$47846960/*aspel.math.normalize*/(TYPE$184, TYPE$5);
TYPE$16 V$47847040/*aspel.math.compare_arrays*/(TYPE$184, TYPE$5, TYPE$184, TYPE$5);
TYPE$16 V$47847120/*aspel.math.compare*/(TYPE$352, TYPE$352);
TYPE$6 V$47847200/*aspel.math.add_arrays*/(TYPE$184, TYPE$5, TYPE$184, TYPE$5, TYPE$184, TYPE$360, TYPE$54);
TYPE$5 V$47847280/*aspel.math.subtract_arrays*/(TYPE$184, TYPE$5, TYPE$184, TYPE$5, TYPE$184);
TYPE$6 V$47847360/*aspel.math.multiply_arrays*/(TYPE$184, TYPE$5, TYPE$184, TYPE$5, TYPE$360, TYPE$54);
TYPE$6 V$47847440/*aspel.math.add*/(TYPE$352, TYPE$352);
TYPE$6 V$47847520/*aspel.math.subtract*/(TYPE$352, TYPE$352);
TYPE$6 V$47847600/*aspel.math.multiply*/(TYPE$352, TYPE$352);
TYPE$6 V$47847680/*aspel.math.bezier*/(TYPE$364, TYPE$364, TYPE$51);
CORE$FOREIGN TYPE$51 atan2(TYPE$51, TYPE$51);
#define V$47847760/*aspel.math.atan2*/ atan2
CORE$FOREIGN TYPE$51 atan(TYPE$51);
#define V$47847840/*aspel.math.atan*/ atan
CORE$FOREIGN TYPE$51 asin(TYPE$51);
#define V$47847920/*aspel.math.asin*/ asin
CORE$FOREIGN TYPE$51 acos(TYPE$51);
#define V$47848000/*aspel.math.acos*/ acos
TYPE$4 V$47848080/*aspel.math.abs*/(TYPE$4);
TYPE$51 V$47848160/*aspel.math.abs*/(TYPE$51);
TYPE$1 V$47848240/*aspel.log.get_priority_string*/(TYPE$19);
TYPE$8 V$47848320/*aspel.log.set_priority_color*/(TYPE$19);
TYPE$8 V$47848400/*aspel.log.set_regular_color*/();
TYPE$8 V$47848480/*aspel.log.default_logger*/(TYPE$1, TYPE$19, TYPE$168, TYPE$1, TYPE$34);
TYPE$19 V$47848560/*aspel.log.get_priority_threshold*/(TYPE$1);
TYPE$8 V$47848640/*aspel.log.set_priority_threshold*/(TYPE$1, TYPE$19);
TYPE$66 V$47848720/*aspel.log.create_the_lock*/();
TYPE$8 V$47848800/*aspel.log.lock_logger*/();
TYPE$8 V$47848880/*aspel.log.unlock_logger*/();
TYPE$8 V$47848960/*aspel.log.do_report*/(TYPE$1, TYPE$19, TYPE$168, TYPE$1, TYPE$34);
TYPE$8 V$47849040/*aspel.log.report*/(TYPE$1, TYPE$19, TYPE$168, TYPE$1, TYPE$34);
TYPE$8 V$47849120/*aspel.log.report*/(TYPE$1, TYPE$19, TYPE$1, TYPE$34);
TYPE$8 V$47849200/*aspel.log.report*/(TYPE$19, TYPE$1, TYPE$34);
TYPE$376 V$47849280/*aspel.cml.ui.turtle.turtle_create_context*/();
TYPE$8 V$47849360/*aspel.cml.ui.turtle.turtle_delete_context*/(TYPE$376);
TYPE$8 V$47849440/*aspel.cml.ui.turtle.turtle_render_call*/(TYPE$376, TYPE$379);
TYPE$8 V$47849520/*aspel.cml.ui.turtle.render_call_line*/(TYPE$376, TYPE$51, TYPE$51, TYPE$51, TYPE$51, TYPE$19);
TYPE$8 V$47849600/*aspel.cml.ui.turtle.render_call_fill*/(TYPE$376, TYPE$51, TYPE$51, TYPE$19);
TYPE$384 V$47849680/*aspel.cml.ui.turtle.turtle_create*/(TYPE$376);
TYPE$8 V$47849760/*aspel.cml.ui.turtle.turtle_delete*/(TYPE$376, TYPE$384);
TYPE$8 V$47849840/*aspel.cml.ui.turtle.turtle_forward*/(TYPE$376, TYPE$384, TYPE$51);
TYPE$8 V$47849920/*aspel.cml.ui.turtle.turtle_backward*/(TYPE$376, TYPE$384, TYPE$51);
TYPE$8 V$47850000/*aspel.cml.ui.turtle.turtle_left*/(TYPE$376, TYPE$384, TYPE$51);
TYPE$8 V$47850080/*aspel.cml.ui.turtle.turtle_right*/(TYPE$376, TYPE$384, TYPE$51);
TYPE$8 V$47850160/*aspel.cml.ui.turtle.turtle_set_pen_color*/(TYPE$376, TYPE$384, TYPE$2, TYPE$2, TYPE$2);
TYPE$8 V$47850240/*aspel.cml.ui.turtle.turtle_set_fill_color*/(TYPE$376, TYPE$384, TYPE$2, TYPE$2, TYPE$2);
TYPE$8 V$47850320/*aspel.cml.ui.turtle.turtle_pen_up*/(TYPE$376, TYPE$384);
TYPE$8 V$47850400/*aspel.cml.ui.turtle.turtle_pen_down*/(TYPE$376, TYPE$384);
TYPE$8 V$47850480/*aspel.cml.ui.turtle.turtle_init_defaults*/(TYPE$384);
TYPE$8 V$47850560/*aspel.cml.ui.turtle.turtle_correct_location*/(TYPE$143, TYPE$143);
TYPE$8 V$47850640/*aspel.cml.ui.turtle.turtle_correct_angle*/(TYPE$143);
TYPE$373 V$47850720/*aspel.cml.ui.turtle.turtle_get_render_list*/(TYPE$376);
TYPE$8 V$47850800/*aspel.cml.ui.turtle.turtle_render*/(TYPE$376, TYPE$7);
TYPE$6 V$47850880/*aspel.cml.ui.widgets.button*/(TYPE$397, TYPE$1);
TYPE$6 V$47850960/*aspel.cml.ui.widgets.button*/(TYPE$397, TYPE$5, TYPE$1);
TYPE$6 V$47851040/*aspel.cml.ui.widgets.button*/(TYPE$397, TYPE$1, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47851120/*aspel.cml.ui.widgets.button*/(TYPE$397, TYPE$1, TYPE$5, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47851200/*aspel.cml.ui.widgets.is_mouse_over*/(TYPE$397, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47851280/*aspel.cml.ui.layouts.push_horizontal_layout*/(TYPE$397);
TYPE$6 V$47851360/*aspel.cml.ui.layouts.horizontal_layout_begin*/(TYPE$397, TYPE$7);
TYPE$6 V$47851440/*aspel.cml.ui.layouts.horizontal_layout_end*/(TYPE$397, TYPE$7);
TYPE$6 V$47851520/*aspel.cml.ui.layouts.horizontal_layout*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47851600/*aspel.cml.ui.layouts.horizontal_layout_available*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47851680/*aspel.cml.ui.layouts.horizontal_layout_post*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47851760/*aspel.cml.ui.layouts.push_vertical_layout*/(TYPE$397);
TYPE$6 V$47851840/*aspel.cml.ui.layouts.vertical_layout_begin*/(TYPE$397, TYPE$7);
TYPE$6 V$47851920/*aspel.cml.ui.layouts.vertical_layout_end*/(TYPE$397, TYPE$7);
TYPE$6 V$47852000/*aspel.cml.ui.layouts.vertical_layout*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47852080/*aspel.cml.ui.layouts.vertical_layout_available*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47852160/*aspel.cml.ui.layouts.vertical_layout_post*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47852240/*aspel.cml.ui.layouts.push_pane_layout*/(TYPE$397, TYPE$16, TYPE$16);
TYPE$6 V$47852320/*aspel.cml.ui.layouts.pane_layout_begin*/(TYPE$397, TYPE$7);
TYPE$6 V$47852400/*aspel.cml.ui.layouts.pane_layout_end*/(TYPE$397, TYPE$7);
TYPE$6 V$47852480/*aspel.cml.ui.layouts.pane_layout*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47852560/*aspel.cml.ui.layouts.pane_layout_available*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47852640/*aspel.cml.ui.layouts.pane_layout_post*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47852720/*aspel.cml.ui.layouts.root_layout*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47852800/*aspel.cml.ui.layouts.root_layout_available*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47852880/*aspel.cml.ui.layouts.root_layout_post*/(TYPE$397, TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$401 V$47852960/*aspel.cml.ui.create_style_attribute*/(TYPE$169, TYPE$5);
TYPE$16 V$47853040/*aspel.cml.ui.get_style_size*/(TYPE$397, TYPE$401);
TYPE$331 V$47853120/*aspel.cml.ui.get_style_dimensions*/(TYPE$397, TYPE$401);
TYPE$420 V$47853200/*aspel.cml.ui.get_style_margins*/(TYPE$397, TYPE$401);
TYPE$407 V$47853280/*aspel.cml.ui.get_style_color*/(TYPE$397, TYPE$401);
TYPE$8 V$47853360/*aspel.cml.ui.set_style*/(TYPE$397, TYPE$401, TYPE$16);
TYPE$8 V$47853440/*aspel.cml.ui.set_style*/(TYPE$397, TYPE$401, TYPE$331);
TYPE$8 V$47853520/*aspel.cml.ui.set_style*/(TYPE$397, TYPE$401, TYPE$420);
TYPE$8 V$47853600/*aspel.cml.ui.set_style*/(TYPE$397, TYPE$401, TYPE$407);
TYPE$8 V$47853680/*aspel.cml.ui.load_default_style*/(TYPE$397);
TYPE$6 V$47853760/*aspel.cml.ui.allocate_layout_stack_space*/(TYPE$397, TYPE$5);
TYPE$7 V$47853840/*aspel.cml.ui.push_layout*/(TYPE$397, TYPE$412);
TYPE$6 V$47853920/*aspel.cml.ui.pop_layout*/(TYPE$397);
TYPE$6 V$47854000/*aspel.cml.ui.layout*/(TYPE$397, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47854080/*aspel.cml.ui.layout_available*/(TYPE$397, TYPE$16, TYPE$16, TYPE$86, TYPE$86, TYPE$86, TYPE$86);
TYPE$6 V$47854160/*aspel.cml.ui.layout_post*/(TYPE$397, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$6 V$47854240/*aspel.cml.ui.is_hot*/(TYPE$397, TYPE$191);
TYPE$8 V$47854320/*aspel.cml.ui.set_hot*/(TYPE$397, TYPE$191);
TYPE$8 V$47854400/*aspel.cml.ui.clear_hot*/(TYPE$397);
TYPE$6 V$47854480/*aspel.cml.ui.has_focus*/(TYPE$397, TYPE$191);
TYPE$6 V$47854560/*aspel.cml.ui.require_focus*/(TYPE$397, TYPE$191);
TYPE$8 V$47854640/*aspel.cml.ui.retain_focus*/(TYPE$397);
TYPE$8 V$47854720/*aspel.cml.ui.clear_focus*/(TYPE$397);
TYPE$6 V$47854800/*aspel.cml.ui.initialize_ui*/(TYPE$397);
TYPE$8 V$47854880/*aspel.cml.ui.begin_frame*/(TYPE$397);
TYPE$8 V$47854960/*aspel.cml.ui.end_frame*/(TYPE$397);
TYPE$6 V$47855040/*aspel.cml.event.poll_event*/(TYPE$447);
TYPE$6 V$47855120/*aspel.cml.event.wait_event*/(TYPE$447);
TYPE$6 V$47855200/*aspel.cml.event.wait_event_timeout*/(TYPE$447, TYPE$16);
TYPE$6 V$47855280/*aspel.cml.event.push_event*/(TYPE$447);
CORE$FOREIGN TYPE$16 SDL_PollEvent(TYPE$19);
#define V$47855360/*aspel.cml.event.SDL_PollEvent*/ SDL_PollEvent
CORE$FOREIGN TYPE$16 SDL_WaitEvent(TYPE$19);
#define V$47855440/*aspel.cml.event.SDL_WaitEvent*/ SDL_WaitEvent
CORE$FOREIGN TYPE$16 SDL_WaitEventTimeout(TYPE$19, TYPE$16);
#define V$47855520/*aspel.cml.event.SDL_WaitEventTimeout*/ SDL_WaitEventTimeout
CORE$FOREIGN TYPE$16 SDL_PushEvent(TYPE$19);
#define V$47855600/*aspel.cml.event.SDL_PushEvent*/ SDL_PushEvent
TYPE$454 V$47855680/*aspel.cml.video.image.create_image*/(TYPE$16, TYPE$16, TYPE$16);
TYPE$454 V$47855760/*aspel.cml.video.image.read_image*/(TYPE$153, TYPE$16);
TYPE$6 V$47855840/*aspel.cml.video.image.read_image_info*/(TYPE$153, TYPE$458);
TYPE$8 V$47855920/*aspel.cml.video.image.destroy_image*/(TYPE$454);
CORE$FOREIGN TYPE$10 aspel_cml_video_image_read(TYPE$153, TYPE$86, TYPE$86, TYPE$86, TYPE$16);
#define V$47856000/*aspel.cml.video.image.aspel_cml_video_image_read*/ aspel_cml_video_image_read
CORE$FOREIGN TYPE$6 aspel_cml_video_image_read_info(TYPE$153, TYPE$86, TYPE$86, TYPE$86);
#define V$47856080/*aspel.cml.video.image.aspel_cml_video_image_read_info*/ aspel_cml_video_image_read_info
TYPE$16 V$47856160/*aspel.cml.video.font.glyph_data_comparator*/(TYPE$7, TYPE$7);
TYPE$16 V$47856240/*aspel.cml.video.font.get_font_offset*/(TYPE$10, TYPE$16);
TYPE$474 V$47856320/*aspel.cml.video.font.create_font*/(TYPE$10, TYPE$16);
TYPE$6 V$47856400/*aspel.cml.video.font.destroy_font*/(TYPE$474);
TYPE$16 V$47856480/*aspel.cml.video.font.get_glyph_index*/(TYPE$474, TYPE$19);
TYPE$172 V$47856560/*aspel.cml.video.font.compute_scale*/(TYPE$474, TYPE$172);
TYPE$8 V$47856640/*aspel.cml.video.font.get_vertical_metrics*/(TYPE$474, TYPE$86, TYPE$86, TYPE$86);
TYPE$8 V$47856720/*aspel.cml.video.font.get_horizontal_metrics*/(TYPE$474, TYPE$16, TYPE$86, TYPE$86);
TYPE$16 V$47856800/*aspel.cml.video.font.get_kern_advance*/(TYPE$474, TYPE$16, TYPE$16);
TYPE$6 V$47856880/*aspel.cml.video.font.begin_glyph_atlas*/(TYPE$474, TYPE$467, TYPE$16);
TYPE$6 V$47856960/*aspel.cml.video.font.end_glyph_atlas*/(TYPE$474);
TYPE$6 V$47857040/*aspel.cml.video.font.set_glyph_oversampling*/(TYPE$474, TYPE$19, TYPE$19);
TYPE$6 V$47857120/*aspel.cml.video.font.allocate_glyphs*/(TYPE$474, TYPE$19, TYPE$494, TYPE$495);
TYPE$16 V$47857200/*aspel.cml.video.font.pack_glyph_range*/(TYPE$474, TYPE$172, TYPE$19, TYPE$16);
TYPE$6 V$47857280/*aspel.cml.video.font.next_qlyph*/(TYPE$474, TYPE$16, TYPE$172, TYPE$506, TYPE$506, TYPE$6, TYPE$507);
CORE$FOREIGN TYPE$16 stbtt_GetFontOffsetForIndex(TYPE$19, TYPE$16);
#define V$47857360/*aspel.cml.video.font.stbtt_get_font_offset_for_index*/ stbtt_GetFontOffsetForIndex
CORE$FOREIGN TYPE$16 stbtt_InitFont(TYPE$19, TYPE$19, TYPE$16);
#define V$47857440/*aspel.cml.video.font.stbtt_init_font*/ stbtt_InitFont
CORE$FOREIGN TYPE$16 stbtt_FindGlyphIndex(TYPE$19, TYPE$16);
#define V$47857520/*aspel.cml.video.font.stbtt_find_glyph_index*/ stbtt_FindGlyphIndex
CORE$FOREIGN TYPE$172 stbtt_ScaleForPixelHeight(TYPE$19, TYPE$172);
#define V$47857600/*aspel.cml.video.font.stbtt_scale_for_pixel_height*/ stbtt_ScaleForPixelHeight
CORE$FOREIGN TYPE$8 stbtt_GetFontVMetrics(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$47857680/*aspel.cml.video.font.stbtt_get_font_v_metrics*/ stbtt_GetFontVMetrics
CORE$FOREIGN TYPE$8 stbtt_GetGlyphHMetrics(TYPE$19, TYPE$16, TYPE$19, TYPE$19);
#define V$47857760/*aspel.cml.video.font.stbtt_get_glyph_h_metrics*/ stbtt_GetGlyphHMetrics
CORE$FOREIGN TYPE$16 stbtt_GetGlyphKernAdvance(TYPE$19, TYPE$16, TYPE$16);
#define V$47857840/*aspel.cml.video.font.stbtt_get_glyph_kern_advance*/ stbtt_GetGlyphKernAdvance
CORE$FOREIGN TYPE$16 stbtt_PackBegin(TYPE$19, TYPE$19, TYPE$16, TYPE$16, TYPE$16, TYPE$16, TYPE$19);
#define V$47857920/*aspel.cml.video.font.stbtt_pack_begin*/ stbtt_PackBegin
CORE$FOREIGN TYPE$8 stbtt_PackEnd(TYPE$19);
#define V$47858000/*aspel.cml.video.font.stbtt_pack_end*/ stbtt_PackEnd
CORE$FOREIGN TYPE$8 stbtt_PackSetOversampling(TYPE$19, TYPE$19, TYPE$19);
#define V$47858080/*aspel.cml.video.font.stbtt_pack_set_oversampling*/ stbtt_PackSetOversampling
CORE$FOREIGN TYPE$16 stbtt_PackFontRangesGatherRects(TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19);
#define V$47858160/*aspel.cml.video.font.stbtt_pack_font_ranges_gather_rects*/ stbtt_PackFontRangesGatherRects
CORE$FOREIGN TYPE$8 stbtt_PackFontRangesPackRects(TYPE$19, TYPE$19, TYPE$16);
#define V$47858240/*aspel.cml.video.font.stbtt_pack_font_ranges_pack_rects*/ stbtt_PackFontRangesPackRects
CORE$FOREIGN TYPE$16 stbtt_PackFontRangesRenderIntoRects(TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19);
#define V$47858320/*aspel.cml.video.font.stbtt_pack_font_ranges_render_into_rects*/ stbtt_PackFontRangesRenderIntoRects
TYPE$7 V$47858400/*aspel.cml.video.create_texture*/(TYPE$7, TYPE$16, TYPE$16, TYPE$16);
TYPE$8 V$47858480/*aspel.cml.video.delete_texture*/(TYPE$7);
TYPE$16 V$47858560/*aspel.cml.video.update_texture*/(TYPE$7, TYPE$7, TYPE$16);
CORE$FOREIGN TYPE$7 SDL_CreateTexture(TYPE$19, TYPE$19, TYPE$16, TYPE$16, TYPE$16);
#define V$47858640/*aspel.cml.video.SDL_CreateTexture*/ SDL_CreateTexture
CORE$FOREIGN TYPE$8 SDL_DestroyTexture(TYPE$19);
#define V$47858720/*aspel.cml.video.SDL_DestroyTexture*/ SDL_DestroyTexture
CORE$FOREIGN TYPE$16 SDL_UpdateTexture(TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$47858800/*aspel.cml.video.SDL_UpdateTexture*/ SDL_UpdateTexture
TYPE$7 V$47858880/*aspel.cml.video.create_renderer*/(TYPE$7);
TYPE$8 V$47858960/*aspel.cml.video.delete_renderer*/(TYPE$7);
TYPE$8 V$47859040/*aspel.cml.video.render_clear*/(TYPE$7);
TYPE$8 V$47859120/*aspel.cml.video.render_draw_point*/(TYPE$7, TYPE$16, TYPE$16);
TYPE$8 V$47859200/*aspel.cml.video.render_draw_points*/(TYPE$7, TYPE$519);
TYPE$8 V$47859280/*aspel.cml.video.render_draw_line*/(TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$8 V$47859360/*aspel.cml.video.render_draw_lines*/(TYPE$7, TYPE$519);
TYPE$8 V$47859440/*aspel.cml.video.render_draw_rect*/(TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$8 V$47859520/*aspel.cml.video.render_draw_rects*/(TYPE$7, TYPE$525);
TYPE$8 V$47859600/*aspel.cml.video.render_fill_rect*/(TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$8 V$47859680/*aspel.cml.video.render_fill_rects*/(TYPE$7, TYPE$525);
TYPE$8 V$47859760/*aspel.cml.video.render_copy_texture*/(TYPE$7, TYPE$7, TYPE$523, TYPE$523);
TYPE$8 V$47859840/*aspel.cml.video.render_get_scissor_rect*/(TYPE$7, TYPE$523);
TYPE$8 V$47859920/*aspel.cml.video.render_set_scissor_rect*/(TYPE$7, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
TYPE$8 V$47860000/*aspel.cml.video.render_get_color*/(TYPE$7, TYPE$430);
TYPE$8 V$47860080/*aspel.cml.video.render_get_color*/(TYPE$7, TYPE$10, TYPE$10, TYPE$10, TYPE$10);
TYPE$8 V$47860160/*aspel.cml.video.render_set_color*/(TYPE$7, TYPE$407);
TYPE$8 V$47860240/*aspel.cml.video.render_set_color*/(TYPE$7, TYPE$2, TYPE$2, TYPE$2, TYPE$2);
TYPE$8 V$47860320/*aspel.cml.video.render_get_context_size*/(TYPE$7, TYPE$86, TYPE$86);
TYPE$8 V$47860400/*aspel.cml.video.render_swap_window*/(TYPE$7);
CORE$FOREIGN TYPE$19 SDL_CreateRenderer(TYPE$19, TYPE$16, TYPE$19);
#define V$47860480/*aspel.cml.video.SDL_CreateRenderer*/ SDL_CreateRenderer
CORE$FOREIGN TYPE$8 SDL_DestroyRenderer(TYPE$19);
#define V$47860560/*aspel.cml.video.SDL_DestroyRenderer*/ SDL_DestroyRenderer
CORE$FOREIGN TYPE$8 SDL_RenderPresent(TYPE$19);
#define V$47860640/*aspel.cml.video.SDL_RenderPresent*/ SDL_RenderPresent
CORE$FOREIGN TYPE$16 SDL_RenderClear(TYPE$19);
#define V$47860720/*aspel.cml.video.SDL_RenderClear*/ SDL_RenderClear
CORE$FOREIGN TYPE$16 SDL_RenderDrawPoint(TYPE$19, TYPE$16, TYPE$16);
#define V$47860800/*aspel.cml.video.SDL_RenderDrawPoint*/ SDL_RenderDrawPoint
CORE$FOREIGN TYPE$16 SDL_RenderDrawPoints(TYPE$19, TYPE$19, TYPE$16);
#define V$47860880/*aspel.cml.video.SDL_RenderDrawPoints*/ SDL_RenderDrawPoints
CORE$FOREIGN TYPE$16 SDL_RenderDrawLine(TYPE$19, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
#define V$47860960/*aspel.cml.video.SDL_RenderDrawLine*/ SDL_RenderDrawLine
CORE$FOREIGN TYPE$16 SDL_RenderDrawLines(TYPE$19, TYPE$19, TYPE$16);
#define V$47861040/*aspel.cml.video.SDL_RenderDrawLines*/ SDL_RenderDrawLines
CORE$FOREIGN TYPE$16 SDL_RenderDrawRect(TYPE$19, TYPE$19);
#define V$47861120/*aspel.cml.video.SDL_RenderDrawRect*/ SDL_RenderDrawRect
CORE$FOREIGN TYPE$16 SDL_RenderDrawRects(TYPE$19, TYPE$19, TYPE$16);
#define V$47861200/*aspel.cml.video.SDL_RenderDrawRects*/ SDL_RenderDrawRects
CORE$FOREIGN TYPE$16 SDL_RenderFillRect(TYPE$19, TYPE$19);
#define V$47861280/*aspel.cml.video.SDL_RenderFillRect*/ SDL_RenderFillRect
CORE$FOREIGN TYPE$16 SDL_RenderFillRects(TYPE$19, TYPE$19, TYPE$16);
#define V$47861360/*aspel.cml.video.SDL_RenderFillRects*/ SDL_RenderFillRects
CORE$FOREIGN TYPE$16 SDL_RenderCopy(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$47861440/*aspel.cml.video.SDL_RenderCopy*/ SDL_RenderCopy
CORE$FOREIGN TYPE$8 SDL_RenderGetClipRect(TYPE$19, TYPE$19);
#define V$47861520/*aspel.cml.video.SDL_RenderGetClipRect*/ SDL_RenderGetClipRect
CORE$FOREIGN TYPE$16 SDL_RenderSetClipRect(TYPE$19, TYPE$19);
#define V$47861600/*aspel.cml.video.SDL_RenderSetClipRect*/ SDL_RenderSetClipRect
CORE$FOREIGN TYPE$16 SDL_GetRenderDrawColor(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$47861680/*aspel.cml.video.SDL_GetRenderDrawColor*/ SDL_GetRenderDrawColor
CORE$FOREIGN TYPE$16 SDL_SetRenderDrawColor(TYPE$19, TYPE$2, TYPE$2, TYPE$2, TYPE$2);
#define V$47861760/*aspel.cml.video.SDL_SetRenderDrawColor*/ SDL_SetRenderDrawColor
CORE$FOREIGN TYPE$16 SDL_GetRendererOutputSize(TYPE$19, TYPE$19, TYPE$19);
#define V$47861840/*aspel.cml.video.SDL_GetRendererOutputSize*/ SDL_GetRendererOutputSize
TYPE$7 V$47861920/*aspel.cml.video.create_window*/(TYPE$19);
TYPE$8 V$47862000/*aspel.cml.video.delete_window*/(TYPE$7);
TYPE$8 V$47862080/*aspel.cml.video.get_window_size*/(TYPE$7, TYPE$86, TYPE$86);
TYPE$8 V$47862160/*aspel.cml.video.get_window_maximum_size*/(TYPE$7, TYPE$86, TYPE$86);
TYPE$8 V$47862240/*aspel.cml.video.get_window_minimum_size*/(TYPE$7, TYPE$86, TYPE$86);
TYPE$8 V$47862320/*aspel.cml.video.get_window_position*/(TYPE$7, TYPE$86, TYPE$86);
TYPE$10 V$47862400/*aspel.cml.video.get_window_title*/(TYPE$7);
TYPE$6 V$47862480/*aspel.cml.video.get_window_grab*/(TYPE$7);
TYPE$8 V$47862560/*aspel.cml.video.set_window_size*/(TYPE$7, TYPE$16, TYPE$16);
TYPE$8 V$47862640/*aspel.cml.video.set_window_maximum_size*/(TYPE$7, TYPE$16, TYPE$16);
TYPE$8 V$47862720/*aspel.cml.video.set_window_minimum_size*/(TYPE$7, TYPE$16, TYPE$16);
TYPE$8 V$47862800/*aspel.cml.video.set_window_fullscreen*/(TYPE$7, TYPE$19);
TYPE$8 V$47862880/*aspel.cml.video.set_window_position*/(TYPE$7, TYPE$16, TYPE$16);
TYPE$8 V$47862960/*aspel.cml.video.set_window_title*/(TYPE$7, TYPE$1);
TYPE$8 V$47863040/*aspel.cml.video.set_window_bordered*/(TYPE$7, TYPE$6);
TYPE$8 V$47863120/*aspel.cml.video.set_window_grab*/(TYPE$7, TYPE$6);
TYPE$8 V$47863200/*aspel.cml.video.show_window*/(TYPE$7);
TYPE$8 V$47863280/*aspel.cml.video.hide_window*/(TYPE$7);
CORE$FOREIGN TYPE$19 SDL_CreateWindow(TYPE$19, TYPE$16, TYPE$16, TYPE$16, TYPE$16, TYPE$19);
#define V$47863360/*aspel.cml.video.SDL_CreateWindow*/ SDL_CreateWindow
CORE$FOREIGN TYPE$8 SDL_DestroyWindow(TYPE$19);
#define V$47863440/*aspel.cml.video.SDL_DestroyWindow*/ SDL_DestroyWindow
CORE$FOREIGN TYPE$8 SDL_GetWindowSize(TYPE$19, TYPE$19, TYPE$19);
#define V$47863520/*aspel.cml.video.SDL_GetWindowSize*/ SDL_GetWindowSize
CORE$FOREIGN TYPE$8 SDL_GetWindowMaximumSize(TYPE$19, TYPE$19, TYPE$19);
#define V$47863600/*aspel.cml.video.SDL_GetWindowMaximumSize*/ SDL_GetWindowMaximumSize
CORE$FOREIGN TYPE$8 SDL_GetWindowMinimumSize(TYPE$19, TYPE$19, TYPE$19);
#define V$47863680/*aspel.cml.video.SDL_GetWindowMinimumSize*/ SDL_GetWindowMinimumSize
CORE$FOREIGN TYPE$8 SDL_GetWindowPosition(TYPE$19, TYPE$19, TYPE$19);
#define V$47863760/*aspel.cml.video.SDL_GetWindowPosition*/ SDL_GetWindowPosition
CORE$FOREIGN TYPE$19 SDL_GetWindowTitle(TYPE$19);
#define V$47863840/*aspel.cml.video.SDL_GetWindowTitle*/ SDL_GetWindowTitle
CORE$FOREIGN TYPE$6 SDL_GetWindowGrab(TYPE$19);
#define V$47863920/*aspel.cml.video.SDL_GetWindowGrab*/ SDL_GetWindowGrab
CORE$FOREIGN TYPE$8 SDL_SetWindowSize(TYPE$19, TYPE$16, TYPE$16);
#define V$47864000/*aspel.cml.video.SDL_SetWindowSize*/ SDL_SetWindowSize
CORE$FOREIGN TYPE$8 SDL_SetWindowMaximumSize(TYPE$19, TYPE$16, TYPE$16);
#define V$47864080/*aspel.cml.video.SDL_SetWindowMaximumSize*/ SDL_SetWindowMaximumSize
CORE$FOREIGN TYPE$8 SDL_SetWindowMinimumSize(TYPE$19, TYPE$16, TYPE$16);
#define V$47864160/*aspel.cml.video.SDL_SetWindowMinimumSize*/ SDL_SetWindowMinimumSize
CORE$FOREIGN TYPE$8 SDL_SetWindowFullscreen(TYPE$19, TYPE$19);
#define V$47864240/*aspel.cml.video.SDL_SetWindowFullscreen*/ SDL_SetWindowFullscreen
CORE$FOREIGN TYPE$8 SDL_SetWindowPosition(TYPE$19, TYPE$16, TYPE$16);
#define V$47864320/*aspel.cml.video.SDL_SetWindowPosition*/ SDL_SetWindowPosition
CORE$FOREIGN TYPE$8 SDL_SetWindowTitle(TYPE$19, TYPE$19);
#define V$47864400/*aspel.cml.video.SDL_SetWindowTitle*/ SDL_SetWindowTitle
CORE$FOREIGN TYPE$8 SDL_SetWindowBordered(TYPE$19, TYPE$6);
#define V$47864480/*aspel.cml.video.SDL_SetWindowBordered*/ SDL_SetWindowBordered
CORE$FOREIGN TYPE$8 SDL_SetWindowGrab(TYPE$19, TYPE$6);
#define V$47864560/*aspel.cml.video.SDL_SetWindowGrab*/ SDL_SetWindowGrab
CORE$FOREIGN TYPE$8 SDL_ShowWindow(TYPE$19);
#define V$47864640/*aspel.cml.video.SDL_ShowWindow*/ SDL_ShowWindow
CORE$FOREIGN TYPE$8 SDL_HideWindow(TYPE$19);
#define V$47864720/*aspel.cml.video.SDL_HideWindow*/ SDL_HideWindow
TYPE$6 V$47864800/*aspel.cml.video.set_window_hit_test*/(TYPE$7, TYPE$547, TYPE$7);
TYPE$16 V$47864880/*aspel.cml.video.gl_get_attribute*/(TYPE$19, TYPE$86);
TYPE$16 V$47864960/*aspel.cml.video.gl_set_attribute*/(TYPE$19, TYPE$16);
TYPE$8 V$47865040/*aspel.cml.video.gl_reset_attributes*/();
TYPE$7 V$47865120/*aspel.cml.video.create_gl_context*/(TYPE$7);
TYPE$8 V$47865200/*aspel.cml.video.delete_gl_context*/(TYPE$7);
TYPE$6 V$47865280/*aspel.cml.video.gl_make_current*/(TYPE$7, TYPE$7);
TYPE$7 V$47865360/*aspel.cml.video.gl_get_current_context*/();
TYPE$7 V$47865440/*aspel.cml.video.gl_get_current_window*/();
TYPE$6 V$47865520/*aspel.cml.video.gl_set_vsync_mode*/(TYPE$16);
TYPE$8 V$47865600/*aspel.cml.video.gl_swap_window*/(TYPE$7);
TYPE$8 V$47865680/*aspel.cml.video.gl_get_drawable_size*/(TYPE$7, TYPE$86, TYPE$86);
CORE$FOREIGN TYPE$19 SDL_GL_CreateContext(TYPE$19);
#define V$47865760/*aspel.cml.video.SDL_GL_CreateContext*/ SDL_GL_CreateContext
CORE$FOREIGN TYPE$8 SDL_GL_DeleteContext(TYPE$19);
#define V$47865840/*aspel.cml.video.SDL_GL_DeleteContext*/ SDL_GL_DeleteContext
CORE$FOREIGN TYPE$16 SDL_GL_MakeCurrent(TYPE$19, TYPE$19);
#define V$47865920/*aspel.cml.video.SDL_GL_MakeCurrent*/ SDL_GL_MakeCurrent
CORE$FOREIGN TYPE$19 SDL_GL_GetCurrentContext();
#define V$47866000/*aspel.cml.video.SDL_GL_GetCurrentContext*/ SDL_GL_GetCurrentContext
CORE$FOREIGN TYPE$19 SDL_GL_GetCurrentWindow();
#define V$47866080/*aspel.cml.video.SDL_GL_GetCurrentWindow*/ SDL_GL_GetCurrentWindow
CORE$FOREIGN TYPE$16 SDL_GL_SetSwapInterval(TYPE$16);
#define V$47866160/*aspel.cml.video.SDL_GL_SetSwapInterval*/ SDL_GL_SetSwapInterval
CORE$FOREIGN TYPE$8 SDL_GL_SwapWindow(TYPE$19);
#define V$47866240/*aspel.cml.video.SDL_GL_SwapWindow*/ SDL_GL_SwapWindow
CORE$FOREIGN TYPE$8 SDL_GL_GetDrawableSize(TYPE$19, TYPE$19, TYPE$19);
#define V$47866320/*aspel.cml.video.SDL_GL_GetDrawableSize*/ SDL_GL_GetDrawableSize
CORE$FOREIGN TYPE$16 SDL_GL_GetAttribute(TYPE$19, TYPE$19);
#define V$47866400/*aspel.cml.video.SDL_GL_GetAttribute*/ SDL_GL_GetAttribute
CORE$FOREIGN TYPE$16 SDL_GL_SetAttribute(TYPE$19, TYPE$16);
#define V$47866480/*aspel.cml.video.SDL_GL_SetAttribute*/ SDL_GL_SetAttribute
CORE$FOREIGN TYPE$8 SDL_GL_ResetAttributes();
#define V$47866560/*aspel.cml.video.SDL_GL_ResetAttributes*/ SDL_GL_ResetAttributes
TYPE$6 V$47866640/*aspel.cml.initialize_cml_subsystems*/(TYPE$19);
TYPE$8 V$47866720/*aspel.cml.uninitialize_cml_subsystems*/();
TYPE$19 V$47866800/*aspel.cml.get_initialized_cml_subsystems*/();
CORE$FOREIGN TYPE$16 SDL_Init(TYPE$19);
#define V$47866880/*aspel.cml.SDL_Init*/ SDL_Init
CORE$FOREIGN TYPE$8 SDL_Quit();
#define V$47866960/*aspel.cml.SDL_Quit*/ SDL_Quit
CORE$FOREIGN TYPE$19 SDL_WasInit(TYPE$19);
#define V$47867040/*aspel.cml.SDL_WasInit*/ SDL_WasInit
TYPE$6 V$47867120/*aspel.audio.directsound.directsound_backend_init*/(TYPE$272);
TYPE$8 V$47867200/*aspel.audio.directsound.directsound_backend_uninit*/(TYPE$272);
TYPE$16 V$47867280/*aspel.audio.directsound.IUnknown_QueryInterface*/(TYPE$19, TYPE$19, TYPE$566);
TYPE$19 V$47867360/*aspel.audio.directsound.IUnknown_AddRef*/(TYPE$19);
TYPE$19 V$47867440/*aspel.audio.directsound.IUnknown_Release*/(TYPE$19);
TYPE$16 V$47867520/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47867600/*aspel.audio.directsound.IDirectSound_GetCaps*/(TYPE$19, TYPE$19);
TYPE$16 V$47867680/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47867760/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47867840/*aspel.audio.directsound.IDirectSound_Compact*/(TYPE$19);
TYPE$16 V$47867920/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig*/(TYPE$19, TYPE$19);
TYPE$16 V$47868000/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig*/(TYPE$19, TYPE$19);
TYPE$16 V$47868080/*aspel.audio.directsound.IDirectSound_Initialize*/(TYPE$19, TYPE$19);
TYPE$16 V$47868160/*aspel.audio.directsound.IDirectSound8_VerifyCertification*/(TYPE$19, TYPE$19);
TYPE$16 V$47868240/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps*/(TYPE$19, TYPE$19);
TYPE$16 V$47868320/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47868400/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47868480/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume*/(TYPE$19, TYPE$19);
TYPE$16 V$47868560/*aspel.audio.directsound.IDirectSoundBuffer_GetPan*/(TYPE$19, TYPE$19);
TYPE$16 V$47868640/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency*/(TYPE$19, TYPE$19);
TYPE$16 V$47868720/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus*/(TYPE$19, TYPE$19);
TYPE$16 V$47868800/*aspel.audio.directsound.IDirectSoundBuffer_Initialize*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47868880/*aspel.audio.directsound.IDirectSoundBuffer_Lock*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47868960/*aspel.audio.directsound.IDirectSoundBuffer_Play*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47869040/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition*/(TYPE$19, TYPE$19);
TYPE$16 V$47869120/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat*/(TYPE$19, TYPE$19);
TYPE$16 V$47869200/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume*/(TYPE$19, TYPE$16);
TYPE$16 V$47869280/*aspel.audio.directsound.IDirectSoundBuffer_SetPan*/(TYPE$19, TYPE$16);
TYPE$16 V$47869360/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency*/(TYPE$19, TYPE$19);
TYPE$16 V$47869440/*aspel.audio.directsound.IDirectSoundBuffer_Stop*/(TYPE$19);
TYPE$16 V$47869520/*aspel.audio.directsound.IDirectSoundBuffer_Unlock*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47869600/*aspel.audio.directsound.IDirectSoundBuffer_Restore*/(TYPE$19);
TYPE$16 V$47869680/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47869760/*aspel.audio.directsound.IDirectSoundCapture_GetCaps*/(TYPE$19, TYPE$19);
TYPE$16 V$47869840/*aspel.audio.directsound.IDirectSoundCapture_Initialize*/(TYPE$19, TYPE$19);
TYPE$16 V$47869920/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps*/(TYPE$19, TYPE$19);
TYPE$16 V$47870000/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47870080/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47870160/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus*/(TYPE$19, TYPE$19);
TYPE$16 V$47870240/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize*/(TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47870320/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$16 V$47870400/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start*/(TYPE$19, TYPE$19);
TYPE$16 V$47870480/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop*/(TYPE$19);
TYPE$16 V$47870560/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$6 V$47870640/*aspel.audio.directsound.initialize_directsound*/();
TYPE$8 V$47870720/*aspel.audio.directsound.uninitialize_directsound*/();
TYPE$1 V$47870800/*aspel.audio.directsound.find_device_name*/(TYPE$671, TYPE$19);
TYPE$16 CORE$STDCALL V$47870880/*aspel.audio.directsound.device_callback*/(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
TYPE$8 V$47870960/*aspel.audio.directsound.directsound_detect_devices*/(TYPE$272);
TYPE$8 V$47871040/*aspel.audio.directsound.directsound_free_device_handle*/(TYPE$272, TYPE$7);
TYPE$6 V$47871120/*aspel.audio.directsound.directsound_open_device*/(TYPE$272, TYPE$270);
TYPE$8 V$47871200/*aspel.audio.directsound.directsound_close_device*/(TYPE$272, TYPE$270);
TYPE$1 V$47871280/*aspel.audio.directsound.directsound_get_buffer*/(TYPE$272, TYPE$270);
TYPE$8 V$47871360/*aspel.audio.directsound.directsound_play*/(TYPE$272, TYPE$270);
TYPE$8 V$47871440/*aspel.audio.directsound.directsound_wait*/(TYPE$272, TYPE$270);
TYPE$19 V$47871520/*aspel.audio.directsound.directsound_input*/(TYPE$272, TYPE$270, TYPE$10, TYPE$19);
TYPE$8 V$47871600/*aspel.audio.directsound.directsound_flush_input*/(TYPE$272, TYPE$270);
TYPE$6 V$47871680/*aspel.audio.io.seek_to_chunk*/(TYPE$153, TYPE$19, TYPE$103);
TYPE$153 V$47871760/*aspel.audio.io.open_wave_input_stream*/(TYPE$153, TYPE$267);
TYPE$153 V$47871840/*aspel.audio.io.open_wave_output_stream*/(TYPE$153, TYPE$267);
TYPE$4 V$47871920/*aspel.audio.io.forbid_available*/(TYPE$153);
TYPE$4 V$47872000/*aspel.audio.io.forbid_seek*/(TYPE$153, TYPE$4, TYPE$19);
TYPE$4 V$47872080/*aspel.audio.io.forbid_read*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$4 V$47872160/*aspel.audio.io.forbid_write*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$47872240/*aspel.audio.io.forbid_flush*/(TYPE$153);
TYPE$4 V$47872320/*aspel.audio.io.forward_write*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$47872400/*aspel.audio.io.forward_flush*/(TYPE$153);
TYPE$4 V$47872480/*aspel.audio.io.available_reader*/(TYPE$153);
TYPE$4 V$47872560/*aspel.audio.io.seek_reader*/(TYPE$153, TYPE$4, TYPE$19);
TYPE$4 V$47872640/*aspel.audio.io.read_reader*/(TYPE$153, TYPE$7, TYPE$4);
TYPE$6 V$47872720/*aspel.audio.io.close_reader*/(TYPE$153);
TYPE$6 V$47872800/*aspel.audio.io.close_writer*/(TYPE$153);
TYPE$8 V$47875920/*aspel.algorithm.sorting.insertion_sort*/(TYPE$7, TYPE$5, TYPE$5, TYPE$469);
TYPE$8 V$47876000/*aspel.algorithm.sorting.insertion_sort*/(TYPE$691, TYPE$5);
TYPE$8 V$47876080/*aspel.algorithm.sorting.insertion_sort*/(TYPE$693);
TYPE$8 V$47876160/*aspel.algorithm.sorting.insertion_sort*/(TYPE$695, TYPE$5);
TYPE$8 V$47876240/*aspel.algorithm.sorting.insertion_sort*/(TYPE$697);
TYPE$8 V$47876320/*aspel.algorithm.sorting.insertion_sort*/(TYPE$86, TYPE$5);
TYPE$8 V$47876400/*aspel.algorithm.sorting.insertion_sort*/(TYPE$700);
TYPE$8 V$47876480/*aspel.algorithm.sorting.insertion_sort*/(TYPE$139, TYPE$5);
TYPE$8 V$47876560/*aspel.algorithm.sorting.insertion_sort*/(TYPE$703);
TYPE$8 V$47876640/*aspel.algorithm.sorting.insertion_sort*/(TYPE$10, TYPE$5);
TYPE$8 V$47876720/*aspel.algorithm.sorting.insertion_sort*/(TYPE$1);
TYPE$8 V$47876800/*aspel.algorithm.sorting.insertion_sort*/(TYPE$31, TYPE$5);
TYPE$8 V$47876880/*aspel.algorithm.sorting.insertion_sort*/(TYPE$30);
TYPE$8 V$47876960/*aspel.algorithm.sorting.insertion_sort*/(TYPE$103, TYPE$5);
TYPE$8 V$47877040/*aspel.algorithm.sorting.insertion_sort*/(TYPE$184);
TYPE$8 V$47877120/*aspel.algorithm.sorting.insertion_sort*/(TYPE$54, TYPE$5);
TYPE$8 V$47877200/*aspel.algorithm.sorting.insertion_sort*/(TYPE$712);
TYPE$8 V$47877280/*aspel.algorithm.sorting.insertion_sort*/(TYPE$506, TYPE$5);
TYPE$8 V$47877360/*aspel.algorithm.sorting.insertion_sort*/(TYPE$715);
TYPE$8 V$47877440/*aspel.algorithm.sorting.insertion_sort*/(TYPE$143, TYPE$5);
TYPE$8 V$47877520/*aspel.algorithm.sorting.insertion_sort*/(TYPE$364);
TYPE$8 V$47877600/*aspel.algorithm.sorting.radix_sort*/(TYPE$7, TYPE$5, TYPE$5);
TYPE$8 V$47877920/*aspel.algorithm.sorting.radix_sort*/(TYPE$691, TYPE$5);
TYPE$8 V$47878000/*aspel.algorithm.sorting.radix_sort*/(TYPE$693);
TYPE$8 V$47878080/*aspel.algorithm.sorting.radix_sort*/(TYPE$695, TYPE$5);
TYPE$8 V$47878160/*aspel.algorithm.sorting.radix_sort*/(TYPE$697);
TYPE$8 V$47878240/*aspel.algorithm.sorting.radix_sort*/(TYPE$86, TYPE$5);
TYPE$8 V$47878320/*aspel.algorithm.sorting.radix_sort*/(TYPE$700);
TYPE$8 V$47878400/*aspel.algorithm.sorting.radix_sort*/(TYPE$139, TYPE$5);
TYPE$8 V$47878480/*aspel.algorithm.sorting.radix_sort*/(TYPE$703);
TYPE$8 V$47878560/*aspel.algorithm.sorting.radix_sort*/(TYPE$10, TYPE$5);
TYPE$8 V$47878640/*aspel.algorithm.sorting.radix_sort*/(TYPE$1);
TYPE$8 V$47878720/*aspel.algorithm.sorting.radix_sort*/(TYPE$31, TYPE$5);
TYPE$8 V$47878800/*aspel.algorithm.sorting.radix_sort*/(TYPE$30);
TYPE$8 V$47878880/*aspel.algorithm.sorting.radix_sort*/(TYPE$103, TYPE$5);
TYPE$8 V$47878960/*aspel.algorithm.sorting.radix_sort*/(TYPE$184);
TYPE$8 V$47879040/*aspel.algorithm.sorting.radix_sort*/(TYPE$54, TYPE$5);
TYPE$8 V$47879120/*aspel.algorithm.sorting.radix_sort*/(TYPE$712);
TYPE$8 V$47879200/*aspel.algorithm.sorting.radix_sort*/(TYPE$506, TYPE$5);
TYPE$8 V$47879280/*aspel.algorithm.sorting.radix_sort*/(TYPE$715);
TYPE$8 V$47879360/*aspel.algorithm.sorting.radix_sort*/(TYPE$143, TYPE$5);
TYPE$8 V$47879440/*aspel.algorithm.sorting.radix_sort*/(TYPE$364);
TYPE$8 V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/(TYPE$7, TYPE$5, TYPE$5, TYPE$6);
TYPE$8 V$47877760/*aspel.algorithm.sorting.radix_sort_recursion*/(TYPE$10, TYPE$5, TYPE$5, TYPE$5, TYPE$2);
TYPE$8 V$47877840/*aspel.algorithm.sorting.radix_sort_repair_sign*/(TYPE$10, TYPE$5, TYPE$5, TYPE$6);
TYPE$6 V$47879520/*aspel.algorithm.sorting.merge_sort*/(TYPE$7, TYPE$5, TYPE$5, TYPE$469);
TYPE$6 V$47879760/*aspel.algorithm.sorting.merge_sort*/(TYPE$691, TYPE$5);
TYPE$6 V$47880000/*aspel.algorithm.sorting.merge_sort*/(TYPE$695, TYPE$5);
TYPE$6 V$47880240/*aspel.algorithm.sorting.merge_sort*/(TYPE$86, TYPE$5);
TYPE$6 V$47880480/*aspel.algorithm.sorting.merge_sort*/(TYPE$139, TYPE$5);
TYPE$6 V$47880720/*aspel.algorithm.sorting.merge_sort*/(TYPE$10, TYPE$5);
TYPE$6 V$47880960/*aspel.algorithm.sorting.merge_sort*/(TYPE$31, TYPE$5);
TYPE$6 V$47881200/*aspel.algorithm.sorting.merge_sort*/(TYPE$103, TYPE$5);
TYPE$6 V$47881440/*aspel.algorithm.sorting.merge_sort*/(TYPE$54, TYPE$5);
TYPE$6 V$47881680/*aspel.algorithm.sorting.merge_sort*/(TYPE$506, TYPE$5);
TYPE$6 V$47881920/*aspel.algorithm.sorting.merge_sort*/(TYPE$143, TYPE$5);
TYPE$8 V$47879600/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$10, TYPE$5, TYPE$10, TYPE$5, TYPE$5, TYPE$469);
TYPE$8 V$47879840/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$691, TYPE$691, TYPE$5, TYPE$5);
TYPE$8 V$47880080/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$695, TYPE$695, TYPE$5, TYPE$5);
TYPE$8 V$47880320/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$86, TYPE$86, TYPE$5, TYPE$5);
TYPE$8 V$47880560/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$139, TYPE$139, TYPE$5, TYPE$5);
TYPE$8 V$47880800/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$10, TYPE$10, TYPE$5, TYPE$5);
TYPE$8 V$47881040/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$31, TYPE$31, TYPE$5, TYPE$5);
TYPE$8 V$47881280/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$103, TYPE$103, TYPE$5, TYPE$5);
TYPE$8 V$47881520/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$54, TYPE$54, TYPE$5, TYPE$5);
TYPE$8 V$47881760/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$506, TYPE$506, TYPE$5, TYPE$5);
TYPE$8 V$47882000/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$143, TYPE$143, TYPE$5, TYPE$5);
TYPE$8 V$47879680/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$10, TYPE$5, TYPE$10, TYPE$5, TYPE$5, TYPE$5, TYPE$5, TYPE$469);
TYPE$8 V$47879920/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$691, TYPE$691, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47880160/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$695, TYPE$695, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47880400/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$86, TYPE$86, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47880640/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$139, TYPE$139, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47880880/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$10, TYPE$10, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47881120/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$31, TYPE$31, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47881360/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$103, TYPE$103, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47881600/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$54, TYPE$54, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47881840/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$506, TYPE$506, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47882080/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$143, TYPE$143, TYPE$5, TYPE$5, TYPE$5, TYPE$5);
TYPE$8 V$47882160/*aspel.algorithm.sorting.quick_sort*/(TYPE$7, TYPE$5, TYPE$5, TYPE$469);
TYPE$8 V$47882240/*aspel.algorithm.sorting.quick_sort*/(TYPE$691, TYPE$5);
TYPE$8 V$47882320/*aspel.algorithm.sorting.quick_sort*/(TYPE$693);
TYPE$8 V$47882400/*aspel.algorithm.sorting.quick_sort*/(TYPE$695, TYPE$5);
TYPE$8 V$47882480/*aspel.algorithm.sorting.quick_sort*/(TYPE$697);
TYPE$8 V$47882560/*aspel.algorithm.sorting.quick_sort*/(TYPE$86, TYPE$5);
TYPE$8 V$47882640/*aspel.algorithm.sorting.quick_sort*/(TYPE$700);
TYPE$8 V$47882720/*aspel.algorithm.sorting.quick_sort*/(TYPE$139, TYPE$5);
TYPE$8 V$47882800/*aspel.algorithm.sorting.quick_sort*/(TYPE$703);
TYPE$8 V$47882880/*aspel.algorithm.sorting.quick_sort*/(TYPE$10, TYPE$5);
TYPE$8 V$47882960/*aspel.algorithm.sorting.quick_sort*/(TYPE$1);
TYPE$8 V$47883040/*aspel.algorithm.sorting.quick_sort*/(TYPE$31, TYPE$5);
TYPE$8 V$47883120/*aspel.algorithm.sorting.quick_sort*/(TYPE$30);
TYPE$8 V$47883200/*aspel.algorithm.sorting.quick_sort*/(TYPE$103, TYPE$5);
TYPE$8 V$47883280/*aspel.algorithm.sorting.quick_sort*/(TYPE$184);
TYPE$8 V$47883360/*aspel.algorithm.sorting.quick_sort*/(TYPE$54, TYPE$5);
TYPE$8 V$47883440/*aspel.algorithm.sorting.quick_sort*/(TYPE$712);
TYPE$8 V$47883520/*aspel.algorithm.sorting.quick_sort*/(TYPE$506, TYPE$5);
TYPE$8 V$47883600/*aspel.algorithm.sorting.quick_sort*/(TYPE$715);
TYPE$8 V$47883680/*aspel.algorithm.sorting.quick_sort*/(TYPE$143, TYPE$5);
TYPE$8 V$47883760/*aspel.algorithm.sorting.quick_sort*/(TYPE$364);
TYPE$5 V$47883840/*aspel.algorithm.order.find_lower_bound*/(TYPE$7, TYPE$5, TYPE$5, TYPE$7, TYPE$469);
TYPE$5 V$47883920/*aspel.algorithm.order.find_lower_bound*/(TYPE$691, TYPE$5, TYPE$170);
TYPE$5 V$47884000/*aspel.algorithm.order.find_lower_bound*/(TYPE$695, TYPE$5, TYPE$171);
TYPE$5 V$47884080/*aspel.algorithm.order.find_lower_bound*/(TYPE$86, TYPE$5, TYPE$16);
TYPE$5 V$47884160/*aspel.algorithm.order.find_lower_bound*/(TYPE$139, TYPE$5, TYPE$4);
TYPE$5 V$47884240/*aspel.algorithm.order.find_lower_bound*/(TYPE$10, TYPE$5, TYPE$2);
TYPE$5 V$47884320/*aspel.algorithm.order.find_lower_bound*/(TYPE$31, TYPE$5, TYPE$28);
TYPE$5 V$47884400/*aspel.algorithm.order.find_lower_bound*/(TYPE$103, TYPE$5, TYPE$19);
TYPE$5 V$47884480/*aspel.algorithm.order.find_lower_bound*/(TYPE$54, TYPE$5, TYPE$5);
TYPE$5 V$47884560/*aspel.algorithm.order.find_lower_bound*/(TYPE$506, TYPE$5, TYPE$172);
TYPE$5 V$47884640/*aspel.algorithm.order.find_lower_bound*/(TYPE$143, TYPE$5, TYPE$51);
TYPE$5 V$47884720/*aspel.algorithm.order.find_upper_bound*/(TYPE$7, TYPE$5, TYPE$5, TYPE$7, TYPE$469);
TYPE$5 V$47884800/*aspel.algorithm.order.find_upper_bound*/(TYPE$691, TYPE$5, TYPE$170);
TYPE$5 V$47884880/*aspel.algorithm.order.find_upper_bound*/(TYPE$695, TYPE$5, TYPE$171);
TYPE$5 V$51733976/*aspel.algorithm.order.find_upper_bound*/(TYPE$86, TYPE$5, TYPE$16);
TYPE$5 V$51734056/*aspel.algorithm.order.find_upper_bound*/(TYPE$139, TYPE$5, TYPE$4);
TYPE$5 V$51734136/*aspel.algorithm.order.find_upper_bound*/(TYPE$10, TYPE$5, TYPE$2);
TYPE$5 V$51734216/*aspel.algorithm.order.find_upper_bound*/(TYPE$31, TYPE$5, TYPE$28);
TYPE$5 V$51734296/*aspel.algorithm.order.find_upper_bound*/(TYPE$103, TYPE$5, TYPE$19);
TYPE$5 V$51734376/*aspel.algorithm.order.find_upper_bound*/(TYPE$54, TYPE$5, TYPE$5);
TYPE$5 V$51734456/*aspel.algorithm.order.find_upper_bound*/(TYPE$506, TYPE$5, TYPE$172);
TYPE$5 V$51734536/*aspel.algorithm.order.find_upper_bound*/(TYPE$143, TYPE$5, TYPE$51);
TYPE$8 V$51734616/*aspel.algorithm.copy*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$8 V$51734696/*aspel.algorithm.swap*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$8 V$51734776/*aspel.algorithm.reverse*/(TYPE$7, TYPE$7, TYPE$5);
TYPE$8 V$51734856/*aspel.algorithm.rotate*/(TYPE$7, TYPE$5, TYPE$5, TYPE$5);
TYPE$6 V$51735816/*aspel.internal.parse_argument_from_line*/(TYPE$768);
TYPE$3 V$51735896/*aspel.internal.parse_arguments*/(TYPE$1);
CORE$FOREIGN TYPE$8 __aspel_internal__aspel_entry(TYPE$3);
#define V$51735976/*aspel.internal.aspel_entry*/ __aspel_internal__aspel_entry
CORE$FOREIGN TYPE$8 __aspel_internal__initialize_thread();
#define V$51736056/*aspel.internal.initialize_thread*/ __aspel_internal__initialize_thread
CORE$FOREIGN TYPE$8 __aspel_internal__finalize_thread();
#define V$51736136/*aspel.internal.finalize_thread*/ __aspel_internal__finalize_thread
CORE$FOREIGN TYPE$8 __aspel_internal__executable_entry();
#define V$51736216/*aspel.internal.executable_entry*/ __aspel_internal__executable_entry
TYPE$8 V$51736296/*aspel.internal.fatal_internal_error*/(TYPE$1);
CORE$FOREIGN TYPE$16 CORE$STDCALL WSAStartup(TYPE$28, TYPE$19);
#define V$51736376/*aspel.internal.win32.WSAStartup*/ WSAStartup
CORE$FOREIGN TYPE$16 CORE$STDCALL WSACleanup();
#define V$51736456/*aspel.internal.win32.WSACleanup*/ WSACleanup
CORE$FOREIGN TYPE$16 CORE$STDCALL WSAGetLastError();
#define V$51736536/*aspel.internal.win32.WSAGetLastError*/ WSAGetLastError
CORE$FOREIGN TYPE$8 CORE$STDCALL WSASetLastError(TYPE$16);
#define V$51736616/*aspel.internal.win32.WSASetLastError*/ WSASetLastError
CORE$FOREIGN TYPE$16 CORE$STDCALL getaddrinfo(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51736696/*aspel.internal.win32.getaddrinfo*/ getaddrinfo
CORE$FOREIGN TYPE$19 CORE$STDCALL socket(TYPE$16, TYPE$16, TYPE$16);
#define V$51736776/*aspel.internal.win32.socket*/ socket
CORE$FOREIGN TYPE$16 CORE$STDCALL connect(TYPE$19, TYPE$19, TYPE$16);
#define V$51736856/*aspel.internal.win32.connect*/ connect
CORE$FOREIGN TYPE$16 CORE$STDCALL closesocket(TYPE$19);
#define V$51736936/*aspel.internal.win32.closesocket*/ closesocket
CORE$FOREIGN TYPE$8 CORE$STDCALL freeaddrinfo(TYPE$19);
#define V$51737016/*aspel.internal.win32.freeaddrinfo*/ freeaddrinfo
CORE$FOREIGN TYPE$16 CORE$STDCALL bind(TYPE$19, TYPE$19, TYPE$16);
#define V$51737096/*aspel.internal.win32.bind*/ bind
CORE$FOREIGN TYPE$16 CORE$STDCALL listen(TYPE$19, TYPE$16);
#define V$51737176/*aspel.internal.win32.listen*/ listen
CORE$FOREIGN TYPE$19 CORE$STDCALL accept(TYPE$19, TYPE$19, TYPE$19);
#define V$51737256/*aspel.internal.win32.accept*/ accept
CORE$FOREIGN TYPE$16 CORE$STDCALL recv(TYPE$19, TYPE$19, TYPE$16, TYPE$16);
#define V$51737336/*aspel.internal.win32.recv*/ recv
CORE$FOREIGN TYPE$16 CORE$STDCALL send(TYPE$19, TYPE$19, TYPE$16, TYPE$16);
#define V$51737416/*aspel.internal.win32.send*/ send
CORE$FOREIGN TYPE$16 CORE$STDCALL select(TYPE$16, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51737496/*aspel.internal.win32.select*/ select
CORE$FOREIGN TYPE$16 CORE$STDCALL __WSAFDIsSet(TYPE$19, TYPE$19);
#define V$51737576/*aspel.internal.win32.__WSAFDIsSet*/ __WSAFDIsSet
TYPE$8 V$51737656/*aspel.internal.win32.FD_CLR*/(TYPE$19, TYPE$333);
TYPE$8 V$51737736/*aspel.internal.win32.FD_SET*/(TYPE$19, TYPE$333);
TYPE$8 V$51737816/*aspel.internal.win32.FD_ZERO*/(TYPE$333);
TYPE$16 V$51737896/*aspel.internal.win32.FD_ISSET*/(TYPE$19, TYPE$333);
CORE$FOREIGN TYPE$16 CORE$STDCALL CopyRect(TYPE$19, TYPE$19);
#define V$51737976/*aspel.internal.win32.CopyRect*/ CopyRect
CORE$FOREIGN TYPE$16 CORE$STDCALL EqualRect(TYPE$19, TYPE$19);
#define V$51738056/*aspel.internal.win32.EqualRect*/ EqualRect
CORE$FOREIGN TYPE$16 CORE$STDCALL InflateRect(TYPE$19, TYPE$16, TYPE$16);
#define V$51738136/*aspel.internal.win32.InflateRect*/ InflateRect
CORE$FOREIGN TYPE$16 CORE$STDCALL IntersectRect(TYPE$19, TYPE$19, TYPE$19);
#define V$51738216/*aspel.internal.win32.IntersectRect*/ IntersectRect
CORE$FOREIGN TYPE$16 CORE$STDCALL IsRectEmpty(TYPE$19);
#define V$51738296/*aspel.internal.win32.IsRectEmpty*/ IsRectEmpty
CORE$FOREIGN TYPE$16 CORE$STDCALL OffsetRect(TYPE$19, TYPE$4, TYPE$4);
#define V$51738376/*aspel.internal.win32.OffsetRect*/ OffsetRect
CORE$FOREIGN TYPE$16 CORE$STDCALL PtInRect(TYPE$19, TYPE$331);
#define V$51738456/*aspel.internal.win32.PtInRect*/ PtInRect
CORE$FOREIGN TYPE$16 CORE$STDCALL SetRect(TYPE$19, TYPE$16, TYPE$16, TYPE$16, TYPE$16);
#define V$51738536/*aspel.internal.win32.SetRect*/ SetRect
CORE$FOREIGN TYPE$16 CORE$STDCALL SetRectEmpty(TYPE$19);
#define V$51738616/*aspel.internal.win32.SetRectEmpty*/ SetRectEmpty
CORE$FOREIGN TYPE$16 CORE$STDCALL SubtractRect(TYPE$19, TYPE$19, TYPE$19);
#define V$51738696/*aspel.internal.win32.SubtractRect*/ SubtractRect
CORE$FOREIGN TYPE$16 CORE$STDCALL UnionRect(TYPE$19, TYPE$19, TYPE$19);
#define V$51738776/*aspel.internal.win32.UnionRect*/ UnionRect
CORE$FOREIGN TYPE$19 CORE$STDCALL CommandLineToArgvW(TYPE$19, TYPE$19);
#define V$51738856/*aspel.internal.win32.CommandLineToArgvW*/ CommandLineToArgvW
CORE$FOREIGN TYPE$16 CORE$STDCALL AddConsoleAliasW(TYPE$19, TYPE$19, TYPE$19);
#define V$51738936/*aspel.internal.win32.AddConsoleAlias*/ AddConsoleAliasW
CORE$FOREIGN TYPE$16 CORE$STDCALL AllocConsole();
#define V$51739016/*aspel.internal.win32.AllocConsole*/ AllocConsole
CORE$FOREIGN TYPE$16 CORE$STDCALL AttachConsole(TYPE$19);
#define V$51739096/*aspel.internal.win32.AttachConsole*/ AttachConsole
CORE$FOREIGN TYPE$19 CORE$STDCALL CreateConsoleScreenBuffer(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51739176/*aspel.internal.win32.CreateConsoleScreenBuffer*/ CreateConsoleScreenBuffer
CORE$FOREIGN TYPE$16 CORE$STDCALL FillConsoleOutputAttribute(TYPE$19, TYPE$28, TYPE$19, TYPE$777, TYPE$19);
#define V$51739256/*aspel.internal.win32.FillConsoleOutputAttribute*/ FillConsoleOutputAttribute
CORE$FOREIGN TYPE$16 CORE$STDCALL FillConsoleOutputCharacterW(TYPE$19, TYPE$171, TYPE$19, TYPE$777, TYPE$19);
#define V$51739336/*aspel.internal.win32.FillConsoleOutputCharacter*/ FillConsoleOutputCharacterW
CORE$FOREIGN TYPE$16 CORE$STDCALL FlushConsoleInputBuffer(TYPE$19);
#define V$51739416/*aspel.internal.win32.FlushConsoleInputBuffer*/ FlushConsoleInputBuffer
CORE$FOREIGN TYPE$16 CORE$STDCALL FreeConsole();
#define V$51739496/*aspel.internal.win32.FreeConsole*/ FreeConsole
CORE$FOREIGN TYPE$16 CORE$STDCALL GenerateConsoleCtrlEvent(TYPE$19, TYPE$19);
#define V$51739576/*aspel.internal.win32.GenerateConsoleCtrlEvent*/ GenerateConsoleCtrlEvent
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleAliasW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51739656/*aspel.internal.win32.GetConsoleAlias*/ GetConsoleAliasW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleAliasesW(TYPE$19, TYPE$19, TYPE$19);
#define V$51739736/*aspel.internal.win32.GetConsoleAliases*/ GetConsoleAliasesW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleAliasesLengthW(TYPE$19);
#define V$51739816/*aspel.internal.win32.GetConsoleAliasesLength*/ GetConsoleAliasesLengthW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleAliasExesW(TYPE$19, TYPE$19);
#define V$51739896/*aspel.internal.win32.GetConsoleAliasExes*/ GetConsoleAliasExesW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleAliasExesLengthW();
#define V$51739976/*aspel.internal.win32.GetConsoleAliasExesLength*/ GetConsoleAliasExesLengthW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleCP();
#define V$51740056/*aspel.internal.win32.GetConsoleCP*/ GetConsoleCP
CORE$FOREIGN TYPE$16 CORE$STDCALL GetConsoleCursorInfo(TYPE$19, TYPE$19);
#define V$51740136/*aspel.internal.win32.GetConsoleCursorInfo*/ GetConsoleCursorInfo
CORE$FOREIGN TYPE$16 CORE$STDCALL GetConsoleDisplayMode(TYPE$19);
#define V$51740216/*aspel.internal.win32.GetConsoleDisplayMode*/ GetConsoleDisplayMode
CORE$FOREIGN TYPE$777 CORE$STDCALL GetConsoleFontSize(TYPE$19, TYPE$19);
#define V$51740296/*aspel.internal.win32.GetConsoleFontSize*/ GetConsoleFontSize
CORE$FOREIGN TYPE$16 CORE$STDCALL GetConsoleMode(TYPE$19, TYPE$19);
#define V$51740376/*aspel.internal.win32.GetConsoleMode*/ GetConsoleMode
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleOutputCP();
#define V$51740456/*aspel.internal.win32.GetConsoleOutputCP*/ GetConsoleOutputCP
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleProcessList(TYPE$19, TYPE$19);
#define V$51740536/*aspel.internal.win32.GetConsoleProcessList*/ GetConsoleProcessList
CORE$FOREIGN TYPE$16 CORE$STDCALL GetConsoleScreenBufferInfo(TYPE$19, TYPE$19);
#define V$51740616/*aspel.internal.win32.GetConsoleScreenBufferInfo*/ GetConsoleScreenBufferInfo
CORE$FOREIGN TYPE$16 CORE$STDCALL GetConsoleSelectionInfo(TYPE$19);
#define V$51740696/*aspel.internal.win32.GetConsoleSelectionInfo*/ GetConsoleSelectionInfo
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleTitleW(TYPE$19, TYPE$19);
#define V$51740776/*aspel.internal.win32.GetConsoleTitle*/ GetConsoleTitleW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetConsoleWindow();
#define V$51740856/*aspel.internal.win32.GetConsoleWindow*/ GetConsoleWindow
CORE$FOREIGN TYPE$16 CORE$STDCALL GetCurrentConsoleFont(TYPE$19, TYPE$16, TYPE$19);
#define V$51740936/*aspel.internal.win32.GetCurrentConsoleFont*/ GetCurrentConsoleFont
CORE$FOREIGN TYPE$777 CORE$STDCALL GetLargestConsoleWindowSize(TYPE$19);
#define V$51741016/*aspel.internal.win32.GetLargestConsoleWindowSize*/ GetLargestConsoleWindowSize
CORE$FOREIGN TYPE$16 CORE$STDCALL GetNumberOfConsoleInputEvents(TYPE$19, TYPE$19);
#define V$51741096/*aspel.internal.win32.GetNumberOfConsoleInputEvents*/ GetNumberOfConsoleInputEvents
CORE$FOREIGN TYPE$16 CORE$STDCALL GetNumberOfConsoleMouseButtons(TYPE$19);
#define V$51741176/*aspel.internal.win32.GetNumberOfConsoleMouseButtons*/ GetNumberOfConsoleMouseButtons
CORE$FOREIGN TYPE$19 CORE$STDCALL GetStdHandle(TYPE$19);
#define V$51741256/*aspel.internal.win32.GetStdHandle*/ GetStdHandle
CORE$FOREIGN TYPE$16 CORE$STDCALL HandlerRoutine(TYPE$19);
#define V$51741336/*aspel.internal.win32.HandlerRoutine*/ HandlerRoutine
CORE$FOREIGN TYPE$16 CORE$STDCALL PeekConsoleInputW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51741416/*aspel.internal.win32.PeekConsoleInput*/ PeekConsoleInputW
CORE$FOREIGN TYPE$16 CORE$STDCALL ReadConsoleW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51741496/*aspel.internal.win32.ReadConsole*/ ReadConsoleW
CORE$FOREIGN TYPE$16 CORE$STDCALL ReadConsoleInputW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51741576/*aspel.internal.win32.ReadConsoleInput*/ ReadConsoleInputW
CORE$FOREIGN TYPE$16 CORE$STDCALL ReadConsoleOutputW(TYPE$19, TYPE$19, TYPE$777, TYPE$777, TYPE$791);
#define V$51741656/*aspel.internal.win32.ReadConsoleOutput*/ ReadConsoleOutputW
CORE$FOREIGN TYPE$16 CORE$STDCALL ReadConsoleOutputAttribute(TYPE$19, TYPE$19, TYPE$19, TYPE$777, TYPE$19);
#define V$51741736/*aspel.internal.win32.ReadConsoleOutputAttribute*/ ReadConsoleOutputAttribute
CORE$FOREIGN TYPE$16 CORE$STDCALL ReadConsoleOutputCharacterW(TYPE$19, TYPE$19, TYPE$19, TYPE$777, TYPE$19);
#define V$51741816/*aspel.internal.win32.ReadConsoleOutputCharacter*/ ReadConsoleOutputCharacterW
CORE$FOREIGN TYPE$16 CORE$STDCALL ScrollConsoleScreenBuffer(TYPE$19, TYPE$791, TYPE$791, TYPE$777, TYPE$19);
#define V$51741896/*aspel.internal.win32.ScrollConsoleScreenBuffer*/ ScrollConsoleScreenBuffer
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleActiveScreenBuffer(TYPE$19);
#define V$51741976/*aspel.internal.win32.SetConsoleActiveScreenBuffer*/ SetConsoleActiveScreenBuffer
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleCP(TYPE$19);
#define V$51742056/*aspel.internal.win32.SetConsoleCP*/ SetConsoleCP
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleCtrlHandler(TYPE$19, TYPE$16);
#define V$51742136/*aspel.internal.win32.SetConsoleCtrlHandler*/ SetConsoleCtrlHandler
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleCursorInfo(TYPE$19, TYPE$19);
#define V$51742216/*aspel.internal.win32.SetConsoleCursorInfo*/ SetConsoleCursorInfo
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleCursorPosition(TYPE$19, TYPE$777);
#define V$51742296/*aspel.internal.win32.SetConsoleCursorPosition*/ SetConsoleCursorPosition
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleDisplayMode(TYPE$19, TYPE$19, TYPE$19);
#define V$51742376/*aspel.internal.win32.SetConsoleDisplayMode*/ SetConsoleDisplayMode
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleMode(TYPE$19, TYPE$19);
#define V$51742456/*aspel.internal.win32.SetConsoleMode*/ SetConsoleMode
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleOutputCP(TYPE$19);
#define V$51742536/*aspel.internal.win32.SetConsoleOutputCP*/ SetConsoleOutputCP
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleScreenBufferSize(TYPE$19, TYPE$777);
#define V$51742616/*aspel.internal.win32.SetConsoleScreenBufferSize*/ SetConsoleScreenBufferSize
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleTextAttribute(TYPE$19, TYPE$28);
#define V$51742696/*aspel.internal.win32.SetConsoleTextAttribute*/ SetConsoleTextAttribute
CORE$FOREIGN TYPE$16 CORE$STDCALL SetConsoleTitleW(TYPE$19);
#define V$51742776/*aspel.internal.win32.SetConsoleTitle*/ SetConsoleTitleW
CORE$FOREIGN TYPE$16 SetConsoleWindowInfo(TYPE$19, TYPE$16, TYPE$791);
#define V$51742856/*aspel.internal.win32.SetConsoleWindowInfo*/ SetConsoleWindowInfo
CORE$FOREIGN TYPE$16 CORE$STDCALL SetStdHandle(TYPE$19, TYPE$19);
#define V$51742936/*aspel.internal.win32.SetStdHandle*/ SetStdHandle
CORE$FOREIGN TYPE$16 CORE$STDCALL WriteConsoleW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51743016/*aspel.internal.win32.WriteConsole*/ WriteConsoleW
CORE$FOREIGN TYPE$16 CORE$STDCALL WriteConsoleInputW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51743096/*aspel.internal.win32.WriteConsoleInput*/ WriteConsoleInputW
CORE$FOREIGN TYPE$16 CORE$STDCALL WriteConsoleOutputW(TYPE$19, TYPE$19, TYPE$777, TYPE$777, TYPE$791);
#define V$51743176/*aspel.internal.win32.WriteConsoleOutput*/ WriteConsoleOutputW
CORE$FOREIGN TYPE$16 CORE$STDCALL WriteConsoleOutputAttribute(TYPE$19, TYPE$19, TYPE$19, TYPE$777, TYPE$19);
#define V$51743256/*aspel.internal.win32.WriteConsoleOutputAttribute*/ WriteConsoleOutputAttribute
CORE$FOREIGN TYPE$16 CORE$STDCALL WriteConsoleOutputCharacterW(TYPE$19, TYPE$19, TYPE$19, TYPE$777, TYPE$19);
#define V$51743336/*aspel.internal.win32.WriteConsoleOutputCharacter*/ WriteConsoleOutputCharacterW
CORE$FOREIGN TYPE$16 CORE$STDCALL ClipCursor(TYPE$19);
#define V$51743416/*aspel.internal.win32.ClipCursor*/ ClipCursor
CORE$FOREIGN TYPE$16 CORE$STDCALL GetClipCursor(TYPE$19);
#define V$51743496/*aspel.internal.win32.GetClipCursor*/ GetClipCursor
CORE$FOREIGN TYPE$16 CORE$STDCALL GetCursorPos(TYPE$19);
#define V$51743576/*aspel.internal.win32.GetCursorPos*/ GetCursorPos
CORE$FOREIGN TYPE$16 CORE$STDCALL SetCursorPos(TYPE$16, TYPE$16);
#define V$51743656/*aspel.internal.win32.SetCursorPos*/ SetCursorPos
CORE$FOREIGN TYPE$16 CORE$STDCALL ShowCursor(TYPE$16);
#define V$51743736/*aspel.internal.win32.ShowCursor*/ ShowCursor
CORE$FOREIGN TYPE$16 CORE$STDCALL DragDetect(TYPE$19, TYPE$331);
#define V$51743816/*aspel.internal.win32.DragDetect*/ DragDetect
CORE$FOREIGN TYPE$19 CORE$STDCALL GetCapture();
#define V$51743896/*aspel.internal.win32.GetCapture*/ GetCapture
CORE$FOREIGN TYPE$19 CORE$STDCALL GetDoubleClickTime();
#define V$51743976/*aspel.internal.win32.GetDoubleClickTime*/ GetDoubleClickTime
CORE$FOREIGN TYPE$16 CORE$STDCALL GetMouseMovePointsEx(TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19);
#define V$51744056/*aspel.internal.win32.GetMouseMovePointsEx*/ GetMouseMovePointsEx
CORE$FOREIGN TYPE$16 CORE$STDCALL ReleaseCapture();
#define V$51744136/*aspel.internal.win32.ReleaseCapture*/ ReleaseCapture
CORE$FOREIGN TYPE$19 CORE$STDCALL SetCapture(TYPE$19);
#define V$51744216/*aspel.internal.win32.SetCapture*/ SetCapture
CORE$FOREIGN TYPE$16 CORE$STDCALL SetDoubleClickTime(TYPE$19);
#define V$51744296/*aspel.internal.win32.SetDoubleClickTime*/ SetDoubleClickTime
CORE$FOREIGN TYPE$16 CORE$STDCALL SwapMouseButton(TYPE$16);
#define V$51744376/*aspel.internal.win32.SwapMouseButton*/ SwapMouseButton
CORE$FOREIGN TYPE$16 CORE$STDCALL TrackMouseEvent(TYPE$19);
#define V$51744456/*aspel.internal.win32.TrackMouseEvent*/ TrackMouseEvent
CORE$FOREIGN TYPE$171 CORE$STDCALL GetKeyState(TYPE$16);
#define V$51744536/*aspel.internal.win32.GetKeyState*/ GetKeyState
CORE$FOREIGN TYPE$19 CORE$STDCALL SetFocus(TYPE$19);
#define V$51744616/*aspel.internal.win32.SetFocus*/ SetFocus
CORE$FOREIGN TYPE$16 CORE$STDCALL DefRawInputProc(TYPE$19, TYPE$16, TYPE$19);
#define V$51744696/*aspel.internal.win32.DefRawInputProc*/ DefRawInputProc
CORE$FOREIGN TYPE$19 CORE$STDCALL GetRawInputBuffer(TYPE$19, TYPE$19, TYPE$19);
#define V$51744776/*aspel.internal.win32.GetRawInputBuffer*/ GetRawInputBuffer
CORE$FOREIGN TYPE$19 CORE$STDCALL GetRawInputData(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51744856/*aspel.internal.win32.GetRawInputData*/ GetRawInputData
CORE$FOREIGN TYPE$19 CORE$STDCALL GetRawInputDeviceInfoW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51744936/*aspel.internal.win32.GetRawInputDeviceInfo*/ GetRawInputDeviceInfoW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetRawInputDeviceList(TYPE$19, TYPE$19, TYPE$19);
#define V$51745016/*aspel.internal.win32.GetRawInputDeviceList*/ GetRawInputDeviceList
CORE$FOREIGN TYPE$19 CORE$STDCALL GetRegisteredRawInputDevices(TYPE$19, TYPE$19, TYPE$19);
#define V$51745096/*aspel.internal.win32.GetRegisteredRawInputDevices*/ GetRegisteredRawInputDevices
CORE$FOREIGN TYPE$16 CORE$STDCALL RegisterRawInputDevices(TYPE$19, TYPE$19, TYPE$19);
#define V$51745176/*aspel.internal.win32.RegisterRawInputDevices*/ RegisterRawInputDevices
CORE$FOREIGN TYPE$16 CORE$STDCALL DisableThreadLibraryCalls(TYPE$19);
#define V$51745256/*aspel.internal.win32.DisableThreadLibraryCalls*/ DisableThreadLibraryCalls
CORE$FOREIGN TYPE$16 CORE$STDCALL FreeLibrary(TYPE$19);
#define V$51745336/*aspel.internal.win32.FreeLibrary*/ FreeLibrary
CORE$FOREIGN TYPE$8 CORE$STDCALL FreeLibraryAndExitThread(TYPE$19, TYPE$19);
#define V$51745416/*aspel.internal.win32.FreeLibraryAndExitThread*/ FreeLibraryAndExitThread
CORE$FOREIGN TYPE$19 CORE$STDCALL GetModuleFileNameW(TYPE$19, TYPE$19, TYPE$19);
#define V$51745496/*aspel.internal.win32.GetModuleFileName*/ GetModuleFileNameW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetModuleFileNameExW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51745576/*aspel.internal.win32.GetModuleFileNameEx*/ GetModuleFileNameExW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetModuleHandleW(TYPE$19);
#define V$51745656/*aspel.internal.win32.GetModuleHandle*/ GetModuleHandleW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetModuleHandleExW(TYPE$19, TYPE$19, TYPE$19);
#define V$51745736/*aspel.internal.win32.GetModuleHandleEx*/ GetModuleHandleExW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetProcAddress(TYPE$19, TYPE$19);
#define V$51745816/*aspel.internal.win32.GetProcAddress*/ GetProcAddress
CORE$FOREIGN TYPE$19 CORE$STDCALL LoadLibraryW(TYPE$19);
#define V$51745896/*aspel.internal.win32.LoadLibrary*/ LoadLibraryW
CORE$FOREIGN TYPE$19 CORE$STDCALL LoadLibraryExW(TYPE$19, TYPE$19, TYPE$19);
#define V$51745976/*aspel.internal.win32.LoadLibraryEx*/ LoadLibraryExW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetDC(TYPE$19);
#define V$51746056/*aspel.internal.win32.GetDC*/ GetDC
CORE$FOREIGN TYPE$16 CORE$STDCALL ReleaseDC(TYPE$19, TYPE$19);
#define V$51746136/*aspel.internal.win32.ReleaseDC*/ ReleaseDC
CORE$FOREIGN TYPE$16 CORE$STDCALL ChoosePixelFormat(TYPE$19, TYPE$19);
#define V$51746216/*aspel.internal.win32.ChoosePixelFormat*/ ChoosePixelFormat
CORE$FOREIGN TYPE$16 CORE$STDCALL GetPixelFormat(TYPE$19);
#define V$51746296/*aspel.internal.win32.GetPixelFormat*/ GetPixelFormat
CORE$FOREIGN TYPE$16 CORE$STDCALL SetPixelFormat(TYPE$19, TYPE$16, TYPE$19);
#define V$51746376/*aspel.internal.win32.SetPixelFormat*/ SetPixelFormat
CORE$FOREIGN TYPE$16 CORE$STDCALL SwapBuffers(TYPE$19);
#define V$51746456/*aspel.internal.win32.SwapBuffers*/ SwapBuffers
CORE$FOREIGN TYPE$19 CORE$STDCALL wglCreateContext(TYPE$19);
#define V$51746536/*aspel.internal.win32.wglCreateContext*/ wglCreateContext
CORE$FOREIGN TYPE$16 CORE$STDCALL wglCopyContext(TYPE$19, TYPE$19, TYPE$19);
#define V$51746616/*aspel.internal.win32.wglCopyContext*/ wglCopyContext
CORE$FOREIGN TYPE$16 CORE$STDCALL wglDeleteContext(TYPE$19);
#define V$51746696/*aspel.internal.win32.wglDeleteContext*/ wglDeleteContext
CORE$FOREIGN TYPE$19 CORE$STDCALL wglGetCurrentContext();
#define V$51746776/*aspel.internal.win32.wglGetCurrentContext*/ wglGetCurrentContext
CORE$FOREIGN TYPE$19 CORE$STDCALL wglGetCurrentDC();
#define V$51746856/*aspel.internal.win32.wglGetCurrentDC*/ wglGetCurrentDC
CORE$FOREIGN TYPE$19 CORE$STDCALL wglGetProcAddress(TYPE$19);
#define V$51746936/*aspel.internal.win32.wglGetProcAddress*/ wglGetProcAddress
CORE$FOREIGN TYPE$16 CORE$STDCALL wglMakeCurrent(TYPE$19, TYPE$19);
#define V$51747016/*aspel.internal.win32.wglMakeCurrent*/ wglMakeCurrent
CORE$FOREIGN TYPE$16 CORE$STDCALL BroadcastSystemMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51747096/*aspel.internal.win32.BroadcastSystemMessage*/ BroadcastSystemMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL BroadcastSystemMessageExW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19);
#define V$51747176/*aspel.internal.win32.BroadcastSystemMessageEx*/ BroadcastSystemMessageExW
CORE$FOREIGN TYPE$16 CORE$STDCALL DispatchMessageW(TYPE$19);
#define V$51747256/*aspel.internal.win32.DispatchMessage*/ DispatchMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetInputState();
#define V$51747336/*aspel.internal.win32.GetInputState*/ GetInputState
CORE$FOREIGN TYPE$16 CORE$STDCALL GetMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51747416/*aspel.internal.win32.GetMessage*/ GetMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetMessageExtraInfo();
#define V$51747496/*aspel.internal.win32.GetMessageExtraInfo*/ GetMessageExtraInfo
CORE$FOREIGN TYPE$19 CORE$STDCALL GetMessagePos();
#define V$51747576/*aspel.internal.win32.GetMessagePos*/ GetMessagePos
CORE$FOREIGN TYPE$16 CORE$STDCALL GetMessageTime();
#define V$51747656/*aspel.internal.win32.GetMessageTime*/ GetMessageTime
CORE$FOREIGN TYPE$19 CORE$STDCALL GetQueueStatus(TYPE$19);
#define V$51747736/*aspel.internal.win32.GetQueueStatus*/ GetQueueStatus
CORE$FOREIGN TYPE$16 CORE$STDCALL InSendMessage();
#define V$51747816/*aspel.internal.win32.InSendMessage*/ InSendMessage
CORE$FOREIGN TYPE$19 CORE$STDCALL InSendMessageEx(TYPE$19);
#define V$51747896/*aspel.internal.win32.InSendMessageEx*/ InSendMessageEx
CORE$FOREIGN TYPE$16 CORE$STDCALL PeekMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51747976/*aspel.internal.win32.PeekMessage*/ PeekMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL PostMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51748056/*aspel.internal.win32.PostMessage*/ PostMessageW
CORE$FOREIGN TYPE$8 CORE$STDCALL PostQuitMessage(TYPE$16);
#define V$51748136/*aspel.internal.win32.PostQuitMessage*/ PostQuitMessage
CORE$FOREIGN TYPE$16 CORE$STDCALL PostThreadMessage(TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51748216/*aspel.internal.win32.PostThreadMessage*/ PostThreadMessage
CORE$FOREIGN TYPE$19 CORE$STDCALL RegisterWindowMessageW(TYPE$19);
#define V$51748296/*aspel.internal.win32.RegisterWindowMessage*/ RegisterWindowMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL ReplyMessage(TYPE$16);
#define V$51748376/*aspel.internal.win32.ReplyMessage*/ ReplyMessage
CORE$FOREIGN TYPE$16 CORE$STDCALL SendMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51748456/*aspel.internal.win32.SendMessage*/ SendMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL SendMessageCallback(TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19, TYPE$19);
#define V$51748536/*aspel.internal.win32.SendMessageCallback*/ SendMessageCallback
CORE$FOREIGN TYPE$16 CORE$STDCALL SendMessageTimeoutW(TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19, TYPE$19, TYPE$19);
#define V$51748616/*aspel.internal.win32.SendMessageTimeout*/ SendMessageTimeoutW
CORE$FOREIGN TYPE$16 CORE$STDCALL SendNotifyMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51748696/*aspel.internal.win32.SendNotifyMessage*/ SendNotifyMessageW
CORE$FOREIGN TYPE$16 CORE$STDCALL SetMessageExtraInfo(TYPE$16);
#define V$51748776/*aspel.internal.win32.SetMessageExtraInfo*/ SetMessageExtraInfo
CORE$FOREIGN TYPE$16 CORE$STDCALL TranslateMessage(TYPE$19);
#define V$51748856/*aspel.internal.win32.TranslateMessage*/ TranslateMessage
CORE$FOREIGN TYPE$16 CORE$STDCALL WaitMessage();
#define V$51748936/*aspel.internal.win32.WaitMessage*/ WaitMessage
CORE$FOREIGN TYPE$16 CORE$STDCALL CallWindowProcW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51749016/*aspel.internal.win32.CallWindowProc*/ CallWindowProcW
CORE$FOREIGN TYPE$16 CORE$STDCALL DefWindowProcW(TYPE$19, TYPE$19, TYPE$19, TYPE$16);
#define V$51749096/*aspel.internal.win32.DefWindowProc*/ DefWindowProcW
CORE$FOREIGN TYPE$16 CORE$STDCALL AdjustWindowRect(TYPE$19, TYPE$19, TYPE$16);
#define V$51749176/*aspel.internal.win32.AdjustWindowRect*/ AdjustWindowRect
CORE$FOREIGN TYPE$16 CORE$STDCALL AdjustWindowRectEx(TYPE$19, TYPE$19, TYPE$16, TYPE$19);
#define V$51749256/*aspel.internal.win32.AdjustWindowRectEx*/ AdjustWindowRectEx
CORE$FOREIGN TYPE$16 CORE$STDCALL CloseWindow(TYPE$19);
#define V$51749336/*aspel.internal.win32.CloseWindow*/ CloseWindow
CORE$FOREIGN TYPE$19 CORE$STDCALL CreateWindowW(TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$16, TYPE$16, TYPE$16, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51749416/*aspel.internal.win32.CreateWindow*/ CreateWindowW
CORE$FOREIGN TYPE$19 CORE$STDCALL CreateWindowExW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$16, TYPE$16, TYPE$16, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51749496/*aspel.internal.win32.CreateWindowEx*/ CreateWindowExW
CORE$FOREIGN TYPE$16 CORE$STDCALL DestroyWindow(TYPE$19);
#define V$51749576/*aspel.internal.win32.DestroyWindow*/ DestroyWindow
CORE$FOREIGN TYPE$16 CORE$STDCALL GetClientRect(TYPE$19, TYPE$19);
#define V$51749656/*aspel.internal.win32.GetClientRect*/ GetClientRect
CORE$FOREIGN TYPE$19 CORE$STDCALL GetDesktopWindow();
#define V$51749736/*aspel.internal.win32.GetDesktopWindow*/ GetDesktopWindow
CORE$FOREIGN TYPE$16 CORE$STDCALL GetWindowRect(TYPE$19, TYPE$19);
#define V$51749816/*aspel.internal.win32.GetWindowRect*/ GetWindowRect
CORE$FOREIGN TYPE$16 CORE$STDCALL SetForegroundWindow(TYPE$19);
#define V$51749896/*aspel.internal.win32.SetForegroundWindow*/ SetForegroundWindow
CORE$FOREIGN TYPE$16 CORE$STDCALL ShowWindow(TYPE$19, TYPE$16);
#define V$51749976/*aspel.internal.win32.ShowWindow*/ ShowWindow
CORE$FOREIGN TYPE$16 CORE$STDCALL GetClassInfoW(TYPE$19, TYPE$19, TYPE$19);
#define V$51750056/*aspel.internal.win32.GetClassInfo*/ GetClassInfoW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetClassInfoExW(TYPE$19, TYPE$19, TYPE$19);
#define V$51750136/*aspel.internal.win32.GetClassInfoEx*/ GetClassInfoExW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetClassLongW(TYPE$19, TYPE$16);
#define V$51750216/*aspel.internal.win32.GetClassLong*/ GetClassLongW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetClassLongPtrW(TYPE$19, TYPE$16);
#define V$51750296/*aspel.internal.win32.GetClassLongPtr*/ GetClassLongPtrW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetClassNameW(TYPE$19, TYPE$19, TYPE$16);
#define V$51750376/*aspel.internal.win32.GetClassName*/ GetClassNameW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetWindowLongW(TYPE$19, TYPE$16);
#define V$51750456/*aspel.internal.win32.GetWindowLong*/ GetWindowLongW
CORE$FOREIGN TYPE$16 CORE$STDCALL GetWindowLongPtrW(TYPE$19, TYPE$16);
#define V$51750536/*aspel.internal.win32.GetWindowLongPtr*/ GetWindowLongPtrW
CORE$FOREIGN TYPE$28 CORE$STDCALL RegisterClassW(TYPE$19);
#define V$51750616/*aspel.internal.win32.RegisterClass*/ RegisterClassW
CORE$FOREIGN TYPE$28 CORE$STDCALL RegisterClassExW(TYPE$19);
#define V$51750696/*aspel.internal.win32.RegisterClassEx*/ RegisterClassExW
CORE$FOREIGN TYPE$19 CORE$STDCALL SetClassLongW(TYPE$19, TYPE$16, TYPE$16);
#define V$51750776/*aspel.internal.win32.SetClassLong*/ SetClassLongW
CORE$FOREIGN TYPE$19 CORE$STDCALL SetClassLongPtrW(TYPE$19, TYPE$16, TYPE$16);
#define V$51750856/*aspel.internal.win32.SetClassLongPtr*/ SetClassLongPtrW
CORE$FOREIGN TYPE$16 CORE$STDCALL SetWindowLongW(TYPE$19, TYPE$16, TYPE$16);
#define V$51750936/*aspel.internal.win32.SetWindowLong*/ SetWindowLongW
CORE$FOREIGN TYPE$16 CORE$STDCALL SetWindowLongPtrW(TYPE$19, TYPE$16, TYPE$16);
#define V$51751016/*aspel.internal.win32.SetWindowLongPtr*/ SetWindowLongPtrW
CORE$FOREIGN TYPE$16 CORE$STDCALL UnregisterClassW(TYPE$19, TYPE$19);
#define V$51751096/*aspel.internal.win32.UnregisterClass*/ UnregisterClassW
CORE$FOREIGN TYPE$16 CORE$STDCALL ClientToScreen(TYPE$19, TYPE$19);
#define V$51751176/*aspel.internal.win32.ClientToScreen*/ ClientToScreen
CORE$FOREIGN TYPE$16 CORE$STDCALL ScreenToClient(TYPE$19, TYPE$19);
#define V$51751256/*aspel.internal.win32.ScreenToClient*/ ScreenToClient
CORE$FOREIGN TYPE$19 CORE$STDCALL FormatMessageA(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51751336/*aspel.internal.win32.FormatMessageA*/ FormatMessageA
CORE$FOREIGN TYPE$19 CORE$STDCALL FormatMessageW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51751416/*aspel.internal.win32.FormatMessageW*/ FormatMessageW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetLastError();
#define V$51751496/*aspel.internal.win32.GetLastError*/ GetLastError
CORE$FOREIGN TYPE$8 CORE$STDCALL SetLastError(TYPE$19);
#define V$51751576/*aspel.internal.win32.SetLastError*/ SetLastError
CORE$FOREIGN TYPE$8 CORE$STDCALL DeleteCriticalSection(TYPE$19);
#define V$51751656/*aspel.internal.win32.DeleteCriticalSection*/ DeleteCriticalSection
CORE$FOREIGN TYPE$8 CORE$STDCALL EnterCriticalSection(TYPE$19);
#define V$51751736/*aspel.internal.win32.EnterCriticalSection*/ EnterCriticalSection
CORE$FOREIGN TYPE$8 CORE$STDCALL InitializeCriticalSection(TYPE$19);
#define V$51751816/*aspel.internal.win32.InitializeCriticalSection*/ InitializeCriticalSection
CORE$FOREIGN TYPE$16 CORE$STDCALL InitializeCriticalSectionAndSpinCount(TYPE$19, TYPE$19);
#define V$51751896/*aspel.internal.win32.InitializeCriticalSectionAndSpinCount*/ InitializeCriticalSectionAndSpinCount
CORE$FOREIGN TYPE$16 CORE$STDCALL InitializeCriticalSectionEx(TYPE$19, TYPE$19, TYPE$19);
#define V$51751976/*aspel.internal.win32.InitializeCriticalSectionEx*/ InitializeCriticalSectionEx
CORE$FOREIGN TYPE$8 CORE$STDCALL LeaveCriticalSection(TYPE$19);
#define V$51752056/*aspel.internal.win32.LeaveCriticalSection*/ LeaveCriticalSection
CORE$FOREIGN TYPE$19 CORE$STDCALL SetCriticalSectionSpinCount(TYPE$19, TYPE$19);
#define V$51752136/*aspel.internal.win32.SetCriticalSectionSpinCount*/ SetCriticalSectionSpinCount
CORE$FOREIGN TYPE$16 CORE$STDCALL TryEnterCriticalSection(TYPE$19);
#define V$51752216/*aspel.internal.win32.TryEnterCriticalSection*/ TryEnterCriticalSection
CORE$FOREIGN TYPE$8 CORE$STDCALL InitializeConditionVariable(TYPE$19);
#define V$51752296/*aspel.internal.win32.InitializeConditionVariable*/ InitializeConditionVariable
CORE$FOREIGN TYPE$16 CORE$STDCALL SleepConditionVariableCS(TYPE$19, TYPE$19, TYPE$19);
#define V$51752376/*aspel.internal.win32.SleepConditionVariableCS*/ SleepConditionVariableCS
CORE$FOREIGN TYPE$8 CORE$STDCALL WakeConditionVariable(TYPE$19);
#define V$51752456/*aspel.internal.win32.WakeConditionVariable*/ WakeConditionVariable
CORE$FOREIGN TYPE$8 CORE$STDCALL WakeAllConditionVariable(TYPE$19);
#define V$51752536/*aspel.internal.win32.WakeAllConditionVariable*/ WakeAllConditionVariable
CORE$FOREIGN TYPE$19 CORE$STDCALL WaitForSingleObject(TYPE$19, TYPE$19);
#define V$51752616/*aspel.internal.win32.WaitForSingleObject*/ WaitForSingleObject
CORE$FOREIGN TYPE$16 CORE$STDCALL QueryPerformanceCounter(TYPE$19);
#define V$51752696/*aspel.internal.win32.QueryPerformanceCounter*/ QueryPerformanceCounter
CORE$FOREIGN TYPE$16 CORE$STDCALL QueryPerformanceFrequency(TYPE$19);
#define V$51752776/*aspel.internal.win32.QueryPerformanceFrequency*/ QueryPerformanceFrequency
CORE$FOREIGN TYPE$16 CORE$STDCALL CloseHandle(TYPE$19);
#define V$51752856/*aspel.internal.win32.CloseHandle*/ CloseHandle
CORE$FOREIGN TYPE$16 CORE$STDCALL CompareObjectHandles(TYPE$19, TYPE$19);
#define V$51752936/*aspel.internal.win32.CompareObjectHandles*/ CompareObjectHandles
CORE$FOREIGN TYPE$16 CORE$STDCALL DuplicateHandle(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$16, TYPE$19);
#define V$51753016/*aspel.internal.win32.DuplicateHandle*/ DuplicateHandle
CORE$FOREIGN TYPE$16 CORE$STDCALL GetHandleInformation(TYPE$19, TYPE$19);
#define V$51753096/*aspel.internal.win32.GetHandleInformation*/ GetHandleInformation
CORE$FOREIGN TYPE$16 CORE$STDCALL SetHandleInformation(TYPE$19, TYPE$19, TYPE$19);
#define V$51753176/*aspel.internal.win32.SetHandleInformation*/ SetHandleInformation
CORE$FOREIGN TYPE$19 CORE$STDCALL CreateThread(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51753256/*aspel.internal.win32.CreateThread*/ CreateThread
CORE$FOREIGN TYPE$8 CORE$STDCALL ExitProcess(TYPE$19);
#define V$51753336/*aspel.internal.win32.ExitProcess*/ ExitProcess
CORE$FOREIGN TYPE$8 CORE$STDCALL ExitThread(TYPE$19);
#define V$51753416/*aspel.internal.win32.ExitThread*/ ExitThread
CORE$FOREIGN TYPE$19 CORE$STDCALL GetCommandLineW();
#define V$51753496/*aspel.internal.win32.GetCommandLineW*/ GetCommandLineW
CORE$FOREIGN TYPE$19 CORE$STDCALL GetCurrentProcess();
#define V$51753576/*aspel.internal.win32.GetCurrentProcess*/ GetCurrentProcess
CORE$FOREIGN TYPE$19 CORE$STDCALL GetCurrentProcessId();
#define V$51753656/*aspel.internal.win32.GetCurrentProcessId*/ GetCurrentProcessId
CORE$FOREIGN TYPE$19 CORE$STDCALL GetCurrentThread();
#define V$51753736/*aspel.internal.win32.GetCurrentThread*/ GetCurrentThread
CORE$FOREIGN TYPE$19 CORE$STDCALL GetCurrentThreadId();
#define V$51753816/*aspel.internal.win32.GetCurrentThreadId*/ GetCurrentThreadId
CORE$FOREIGN TYPE$8 CORE$STDCALL Sleep(TYPE$19);
#define V$51753896/*aspel.internal.win32.Sleep*/ Sleep
CORE$FOREIGN TYPE$16 CORE$STDCALL TerminateProcess(TYPE$19, TYPE$19);
#define V$51753976/*aspel.internal.win32.TerminateProcess*/ TerminateProcess
CORE$FOREIGN TYPE$19 CORE$STDCALL TlsAlloc();
#define V$51754056/*aspel.internal.win32.TlsAlloc*/ TlsAlloc
CORE$FOREIGN TYPE$16 CORE$STDCALL TlsFree(TYPE$19);
#define V$51754136/*aspel.internal.win32.TlsFree*/ TlsFree
CORE$FOREIGN TYPE$19 CORE$STDCALL TlsGetValue(TYPE$19);
#define V$51754216/*aspel.internal.win32.TlsGetValue*/ TlsGetValue
CORE$FOREIGN TYPE$16 CORE$STDCALL TlsSetValue(TYPE$19, TYPE$19);
#define V$51754296/*aspel.internal.win32.TlsSetValue*/ TlsSetValue
CORE$FOREIGN TYPE$19 CORE$STDCALL CreateFileMappingW(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51754376/*aspel.internal.win32.CreateFileMapping*/ CreateFileMappingW
CORE$FOREIGN TYPE$19 CORE$STDCALL MapViewOfFile(TYPE$19, TYPE$19, TYPE$19, TYPE$19, TYPE$19);
#define V$51754456/*aspel.internal.win32.MapViewOfFile*/ MapViewOfFile
CORE$FOREIGN TYPE$19 CORE$STDCALL OpenFileMappingW(TYPE$19, TYPE$16, TYPE$19);
#define V$51754536/*aspel.internal.win32.OpenFileMapping*/ OpenFileMappingW
CORE$FOREIGN TYPE$16 CORE$STDCALL UnmapViewOfFile(TYPE$19);
#define V$51754616/*aspel.internal.win32.UnmapViewOfFile*/ UnmapViewOfFile
TYPE$8 V$51754696/*aspel.internal.win32.report_win32_error*/();
TYPE$8 __aspel_internal__aspel_entry(TYPE$3);
#define V$51754776/*kutikula.main*/ __aspel_internal__aspel_entry

//////////////////////////////////////////////////
 // Globals
//////////////////////////////////////////////////

const CORE$U8 SHARED$STRS[] = {
#define SHARED$STR_2D71AB8_OFF 0
#define SHARED$STR_2D71AB8_LEN 51
// CORE$STR_C36A400E67B60: Attempt to open an interprocess object with size 0.
65, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 111, 112, 101, 110, 32, 97, 110, 32, 105, 110, 116, 101, 114, 112, 114, 111, 99, 101, 115, 115, 32, 111, 98, 106, 101, 99, 116, 32, 119, 105, 116, 104, 32, 115, 105, 122, 101, 32, 48, 46, 
#define SHARED$STR_2D71BD8_OFF 51
#define SHARED$STR_2D71BD8_LEN 77
// CORE$STR_C36A400E67B60: Granting read privilege to the interprocess object despite not requesting it.
71, 114, 97, 110, 116, 105, 110, 103, 32, 114, 101, 97, 100, 32, 112, 114, 105, 118, 105, 108, 101, 103, 101, 32, 116, 111, 32, 116, 104, 101, 32, 105, 110, 116, 101, 114, 112, 114, 111, 99, 101, 115, 115, 32, 111, 98, 106, 101, 99, 116, 32, 100, 101, 115, 112, 105, 116, 101, 32, 110, 111, 116, 32, 114, 101, 113, 117, 101, 115, 116, 105, 110, 103, 32, 105, 116, 46, 
#define SHARED$STR_2D71EF8_OFF 128
#define SHARED$STR_2D71EF8_LEN 60
// CORE$STR_C36A400E67B60: Couldn't allocate memory for the interprocess object's name.
67, 111, 117, 108, 100, 110, 39, 116, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 102, 111, 114, 32, 116, 104, 101, 32, 105, 110, 116, 101, 114, 112, 114, 111, 99, 101, 115, 115, 32, 111, 98, 106, 101, 99, 116, 39, 115, 32, 110, 97, 109, 101, 46, 
#define SHARED$STR_2D720B8_OFF 188
#define SHARED$STR_2D720B8_LEN 50
// CORE$STR_C36A400E67B60: The interprocess object's name is not valid UTF-8.
84, 104, 101, 32, 105, 110, 116, 101, 114, 112, 114, 111, 99, 101, 115, 115, 32, 111, 98, 106, 101, 99, 116, 39, 115, 32, 110, 97, 109, 101, 32, 105, 115, 32, 110, 111, 116, 32, 118, 97, 108, 105, 100, 32, 85, 84, 70, 45, 56, 46, 
#define SHARED$STR_2D725D8_OFF 238
#define SHARED$STR_2D725D8_LEN 75
// CORE$STR_C36A400E67B60: Granting read privilege to the interprocess view despite not requesting it.
71, 114, 97, 110, 116, 105, 110, 103, 32, 114, 101, 97, 100, 32, 112, 114, 105, 118, 105, 108, 101, 103, 101, 32, 116, 111, 32, 116, 104, 101, 32, 105, 110, 116, 101, 114, 112, 114, 111, 99, 101, 115, 115, 32, 118, 105, 101, 119, 32, 100, 101, 115, 112, 105, 116, 101, 32, 110, 111, 116, 32, 114, 101, 113, 117, 101, 115, 116, 105, 110, 103, 32, 105, 116, 46, 
#define SHARED$STR_2D72878_OFF 313
#define SHARED$STR_2D72878_LEN 56
// CORE$STR_C36A400E67B60: The view of this size wouldn't fit in the address space.
84, 104, 101, 32, 118, 105, 101, 119, 32, 111, 102, 32, 116, 104, 105, 115, 32, 115, 105, 122, 101, 32, 119, 111, 117, 108, 100, 110, 39, 116, 32, 102, 105, 116, 32, 105, 110, 32, 116, 104, 101, 32, 97, 100, 100, 114, 101, 115, 115, 32, 115, 112, 97, 99, 101, 46, 
#define SHARED$STR_EA5E98_OFF 369
#define SHARED$STR_EA5E98_LEN 243
// CORE$STR_C36A400E67B60: QueryPerformanceFrequency failed. According to MSDN: "On systems that run Windows XP or later, the function will always succeed and will thus never return zero." Note that Windows XP is the minimum supported version by this ASL implementation.
81, 117, 101, 114, 121, 80, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101, 70, 114, 101, 113, 117, 101, 110, 99, 121, 32, 102, 97, 105, 108, 101, 100, 46, 32, 65, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 77, 83, 68, 78, 58, 32, 34, 79, 110, 32, 115, 121, 115, 116, 101, 109, 115, 32, 116, 104, 97, 116, 32, 114, 117, 110, 32, 87, 105, 110, 100, 111, 119, 115, 32, 88, 80, 32, 111, 114, 32, 108, 97, 116, 101, 114, 44, 32, 116, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 119, 105, 108, 108, 32, 97, 108, 119, 97, 121, 115, 32, 115, 117, 99, 99, 101, 101, 100, 32, 97, 110, 100, 32, 119, 105, 108, 108, 32, 116, 104, 117, 115, 32, 110, 101, 118, 101, 114, 32, 114, 101, 116, 117, 114, 110, 32, 122, 101, 114, 111, 46, 34, 32, 78, 111, 116, 101, 32, 116, 104, 97, 116, 32, 87, 105, 110, 100, 111, 119, 115, 32, 88, 80, 32, 105, 115, 32, 116, 104, 101, 32, 109, 105, 110, 105, 109, 117, 109, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 118, 101, 114, 115, 105, 111, 110, 32, 98, 121, 32, 116, 104, 105, 115, 32, 65, 83, 76, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 97, 116, 105, 111, 110, 46, 
#define SHARED$STR_EA5FF8_OFF 612
#define SHARED$STR_EA5FF8_LEN 241
// CORE$STR_C36A400E67B60: QueryPerformanceCounter failed. According to MSDN: "On systems that run Windows XP or later, the function will always succeed and will thus never return zero." Note that Windows XP is the minimum supported version by this ASL implementation.
81, 117, 101, 114, 121, 80, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101, 67, 111, 117, 110, 116, 101, 114, 32, 102, 97, 105, 108, 101, 100, 46, 32, 65, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 77, 83, 68, 78, 58, 32, 34, 79, 110, 32, 115, 121, 115, 116, 101, 109, 115, 32, 116, 104, 97, 116, 32, 114, 117, 110, 32, 87, 105, 110, 100, 111, 119, 115, 32, 88, 80, 32, 111, 114, 32, 108, 97, 116, 101, 114, 44, 32, 116, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 119, 105, 108, 108, 32, 97, 108, 119, 97, 121, 115, 32, 115, 117, 99, 99, 101, 101, 100, 32, 97, 110, 100, 32, 119, 105, 108, 108, 32, 116, 104, 117, 115, 32, 110, 101, 118, 101, 114, 32, 114, 101, 116, 117, 114, 110, 32, 122, 101, 114, 111, 46, 34, 32, 78, 111, 116, 101, 32, 116, 104, 97, 116, 32, 87, 105, 110, 100, 111, 119, 115, 32, 88, 80, 32, 105, 115, 32, 116, 104, 101, 32, 109, 105, 110, 105, 109, 117, 109, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 118, 101, 114, 115, 105, 111, 110, 32, 98, 121, 32, 116, 104, 105, 115, 32, 65, 83, 76, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 97, 116, 105, 111, 110, 46, 
#define SHARED$STR_EEB9A0_OFF 853
#define SHARED$STR_EEB9A0_LEN 5
// CORE$STR_C36A400E67B60: {0}: 
123, 48, 125, 58, 32, 
#define SHARED$STR_EEBAE0_OFF 858
#define SHARED$STR_EEBAE0_LEN 14
// CORE$STR_C36A400E67B60: split {0} {1}\x0A
115, 112, 108, 105, 116, 32, 123, 48, 125, 32, 123, 49, 125, 10, 
#define SHARED$STR_F41B50_OFF 872
#define SHARED$STR_F41B50_LEN 7
// CORE$STR_C36A400E67B60: match!\x0A
109, 97, 116, 99, 104, 33, 10, 
#define SHARED$STR_F41C30_OFF 879
#define SHARED$STR_F41C30_LEN 11
// CORE$STR_C36A400E67B60: {0} -> {1}\x0A
123, 48, 125, 32, 45, 62, 32, 123, 49, 125, 10, 
#define SHARED$STR_F42D90_OFF 890
#define SHARED$STR_F42D90_LEN 23
// CORE$STR_C36A400E67B60: Illegal integer format.
73, 108, 108, 101, 103, 97, 108, 32, 105, 110, 116, 101, 103, 101, 114, 32, 102, 111, 114, 109, 97, 116, 46, 
#define SHARED$STR_F43770_OFF 913
#define SHARED$STR_F43770_LEN 16
// CORE$STR_C36A400E67B60: 0123456789ABCDEF
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 
#define SHARED$STR_F43B30_OFF 929
#define SHARED$STR_F43B30_LEN 16
// CORE$STR_C36A400E67B60: 0123456789ABCDEF
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 
#define SHARED$STR_F44A70_OFF 945
#define SHARED$STR_F44A70_LEN 31
// CORE$STR_C36A400E67B60: We are in some impossible state
87, 101, 32, 97, 114, 101, 32, 105, 110, 32, 115, 111, 109, 101, 32, 105, 109, 112, 111, 115, 115, 105, 98, 108, 101, 32, 115, 116, 97, 116, 101, 
#define SHARED$STR_F458F0_OFF 976
#define SHARED$STR_F458F0_LEN 44
// CORE$STR_C36A400E67B60: State machine returned an illegal code point
83, 116, 97, 116, 101, 32, 109, 97, 99, 104, 105, 110, 101, 32, 114, 101, 116, 117, 114, 110, 101, 100, 32, 97, 110, 32, 105, 108, 108, 101, 103, 97, 108, 32, 99, 111, 100, 101, 32, 112, 111, 105, 110, 116, 
#define SHARED$STR_F48310_OFF 1020
#define SHARED$STR_F48310_LEN 30
// CORE$STR_C36A400E67B60: Unknown format item alignment.
85, 110, 107, 110, 111, 119, 110, 32, 102, 111, 114, 109, 97, 116, 32, 105, 116, 101, 109, 32, 97, 108, 105, 103, 110, 109, 101, 110, 116, 46, 
#define SHARED$STR_F48A30_OFF 1050
#define SHARED$STR_F48A30_LEN 4
// CORE$STR_C36A400E67B60: true
116, 114, 117, 101, 
#define SHARED$STR_F48A70_OFF 1054
#define SHARED$STR_F48A70_LEN 5
// CORE$STR_C36A400E67B60: false
102, 97, 108, 115, 101, 
#define SHARED$STR_F49610_OFF 1059
#define SHARED$STR_F49610_LEN 16
// CORE$STR_C36A400E67B60: 0123456789ABCDEF
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 
#define SHARED$STR_F49650_OFF 1075
#define SHARED$STR_F49650_LEN 16
// CORE$STR_C36A400E67B60: 0123456789abcdef
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 
#define SHARED$STR_F496D0_OFF 1091
#define SHARED$STR_F496D0_LEN 10
// CORE$STR_C36A400E67B60: 0123456789
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 
#define SHARED$STR_2CF2A98_OFF 1101
#define SHARED$STR_2CF2A98_LEN 46
// CORE$STR_C36A400E67B60: UTF-8 source proved to be illegal in make_utf8
85, 84, 70, 45, 56, 32, 115, 111, 117, 114, 99, 101, 32, 112, 114, 111, 118, 101, 100, 32, 116, 111, 32, 98, 101, 32, 105, 108, 108, 101, 103, 97, 108, 32, 105, 110, 32, 109, 97, 107, 101, 95, 117, 116, 102, 56, 
#define SHARED$STR_2CF2C58_OFF 1147
#define SHARED$STR_2CF2C58_LEN 37
// CORE$STR_C36A400E67B60: Memory allocation failed in copy_utf8
77, 101, 109, 111, 114, 121, 32, 97, 108, 108, 111, 99, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 32, 105, 110, 32, 99, 111, 112, 121, 95, 117, 116, 102, 56, 
#define SHARED$STR_2CFBA78_OFF 1184
#define SHARED$STR_2CFBA78_LEN 63
// CORE$STR_C36A400E67B60: A file may only be opened for reading with mode FILE_MODE_OPEN.
65, 32, 102, 105, 108, 101, 32, 109, 97, 121, 32, 111, 110, 108, 121, 32, 98, 101, 32, 111, 112, 101, 110, 101, 100, 32, 102, 111, 114, 32, 114, 101, 97, 100, 105, 110, 103, 32, 119, 105, 116, 104, 32, 109, 111, 100, 101, 32, 70, 73, 76, 69, 95, 77, 79, 68, 69, 95, 79, 80, 69, 78, 46, 
#define SHARED$STR_2CFBB58_OFF 1247
#define SHARED$STR_2CFBB58_LEN 59
// CORE$STR_C36A400E67B60: A file may only be truncated with access FILE_ACCESS_WRITE.
65, 32, 102, 105, 108, 101, 32, 109, 97, 121, 32, 111, 110, 108, 121, 32, 98, 101, 32, 116, 114, 117, 110, 99, 97, 116, 101, 100, 32, 119, 105, 116, 104, 32, 97, 99, 99, 101, 115, 115, 32, 70, 73, 76, 69, 95, 65, 67, 67, 69, 83, 83, 95, 87, 82, 73, 84, 69, 46, 
#define SHARED$STR_2D78378_OFF 1306
#define SHARED$STR_2D78378_LEN 8
// CORE$STR_C36A400E67B60: VERBOSE:
86, 69, 82, 66, 79, 83, 69, 58, 
#define SHARED$STR_2D783D8_OFF 1314
#define SHARED$STR_2D783D8_LEN 6
// CORE$STR_C36A400E67B60: DEBUG:
68, 69, 66, 85, 71, 58, 
#define SHARED$STR_2D78438_OFF 1320
#define SHARED$STR_2D78438_LEN 5
// CORE$STR_C36A400E67B60: INFO:
73, 78, 70, 79, 58, 
#define SHARED$STR_2D78498_OFF 1325
#define SHARED$STR_2D78498_LEN 8
// CORE$STR_C36A400E67B60: WARNING:
87, 65, 82, 78, 73, 78, 71, 58, 
#define SHARED$STR_2D784F8_OFF 1333
#define SHARED$STR_2D784F8_LEN 6
// CORE$STR_C36A400E67B60: ERROR:
69, 82, 82, 79, 82, 58, 
#define SHARED$STR_2D78558_OFF 1339
#define SHARED$STR_2D78558_LEN 9
// CORE$STR_C36A400E67B60: CRITICAL:
67, 82, 73, 84, 73, 67, 65, 76, 58, 
#define SHARED$STR_2D78598_OFF 1348
#define SHARED$STR_2D78598_LEN 0
// CORE$STR_C36A400E67B60: 

#define SHARED$STR_2D78CF8_OFF 1348
#define SHARED$STR_2D78CF8_LEN 10
// CORE$STR_C36A400E67B60: [{0}] {1} 
91, 123, 48, 125, 93, 32, 123, 49, 125, 32, 
#define SHARED$STR_2D78F38_OFF 1358
#define SHARED$STR_2D78F38_LEN 1
// CORE$STR_C36A400E67B60: \x0A
10, 
#define SHARED$STR_2D79898_OFF 1359
#define SHARED$STR_2D79898_LEN 3
// CORE$STR_C36A400E67B60: APP
65, 80, 80, 
#define SHARED$STR_2D798D8_OFF 1362
#define SHARED$STR_2D798D8_LEN 3
// CORE$STR_C36A400E67B60: ASL
65, 83, 76, 
#define SHARED$STR_2D79918_OFF 1365
#define SHARED$STR_2D79918_LEN 6
// CORE$STR_C36A400E67B60: LOGGER
76, 79, 71, 71, 69, 82, 
#define SHARED$STR_2D7C638_OFF 1371
#define SHARED$STR_2D7C638_LEN 25
// CORE$STR_C36A400E67B60: Invalid render call kind!
73, 110, 118, 97, 108, 105, 100, 32, 114, 101, 110, 100, 101, 114, 32, 99, 97, 108, 108, 32, 107, 105, 110, 100, 33, 
#define SHARED$STR_2D7C5F8_OFF 1396
#define SHARED$STR_2D7C5F8_LEN 42
// CORE$STR_C36A400E67B60: We don't support the fill render call yet.
87, 101, 32, 100, 111, 110, 39, 116, 32, 115, 117, 112, 112, 111, 114, 116, 32, 116, 104, 101, 32, 102, 105, 108, 108, 32, 114, 101, 110, 100, 101, 114, 32, 99, 97, 108, 108, 32, 121, 101, 116, 46, 
#define SHARED$STR_2D7C9B8_OFF 1438
#define SHARED$STR_2D7C9B8_LEN 36
// CORE$STR_C36A400E67B60: Layout failed to position the button
76, 97, 121, 111, 117, 116, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 116, 104, 101, 32, 98, 117, 116, 116, 111, 110, 
#define SHARED$STR_2D81998_OFF 1474
#define SHARED$STR_2D81998_LEN 29
// CORE$STR_C36A400E67B60: Invalid pane preferred width.
73, 110, 118, 97, 108, 105, 100, 32, 112, 97, 110, 101, 32, 112, 114, 101, 102, 101, 114, 114, 101, 100, 32, 119, 105, 100, 116, 104, 46, 
#define SHARED$STR_2D81A78_OFF 1503
#define SHARED$STR_2D81A78_LEN 30
// CORE$STR_C36A400E67B60: Invalid pane preferred height.
73, 110, 118, 97, 108, 105, 100, 32, 112, 97, 110, 101, 32, 112, 114, 101, 102, 101, 114, 114, 101, 100, 32, 104, 101, 105, 103, 104, 116, 46, 
#define SHARED$STR_2D87058_OFF 1533
#define SHARED$STR_2D87058_LEN 27
// CORE$STR_C36A400E67B60: Failed to push root layout.
70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 117, 115, 104, 32, 114, 111, 111, 116, 32, 108, 97, 121, 111, 117, 116, 46, 
#define SHARED$STR_2D871D8_OFF 1560
#define SHARED$STR_2D871D8_LEN 26
// CORE$STR_C36A400E67B60: Failed to pop root layout.
70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 112, 111, 112, 32, 114, 111, 111, 116, 32, 108, 97, 121, 111, 117, 116, 46, 
#define SHARED$STR_2D8A418_OFF 1586
#define SHARED$STR_2D8A418_LEN 29
// CORE$STR_C36A400E67B60: Invalid number of components.
73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 115, 46, 
#define SHARED$STR_2D8A478_OFF 1615
#define SHARED$STR_2D8A478_LEN 21
// CORE$STR_C36A400E67B60: Negative image width.
78, 101, 103, 97, 116, 105, 118, 101, 32, 105, 109, 97, 103, 101, 32, 119, 105, 100, 116, 104, 46, 
#define SHARED$STR_2D8A4D8_OFF 1636
#define SHARED$STR_2D8A4D8_LEN 22
// CORE$STR_C36A400E67B60: Negative image height.
78, 101, 103, 97, 116, 105, 118, 101, 32, 105, 109, 97, 103, 101, 32, 104, 101, 105, 103, 104, 116, 46, 
#define SHARED$STR_2D8A7F8_OFF 1658
#define SHARED$STR_2D8A7F8_LEN 36
// CORE$STR_C36A400E67B60: Invalid component count requirement.
73, 110, 118, 97, 108, 105, 100, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 32, 99, 111, 117, 110, 116, 32, 114, 101, 113, 117, 105, 114, 101, 109, 101, 110, 116, 46, 
#define SHARED$STR_306A150_OFF 1694
#define SHARED$STR_306A150_LEN 11
// CORE$STR_C36A400E67B60: DirectSound
68, 105, 114, 101, 99, 116, 83, 111, 117, 110, 100, 
#define SHARED$STR_306A430_OFF 1705
#define SHARED$STR_306A430_LEN 7
// CORE$STR_C36A400E67B60: default
100, 101, 102, 97, 117, 108, 116, 
#define SHARED$STR_306A4B0_OFF 1712
#define SHARED$STR_306A4B0_LEN 7
// CORE$STR_C36A400E67B60: default
100, 101, 102, 97, 117, 108, 116, 
#define SHARED$STR_306F8D0_OFF 1719
#define SHARED$STR_306F8D0_LEN 10
// CORE$STR_C36A400E67B60: dsound.dll
100, 115, 111, 117, 110, 100, 46, 100, 108, 108, 
#define SHARED$STR_306F9D0_OFF 1729
#define SHARED$STR_306F9D0_LEN 18
// CORE$STR_C36A400E67B60: DirectSoundCreate8
68, 105, 114, 101, 99, 116, 83, 111, 117, 110, 100, 67, 114, 101, 97, 116, 101, 56, 
#define SHARED$STR_306FA90_OFF 1747
#define SHARED$STR_306FA90_LEN 21
// CORE$STR_C36A400E67B60: DirectSoundEnumerateW
68, 105, 114, 101, 99, 116, 83, 111, 117, 110, 100, 69, 110, 117, 109, 101, 114, 97, 116, 101, 87, 
#define SHARED$STR_306FB50_OFF 1768
#define SHARED$STR_306FB50_LEN 25
// CORE$STR_C36A400E67B60: DirectSoundCaptureCreate8
68, 105, 114, 101, 99, 116, 83, 111, 117, 110, 100, 67, 97, 112, 116, 117, 114, 101, 67, 114, 101, 97, 116, 101, 56, 
#define SHARED$STR_306FC10_OFF 1793
#define SHARED$STR_306FC10_LEN 28
// CORE$STR_C36A400E67B60: DirectSoundCaptureEnumerateW
68, 105, 114, 101, 99, 116, 83, 111, 117, 110, 100, 67, 97, 112, 116, 117, 114, 101, 69, 110, 117, 109, 101, 114, 97, 116, 101, 87, 
#define SHARED$STR_309B570_OFF 1821
#define SHARED$STR_309B570_LEN 48
// CORE$STR_C36A400E67B60: Failed to allocate memory for program arguments.
70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 102, 111, 114, 32, 112, 114, 111, 103, 114, 97, 109, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 
#define SHARED$STR_309B750_OFF 1869
#define SHARED$STR_309B750_LEN 48
// CORE$STR_C36A400E67B60: Failed to allocate memory for program arguments.
70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 97, 108, 108, 111, 99, 97, 116, 101, 32, 109, 101, 109, 111, 114, 121, 32, 102, 111, 114, 32, 112, 114, 111, 103, 114, 97, 109, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 
#define SHARED$STR_391B7C0_OFF 1917
#define SHARED$STR_391B7C0_LEN 5
// CORE$STR_C36A400E67B60: WIN32
87, 73, 78, 51, 50, 
#define SHARED$STR_391BB20_OFF 1922
#define SHARED$STR_391BB20_LEN 12
// CORE$STR_C36A400E67B60: 0x{0:X}: {1}
48, 120, 123, 48, 58, 88, 125, 58, 32, 123, 49, 125, 
#define SHARED$STR_391BC20_OFF 1934
#define SHARED$STR_391BC20_LEN 7
// CORE$STR_C36A400E67B60: 0x{0:X}
48, 120, 123, 48, 58, 88, 125, 
#define SHARED$STR_391BD00_OFF 1941
#define SHARED$STR_391BD00_LEN 9
// CORE$STR_C36A400E67B60: Kutikula\x00
75, 117, 116, 105, 107, 117, 108, 97, 0, 
};

TYPE$28 V$47572296/*aspel.memory.MEMORY_READ*/;
TYPE$28 V$47572360/*aspel.memory.MEMORY_WRITE*/;
TYPE$28 V$47572424/*aspel.memory.MEMORY_EXECUTE*/;
TYPE$5 V$15407808/*aspel.time.stopwatch.STOPWATCH_FREQUENCY*/;
TYPE$19 V$15408768/*aspel.thread.pool.WORKER_CREATED*/;
TYPE$19 V$15408832/*aspel.thread.pool.WORKER_UNAVAILABLE*/;
TYPE$19 V$15408896/*aspel.thread.pool.WORKER_AVAILABLE*/;
TYPE$19 V$15408960/*aspel.thread.pool.WORKER_BUSY*/;
TYPE$5 V$15413312/*aspel.thread.INVALID_THREAD*/;
TYPE$1 V$46962144/*aspel.text.ASSUMED_UTF8_SEQUENCE_LENGTH*/;
TYPE$184 V$46962208/*aspel.text.UTF8_DECODING_MAGIC*/;
TYPE$1 V$46962272/*aspel.text.UTF8_FIRST_MARK*/;
TYPE$19 V$46964320/*aspel.text.UTF_STREAM_OK*/;
TYPE$19 V$46964384/*aspel.text.UTF_STREAM_END*/;
TYPE$19 V$46964448/*aspel.text.UTF_STREAM_ERROR*/;
TYPE$19 V$46964512/*aspel.text.UTF_STREAM_ILLEGAL*/;
TYPE$19 V$46966304/*aspel.text.UTF_CONVERSION_OK*/;
TYPE$19 V$46966368/*aspel.text.UTF_CONVERSION_SOURCE_ILLEGAL*/;
TYPE$19 V$46966432/*aspel.text.UTF_CONVERSION_TARGET_OVERFLOW*/;
TYPE$7 V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/;
TYPE$7 V$46970016/*aspel.system.INVALID_FUNCTION_ADDRESS*/;
TYPE$19 V$46973984/*aspel.io.FILE_SHARE_DELETE*/;
TYPE$19 V$46974048/*aspel.io.FILE_SHARE_READ*/;
TYPE$19 V$46974112/*aspel.io.FILE_SHARE_WRITE*/;
TYPE$19 V$46974176/*aspel.io.GENERIC_READ*/;
TYPE$19 V$46974240/*aspel.io.GENERIC_WRITE*/;
TYPE$19 V$46974304/*aspel.io.GENERIC_EXECUTE*/;
TYPE$19 V$46974368/*aspel.io.GENERIC_ALL*/;
TYPE$19 V$46974432/*aspel.io.FILE_APPEND_DATA*/;
TYPE$19 V$46974496/*aspel.io.CREATE_NEW*/;
TYPE$19 V$46974560/*aspel.io.CREATE_ALWAYS*/;
TYPE$19 V$46974624/*aspel.io.OPEN_EXISTING*/;
TYPE$19 V$46974688/*aspel.io.OPEN_ALWAYS*/;
TYPE$19 V$46974752/*aspel.io.TRUNCATE_EXISTING*/;
TYPE$19 V$46974816/*aspel.io.FILE_BEGIN*/;
TYPE$19 V$46974880/*aspel.io.FILE_CURRENT*/;
TYPE$19 V$46974944/*aspel.io.FILE_END*/;
TYPE$19 V$46975328/*aspel.io.FILE_MODE_CREATE*/;
TYPE$19 V$46975392/*aspel.io.FILE_MODE_OPEN*/;
TYPE$19 V$46975456/*aspel.io.FILE_MODE_OPEN_OR_CREATE*/;
TYPE$19 V$46975520/*aspel.io.FILE_MODE_TRUNCATE*/;
TYPE$19 V$46975584/*aspel.io.FILE_MODE_TRUNCATE_OR_CREATE*/;
TYPE$19 V$46975712/*aspel.io.FILE_ACCESS_READ*/;
TYPE$19 V$46975776/*aspel.io.FILE_ACCESS_WRITE*/;
TYPE$19 V$46975840/*aspel.io.FILE_ACCESS_READ_WRITE*/;
TYPE$19 V$46975904/*aspel.io.FILE_ACCESS_APPEND*/;
TYPE$19 V$46975968/*aspel.io.FILE_ACCESS_READ_APPEND*/;
TYPE$19 V$46978720/*aspel.io.STANDARD_STREAM_INPUT*/;
TYPE$19 V$46978784/*aspel.io.STANDARD_STREAM_OUTPUT*/;
TYPE$19 V$46978848/*aspel.io.STANDARD_STREAM_ERROR*/;
TYPE$153 V$46979296/*aspel.io.standard_in*/;
TYPE$153 V$46979360/*aspel.io.standard_out*/;
TYPE$153 V$46979424/*aspel.io.standard_error*/;
TYPE$19 V$47563080/*aspel.io.SEEK_BEGIN*/;
TYPE$19 V$47563144/*aspel.io.SEEK_CURRENT*/;
TYPE$19 V$47563208/*aspel.io.SEEK_END*/;
TYPE$4 V$47563272/*aspel.io.IO_ERROR*/;
TYPE$28 V$50411736/*aspel.audio.SAMPLE_SIZE*/;
TYPE$28 V$50411800/*aspel.audio.SAMPLE_8_BITS*/;
TYPE$28 V$50411864/*aspel.audio.SAMPLE_16_BITS*/;
TYPE$28 V$50411928/*aspel.audio.SAMPLE_32_BITS*/;
TYPE$28 V$50411992/*aspel.audio.SAMPLE_FLOAT*/;
TYPE$28 V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/;
TYPE$28 V$50412120/*aspel.audio.SAMPLE_SIGNED*/;
TYPE$28 V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/;
TYPE$28 V$50412248/*aspel.audio.SAMPLE_UINT8*/;
TYPE$28 V$50412312/*aspel.audio.SAMPLE_INT8*/;
TYPE$28 V$50412376/*aspel.audio.SAMPLE_UINT16*/;
TYPE$28 V$50412440/*aspel.audio.SAMPLE_UINT16BE*/;
TYPE$28 V$50412504/*aspel.audio.SAMPLE_UINT16LE*/;
TYPE$28 V$50412568/*aspel.audio.SAMPLE_INT16*/;
TYPE$28 V$50412632/*aspel.audio.SAMPLE_INT16BE*/;
TYPE$28 V$50412696/*aspel.audio.SAMPLE_INT16LE*/;
TYPE$28 V$50412760/*aspel.audio.SAMPLE_UINT32*/;
TYPE$28 V$50412824/*aspel.audio.SAMPLE_UINT32BE*/;
TYPE$28 V$50412888/*aspel.audio.SAMPLE_UINT32LE*/;
TYPE$28 V$50412952/*aspel.audio.SAMPLE_INT32*/;
TYPE$28 V$50413016/*aspel.audio.SAMPLE_INT32BE*/;
TYPE$28 V$50413080/*aspel.audio.SAMPLE_INT32LE*/;
TYPE$28 V$50413144/*aspel.audio.SAMPLE_FLOAT32*/;
TYPE$28 V$50413208/*aspel.audio.SAMPLE_FLOAT32BE*/;
TYPE$28 V$50413272/*aspel.audio.SAMPLE_FLOAT32LE*/;
TYPE$19 V$50414744/*aspel.audio.DEVICE_FLAG_OPEN*/;
TYPE$19 V$50414808/*aspel.audio.DEVICE_FLAG_INPUT*/;
TYPE$19 V$50416728/*aspel.audio.AUDIO_DEVICE_SHUTDOWN*/;
TYPE$19 V$50416792/*aspel.audio.AUDIO_DEVICE_PAUSED*/;
TYPE$19 V$50416856/*aspel.audio.AUDIO_METHOD_SILENCE*/;
TYPE$19 V$50416920/*aspel.audio.AUDIO_METHOD_CALLBACK*/;
TYPE$19 V$50416984/*aspel.audio.AUDIO_METHOD_STREAM*/;
TYPE$19 V$50419160/*aspel.audio.MAX_DEVICE_COUNT*/;
TYPE$19 V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/;
TYPE$296 V$50422040/*aspel.audio.AUDIO_BACKENDS*/;
TYPE$19 V$50422296/*aspel.audio.AUDIO_BACKEND_INVALID*/;
TYPE$19 V$47567176/*aspel.net.SOCKET_PASSIVE*/;
TYPE$19 V$47567240/*aspel.net.SOCKET_READY*/;
TYPE$19 V$47567624/*aspel.net.MAX_HOST_LENGTH*/;
TYPE$19 V$47567688/*aspel.net.MAX_SERVICE_LENGTH*/;
TYPE$19 V$47581704/*aspel.log.VERBOSE*/;
TYPE$19 V$47581768/*aspel.log.DEBUG*/;
TYPE$19 V$47581832/*aspel.log.INFO*/;
TYPE$19 V$47581896/*aspel.log.WARNING*/;
TYPE$19 V$47581960/*aspel.log.ERROR*/;
TYPE$19 V$47582024/*aspel.log.CRITICAL*/;
TYPE$369 V$47582344/*aspel.log.source_list*/;
TYPE$19 V$47582408/*aspel.log.priority_threshold*/;
TYPE$1 V$47582856/*aspel.log.APP*/;
TYPE$1 V$47582920/*aspel.log.ASL*/;
TYPE$1 V$47582984/*aspel.log.LOGGER*/;
TYPE$66 V$47583048/*aspel.log.the_lock*/;
TYPE$367 V$47583240/*aspel.log.log*/;
TYPE$298 V$50374552/*aspel.audio.directsound.DIRECTSOUND_BACKEND*/;
TYPE$88 V$50374616/*aspel.audio.directsound.directsound_context_exists*/;
TYPE$272 V$50374680/*aspel.audio.directsound.the_directsound_context*/;
TYPE$28 V$50376024/*aspel.audio.directsound.WAVE_FORMAT_PCM*/;
TYPE$28 V$50376088/*aspel.audio.directsound.WAVE_FORMAT_IEEE_FLOAT*/;
TYPE$16 V$50376216/*aspel.audio.directsound.DS_OK*/;
TYPE$16 V$50376280/*aspel.audio.directsound.DSERR_BUFFERLOST*/;
TYPE$19 V$50378072/*aspel.audio.directsound.DSBCAPS_PRIMARYBUFFER*/;
TYPE$19 V$50378136/*aspel.audio.directsound.DSBCAPS_STATIC*/;
TYPE$19 V$50378200/*aspel.audio.directsound.DSBCAPS_LOCHARDWARE*/;
TYPE$19 V$50378264/*aspel.audio.directsound.DSBCAPS_LOCSOFTWARE*/;
TYPE$19 V$50378328/*aspel.audio.directsound.DSBCAPS_CTRL3D*/;
TYPE$19 V$50378392/*aspel.audio.directsound.DSBCAPS_CTRLFREQUENCY*/;
TYPE$19 V$50378456/*aspel.audio.directsound.DSBCAPS_CTRLPAN*/;
TYPE$19 V$50378520/*aspel.audio.directsound.DSBCAPS_CTRLVOLUME*/;
TYPE$19 V$50378584/*aspel.audio.directsound.DSBCAPS_CTRLPOSITIONNOTIFY*/;
TYPE$19 V$50378648/*aspel.audio.directsound.DSBCAPS_CTRLFX*/;
TYPE$19 V$50378712/*aspel.audio.directsound.DSBCAPS_STICKYFOCUS*/;
TYPE$19 V$50378776/*aspel.audio.directsound.DSBCAPS_GLOBALFOCUS*/;
TYPE$19 V$50378840/*aspel.audio.directsound.DSBCAPS_GETCURRENTPOSITION2*/;
TYPE$19 V$50378904/*aspel.audio.directsound.DSBCAPS_MUTE3DATMAXDISTANCE*/;
TYPE$19 V$50378968/*aspel.audio.directsound.DSBCAPS_LOCDEFER*/;
TYPE$19 V$50379032/*aspel.audio.directsound.DSBCAPS_TRUEPLAYPOSITION*/;
TYPE$19 V$50381400/*aspel.audio.directsound.DSSCL_NORMAL*/;
TYPE$19 V$50381464/*aspel.audio.directsound.DSSCL_PRIORITY*/;
TYPE$19 V$50381528/*aspel.audio.directsound.DSSCL_EXCLUSIVE*/;
TYPE$19 V$50381592/*aspel.audio.directsound.DSSCL_WRITEPRIMARY*/;
TYPE$19 V$50381656/*aspel.audio.directsound.DSBPLAY_LOOPING*/;
TYPE$19 V$50381720/*aspel.audio.directsound.DSBPLAY_LOCHARDWARE*/;
TYPE$19 V$50381784/*aspel.audio.directsound.DSBPLAY_LOCSOFTWARE*/;
TYPE$19 V$50381848/*aspel.audio.directsound.DSBPLAY_TERMINATEBY_TIME*/;
TYPE$19 V$50381912/*aspel.audio.directsound.DSBPLAY_TERMINATEBY_DISTANCE*/;
TYPE$19 V$50381976/*aspel.audio.directsound.DSBPLAY_TERMINATEBY_PRIORITY*/;
TYPE$19 V$50382040/*aspel.audio.directsound.DSBSTATUS_PLAYING*/;
TYPE$19 V$50382104/*aspel.audio.directsound.DSBSTATUS_BUFFERLOST*/;
TYPE$19 V$50382168/*aspel.audio.directsound.DSBSTATUS_LOOPING*/;
TYPE$19 V$50382232/*aspel.audio.directsound.DSBSTATUS_LOCHARDWARE*/;
TYPE$19 V$50382296/*aspel.audio.directsound.DSBSTATUS_LOCSOFTWARE*/;
TYPE$19 V$50382360/*aspel.audio.directsound.DSBSTATUS_TERMINATED*/;
TYPE$19 V$50382424/*aspel.audio.directsound.DSBSIZE_MIN*/;
TYPE$19 V$50382488/*aspel.audio.directsound.DSBSIZE_MAX*/;
TYPE$19 V$50393560/*aspel.audio.directsound.DSCBCAPS_WAVEMAPPED*/;
TYPE$19 V$50393624/*aspel.audio.directsound.DSCBCAPS_CTRLFX*/;
TYPE$19 V$50393688/*aspel.audio.directsound.DSCBLOCK_ENTIREBUFFER*/;
TYPE$19 V$50393752/*aspel.audio.directsound.DSCBSTATUS_CAPTURING*/;
TYPE$19 V$50393816/*aspel.audio.directsound.DSCBSTATUS_LOOPING*/;
TYPE$19 V$50393880/*aspel.audio.directsound.DSCBSTART_LOOPING*/;
TYPE$19 V$50393944/*aspel.audio.directsound.DSBPN_OFFSETSTOP*/;
TYPE$19 V$50394008/*aspel.audio.directsound.DS_CERTIFIED*/;
TYPE$19 V$50394072/*aspel.audio.directsound.DS_UNCERTIFIED*/;
TYPE$7 V$50401624/*aspel.audio.directsound.dsound*/;
TYPE$667 V$50401688/*aspel.audio.directsound.DirectSoundCreate8*/;
TYPE$668 V$50401752/*aspel.audio.directsound.DirectSoundEnumerate*/;
TYPE$669 V$50401816/*aspel.audio.directsound.DirectSoundCaptureCreate8*/;
TYPE$668 V$50401880/*aspel.audio.directsound.DirectSoundCaptureEnumerate*/;
TYPE$19 V$50407640/*aspel.audio.io.RIFF*/;
TYPE$19 V$50407704/*aspel.audio.io.WAVE*/;
TYPE$19 V$50407768/*aspel.audio.io.FMT*/;
TYPE$19 V$50407832/*aspel.audio.io.DATA*/;
TYPE$28 V$50407896/*aspel.audio.io.PCM*/;
TYPE$28 V$50407960/*aspel.audio.io.IEEE_FLOAT*/;
TYPE$16 V$50465496/*aspel.internal.win32.WSAEINTR*/;
TYPE$16 V$50465560/*aspel.internal.win32.WSAEBADF*/;
TYPE$16 V$50465624/*aspel.internal.win32.WSAEACCES*/;
TYPE$16 V$50465688/*aspel.internal.win32.WSAEFAULT*/;
TYPE$16 V$50465752/*aspel.internal.win32.WSAEINVAL*/;
TYPE$16 V$50465816/*aspel.internal.win32.WSAEMFILE*/;
TYPE$16 V$50465880/*aspel.internal.win32.WSAEWOULDBLOCK*/;
TYPE$16 V$50465944/*aspel.internal.win32.WSAEINPROGRESS*/;
TYPE$16 V$50466008/*aspel.internal.win32.WSAEALREADY*/;
TYPE$16 V$50466072/*aspel.internal.win32.WSAENOTSOCK*/;
TYPE$16 V$50466136/*aspel.internal.win32.WSAEDESTADDRREQ*/;
TYPE$16 V$50466200/*aspel.internal.win32.WSAEMSGSIZE*/;
TYPE$16 V$50466264/*aspel.internal.win32.WSAEPROTOTYPE*/;
TYPE$16 V$50466328/*aspel.internal.win32.WSAENOPROTOOPT*/;
TYPE$16 V$50466392/*aspel.internal.win32.WSAEPROTONOSUPPORT*/;
TYPE$16 V$50466456/*aspel.internal.win32.WSAESOCKTNOSUPPORT*/;
TYPE$16 V$50466520/*aspel.internal.win32.WSAEOPNOTSUPP*/;
TYPE$16 V$50466584/*aspel.internal.win32.WSAEPFNOSUPPORT*/;
TYPE$16 V$50466648/*aspel.internal.win32.WSAEAFNOSUPPORT*/;
TYPE$16 V$50466712/*aspel.internal.win32.WSAEADDRINUSE*/;
TYPE$16 V$50466776/*aspel.internal.win32.WSAEADDRNOTAVAIL*/;
TYPE$16 V$50466840/*aspel.internal.win32.WSAENETDOWN*/;
TYPE$16 V$50466904/*aspel.internal.win32.WSAENETUNREACH*/;
TYPE$16 V$50466968/*aspel.internal.win32.WSAENETRESET*/;
TYPE$16 V$50467032/*aspel.internal.win32.WSAECONNABORTED*/;
TYPE$16 V$50467096/*aspel.internal.win32.WSAECONNRESET*/;
TYPE$16 V$50467160/*aspel.internal.win32.WSAENOBUFS*/;
TYPE$16 V$50467224/*aspel.internal.win32.WSAEISCONN*/;
TYPE$16 V$50467288/*aspel.internal.win32.WSAENOTCONN*/;
TYPE$16 V$50467352/*aspel.internal.win32.WSAESHUTDOWN*/;
TYPE$16 V$50467416/*aspel.internal.win32.WSAETOOMANYREFS*/;
TYPE$16 V$50467480/*aspel.internal.win32.WSAETIMEDOUT*/;
TYPE$16 V$50467544/*aspel.internal.win32.WSAECONNREFUSED*/;
TYPE$16 V$50467608/*aspel.internal.win32.WSAELOOP*/;
TYPE$16 V$50467672/*aspel.internal.win32.WSAENAMETOOLONG*/;
TYPE$16 V$50467736/*aspel.internal.win32.WSAEHOSTDOWN*/;
TYPE$16 V$50467800/*aspel.internal.win32.WSAEHOSTUNREACH*/;
TYPE$16 V$50467864/*aspel.internal.win32.WSAENOTEMPTY*/;
TYPE$16 V$50467928/*aspel.internal.win32.WSAEPROCLIM*/;
TYPE$16 V$50467992/*aspel.internal.win32.WSAEUSERS*/;
TYPE$16 V$50468056/*aspel.internal.win32.WSAEDQUOT*/;
TYPE$16 V$50468120/*aspel.internal.win32.WSAESTALE*/;
TYPE$16 V$50468184/*aspel.internal.win32.WSAEREMOTE*/;
TYPE$16 V$50468248/*aspel.internal.win32.WSASYSNOTREADY*/;
TYPE$16 V$50468312/*aspel.internal.win32.WSAVERNOTSUPPORTED*/;
TYPE$16 V$50468376/*aspel.internal.win32.WSANOTINITIALISED*/;
TYPE$16 V$50468440/*aspel.internal.win32.WSAEDISCON*/;
TYPE$16 V$50468504/*aspel.internal.win32.WSAENOMORE*/;
TYPE$16 V$50468568/*aspel.internal.win32.WSAECANCELLED*/;
TYPE$16 V$50468632/*aspel.internal.win32.WSAEINVALIDPROCTABLE*/;
TYPE$16 V$50468696/*aspel.internal.win32.WSAEINVALIDPROVIDER*/;
TYPE$16 V$50468760/*aspel.internal.win32.WSAEPROVIDERFAILEDINIT*/;
TYPE$16 V$50468824/*aspel.internal.win32.WSASYSCALLFAILURE*/;
TYPE$16 V$50468888/*aspel.internal.win32.WSASERVICE_NOT_FOUND*/;
TYPE$16 V$50468952/*aspel.internal.win32.WSATYPE_NOT_FOUND*/;
TYPE$16 V$50469016/*aspel.internal.win32.WSA_E_NO_MORE*/;
TYPE$16 V$50469080/*aspel.internal.win32.WSA_E_CANCELLED*/;
TYPE$16 V$50469144/*aspel.internal.win32.WSAEREFUSED*/;
TYPE$16 V$50469208/*aspel.internal.win32.WSAHOST_NOT_FOUND*/;
TYPE$16 V$50469272/*aspel.internal.win32.WSATRY_AGAIN*/;
TYPE$16 V$50469336/*aspel.internal.win32.WSANO_RECOVERY*/;
TYPE$16 V$50469400/*aspel.internal.win32.WSANO_DATA*/;
TYPE$16 V$50469464/*aspel.internal.win32.WSA_QOS_RECEIVERS*/;
TYPE$16 V$50469528/*aspel.internal.win32.WSA_QOS_SENDERS*/;
TYPE$16 V$50469592/*aspel.internal.win32.WSA_QOS_NO_SENDERS*/;
TYPE$16 V$50469656/*aspel.internal.win32.WSA_QOS_NO_RECEIVERS*/;
TYPE$16 V$50469720/*aspel.internal.win32.WSA_QOS_REQUEST_CONFIRMED*/;
TYPE$16 V$50469784/*aspel.internal.win32.WSA_QOS_ADMISSION_FAILURE*/;
TYPE$16 V$50469848/*aspel.internal.win32.WSA_QOS_POLICY_FAILURE*/;
TYPE$16 V$50469912/*aspel.internal.win32.WSA_QOS_BAD_STYLE*/;
TYPE$16 V$50469976/*aspel.internal.win32.WSA_QOS_BAD_OBJECT*/;
TYPE$16 V$50470040/*aspel.internal.win32.WSA_QOS_TRAFFIC_CTRL_ERROR*/;
TYPE$16 V$50470104/*aspel.internal.win32.WSA_QOS_GENERIC_ERROR*/;
TYPE$16 V$50470168/*aspel.internal.win32.WSA_QOS_ESERVICETYPE*/;
TYPE$16 V$50470232/*aspel.internal.win32.WSA_QOS_EFLOWSPEC*/;
TYPE$16 V$50470296/*aspel.internal.win32.WSA_QOS_EPROVSPECBUF*/;
TYPE$16 V$50470360/*aspel.internal.win32.WSA_QOS_EFILTERSTYLE*/;
TYPE$16 V$50470424/*aspel.internal.win32.WSA_QOS_EFILTERTYPE*/;
TYPE$16 V$50470488/*aspel.internal.win32.WSA_QOS_EFILTERCOUNT*/;
TYPE$16 V$50470552/*aspel.internal.win32.WSA_QOS_EOBJLENGTH*/;
TYPE$16 V$50470616/*aspel.internal.win32.WSA_QOS_EFLOWCOUNT*/;
TYPE$16 V$54882200/*aspel.internal.win32.WSA_QOS_EUNKOWNPSOBJ*/;
TYPE$16 V$54882264/*aspel.internal.win32.WSA_QOS_EPOLICYOBJ*/;
TYPE$16 V$54882328/*aspel.internal.win32.WSA_QOS_EFLOWDESC*/;
TYPE$16 V$54882392/*aspel.internal.win32.WSA_QOS_EPSFLOWSPEC*/;
TYPE$16 V$54882456/*aspel.internal.win32.WSA_QOS_EPSFILTERSPEC*/;
TYPE$16 V$54882520/*aspel.internal.win32.WSA_QOS_ESDMODEOBJ*/;
TYPE$16 V$54882584/*aspel.internal.win32.WSA_QOS_ESHAPERATEOBJ*/;
TYPE$16 V$54882648/*aspel.internal.win32.WSA_QOS_RESERVED_PETYPE*/;
TYPE$16 V$54882712/*aspel.internal.win32.WSA_SECURE_HOST_NOT_FOUND*/;
TYPE$16 V$54882776/*aspel.internal.win32.WSA_IPSEC_NAME_POLICY_ERROR*/;
TYPE$16 V$54882840/*aspel.internal.win32.AF_UNSPEC*/;
TYPE$16 V$54882904/*aspel.internal.win32.AF_UNIX*/;
TYPE$16 V$54882968/*aspel.internal.win32.AF_INET*/;
TYPE$16 V$54883032/*aspel.internal.win32.AF_IMPLINK*/;
TYPE$16 V$54883096/*aspel.internal.win32.AF_PUP*/;
TYPE$16 V$54883160/*aspel.internal.win32.AF_CHAOS*/;
TYPE$16 V$54883224/*aspel.internal.win32.AF_NS*/;
TYPE$16 V$54883288/*aspel.internal.win32.AF_IPX*/;
TYPE$16 V$54883352/*aspel.internal.win32.AF_ISO*/;
TYPE$16 V$54883416/*aspel.internal.win32.AF_OSI*/;
TYPE$16 V$54883480/*aspel.internal.win32.AF_ECMA*/;
TYPE$16 V$54883544/*aspel.internal.win32.AF_DATAKIT*/;
TYPE$16 V$54883608/*aspel.internal.win32.AF_CCITT*/;
TYPE$16 V$54883672/*aspel.internal.win32.AF_SNA*/;
TYPE$16 V$54883736/*aspel.internal.win32.AF_DECnet*/;
TYPE$16 V$54883800/*aspel.internal.win32.AF_DLI*/;
TYPE$16 V$54883864/*aspel.internal.win32.AF_LAT*/;
TYPE$16 V$54883928/*aspel.internal.win32.AF_HYLINK*/;
TYPE$16 V$54883992/*aspel.internal.win32.AF_APPLETALK*/;
TYPE$16 V$54884056/*aspel.internal.win32.AF_NETBIOS*/;
TYPE$16 V$54884120/*aspel.internal.win32.AF_VOICEVIEW*/;
TYPE$16 V$54884184/*aspel.internal.win32.AF_FIREFOX*/;
TYPE$16 V$54884248/*aspel.internal.win32.AF_UNKNOWN1*/;
TYPE$16 V$54884312/*aspel.internal.win32.AF_BAN*/;
TYPE$16 V$54884376/*aspel.internal.win32.AF_ATM*/;
TYPE$16 V$54884440/*aspel.internal.win32.AF_INET6*/;
TYPE$16 V$54884504/*aspel.internal.win32.AF_CLUSTER*/;
TYPE$16 V$54884568/*aspel.internal.win32.AF_12844*/;
TYPE$16 V$54884632/*aspel.internal.win32.AF_IRDA*/;
TYPE$16 V$54884696/*aspel.internal.win32.AF_NETDES*/;
TYPE$16 V$54884760/*aspel.internal.win32.SOCK_STREAM*/;
TYPE$16 V$54884824/*aspel.internal.win32.SOCK_DGRAM*/;
TYPE$16 V$54884888/*aspel.internal.win32.SOCK_RAW*/;
TYPE$16 V$54884952/*aspel.internal.win32.SOCK_RDM*/;
TYPE$16 V$54885016/*aspel.internal.win32.SOCK_SEQPACKET*/;
TYPE$16 V$54885080/*aspel.internal.win32.IPPROTO_IP*/;
TYPE$16 V$54885144/*aspel.internal.win32.IPPROTO_ICMP*/;
TYPE$16 V$54885208/*aspel.internal.win32.IPPROTO_IGMP*/;
TYPE$16 V$54885272/*aspel.internal.win32.IPPROTO_GGP*/;
TYPE$16 V$54885336/*aspel.internal.win32.IPPROTO_TCP*/;
TYPE$16 V$54885400/*aspel.internal.win32.IPPROTO_PUP*/;
TYPE$16 V$54885464/*aspel.internal.win32.IPPROTO_UDP*/;
TYPE$16 V$54885528/*aspel.internal.win32.IPPROTO_IDP*/;
TYPE$16 V$54885592/*aspel.internal.win32.IPPROTO_ND*/;
TYPE$16 V$54885656/*aspel.internal.win32.AI_PASSIVE*/;
TYPE$16 V$54885720/*aspel.internal.win32.AI_CANONNAME*/;
TYPE$16 V$54885784/*aspel.internal.win32.AI_NUMERICHOST*/;
TYPE$16 V$54885848/*aspel.internal.win32.AI_NUMERICSERV*/;
TYPE$16 V$54885912/*aspel.internal.win32.AI_ALL*/;
TYPE$16 V$54885976/*aspel.internal.win32.AI_ADDRCONFIG*/;
TYPE$16 V$54886040/*aspel.internal.win32.AI_V4MAPPED*/;
TYPE$16 V$54886104/*aspel.internal.win32.AI_NON_AUTHORITATIVE*/;
TYPE$16 V$54886168/*aspel.internal.win32.AI_SECURE*/;
TYPE$16 V$54886232/*aspel.internal.win32.AI_RETURN_PREFERRED_NAMES*/;
TYPE$16 V$54886296/*aspel.internal.win32.AI_FQDN*/;
TYPE$16 V$54886360/*aspel.internal.win32.AI_FILESERVER*/;
TYPE$16 V$54886424/*aspel.internal.win32.AI_DISABLE_IDN_ENCODING*/;
TYPE$16 V$54886488/*aspel.internal.win32.AI_EXTENDED*/;
TYPE$28 V$54896536/*aspel.internal.win32.FOREGROUND_BLUE*/;
TYPE$28 V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/;
TYPE$28 V$54896664/*aspel.internal.win32.FOREGROUND_RED*/;
TYPE$28 V$54896728/*aspel.internal.win32.FOREGROUND_INTENSITY*/;
TYPE$28 V$54896792/*aspel.internal.win32.BACKGROUND_BLUE*/;
TYPE$28 V$54896856/*aspel.internal.win32.BACKGROUND_GREEN*/;
TYPE$28 V$54896920/*aspel.internal.win32.BACKGROUND_RED*/;
TYPE$28 V$54896984/*aspel.internal.win32.BACKGROUND_INTENSITY*/;
TYPE$28 V$54897048/*aspel.internal.win32.COMMON_LVB_LEADING_BYTE*/;
TYPE$28 V$54897112/*aspel.internal.win32.COMMON_LVB_TRAILING_BYTE*/;
TYPE$28 V$54897176/*aspel.internal.win32.COMMON_LVB_GRID_HORIZONTAL*/;
TYPE$28 V$54897240/*aspel.internal.win32.COMMON_LVB_GRID_LVERTICAL*/;
TYPE$28 V$54897304/*aspel.internal.win32.COMMON_LVB_GRID_RVERTICAL*/;
TYPE$28 V$54897368/*aspel.internal.win32.COMMON_LVB_REVERSE_VIDEO*/;
TYPE$28 V$54897432/*aspel.internal.win32.COMMON_LVB_UNDERSCORE*/;
TYPE$19 V$54897496/*aspel.internal.win32.WM_CAPTURECHANGED*/;
TYPE$19 V$54897560/*aspel.internal.win32.WM_LBUTTONDBLCLK*/;
TYPE$19 V$54897624/*aspel.internal.win32.WM_LBUTTONDOWN*/;
TYPE$19 V$54897688/*aspel.internal.win32.WM_LBUTTONUP*/;
TYPE$19 V$54897752/*aspel.internal.win32.WM_MBUTTONDBLCLK*/;
TYPE$19 V$54897816/*aspel.internal.win32.WM_MBUTTONDOWN*/;
TYPE$19 V$54897880/*aspel.internal.win32.WM_MBUTTONUP*/;
TYPE$19 V$54897944/*aspel.internal.win32.WM_MOUSEACTIVATE*/;
TYPE$19 V$54898008/*aspel.internal.win32.WM_MOUSEHOVER*/;
TYPE$19 V$54898072/*aspel.internal.win32.WM_MOUSEHWHEEL*/;
TYPE$19 V$54898136/*aspel.internal.win32.WM_MOUSELEAVE*/;
TYPE$19 V$54898200/*aspel.internal.win32.WM_MOUSEMOVE*/;
TYPE$19 V$54898264/*aspel.internal.win32.WM_MOUSEWHEEL*/;
TYPE$19 V$54898328/*aspel.internal.win32.WM_NCHITTEST*/;
TYPE$19 V$54898392/*aspel.internal.win32.WM_NCLBUTTONDBLCLK*/;
TYPE$19 V$54898456/*aspel.internal.win32.WM_NCLBUTTONDOWN*/;
TYPE$19 V$54898520/*aspel.internal.win32.WM_NCLBUTTONUP*/;
TYPE$19 V$54898584/*aspel.internal.win32.WM_NCMBUTTONDBLCLK*/;
TYPE$19 V$54898648/*aspel.internal.win32.WM_NCMBUTTONDOWN*/;
TYPE$19 V$54898712/*aspel.internal.win32.WM_NCMBUTTONUP*/;
TYPE$19 V$54898776/*aspel.internal.win32.WM_NCMOUSEHOVER*/;
TYPE$19 V$54898840/*aspel.internal.win32.WM_NCMOUSELEAVE*/;
TYPE$19 V$54898904/*aspel.internal.win32.WM_NCMOUSEMOVE*/;
TYPE$19 V$54898968/*aspel.internal.win32.WM_NCRBUTTONDBLCLK*/;
TYPE$19 V$54899032/*aspel.internal.win32.WM_NCRBUTTONDOWN*/;
TYPE$19 V$54899096/*aspel.internal.win32.WM_NCRBUTTONUP*/;
TYPE$19 V$54899160/*aspel.internal.win32.WM_NCXBUTTONDBLCLK*/;
TYPE$19 V$54899224/*aspel.internal.win32.WM_NCXBUTTONDOWN*/;
TYPE$19 V$54899288/*aspel.internal.win32.WM_NCXBUTTONUP*/;
TYPE$19 V$54899352/*aspel.internal.win32.WM_RBUTTONDBLCLK*/;
TYPE$19 V$54899416/*aspel.internal.win32.WM_RBUTTONDOWN*/;
TYPE$19 V$54899480/*aspel.internal.win32.WM_RBUTTONUP*/;
TYPE$19 V$54899544/*aspel.internal.win32.WM_XBUTTONDBLCLK*/;
TYPE$19 V$54899608/*aspel.internal.win32.WM_XBUTTONDOWN*/;
TYPE$19 V$54899672/*aspel.internal.win32.WM_XBUTTONUP*/;
TYPE$19 V$54899736/*aspel.internal.win32.GMMP_USE_DISPLAY_POINTS*/;
TYPE$19 V$54899800/*aspel.internal.win32.GMMP_USE_HIGH_RESOLUTION_POINTS*/;
TYPE$19 V$54900760/*aspel.internal.win32.WM_INITMENUPOPUP*/;
TYPE$19 V$54900824/*aspel.internal.win32.WM_MENUCHAR*/;
TYPE$19 V$54900888/*aspel.internal.win32.WM_MENUSELECT*/;
TYPE$19 V$54900952/*aspel.internal.win32.WM_SYSCHAR*/;
TYPE$19 V$54901016/*aspel.internal.win32.WM_SYSCOMMAND*/;
TYPE$19 V$54901080/*aspel.internal.win32.SC_CLOSE*/;
TYPE$19 V$54901144/*aspel.internal.win32.SC_CONTEXTHELP*/;
TYPE$19 V$54901208/*aspel.internal.win32.SC_DEFAULT*/;
TYPE$19 V$54901272/*aspel.internal.win32.SC_HOTKEY*/;
TYPE$19 V$54901336/*aspel.internal.win32.SC_HSCROLL*/;
TYPE$19 V$54901400/*aspel.internal.win32.SCF_ISSECURE*/;
TYPE$19 V$54901464/*aspel.internal.win32.SC_KEYMENU*/;
TYPE$19 V$54901528/*aspel.internal.win32.SC_MAXIMIZE*/;
TYPE$19 V$54901592/*aspel.internal.win32.SC_MINIMIZE*/;
TYPE$19 V$54901656/*aspel.internal.win32.SC_MONITORPOWER*/;
TYPE$19 V$54901720/*aspel.internal.win32.SC_MOUSEMENU*/;
TYPE$19 V$54901784/*aspel.internal.win32.SC_MOVE*/;
TYPE$19 V$54901848/*aspel.internal.win32.SC_NEXTWINDOW*/;
TYPE$19 V$54901912/*aspel.internal.win32.SC_PREVWINDOW*/;
TYPE$19 V$54901976/*aspel.internal.win32.SC_RESTORE*/;
TYPE$19 V$54902040/*aspel.internal.win32.SC_SCREENSAVE*/;
TYPE$19 V$54902104/*aspel.internal.win32.SC_SIZE*/;
TYPE$19 V$54902168/*aspel.internal.win32.SC_TASKLIST*/;
TYPE$19 V$54902232/*aspel.internal.win32.SC_VSCROLL*/;
TYPE$19 V$54902296/*aspel.internal.win32.WM_ACTIVATE*/;
TYPE$19 V$54902360/*aspel.internal.win32.WA_ACTIVE*/;
TYPE$19 V$54902424/*aspel.internal.win32.WA_CLICKACTIVE*/;
TYPE$19 V$54902488/*aspel.internal.win32.WA_INACTIVE*/;
TYPE$19 V$54902552/*aspel.internal.win32.WM_APPCOMMAND*/;
TYPE$19 V$54902616/*aspel.internal.win32.WM_CHAR*/;
TYPE$19 V$54902680/*aspel.internal.win32.WM_DEADCHAR*/;
TYPE$19 V$54902744/*aspel.internal.win32.WM_HOTKEY*/;
TYPE$19 V$54902808/*aspel.internal.win32.WM_KEYDOWN*/;
TYPE$19 V$54902872/*aspel.internal.win32.WM_KEYUP*/;
TYPE$19 V$54902936/*aspel.internal.win32.WM_KILLFOCUS*/;
TYPE$19 V$54903000/*aspel.internal.win32.WM_SETFOCUS*/;
TYPE$19 V$54903064/*aspel.internal.win32.WM_SYSDEADCHAR*/;
TYPE$19 V$54903128/*aspel.internal.win32.WM_SYSKEYDOWN*/;
TYPE$19 V$54903192/*aspel.internal.win32.WM_SYSKEYUP*/;
TYPE$19 V$54903256/*aspel.internal.win32.WM_UNICHAR*/;
TYPE$19 V$54903320/*aspel.internal.win32.WM_INPUT*/;
TYPE$19 V$54903384/*aspel.internal.win32.RIM_INPUT*/;
TYPE$19 V$54903448/*aspel.internal.win32.RIM_INPUTSINK*/;
TYPE$19 V$54903512/*aspel.internal.win32.WM_INPUT_DEVICE_CHANGE*/;
TYPE$19 V$54903576/*aspel.internal.win32.GIDC_ARRIVAL*/;
TYPE$19 V$54903640/*aspel.internal.win32.GIDC_REMOVAL*/;
TYPE$19 V$54903704/*aspel.internal.win32.RIM_TYPEHID*/;
TYPE$19 V$54903768/*aspel.internal.win32.RIM_TYPEKEYBOARD*/;
TYPE$19 V$54903832/*aspel.internal.win32.RIM_TYPEMOUSE*/;
TYPE$19 V$54903896/*aspel.internal.win32.RIDEV_APPKEYS*/;
TYPE$19 V$54903960/*aspel.internal.win32.RIDEV_CAPTUREMOUSE*/;
TYPE$19 V$54904024/*aspel.internal.win32.RIDEV_DEVNOTIFY*/;
TYPE$19 V$54904088/*aspel.internal.win32.RIDEV_EXCLUDE*/;
TYPE$19 V$54904152/*aspel.internal.win32.RIDEV_EXINPUTSINK*/;
TYPE$19 V$54904216/*aspel.internal.win32.RIDEV_INPUTSINK*/;
TYPE$19 V$54904280/*aspel.internal.win32.RIDEV_NOHOTKEYS*/;
TYPE$19 V$54904344/*aspel.internal.win32.RIDEV_NOLEGACY*/;
TYPE$19 V$54904408/*aspel.internal.win32.RIDEV_PAGEONLY*/;
TYPE$19 V$54904472/*aspel.internal.win32.RIDEV_REMOVE*/;
TYPE$19 V$54908120/*aspel.internal.win32.RID_HEADER*/;
TYPE$19 V$54908184/*aspel.internal.win32.RID_INPUT*/;
TYPE$19 V$54908248/*aspel.internal.win32.RIDI_DEVICENAME*/;
TYPE$19 V$54908312/*aspel.internal.win32.RIDI_DEVICEINFO*/;
TYPE$19 V$54908376/*aspel.internal.win32.RIDI_PREPARSEDDATA*/;
TYPE$19 V$54908440/*aspel.internal.win32.GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS*/;
TYPE$19 V$54908504/*aspel.internal.win32.GET_MODULE_HANDLE_EX_FLAG_PIN*/;
TYPE$19 V$54908568/*aspel.internal.win32.GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT*/;
TYPE$19 V$54908632/*aspel.internal.win32.DONT_RESOLVE_DLL_REFERENCES*/;
TYPE$19 V$54908696/*aspel.internal.win32.LOAD_IGNORE_CODE_AUTHZ_LEVEL*/;
TYPE$19 V$54908760/*aspel.internal.win32.LOAD_LIBRARY_AS_DATAFILE*/;
TYPE$19 V$54908824/*aspel.internal.win32.LOAD_WITH_ALTERED_SEARCH_PATH*/;
TYPE$19 V$54908888/*aspel.internal.win32.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE*/;
TYPE$19 V$54908952/*aspel.internal.win32.LOAD_LIBRARY_AS_IMAGE_RESOURCE*/;
TYPE$19 V$54909016/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_APPLICATION_DIR*/;
TYPE$19 V$54909080/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS*/;
TYPE$19 V$54909144/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR*/;
TYPE$19 V$54909208/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_SYSTEM32*/;
TYPE$19 V$54909272/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_USER_DIRS*/;
TYPE$19 V$54910872/*aspel.internal.win32.DISPLAY_DEVICE_ACTIVE*/;
TYPE$19 V$54910936/*aspel.internal.win32.DISPLAY_DEVICE_MIRRORING_DRIVER*/;
TYPE$19 V$54911000/*aspel.internal.win32.DISPLAY_DEVICE_MODESPRUNED*/;
TYPE$19 V$54911064/*aspel.internal.win32.DISPLAY_DEVICE_PRIMARY_DEVICE*/;
TYPE$19 V$54911128/*aspel.internal.win32.DISPLAY_DEVICE_REMOVABLE*/;
TYPE$19 V$54911192/*aspel.internal.win32.DISPLAY_DEVICE_VGA_COMPATIBLE*/;
TYPE$19 V$54913112/*aspel.internal.win32.PFD_DOUBLEBUFFER*/;
TYPE$19 V$54913176/*aspel.internal.win32.PFD_STEREO*/;
TYPE$19 V$54913240/*aspel.internal.win32.PFD_DRAW_TO_WINDOW*/;
TYPE$19 V$54913304/*aspel.internal.win32.PFD_DRAW_TO_BITMAP*/;
TYPE$19 V$54913368/*aspel.internal.win32.PFD_SUPPORT_GDI*/;
TYPE$19 V$54913432/*aspel.internal.win32.PFD_SUPPORT_OPENGL*/;
TYPE$19 V$54913496/*aspel.internal.win32.PFD_GENERIC_FORMAT*/;
TYPE$19 V$54913560/*aspel.internal.win32.PFD_NEED_PALETTE*/;
TYPE$19 V$54913624/*aspel.internal.win32.PFD_NEED_SYSTEM_PALETTE*/;
TYPE$19 V$54913688/*aspel.internal.win32.PFD_SWAP_EXCHANGE*/;
TYPE$19 V$54913752/*aspel.internal.win32.PFD_SWAP_COPY*/;
TYPE$19 V$54913816/*aspel.internal.win32.PFD_SWAP_LAYER_BUFFERS*/;
TYPE$19 V$54913880/*aspel.internal.win32.PFD_GENERIC_ACCELERATED*/;
TYPE$19 V$54913944/*aspel.internal.win32.PFD_SUPPORT_DIRECTDRAW*/;
TYPE$19 V$54914008/*aspel.internal.win32.PFD_DIRECT3D_ACCELERATED*/;
TYPE$19 V$54914072/*aspel.internal.win32.PFD_SUPPORT_COMPOSITION*/;
TYPE$19 V$54914136/*aspel.internal.win32.PFD_DEPTH_DONTCARE*/;
TYPE$19 V$54914200/*aspel.internal.win32.PFD_DOUBLEBUFFER_DONTCARE*/;
TYPE$19 V$54914264/*aspel.internal.win32.PFD_STEREO_DONTCARE*/;
TYPE$2 V$54914328/*aspel.internal.win32.PFD_TYPE_RGBA*/;
TYPE$2 V$54914392/*aspel.internal.win32.PFD_TYPE_COLORINDEX*/;
TYPE$2 V$54914456/*aspel.internal.win32.PFD_MAIN_PLANE*/;
TYPE$2 V$54914520/*aspel.internal.win32.PFD_OVERLAY_PLANE*/;
TYPE$2 V$54914584/*aspel.internal.win32.PFD_UNDERLAY_PLANE*/;
TYPE$19 V$54914776/*aspel.internal.win32.WM_ENTERMENULOOP*/;
TYPE$19 V$54914840/*aspel.internal.win32.WM_EXITMENULOOP*/;
TYPE$19 V$54915992/*aspel.internal.win32.QS_ALLEVENTS*/;
TYPE$19 V$54916056/*aspel.internal.win32.QS_ALLINPUT*/;
TYPE$19 V$54916120/*aspel.internal.win32.QS_ALLPOSTMESSAGE*/;
TYPE$19 V$54916184/*aspel.internal.win32.QS_HOTKEY*/;
TYPE$19 V$54916248/*aspel.internal.win32.QS_INPUT*/;
TYPE$19 V$54916312/*aspel.internal.win32.QS_KEY*/;
TYPE$19 V$54916376/*aspel.internal.win32.QS_MOUSE*/;
TYPE$19 V$54916440/*aspel.internal.win32.QS_MOUSEBUTTON*/;
TYPE$19 V$54916504/*aspel.internal.win32.QS_MOUSEMOVE*/;
TYPE$19 V$54916568/*aspel.internal.win32.QS_PAINT*/;
TYPE$19 V$54916632/*aspel.internal.win32.QS_POSTMESSAGE*/;
TYPE$19 V$54916696/*aspel.internal.win32.QS_RAWINPUT*/;
TYPE$19 V$54916760/*aspel.internal.win32.QS_SENDMESSAGE*/;
TYPE$19 V$54916824/*aspel.internal.win32.QS_TIMER*/;
TYPE$19 V$54916888/*aspel.internal.win32.PM_NOREMOVE*/;
TYPE$19 V$54916952/*aspel.internal.win32.PM_REMOVE*/;
TYPE$19 V$54917016/*aspel.internal.win32.PM_NOYIELD*/;
TYPE$19 V$54917080/*aspel.internal.win32.PM_QS_INPUT*/;
TYPE$19 V$54917144/*aspel.internal.win32.PM_QS_PAINT*/;
TYPE$19 V$54917208/*aspel.internal.win32.PM_QS_POSTMESSAGE*/;
TYPE$19 V$54917272/*aspel.internal.win32.PM_QS_SENDMESSAGE*/;
TYPE$19 V$54920216/*aspel.internal.win32.GUI_CARETBLINKING*/;
TYPE$19 V$54920280/*aspel.internal.win32.GUI_INMENUMODE*/;
TYPE$19 V$54920344/*aspel.internal.win32.GUI_INMOVESIZE*/;
TYPE$19 V$54920408/*aspel.internal.win32.GUI_POPUPMENUMODE*/;
TYPE$19 V$54920472/*aspel.internal.win32.GUI_SYSTEMMENUMODE*/;
TYPE$19 V$54923224/*aspel.internal.win32.WPF_ASYNCWINDOWPLACEMENT*/;
TYPE$19 V$54923288/*aspel.internal.win32.WPF_RESTORETOMAXIMIZED*/;
TYPE$19 V$54923352/*aspel.internal.win32.WPF_SETMINPOSITION*/;
TYPE$16 V$54923416/*aspel.internal.win32.SW_FORCEMINIMIZE*/;
TYPE$16 V$54923480/*aspel.internal.win32.SW_HIDE*/;
TYPE$16 V$54923544/*aspel.internal.win32.SW_MAXIMIZE*/;
TYPE$16 V$54923608/*aspel.internal.win32.SW_MINIMIZE*/;
TYPE$16 V$54923672/*aspel.internal.win32.SW_RESTORE*/;
TYPE$16 V$54923736/*aspel.internal.win32.SW_SHOW*/;
TYPE$16 V$54923800/*aspel.internal.win32.SW_SHOWDEFAULT*/;
TYPE$16 V$54923864/*aspel.internal.win32.SW_SHOWMAXIMIZED*/;
TYPE$16 V$54923928/*aspel.internal.win32.SW_SHOWMINIMIZED*/;
TYPE$16 V$54923992/*aspel.internal.win32.SW_SHOWMINNOACTIVE*/;
TYPE$16 V$54924056/*aspel.internal.win32.SW_SHOWNA*/;
TYPE$16 V$54924120/*aspel.internal.win32.SW_SHOWNOACTIVATE*/;
TYPE$16 V$54924184/*aspel.internal.win32.SW_SHOWNORMAL*/;
TYPE$19 V$54924888/*aspel.internal.win32.SWP_DRAWFRAME*/;
TYPE$19 V$54924952/*aspel.internal.win32.SWP_FRAMECHANGED*/;
TYPE$19 V$54925016/*aspel.internal.win32.SWP_HIDEWINDOW*/;
TYPE$19 V$54925080/*aspel.internal.win32.SWP_NOACTIVATE*/;
TYPE$19 V$54925144/*aspel.internal.win32.SWP_NOCOPYBITS*/;
TYPE$19 V$54925208/*aspel.internal.win32.SWP_NOMOVE*/;
TYPE$19 V$54925272/*aspel.internal.win32.SWP_NOOWNERZORDER*/;
TYPE$19 V$54925336/*aspel.internal.win32.SWP_NOREDRAW*/;
TYPE$19 V$54925400/*aspel.internal.win32.SWP_NOREPOSITION*/;
TYPE$19 V$54925464/*aspel.internal.win32.SWP_NOSENDCHANGING*/;
TYPE$19 V$54925528/*aspel.internal.win32.SWP_NOSIZE*/;
TYPE$19 V$54925592/*aspel.internal.win32.SWP_NOZORDER*/;
TYPE$19 V$54925656/*aspel.internal.win32.SWP_SHOWWINDOW*/;
TYPE$19 V$54925720/*aspel.internal.win32.WS_BORDER*/;
TYPE$19 V$54925784/*aspel.internal.win32.WS_CAPTION*/;
TYPE$19 V$54925848/*aspel.internal.win32.WS_CHILD*/;
TYPE$19 V$54925912/*aspel.internal.win32.WS_CHILDWINDOW*/;
TYPE$19 V$54925976/*aspel.internal.win32.WS_CLIPCHILDREN*/;
TYPE$19 V$54926040/*aspel.internal.win32.WS_CLIPSIBLINGS*/;
TYPE$19 V$54926104/*aspel.internal.win32.WS_DISABLED*/;
TYPE$19 V$54926168/*aspel.internal.win32.WS_DLGFRAME*/;
TYPE$19 V$54926232/*aspel.internal.win32.WS_GROUP*/;
TYPE$19 V$54926296/*aspel.internal.win32.WS_HSCROLL*/;
TYPE$19 V$54926360/*aspel.internal.win32.WS_ICONIC*/;
TYPE$19 V$54926424/*aspel.internal.win32.WS_MAXIMIZE*/;
TYPE$19 V$54926488/*aspel.internal.win32.WS_MAXIMIZEBOX*/;
TYPE$19 V$54926552/*aspel.internal.win32.WS_MINIMIZE*/;
TYPE$19 V$54926616/*aspel.internal.win32.WS_MINIMIZEBOX*/;
TYPE$19 V$54926680/*aspel.internal.win32.WS_OVERLAPPED*/;
TYPE$19 V$54926744/*aspel.internal.win32.WS_OVERLAPPEDWINDOW*/;
TYPE$19 V$54926808/*aspel.internal.win32.WS_POPUP*/;
TYPE$19 V$54926872/*aspel.internal.win32.WS_POPUPWINDOW*/;
TYPE$19 V$54926936/*aspel.internal.win32.WS_SIZEBOX*/;
TYPE$19 V$54927000/*aspel.internal.win32.WS_SYSMENU*/;
TYPE$19 V$54927064/*aspel.internal.win32.WS_TABSTOP*/;
TYPE$19 V$54927128/*aspel.internal.win32.WS_THICKFRAME*/;
TYPE$19 V$54927192/*aspel.internal.win32.WS_TILED*/;
TYPE$19 V$54927256/*aspel.internal.win32.WS_TILEDWINDOW*/;
TYPE$19 V$54927320/*aspel.internal.win32.WS_VISIBLE*/;
TYPE$19 V$54927384/*aspel.internal.win32.WS_VSCROLL*/;
TYPE$19 V$54927448/*aspel.internal.win32.WS_EX_ACCEPTFILES*/;
TYPE$19 V$54927512/*aspel.internal.win32.WS_EX_APPWINDOW*/;
TYPE$19 V$54927576/*aspel.internal.win32.WS_EX_CLIENTEDGE*/;
TYPE$19 V$54927640/*aspel.internal.win32.WS_EX_COMPOSITED*/;
TYPE$19 V$54927704/*aspel.internal.win32.WS_EX_CONTEXTHELP*/;
TYPE$19 V$54927768/*aspel.internal.win32.WS_EX_CONTROLPARENT*/;
TYPE$19 V$54927832/*aspel.internal.win32.WS_EX_DLGMODALFRAME*/;
TYPE$19 V$54927896/*aspel.internal.win32.WS_EX_LAYERED*/;
TYPE$19 V$54927960/*aspel.internal.win32.WS_EX_LAYOUTRTL*/;
TYPE$19 V$54928024/*aspel.internal.win32.WS_EX_LEFT*/;
TYPE$19 V$54928088/*aspel.internal.win32.WS_EX_LEFTSCROLLBAR*/;
TYPE$19 V$54928152/*aspel.internal.win32.WS_EX_LTRREADING*/;
TYPE$19 V$54928216/*aspel.internal.win32.WS_EX_MDICHILD*/;
TYPE$19 V$54928280/*aspel.internal.win32.WS_EX_NOACTIVATE*/;
TYPE$19 V$54928344/*aspel.internal.win32.WS_EX_NOINHERITLAYOUT*/;
TYPE$19 V$54928408/*aspel.internal.win32.WS_EX_NOPARENTNOTIFY*/;
TYPE$19 V$54928472/*aspel.internal.win32.WS_EX_NOREDIRECTIONBITMAP*/;
TYPE$19 V$54928536/*aspel.internal.win32.WS_EX_OVERLAPPEDWINDOW*/;
TYPE$19 V$54928600/*aspel.internal.win32.WS_EX_PALETTEWINDOW*/;
TYPE$19 V$54928664/*aspel.internal.win32.WS_EX_RIGHT*/;
TYPE$19 V$54928728/*aspel.internal.win32.WS_EX_RIGHTSCROLLBAR*/;
TYPE$19 V$54928792/*aspel.internal.win32.WS_EX_RTLREADING*/;
TYPE$19 V$54928856/*aspel.internal.win32.WS_EX_STATICEDGE*/;
TYPE$19 V$54928920/*aspel.internal.win32.WS_EX_TOOLWINDOW*/;
TYPE$19 V$54928984/*aspel.internal.win32.WS_EX_TOPMOST*/;
TYPE$19 V$54929048/*aspel.internal.win32.WS_EX_TRANSPARENT*/;
TYPE$19 V$54929112/*aspel.internal.win32.WS_EX_WINDOWEDGE*/;
TYPE$16 V$54929176/*aspel.internal.win32.CW_USEDEFAULT*/;
TYPE$19 V$54929240/*aspel.internal.win32.WM_ACTIVATEAPP*/;
TYPE$19 V$54929304/*aspel.internal.win32.WM_CANCELMODE*/;
TYPE$19 V$54929368/*aspel.internal.win32.WM_CHILDACTIVATE*/;
TYPE$19 V$54929432/*aspel.internal.win32.WM_CLOSE*/;
TYPE$19 V$54929496/*aspel.internal.win32.WM_COMPACTING*/;
TYPE$19 V$54929560/*aspel.internal.win32.WM_CREATE*/;
TYPE$19 V$54929624/*aspel.internal.win32.WM_DESTROY*/;
TYPE$19 V$54929688/*aspel.internal.win32.WM_DPICHANGED*/;
TYPE$19 V$54929752/*aspel.internal.win32.WM_ENABLE*/;
TYPE$19 V$54929816/*aspel.internal.win32.WM_ENTERSIZEMOVE*/;
TYPE$19 V$54929880/*aspel.internal.win32.WM_EXITSIZEMOVE*/;
TYPE$19 V$54929944/*aspel.internal.win32.WM_GETICON*/;
TYPE$19 V$54930008/*aspel.internal.win32.WM_GETMINMAXINFO*/;
TYPE$19 V$54930072/*aspel.internal.win32.WM_INPUTLANGCHANGE*/;
TYPE$19 V$54930136/*aspel.internal.win32.WM_INPUTLANGCHANGEREQUEST*/;
TYPE$19 V$54930200/*aspel.internal.win32.WM_MOVE*/;
TYPE$19 V$54930264/*aspel.internal.win32.WM_MOVING*/;
TYPE$19 V$54930328/*aspel.internal.win32.WM_NCACTIVATE*/;
TYPE$19 V$54930392/*aspel.internal.win32.WM_NCCALCSIZE*/;
TYPE$19 V$54930456/*aspel.internal.win32.WM_NCCREATE*/;
TYPE$19 V$54930520/*aspel.internal.win32.WM_NCDESTROY*/;
TYPE$19 V$54930584/*aspel.internal.win32.WM_NULL*/;
TYPE$19 V$54930648/*aspel.internal.win32.WM_QUERYDRAGICON*/;
TYPE$19 V$54930712/*aspel.internal.win32.WM_QUERYOPEN*/;
TYPE$19 V$54930776/*aspel.internal.win32.WM_QUIT*/;
TYPE$19 V$54930840/*aspel.internal.win32.WM_SHOWWINDOW*/;
TYPE$19 V$54930904/*aspel.internal.win32.WM_SIZE*/;
TYPE$19 V$54930968/*aspel.internal.win32.WM_SIZING*/;
TYPE$19 V$54931032/*aspel.internal.win32.WM_STYLECHANGED*/;
TYPE$19 V$54931096/*aspel.internal.win32.WM_STYLECHANGING*/;
TYPE$19 V$54931160/*aspel.internal.win32.WM_THEMECHANGED*/;
TYPE$19 V$54931224/*aspel.internal.win32.WM_USERCHANGED*/;
TYPE$19 V$54931288/*aspel.internal.win32.WM_WINDOWPOSCHANGED*/;
TYPE$19 V$54931352/*aspel.internal.win32.WM_WINDOWPOSCHANGING*/;
TYPE$19 V$54933208/*aspel.internal.win32.CS_BYTEALIGNCLIENT*/;
TYPE$19 V$54933272/*aspel.internal.win32.CS_BYTEALIGNWINDOW*/;
TYPE$19 V$54933336/*aspel.internal.win32.CS_CLASSDC*/;
TYPE$19 V$54933400/*aspel.internal.win32.CS_DBLCLKS*/;
TYPE$19 V$54933464/*aspel.internal.win32.CS_DROPSHADOW*/;
TYPE$19 V$54933528/*aspel.internal.win32.CS_GLOBALCLASS*/;
TYPE$19 V$54933592/*aspel.internal.win32.CS_HREDRAW*/;
TYPE$19 V$54933656/*aspel.internal.win32.CS_NOCLOSE*/;
TYPE$19 V$54933720/*aspel.internal.win32.CS_OWNDC*/;
TYPE$19 V$54933784/*aspel.internal.win32.CS_PARENTDC*/;
TYPE$19 V$54933848/*aspel.internal.win32.CS_SAVEBITS*/;
TYPE$19 V$54933912/*aspel.internal.win32.CS_VREDRAW*/;
TYPE$16 V$54933976/*aspel.internal.win32.GCW_ATOM*/;
TYPE$16 V$54934040/*aspel.internal.win32.GCL_CBCLSEXTRA*/;
TYPE$16 V$54934104/*aspel.internal.win32.GCL_CBWNDEXTRA*/;
TYPE$16 V$54934168/*aspel.internal.win32.GCL_HBRBACKGROUND*/;
TYPE$16 V$54934232/*aspel.internal.win32.GCL_HCURSOR*/;
TYPE$16 V$54934296/*aspel.internal.win32.GCL_HICON*/;
TYPE$16 V$54934360/*aspel.internal.win32.GCL_HICONSM*/;
TYPE$16 V$54934424/*aspel.internal.win32.GCL_HMODULE*/;
TYPE$16 V$54934488/*aspel.internal.win32.GCL_MENUNAME*/;
TYPE$16 V$54934552/*aspel.internal.win32.GCL_STYLE*/;
TYPE$16 V$54934616/*aspel.internal.win32.GCL_WNDPROC*/;
TYPE$16 V$54934680/*aspel.internal.win32.GWL_EXSTYLE*/;
TYPE$16 V$54934744/*aspel.internal.win32.GWL_HINSTANCE*/;
TYPE$16 V$54934808/*aspel.internal.win32.GWL_HWNDPARENT*/;
TYPE$16 V$54934872/*aspel.internal.win32.GWL_ID*/;
TYPE$16 V$54934936/*aspel.internal.win32.GWL_STYLE*/;
TYPE$16 V$54935000/*aspel.internal.win32.GWL_USERDATA*/;
TYPE$16 V$54935064/*aspel.internal.win32.GWL_WNDPROC*/;
TYPE$19 V$54935832/*aspel.internal.win32.INVALID_HANDLE_VALUE*/;
TYPE$19 V$54935896/*aspel.internal.win32.FORMAT_MESSAGE_ALLOCATE_BUFFER*/;
TYPE$19 V$54935960/*aspel.internal.win32.FORMAT_MESSAGE_ARGUMENT_ARRAY*/;
TYPE$19 V$54936024/*aspel.internal.win32.FORMAT_MESSAGE_FROM_HMODULE*/;
TYPE$19 V$54936088/*aspel.internal.win32.FORMAT_MESSAGE_FROM_STRING*/;
TYPE$19 V$54936152/*aspel.internal.win32.FORMAT_MESSAGE_FROM_SYSTEM*/;
TYPE$19 V$54936216/*aspel.internal.win32.FORMAT_MESSAGE_IGNORE_INSERTS*/;
TYPE$19 V$54936280/*aspel.internal.win32.INFINITE*/;
TYPE$19 V$54938456/*aspel.internal.win32.WAIT_ABANDONED*/;
TYPE$19 V$54938520/*aspel.internal.win32.WAIT_OBJECT_0*/;
TYPE$19 V$54938584/*aspel.internal.win32.WAIT_TIMEOUT*/;
TYPE$19 V$54938648/*aspel.internal.win32.WAIT_FAILED*/;
TYPE$19 V$54938712/*aspel.internal.win32.DUPLICATE_CLOSE_SOURCE*/;
TYPE$19 V$54938776/*aspel.internal.win32.DUPLICATE_SAME_ACCESS*/;
TYPE$19 V$54938840/*aspel.internal.win32.HANDLE_FLAG_INHERIT*/;
TYPE$19 V$54938904/*aspel.internal.win32.HANDLE_FLAG_PROTECT_FROM_CLOSE*/;
TYPE$1 V$54950296/*aspel.internal.win32.WIN32*/;

typedef struct {
    TYPE$5 V$15413376/*aspel.thread.current_thread*/;
    TYPE$5 V$15413440/*aspel.thread.current_thread_id*/;
    TYPE$7 V$15413504/*aspel.thread.current_thread_argument*/;
    TYPE$2 V$15414464/*aspel.text.NODE_SPLIT*/;
    TYPE$2 V$15414528/*aspel.text.NODE_MATCH*/;
    TYPE$19 V$15422720/*aspel.text.TOKEN_STATE_WHITESPACE*/;
    TYPE$19 V$15422784/*aspel.text.TOKEN_STATE_WORD*/;
    TYPE$19 V$15422848/*aspel.text.TOKEN_STATE_NUMBER*/;
    TYPE$19 V$46951200/*aspel.text.CONTEXT_STATE_INITIAL*/;
    TYPE$19 V$46951264/*aspel.text.CONTEXT_STATE_COMPLETE*/;
    TYPE$19 V$46951328/*aspel.text.TOKEN_STATE_INITIAL*/;
    TYPE$19 V$46951392/*aspel.text.TOKEN_STATE_COMPLETE*/;
    TYPE$19 V$46951456/*aspel.text.TOKEN_STATE_ILLEGAL*/;
    TYPE$19 V$46951520/*aspel.text.TOKEN_STATE_ABORT*/;
    TYPE$4 V$46953120/*aspel.text.FORMAT_ERROR*/;
    TYPE$19 V$46953248/*aspel.text.FORMAT_ITEM_ALIGNMENT_LEFT*/;
    TYPE$19 V$46953312/*aspel.text.FORMAT_ITEM_ALIGNMENT_RIGHT*/;
    TYPE$19 V$46953376/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_LEFT*/;
    TYPE$19 V$46953440/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_RIGHT*/;
    TYPE$19 V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/;
    TYPE$19 V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/;
    TYPE$19 V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/;
    TYPE$19 V$46965216/*aspel.text.SENTINEL*/;
    TYPE$19 V$46965280/*aspel.text.REPLACEMENT_CHARACTER*/;
    TYPE$51 V$47573384/*aspel.math.E*/;
    TYPE$51 V$47573448/*aspel.math.PI*/;
    TYPE$172 V$47573512/*aspel.math.FLOAT32_NAN*/;
    TYPE$172 V$47573576/*aspel.math.FLOAT32_MAX_VALUE*/;
    TYPE$172 V$47573640/*aspel.math.FLOAT32_MIN_VALUE*/;
    TYPE$172 V$47573704/*aspel.math.FLOAT32_MIN_NORMAL*/;
    TYPE$16 V$47573768/*aspel.math.FLOAT32_MAX_EXPONENT*/;
    TYPE$16 V$47573832/*aspel.math.FLOAT32_MIN_EXPONENT*/;
    TYPE$51 V$47573896/*aspel.math.FLOAT64_NAN*/;
    TYPE$51 V$47573960/*aspel.math.FLOAT64_MAX_VALUE*/;
    TYPE$51 V$47574024/*aspel.math.FLOAT64_MIN_VALUE*/;
    TYPE$51 V$47574088/*aspel.math.FLOAT64_MIN_NORMAL*/;
    TYPE$16 V$47574152/*aspel.math.FLOAT64_MAX_EXPONENT*/;
    TYPE$16 V$47574216/*aspel.math.FLOAT64_MIN_EXPONENT*/;
    TYPE$5 V$47575752/*aspel.math.DEFAULT_INITIAL_LENGTH*/;
    TYPE$2 V$47585096/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_LINE*/;
    TYPE$2 V$47585160/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_FILL*/;
    TYPE$412 V$47593032/*aspel.cml.ui.layouts.HORIZONTAL_LAYOUT*/;
    TYPE$412 V$47596680/*aspel.cml.ui.layouts.VERTICAL_LAYOUT*/;
    TYPE$412 V$47600328/*aspel.cml.ui.layouts.PANE_LAYOUT*/;
    TYPE$16 V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/;
    TYPE$16 V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/;
    TYPE$412 V$47604040/*aspel.cml.ui.layouts.ROOT_LAYOUT*/;
    TYPE$5 V$47605768/*aspel.cml.ui.style_array_size*/;
    TYPE$401 V$47606024/*aspel.cml.ui.STYLE_SIZE_PADDING_VERTICAL*/;
    TYPE$401 V$47606088/*aspel.cml.ui.STYLE_SIZE_PADDING_HORIZONTAL*/;
    TYPE$401 V$47606152/*aspel.cml.ui.STYLE_DIMENSIONS_BUTTON*/;
    TYPE$401 V$47606216/*aspel.cml.ui.STYLE_MARGINS*/;
    TYPE$401 V$47606280/*aspel.cml.ui.STYLE_MARGINS_PANE*/;
    TYPE$401 V$47606344/*aspel.cml.ui.STYLE_COLOR_TEXT*/;
    TYPE$401 V$47606408/*aspel.cml.ui.STYLE_COLOR_TEXT_FOCUS*/;
    TYPE$401 V$47606472/*aspel.cml.ui.STYLE_COLOR_BORDER*/;
    TYPE$401 V$47606536/*aspel.cml.ui.STYLE_COLOR_BUTTON*/;
    TYPE$401 V$47606600/*aspel.cml.ui.STYLE_COLOR_BUTTON_HOT*/;
    TYPE$401 V$47606664/*aspel.cml.ui.STYLE_COLOR_BUTTON_FOCUS*/;
    TYPE$191 V$47612104/*aspel.cml.ui.WIDGET_NONE*/;
    TYPE$28 V$47614664/*aspel.cml.event.KEYMOD_LSHIFT*/;
    TYPE$28 V$47614728/*aspel.cml.event.KEYMOD_RSHIFT*/;
    TYPE$28 V$47614792/*aspel.cml.event.KEYMOD_LCTRL*/;
    TYPE$28 V$47614856/*aspel.cml.event.KEYMOD_RCTRL*/;
    TYPE$28 V$47614920/*aspel.cml.event.KEYMOD_LALT*/;
    TYPE$28 V$47614984/*aspel.cml.event.KEYMOD_RALT*/;
    TYPE$28 V$47615048/*aspel.cml.event.KEYMOD_LGUI*/;
    TYPE$28 V$47615112/*aspel.cml.event.KEYMOD_RGUI*/;
    TYPE$28 V$47615176/*aspel.cml.event.KEYMOD_NUM*/;
    TYPE$28 V$47615240/*aspel.cml.event.KEYMOD_CAPS*/;
    TYPE$28 V$47615304/*aspel.cml.event.KEYMOD_MODE*/;
    TYPE$16 V$47615432/*aspel.cml.event.SCANCODE_A*/;
    TYPE$16 V$47615496/*aspel.cml.event.SCANCODE_B*/;
    TYPE$16 V$47615560/*aspel.cml.event.SCANCODE_C*/;
    TYPE$16 V$47615624/*aspel.cml.event.SCANCODE_D*/;
    TYPE$16 V$47615688/*aspel.cml.event.SCANCODE_E*/;
    TYPE$16 V$47615752/*aspel.cml.event.SCANCODE_F*/;
    TYPE$16 V$47615816/*aspel.cml.event.SCANCODE_G*/;
    TYPE$16 V$47615880/*aspel.cml.event.SCANCODE_H*/;
    TYPE$16 V$47615944/*aspel.cml.event.SCANCODE_I*/;
    TYPE$16 V$47616008/*aspel.cml.event.SCANCODE_J*/;
    TYPE$16 V$47616072/*aspel.cml.event.SCANCODE_K*/;
    TYPE$16 V$47616136/*aspel.cml.event.SCANCODE_L*/;
    TYPE$16 V$47616200/*aspel.cml.event.SCANCODE_M*/;
    TYPE$16 V$47616264/*aspel.cml.event.SCANCODE_N*/;
    TYPE$16 V$47616328/*aspel.cml.event.SCANCODE_O*/;
    TYPE$16 V$47616392/*aspel.cml.event.SCANCODE_P*/;
    TYPE$16 V$47616456/*aspel.cml.event.SCANCODE_Q*/;
    TYPE$16 V$47616520/*aspel.cml.event.SCANCODE_R*/;
    TYPE$16 V$47616584/*aspel.cml.event.SCANCODE_S*/;
    TYPE$16 V$47616648/*aspel.cml.event.SCANCODE_T*/;
    TYPE$16 V$47616712/*aspel.cml.event.SCANCODE_U*/;
    TYPE$16 V$47616776/*aspel.cml.event.SCANCODE_V*/;
    TYPE$16 V$47616840/*aspel.cml.event.SCANCODE_W*/;
    TYPE$16 V$47616904/*aspel.cml.event.SCANCODE_X*/;
    TYPE$16 V$47616968/*aspel.cml.event.SCANCODE_Y*/;
    TYPE$16 V$47617032/*aspel.cml.event.SCANCODE_Z*/;
    TYPE$16 V$47617096/*aspel.cml.event.SCANCODE_1*/;
    TYPE$16 V$47617160/*aspel.cml.event.SCANCODE_2*/;
    TYPE$16 V$47617224/*aspel.cml.event.SCANCODE_3*/;
    TYPE$16 V$47617288/*aspel.cml.event.SCANCODE_4*/;
    TYPE$16 V$47617352/*aspel.cml.event.SCANCODE_5*/;
    TYPE$16 V$47617416/*aspel.cml.event.SCANCODE_6*/;
    TYPE$16 V$47617480/*aspel.cml.event.SCANCODE_7*/;
    TYPE$16 V$47617544/*aspel.cml.event.SCANCODE_8*/;
    TYPE$16 V$47617608/*aspel.cml.event.SCANCODE_9*/;
    TYPE$16 V$47617672/*aspel.cml.event.SCANCODE_0*/;
    TYPE$16 V$47617736/*aspel.cml.event.SCANCODE_RETURN*/;
    TYPE$16 V$47617800/*aspel.cml.event.SCANCODE_ESCAPE*/;
    TYPE$16 V$47617864/*aspel.cml.event.SCANCODE_BACKSPACE*/;
    TYPE$16 V$47617928/*aspel.cml.event.SCANCODE_TAB*/;
    TYPE$16 V$47617992/*aspel.cml.event.SCANCODE_SPACE*/;
    TYPE$16 V$47618056/*aspel.cml.event.SCANCODE_MINUS*/;
    TYPE$16 V$47618120/*aspel.cml.event.SCANCODE_EQUALS*/;
    TYPE$16 V$47618184/*aspel.cml.event.SCANCODE_LEFTBRACKET*/;
    TYPE$16 V$47618248/*aspel.cml.event.SCANCODE_RIGHTBRACKET*/;
    TYPE$16 V$47618312/*aspel.cml.event.SCANCODE_BACKSLASH*/;
    TYPE$16 V$47618376/*aspel.cml.event.SCANCODE_NONUSHASH*/;
    TYPE$16 V$47618440/*aspel.cml.event.SCANCODE_SEMICOLON*/;
    TYPE$16 V$47618504/*aspel.cml.event.SCANCODE_APOSTROPHE*/;
    TYPE$16 V$47618568/*aspel.cml.event.SCANCODE_GRAVE*/;
    TYPE$16 V$47618632/*aspel.cml.event.SCANCODE_COMMA*/;
    TYPE$16 V$47618696/*aspel.cml.event.SCANCODE_PERIOD*/;
    TYPE$16 V$47618760/*aspel.cml.event.SCANCODE_SLASH*/;
    TYPE$16 V$47618824/*aspel.cml.event.SCANCODE_CAPSLOCK*/;
    TYPE$16 V$47618888/*aspel.cml.event.SCANCODE_F1*/;
    TYPE$16 V$47618952/*aspel.cml.event.SCANCODE_F2*/;
    TYPE$16 V$47619016/*aspel.cml.event.SCANCODE_F3*/;
    TYPE$16 V$47619080/*aspel.cml.event.SCANCODE_F4*/;
    TYPE$16 V$47619144/*aspel.cml.event.SCANCODE_F5*/;
    TYPE$16 V$47619208/*aspel.cml.event.SCANCODE_F6*/;
    TYPE$16 V$47619272/*aspel.cml.event.SCANCODE_F7*/;
    TYPE$16 V$47619336/*aspel.cml.event.SCANCODE_F8*/;
    TYPE$16 V$47619400/*aspel.cml.event.SCANCODE_F9*/;
    TYPE$16 V$47619464/*aspel.cml.event.SCANCODE_F10*/;
    TYPE$16 V$47619528/*aspel.cml.event.SCANCODE_F11*/;
    TYPE$16 V$47619592/*aspel.cml.event.SCANCODE_F12*/;
    TYPE$16 V$47619656/*aspel.cml.event.SCANCODE_PRINTSCREEN*/;
    TYPE$16 V$47619720/*aspel.cml.event.SCANCODE_SCROLLLOCK*/;
    TYPE$16 V$47619784/*aspel.cml.event.SCANCODE_PAUSE*/;
    TYPE$16 V$47619848/*aspel.cml.event.SCANCODE_INSERT*/;
    TYPE$16 V$47619912/*aspel.cml.event.SCANCODE_HOME*/;
    TYPE$16 V$47619976/*aspel.cml.event.SCANCODE_PAGEUP*/;
    TYPE$16 V$47620040/*aspel.cml.event.SCANCODE_DELETE*/;
    TYPE$16 V$47620104/*aspel.cml.event.SCANCODE_END*/;
    TYPE$16 V$47620168/*aspel.cml.event.SCANCODE_PAGEDOWN*/;
    TYPE$16 V$47620232/*aspel.cml.event.SCANCODE_RIGHT*/;
    TYPE$16 V$47620296/*aspel.cml.event.SCANCODE_LEFT*/;
    TYPE$16 V$47620360/*aspel.cml.event.SCANCODE_DOWN*/;
    TYPE$16 V$47620424/*aspel.cml.event.SCANCODE_UP*/;
    TYPE$16 V$47620488/*aspel.cml.event.SCANCODE_NUMLOCKCLEAR*/;
    TYPE$16 V$47620552/*aspel.cml.event.SCANCODE_KP_DIVIDE*/;
    TYPE$16 V$47620616/*aspel.cml.event.SCANCODE_KP_MULTIPLY*/;
    TYPE$16 V$47620680/*aspel.cml.event.SCANCODE_KP_MINUS*/;
    TYPE$16 V$47620744/*aspel.cml.event.SCANCODE_KP_PLUS*/;
    TYPE$16 V$47620808/*aspel.cml.event.SCANCODE_KP_ENTER*/;
    TYPE$16 V$47620872/*aspel.cml.event.SCANCODE_KP_1*/;
    TYPE$16 V$47620936/*aspel.cml.event.SCANCODE_KP_2*/;
    TYPE$16 V$47621000/*aspel.cml.event.SCANCODE_KP_3*/;
    TYPE$16 V$47621064/*aspel.cml.event.SCANCODE_KP_4*/;
    TYPE$16 V$47621128/*aspel.cml.event.SCANCODE_KP_5*/;
    TYPE$16 V$47621192/*aspel.cml.event.SCANCODE_KP_6*/;
    TYPE$16 V$47621256/*aspel.cml.event.SCANCODE_KP_7*/;
    TYPE$16 V$47621320/*aspel.cml.event.SCANCODE_KP_8*/;
    TYPE$16 V$47621384/*aspel.cml.event.SCANCODE_KP_9*/;
    TYPE$16 V$47621448/*aspel.cml.event.SCANCODE_KP_0*/;
    TYPE$16 V$47621512/*aspel.cml.event.SCANCODE_KP_PERIOD*/;
    TYPE$16 V$47621576/*aspel.cml.event.SCANCODE_NONUSBACKSLASH*/;
    TYPE$16 V$47621640/*aspel.cml.event.SCANCODE_APPLICATION*/;
    TYPE$16 V$47621704/*aspel.cml.event.SCANCODE_POWER*/;
    TYPE$16 V$47621768/*aspel.cml.event.SCANCODE_KP_EQUALS*/;
    TYPE$16 V$47621832/*aspel.cml.event.SCANCODE_F13*/;
    TYPE$16 V$47621896/*aspel.cml.event.SCANCODE_F14*/;
    TYPE$16 V$47621960/*aspel.cml.event.SCANCODE_F15*/;
    TYPE$16 V$47622024/*aspel.cml.event.SCANCODE_F16*/;
    TYPE$16 V$47622088/*aspel.cml.event.SCANCODE_F17*/;
    TYPE$16 V$47622152/*aspel.cml.event.SCANCODE_F18*/;
    TYPE$16 V$47622216/*aspel.cml.event.SCANCODE_F19*/;
    TYPE$16 V$47622280/*aspel.cml.event.SCANCODE_F20*/;
    TYPE$16 V$47622344/*aspel.cml.event.SCANCODE_F21*/;
    TYPE$16 V$47622408/*aspel.cml.event.SCANCODE_F22*/;
    TYPE$16 V$47622472/*aspel.cml.event.SCANCODE_F23*/;
    TYPE$16 V$47622536/*aspel.cml.event.SCANCODE_F24*/;
    TYPE$16 V$47622600/*aspel.cml.event.SCANCODE_EXECUTE*/;
    TYPE$16 V$47622664/*aspel.cml.event.SCANCODE_HELP*/;
    TYPE$16 V$47622728/*aspel.cml.event.SCANCODE_MENU*/;
    TYPE$16 V$47622792/*aspel.cml.event.SCANCODE_SELECT*/;
    TYPE$16 V$47622856/*aspel.cml.event.SCANCODE_STOP*/;
    TYPE$16 V$47622920/*aspel.cml.event.SCANCODE_AGAIN*/;
    TYPE$16 V$47622984/*aspel.cml.event.SCANCODE_UNDO*/;
    TYPE$16 V$47623048/*aspel.cml.event.SCANCODE_CUT*/;
    TYPE$16 V$47623112/*aspel.cml.event.SCANCODE_COPY*/;
    TYPE$16 V$47623176/*aspel.cml.event.SCANCODE_PASTE*/;
    TYPE$16 V$47623240/*aspel.cml.event.SCANCODE_FIND*/;
    TYPE$16 V$47623304/*aspel.cml.event.SCANCODE_MUTE*/;
    TYPE$16 V$47623368/*aspel.cml.event.SCANCODE_VOLUMEUP*/;
    TYPE$16 V$47623432/*aspel.cml.event.SCANCODE_VOLUMEDOWN*/;
    TYPE$16 V$47623496/*aspel.cml.event.SCANCODE_KP_COMMA*/;
    TYPE$16 V$47623560/*aspel.cml.event.SCANCODE_KP_EQUALSAS400*/;
    TYPE$16 V$47623624/*aspel.cml.event.SCANCODE_INTERNATIONAL1*/;
    TYPE$16 V$47623688/*aspel.cml.event.SCANCODE_INTERNATIONAL2*/;
    TYPE$16 V$47623752/*aspel.cml.event.SCANCODE_INTERNATIONAL3*/;
    TYPE$16 V$47623816/*aspel.cml.event.SCANCODE_INTERNATIONAL4*/;
    TYPE$16 V$47623880/*aspel.cml.event.SCANCODE_INTERNATIONAL5*/;
    TYPE$16 V$47623944/*aspel.cml.event.SCANCODE_INTERNATIONAL6*/;
    TYPE$16 V$47624008/*aspel.cml.event.SCANCODE_INTERNATIONAL7*/;
    TYPE$16 V$47624072/*aspel.cml.event.SCANCODE_INTERNATIONAL8*/;
    TYPE$16 V$47624136/*aspel.cml.event.SCANCODE_INTERNATIONAL9*/;
    TYPE$16 V$47624200/*aspel.cml.event.SCANCODE_LANG1*/;
    TYPE$16 V$47624264/*aspel.cml.event.SCANCODE_LANG2*/;
    TYPE$16 V$47624328/*aspel.cml.event.SCANCODE_LANG3*/;
    TYPE$16 V$47624392/*aspel.cml.event.SCANCODE_LANG4*/;
    TYPE$16 V$47624456/*aspel.cml.event.SCANCODE_LANG5*/;
    TYPE$16 V$47624520/*aspel.cml.event.SCANCODE_LANG6*/;
    TYPE$16 V$47624584/*aspel.cml.event.SCANCODE_LANG7*/;
    TYPE$16 V$47624648/*aspel.cml.event.SCANCODE_LANG8*/;
    TYPE$16 V$47624712/*aspel.cml.event.SCANCODE_LANG9*/;
    TYPE$16 V$47624776/*aspel.cml.event.SCANCODE_ALTERASE*/;
    TYPE$16 V$47624840/*aspel.cml.event.SCANCODE_SYSREQ*/;
    TYPE$16 V$47624904/*aspel.cml.event.SCANCODE_CANCEL*/;
    TYPE$16 V$47624968/*aspel.cml.event.SCANCODE_CLEAR*/;
    TYPE$16 V$47625032/*aspel.cml.event.SCANCODE_PRIOR*/;
    TYPE$16 V$47625096/*aspel.cml.event.SCANCODE_RETURN2*/;
    TYPE$16 V$47625160/*aspel.cml.event.SCANCODE_SEPARATOR*/;
    TYPE$16 V$47625224/*aspel.cml.event.SCANCODE_OUT*/;
    TYPE$16 V$47625288/*aspel.cml.event.SCANCODE_OPER*/;
    TYPE$16 V$47625352/*aspel.cml.event.SCANCODE_CLEARAGAIN*/;
    TYPE$16 V$47625416/*aspel.cml.event.SCANCODE_CRSEL*/;
    TYPE$16 V$47625480/*aspel.cml.event.SCANCODE_EXSEL*/;
    TYPE$16 V$47625544/*aspel.cml.event.SCANCODE_KP_00*/;
    TYPE$16 V$47625608/*aspel.cml.event.SCANCODE_KP_000*/;
    TYPE$16 V$47625672/*aspel.cml.event.SCANCODE_THOUSANDSSEPARATOR*/;
    TYPE$16 V$47625736/*aspel.cml.event.SCANCODE_DECIMALSEPARATOR*/;
    TYPE$16 V$47625800/*aspel.cml.event.SCANCODE_CURRENCYUNIT*/;
    TYPE$16 V$47625864/*aspel.cml.event.SCANCODE_CURRENCYSUBUNIT*/;
    TYPE$16 V$47625928/*aspel.cml.event.SCANCODE_KP_LEFTPAREN*/;
    TYPE$16 V$47625992/*aspel.cml.event.SCANCODE_KP_RIGHTPAREN*/;
    TYPE$16 V$47626056/*aspel.cml.event.SCANCODE_KP_LEFTBRACE*/;
    TYPE$16 V$47626120/*aspel.cml.event.SCANCODE_KP_RIGHTBRACE*/;
    TYPE$16 V$47626184/*aspel.cml.event.SCANCODE_KP_TAB*/;
    TYPE$16 V$47626248/*aspel.cml.event.SCANCODE_KP_BACKSPACE*/;
    TYPE$16 V$47626312/*aspel.cml.event.SCANCODE_KP_A*/;
    TYPE$16 V$47626376/*aspel.cml.event.SCANCODE_KP_B*/;
    TYPE$16 V$47626440/*aspel.cml.event.SCANCODE_KP_C*/;
    TYPE$16 V$47626504/*aspel.cml.event.SCANCODE_KP_D*/;
    TYPE$16 V$47626568/*aspel.cml.event.SCANCODE_KP_E*/;
    TYPE$16 V$47626632/*aspel.cml.event.SCANCODE_KP_F*/;
    TYPE$16 V$47626696/*aspel.cml.event.SCANCODE_KP_XOR*/;
    TYPE$16 V$47626760/*aspel.cml.event.SCANCODE_KP_POWER*/;
    TYPE$16 V$47626824/*aspel.cml.event.SCANCODE_KP_PERCENT*/;
    TYPE$16 V$47626888/*aspel.cml.event.SCANCODE_KP_LESS*/;
    TYPE$16 V$47626952/*aspel.cml.event.SCANCODE_KP_GREATER*/;
    TYPE$16 V$47627016/*aspel.cml.event.SCANCODE_KP_AMPERSAND*/;
    TYPE$16 V$47627080/*aspel.cml.event.SCANCODE_KP_DBLAMPERSAND*/;
    TYPE$16 V$47627144/*aspel.cml.event.SCANCODE_KP_VERTICALBAR*/;
    TYPE$16 V$47627208/*aspel.cml.event.SCANCODE_KP_DBLVERTICALBAR*/;
    TYPE$16 V$47627272/*aspel.cml.event.SCANCODE_KP_COLON*/;
    TYPE$16 V$50339608/*aspel.cml.event.SCANCODE_KP_HASH*/;
    TYPE$16 V$50339672/*aspel.cml.event.SCANCODE_KP_SPACE*/;
    TYPE$16 V$50339736/*aspel.cml.event.SCANCODE_KP_AT*/;
    TYPE$16 V$50339800/*aspel.cml.event.SCANCODE_KP_EXCLAM*/;
    TYPE$16 V$50339864/*aspel.cml.event.SCANCODE_KP_MEMSTORE*/;
    TYPE$16 V$50339928/*aspel.cml.event.SCANCODE_KP_MEMRECALL*/;
    TYPE$16 V$50339992/*aspel.cml.event.SCANCODE_KP_MEMCLEAR*/;
    TYPE$16 V$50340056/*aspel.cml.event.SCANCODE_KP_MEMADD*/;
    TYPE$16 V$50340120/*aspel.cml.event.SCANCODE_KP_MEMSUBTRACT*/;
    TYPE$16 V$50340184/*aspel.cml.event.SCANCODE_KP_MEMMULTIPLY*/;
    TYPE$16 V$50340248/*aspel.cml.event.SCANCODE_KP_MEMDIVIDE*/;
    TYPE$16 V$50340312/*aspel.cml.event.SCANCODE_KP_PLUSMINUS*/;
    TYPE$16 V$50340376/*aspel.cml.event.SCANCODE_KP_CLEAR*/;
    TYPE$16 V$50340440/*aspel.cml.event.SCANCODE_KP_CLEARENTRY*/;
    TYPE$16 V$50340504/*aspel.cml.event.SCANCODE_KP_BINARY*/;
    TYPE$16 V$50340568/*aspel.cml.event.SCANCODE_KP_OCTAL*/;
    TYPE$16 V$50340632/*aspel.cml.event.SCANCODE_KP_DECIMAL*/;
    TYPE$16 V$50340696/*aspel.cml.event.SCANCODE_KP_HEXADECIMAL*/;
    TYPE$16 V$50340760/*aspel.cml.event.SCANCODE_LCTRL*/;
    TYPE$16 V$50340824/*aspel.cml.event.SCANCODE_LSHIFT*/;
    TYPE$16 V$50340888/*aspel.cml.event.SCANCODE_LALT*/;
    TYPE$16 V$50340952/*aspel.cml.event.SCANCODE_LGUI*/;
    TYPE$16 V$50341016/*aspel.cml.event.SCANCODE_RCTRL*/;
    TYPE$16 V$50341080/*aspel.cml.event.SCANCODE_RSHIFT*/;
    TYPE$16 V$50341144/*aspel.cml.event.SCANCODE_RALT*/;
    TYPE$16 V$50341208/*aspel.cml.event.SCANCODE_RGUI*/;
    TYPE$16 V$50341272/*aspel.cml.event.SCANCODE_MODE*/;
    TYPE$16 V$50341336/*aspel.cml.event.SCANCODE_AUDIONEXT*/;
    TYPE$16 V$50341400/*aspel.cml.event.SCANCODE_AUDIOPREV*/;
    TYPE$16 V$50341464/*aspel.cml.event.SCANCODE_AUDIOSTOP*/;
    TYPE$16 V$50341528/*aspel.cml.event.SCANCODE_AUDIOPLAY*/;
    TYPE$16 V$50341592/*aspel.cml.event.SCANCODE_AUDIOMUTE*/;
    TYPE$16 V$50341656/*aspel.cml.event.SCANCODE_MEDIASELECT*/;
    TYPE$16 V$50341720/*aspel.cml.event.SCANCODE_WWW*/;
    TYPE$16 V$50341784/*aspel.cml.event.SCANCODE_MAIL*/;
    TYPE$16 V$50341848/*aspel.cml.event.SCANCODE_CALCULATOR*/;
    TYPE$16 V$50341912/*aspel.cml.event.SCANCODE_COMPUTER*/;
    TYPE$16 V$50341976/*aspel.cml.event.SCANCODE_AC_SEARCH*/;
    TYPE$16 V$50342040/*aspel.cml.event.SCANCODE_AC_HOME*/;
    TYPE$16 V$50342104/*aspel.cml.event.SCANCODE_AC_BACK*/;
    TYPE$16 V$50342168/*aspel.cml.event.SCANCODE_AC_FORWARD*/;
    TYPE$16 V$50342232/*aspel.cml.event.SCANCODE_AC_STOP*/;
    TYPE$16 V$50342296/*aspel.cml.event.SCANCODE_AC_REFRESH*/;
    TYPE$16 V$50342360/*aspel.cml.event.SCANCODE_AC_BOOKMARKS*/;
    TYPE$16 V$50342424/*aspel.cml.event.SCANCODE_BRIGHTNESSDOWN*/;
    TYPE$16 V$50342488/*aspel.cml.event.SCANCODE_BRIGHTNESSUP*/;
    TYPE$16 V$50342552/*aspel.cml.event.SCANCODE_DISPLAYSWITCH*/;
    TYPE$16 V$50342616/*aspel.cml.event.SCANCODE_KBDILLUMTOGGLE*/;
    TYPE$16 V$50342680/*aspel.cml.event.SCANCODE_KBDILLUMDOWN*/;
    TYPE$16 V$50342744/*aspel.cml.event.SCANCODE_KBDILLUMUP*/;
    TYPE$16 V$50342808/*aspel.cml.event.SCANCODE_EJECT*/;
    TYPE$16 V$50342872/*aspel.cml.event.SCANCODE_SLEEP*/;
    TYPE$16 V$50342936/*aspel.cml.event.SCANCODE_APP1*/;
    TYPE$16 V$50343000/*aspel.cml.event.SCANCODE_APP2*/;
    TYPE$19 V$50343128/*aspel.cml.event.EVENT_QUIT*/;
    TYPE$19 V$50343192/*aspel.cml.event.EVENT_WINDOW*/;
    TYPE$19 V$50343256/*aspel.cml.event.EVENT_KEY_DOWN*/;
    TYPE$19 V$50343320/*aspel.cml.event.EVENT_KEY_UP*/;
    TYPE$19 V$50343384/*aspel.cml.event.EVENT_MOUSE_MOTION*/;
    TYPE$19 V$50343448/*aspel.cml.event.EVENT_MOUSE_BUTTON_DOWN*/;
    TYPE$19 V$50343512/*aspel.cml.event.EVENT_MOUSE_BUTTON_UP*/;
    TYPE$19 V$50343576/*aspel.cml.event.EVENT_MOUSE_WHEEL*/;
    TYPE$2 V$50343704/*aspel.cml.event.EVENT_WINDOW_SHOWN*/;
    TYPE$2 V$50343768/*aspel.cml.event.EVENT_WINDOW_HIDDEN*/;
    TYPE$2 V$50343832/*aspel.cml.event.EVENT_WINDOW_EXPOSED*/;
    TYPE$2 V$50343896/*aspel.cml.event.EVENT_WINDOW_MOVED*/;
    TYPE$2 V$50343960/*aspel.cml.event.EVENT_WINDOW_RESIZED*/;
    TYPE$2 V$50344024/*aspel.cml.event.EVENT_WINDOW_SIZE_CHANGED*/;
    TYPE$2 V$50344088/*aspel.cml.event.EVENT_WINDOW_MINIMIZED*/;
    TYPE$2 V$50344152/*aspel.cml.event.EVENT_WINDOW_MAXIMIZED*/;
    TYPE$2 V$50344216/*aspel.cml.event.EVENT_WINDOW_RESTORED*/;
    TYPE$2 V$50344280/*aspel.cml.event.EVENT_WINDOW_ENTER*/;
    TYPE$2 V$50344344/*aspel.cml.event.EVENT_WINDOW_LEAVE*/;
    TYPE$2 V$50344408/*aspel.cml.event.EVENT_WINDOW_FOCUS_GAINED*/;
    TYPE$2 V$50344472/*aspel.cml.event.EVENT_WINDOW_FOCUS_LOST*/;
    TYPE$2 V$50344536/*aspel.cml.event.EVENT_WINDOW_CLOSE*/;
    TYPE$2 V$50344664/*aspel.cml.event.BUTTON_RELEASED*/;
    TYPE$2 V$50344728/*aspel.cml.event.BUTTON_PRESSED*/;
    TYPE$2 V$50344856/*aspel.cml.event.MOUSE_BUTTON_LEFT*/;
    TYPE$2 V$50344920/*aspel.cml.event.MOUSE_BUTTON_MIDDLE*/;
    TYPE$2 V$50344984/*aspel.cml.event.MOUSE_BUTTON_RIGHT*/;
    TYPE$2 V$50345048/*aspel.cml.event.MOUSE_BUTTON_X1*/;
    TYPE$2 V$50345112/*aspel.cml.event.MOUSE_BUTTON_X2*/;
    TYPE$19 V$50345240/*aspel.cml.event.MOUSE_BUTTON_MASK_LEFT*/;
    TYPE$19 V$50345304/*aspel.cml.event.MOUSE_BUTTON_MASK_MIDDLE*/;
    TYPE$19 V$50345368/*aspel.cml.event.MOUSE_BUTTON_MASK_RIGHT*/;
    TYPE$19 V$50345432/*aspel.cml.event.MOUSE_BUTTON_MASK_X1*/;
    TYPE$19 V$50345496/*aspel.cml.event.MOUSE_BUTTON_MASK_X2*/;
    TYPE$19 V$50345624/*aspel.cml.event.MOUSE_WHEEL_NORMAL*/;
    TYPE$19 V$50345688/*aspel.cml.event.MOUSE_WHEEL_FLIPPED*/;
    TYPE$16 V$50360856/*aspel.cml.video.TEXTURE_ACCESS_STATIC*/;
    TYPE$16 V$50360920/*aspel.cml.video.TEXTURE_ACCESS_STREAMING*/;
    TYPE$16 V$50360984/*aspel.cml.video.TEXTURE_ACCESS_TARGET*/;
    TYPE$19 V$50367256/*aspel.cml.video.WINDOW_OPENGL*/;
    TYPE$19 V$50367320/*aspel.cml.video.WINDOW_BORDERLESS*/;
    TYPE$19 V$50367384/*aspel.cml.video.WINDOW_RESIZABLE*/;
    TYPE$19 V$50367448/*aspel.cml.video.WINDOW_MINIMIZED*/;
    TYPE$19 V$50367512/*aspel.cml.video.WINDOW_MAXIMIZED*/;
    TYPE$19 V$50367576/*aspel.cml.video.WINDOW_INPUT_FOCUS*/;
    TYPE$19 V$50367640/*aspel.cml.video.WINDOW_MOUSE_FOCUS*/;
    TYPE$16 V$50367896/*aspel.cml.video.WINDOW_POSITION_DEFAULT*/;
    TYPE$16 V$50367960/*aspel.cml.video.WINDOW_POSITION_CENTERED*/;
    TYPE$19 V$50368024/*aspel.cml.video.WINDOW_WINDOWED*/;
    TYPE$19 V$50368088/*aspel.cml.video.WINDOW_FULLSCREEN*/;
    TYPE$19 V$50368152/*aspel.cml.video.WINDOW_WINDOWED_FULLSCREEN*/;
    TYPE$16 V$50370584/*aspel.cml.video.HIT_TEST_RESULT_NORMAL*/;
    TYPE$16 V$50370648/*aspel.cml.video.HIT_TEST_RESULT_DRAGGABLE*/;
    TYPE$16 V$50370712/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_TOP_LEFT*/;
    TYPE$16 V$50370776/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_TOP*/;
    TYPE$16 V$50370840/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_TOP_RIGHT*/;
    TYPE$16 V$50370904/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_BOTTOM_LEFT*/;
    TYPE$16 V$50370968/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_BOTTOM*/;
    TYPE$16 V$50371032/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_BOTTOM_RIGHT*/;
    TYPE$16 V$50371096/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_LEFT*/;
    TYPE$16 V$50371160/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_RIGHT*/;
    TYPE$19 V$50371544/*aspel.cml.video.GL_RED_SIZE*/;
    TYPE$19 V$50371608/*aspel.cml.video.GL_GREEN_SIZE*/;
    TYPE$19 V$50371672/*aspel.cml.video.GL_BLUE_SIZE*/;
    TYPE$19 V$50371736/*aspel.cml.video.GL_ALPHA_SIZE*/;
    TYPE$19 V$50371800/*aspel.cml.video.GL_BUFFER_SIZE*/;
    TYPE$19 V$50371864/*aspel.cml.video.GL_DOUBLEBUFFER*/;
    TYPE$19 V$50371928/*aspel.cml.video.GL_DEPTH_SIZE*/;
    TYPE$19 V$50371992/*aspel.cml.video.GL_STENCIL_SIZE*/;
    TYPE$19 V$50372056/*aspel.cml.video.GL_ACCUM_RED_SIZE*/;
    TYPE$19 V$50372120/*aspel.cml.video.GL_ACCUM_GREEN_SIZE*/;
    TYPE$19 V$50372184/*aspel.cml.video.GL_ACCUM_BLUE_SIZE*/;
    TYPE$19 V$50372248/*aspel.cml.video.GL_ACCUM_ALPHA_SIZE*/;
    TYPE$19 V$50372312/*aspel.cml.video.GL_STEREO*/;
    TYPE$19 V$50372376/*aspel.cml.video.GL_MULTISAMPLEBUFFERS*/;
    TYPE$19 V$50372440/*aspel.cml.video.GL_MULTISAMPLESAMPLES*/;
    TYPE$19 V$50372504/*aspel.cml.video.GL_ACCELERATED_VISUAL*/;
    TYPE$19 V$50372568/*aspel.cml.video.GL_RETAINED_BACKING*/;
    TYPE$19 V$50372632/*aspel.cml.video.GL_CONTEXT_MAJOR_VERSION*/;
    TYPE$19 V$50372696/*aspel.cml.video.GL_CONTEXT_MINOR_VERSION*/;
    TYPE$19 V$50372760/*aspel.cml.video.GL_CONTEXT_EGL*/;
    TYPE$19 V$50372824/*aspel.cml.video.GL_CONTEXT_FLAGS*/;
    TYPE$19 V$50372888/*aspel.cml.video.GL_CONTEXT_PROFILE_MASK*/;
    TYPE$19 V$50372952/*aspel.cml.video.GL_SHARE_WITH_CURRENT_CONTEXT*/;
    TYPE$19 V$50373016/*aspel.cml.video.GL_FRAMEBUFFER_SRGB_CAPABLE*/;
    TYPE$19 V$50373080/*aspel.cml.video.GL_CONTEXT_RELEASE_BEHAVIOR*/;
    TYPE$16 V$50373656/*aspel.cml.video.VERTICAL_SYNC_IMMEDIATE*/;
    TYPE$16 V$50373720/*aspel.cml.video.VERTICAL_SYNC_SYNCHRONIZED*/;
    TYPE$16 V$50373784/*aspel.cml.video.VERTICAL_SYNC_LATE_SWAP_TEARING*/;
    TYPE$19 V$50374296/*aspel.cml.CML_SUBSYSTEM_VIDEO*/;
    TYPE$19 V$50374360/*aspel.cml.CML_SUBSYSTEM_EVENTS*/;
    TYPE$19 V$50374424/*aspel.cml.CML_SUBSYSTEM_ALL*/;
    TYPE$19 V$54887448/*aspel.internal.win32.INVALID_SOCKET*/;
    TYPE$16 V$54887512/*aspel.internal.win32.SOCKET_ERROR*/;
    TYPE$19 V$54888728/*aspel.internal.win32.FD_SETSIZE*/;
    TYPE$1 V$54950488/*kutikula.WINDOW_TITLE*/;
    TYPE$4 V$54950552/*kutikula.WINDOW_WIDTH*/;
    TYPE$4 V$54950616/*kutikula.WINDOW_HEIGHT*/;
    TYPE$7 V$54950680/*kutikula.the_window*/;
    TYPE$6 V$54950744/*kutikula.window_should_close*/;
} ISOLATED$BLOCK;
__thread ISOLATED$BLOCK ISOLATED$BASE;

void __aspel_internal__initialize_shared() {
    V$47572296/*aspel.memory.MEMORY_READ*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(1ULL));
    V$47572360/*aspel.memory.MEMORY_WRITE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL));
    V$47572424/*aspel.memory.MEMORY_EXECUTE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(4ULL));
    V$15407808/*aspel.time.stopwatch.STOPWATCH_FREQUENCY*/ = ((TYPE$5(*)())(((CORE$DELEGATE)V$15377168/*aspel.time.stopwatch.get_high_precision_frequency*/)))();
    V$15408768/*aspel.thread.pool.WORKER_CREATED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$15408832/*aspel.thread.pool.WORKER_UNAVAILABLE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$15408896/*aspel.thread.pool.WORKER_AVAILABLE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$15408960/*aspel.thread.pool.WORKER_BUSY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$15413312/*aspel.thread.INVALID_THREAD*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$2* INITIALIZER$47136024 = (TYPE$2*)CORE$NEW((CORE$U64)(256) * (CORE$U64)(16));
    V$46962144/*aspel.text.ASSUMED_UTF8_SEQUENCE_LENGTH*/ = ([&]()->TYPE$1{
    typedef TYPE$2 TEMP$TYPE;
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[0]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[1]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[2]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[3]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[4]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[5]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[6]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[7]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[8]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[9]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[10]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[11]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[12]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[13]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[14]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[15]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[16]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[17]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[18]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[19]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[20]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[21]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[22]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[23]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[24]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[25]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[26]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[27]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[28]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[29]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[30]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[31]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[32]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[33]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[34]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[35]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[36]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[37]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[38]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[39]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[40]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[41]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[42]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[43]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[44]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[45]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[46]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[47]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[48]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[49]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[50]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[51]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[52]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[53]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[54]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[55]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[56]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[57]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[58]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[59]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[60]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[61]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[62]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[63]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[64]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[65]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[66]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[67]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[68]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[69]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[70]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[71]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[72]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[73]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[74]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[75]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[76]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[77]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[78]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[79]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[80]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[81]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[82]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[83]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[84]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[85]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[86]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[87]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[88]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[89]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[90]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[91]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[92]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[93]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[94]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[95]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[96]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[97]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[98]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[99]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[100]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[101]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[102]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[103]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[104]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[105]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[106]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[107]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[108]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[109]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[110]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[111]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[112]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[113]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[114]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[115]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[116]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[117]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[118]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[119]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[120]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[121]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[122]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[123]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[124]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[125]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[126]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[127]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[128]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[129]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[130]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[131]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[132]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[133]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[134]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[135]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[136]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[137]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[138]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[139]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[140]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[141]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[142]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[143]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[144]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[145]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[146]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[147]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[148]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[149]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[150]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[151]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[152]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[153]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[154]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[155]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[156]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[157]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[158]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[159]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[160]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[161]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[162]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[163]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[164]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[165]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[166]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[167]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[168]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[169]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[170]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[171]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[172]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[173]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[174]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[175]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[176]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[177]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[178]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[179]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[180]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[181]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[182]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[183]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[184]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[185]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[186]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[187]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[188]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[189]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[190]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[191]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[192]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[193]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[194]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[195]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[196]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[197]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[198]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[199]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[200]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[201]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[202]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[203]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[204]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[205]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[206]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[207]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[208]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[209]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[210]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[211]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[212]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[213]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[214]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[215]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[216]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[217]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[218]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[219]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[220]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[221]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[222]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[223]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[224]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[225]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[226]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[227]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[228]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[229]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[230]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[231]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[232]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[233]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[234]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[235]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[236]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[237]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[238]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[239]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[240]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[241]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[242]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[243]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[244]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[245]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[246]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[247]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[248]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[249]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[250]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[251]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(6ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[252]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(6ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[253]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(6ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[254]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(6ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136024[255]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return CORE$MAKEARR((CORE$PTR) INITIALIZER$47136024, (CORE$U64) 256);
}());
    TYPE$19* INITIALIZER$47136088 = (TYPE$19*)CORE$NEW((CORE$U64)(7) * (CORE$U64)(16));
    V$46962208/*aspel.text.UTF8_DECODING_MAGIC*/ = ([&]()->TYPE$184{
    typedef TYPE$19 TEMP$TYPE;
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[0]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[1]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(12416ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[2]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(925824ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[3]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(63447168ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[4]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(4194836608ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[5]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(2181570688ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136088[6]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    return CORE$MAKEARR((CORE$PTR) INITIALIZER$47136088, (CORE$U64) 7);
}());
    TYPE$2* INITIALIZER$47136152 = (TYPE$2*)CORE$NEW((CORE$U64)(7) * (CORE$U64)(16));
    V$46962272/*aspel.text.UTF8_FIRST_MARK*/ = ([&]()->TYPE$1{
    typedef TYPE$2 TEMP$TYPE;
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[0]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[1]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(192ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[2]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(224ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[3]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(240ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[4]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(248ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[5]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(252ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47136152[6]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return CORE$MAKEARR((CORE$PTR) INITIALIZER$47136152, (CORE$U64) 7);
}());
    V$46964320/*aspel.text.UTF_STREAM_OK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$46964384/*aspel.text.UTF_STREAM_END*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46964448/*aspel.text.UTF_STREAM_ERROR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46964512/*aspel.text.UTF_STREAM_ILLEGAL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$46966304/*aspel.text.UTF_CONVERSION_OK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$46966368/*aspel.text.UTF_CONVERSION_SOURCE_ILLEGAL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46966432/*aspel.text.UTF_CONVERSION_TARGET_OVERFLOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/ = CORE$null_pointer;
    V$46970016/*aspel.system.INVALID_FUNCTION_ADDRESS*/ = CORE$null_pointer;
    V$46973984/*aspel.io.FILE_SHARE_DELETE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$46974048/*aspel.io.FILE_SHARE_READ*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46974112/*aspel.io.FILE_SHARE_WRITE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46974176/*aspel.io.GENERIC_READ*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2147483648ULL));
    V$46974240/*aspel.io.GENERIC_WRITE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1073741824ULL));
    V$46974304/*aspel.io.GENERIC_EXECUTE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870912ULL));
    V$46974368/*aspel.io.GENERIC_ALL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(268435456ULL));
    V$46974432/*aspel.io.FILE_APPEND_DATA*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$46974496/*aspel.io.CREATE_NEW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46974560/*aspel.io.CREATE_ALWAYS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46974624/*aspel.io.OPEN_EXISTING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$46974688/*aspel.io.OPEN_ALWAYS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$46974752/*aspel.io.TRUNCATE_EXISTING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(5ULL));
    V$46974816/*aspel.io.FILE_BEGIN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$46974880/*aspel.io.FILE_CURRENT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46974944/*aspel.io.FILE_END*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46975328/*aspel.io.FILE_MODE_CREATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46975392/*aspel.io.FILE_MODE_OPEN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46975456/*aspel.io.FILE_MODE_OPEN_OR_CREATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$46975520/*aspel.io.FILE_MODE_TRUNCATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL));
    V$46975584/*aspel.io.FILE_MODE_TRUNCATE_OR_CREATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(7ULL));
    V$46975712/*aspel.io.FILE_ACCESS_READ*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46975776/*aspel.io.FILE_ACCESS_WRITE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46975840/*aspel.io.FILE_ACCESS_READ_WRITE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$46975904/*aspel.io.FILE_ACCESS_APPEND*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$46975968/*aspel.io.FILE_ACCESS_READ_APPEND*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(5ULL));
    V$46978720/*aspel.io.STANDARD_STREAM_INPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$46978784/*aspel.io.STANDARD_STREAM_OUTPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$46978848/*aspel.io.STANDARD_STREAM_ERROR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$46979296/*aspel.io.standard_in*/ = ((TYPE$153(*)(TYPE$19))(((CORE$DELEGATE)V$15391008/*aspel.io.get_standard_stream*/)))((V$46978720/*aspel.io.STANDARD_STREAM_INPUT*/));
    V$46979360/*aspel.io.standard_out*/ = ((TYPE$153(*)(TYPE$19))(((CORE$DELEGATE)V$15391008/*aspel.io.get_standard_stream*/)))((V$46978784/*aspel.io.STANDARD_STREAM_OUTPUT*/));
    V$46979424/*aspel.io.standard_error*/ = ((TYPE$153(*)(TYPE$19))(((CORE$DELEGATE)V$15391008/*aspel.io.get_standard_stream*/)))((V$46978848/*aspel.io.STANDARD_STREAM_ERROR*/));
    V$47563080/*aspel.io.SEEK_BEGIN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$47563144/*aspel.io.SEEK_CURRENT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$47563208/*aspel.io.SEEK_END*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$47563272/*aspel.io.IO_ERROR*/ = (-((CORE$S64)(1ULL)));
    V$50411736/*aspel.audio.SAMPLE_SIZE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(255ULL));
    V$50411800/*aspel.audio.SAMPLE_8_BITS*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL));
    V$50411864/*aspel.audio.SAMPLE_16_BITS*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(16ULL));
    V$50411928/*aspel.audio.SAMPLE_32_BITS*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(32ULL));
    V$50411992/*aspel.audio.SAMPLE_FLOAT*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(256ULL));
    V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(512ULL));
    V$50412120/*aspel.audio.SAMPLE_SIGNED*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(1024ULL));
    V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL));
    V$50412248/*aspel.audio.SAMPLE_UINT8*/ = (V$50411800/*aspel.audio.SAMPLE_8_BITS*/);
    V$50412312/*aspel.audio.SAMPLE_INT8*/ = CORE$bor(((V$50411800/*aspel.audio.SAMPLE_8_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)));
    V$50412376/*aspel.audio.SAMPLE_UINT16*/ = CORE$bor(((V$50411864/*aspel.audio.SAMPLE_16_BITS*/)),((V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/)));
    V$50412440/*aspel.audio.SAMPLE_UINT16BE*/ = CORE$bor(((V$50411864/*aspel.audio.SAMPLE_16_BITS*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)));
    V$50412504/*aspel.audio.SAMPLE_UINT16LE*/ = (V$50411864/*aspel.audio.SAMPLE_16_BITS*/);
    V$50412568/*aspel.audio.SAMPLE_INT16*/ = CORE$bor((CORE$bor(((V$50411864/*aspel.audio.SAMPLE_16_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/)));
    V$50412632/*aspel.audio.SAMPLE_INT16BE*/ = CORE$bor((CORE$bor(((V$50411864/*aspel.audio.SAMPLE_16_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)));
    V$50412696/*aspel.audio.SAMPLE_INT16LE*/ = CORE$bor(((V$50411864/*aspel.audio.SAMPLE_16_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)));
    V$50412760/*aspel.audio.SAMPLE_UINT32*/ = CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/)));
    V$50412824/*aspel.audio.SAMPLE_UINT32BE*/ = CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)));
    V$50412888/*aspel.audio.SAMPLE_UINT32LE*/ = (V$50411928/*aspel.audio.SAMPLE_32_BITS*/);
    V$50412952/*aspel.audio.SAMPLE_INT32*/ = CORE$bor((CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/)));
    V$50413016/*aspel.audio.SAMPLE_INT32BE*/ = CORE$bor((CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)));
    V$50413080/*aspel.audio.SAMPLE_INT32LE*/ = CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)));
    V$50413144/*aspel.audio.SAMPLE_FLOAT32*/ = CORE$bor((CORE$bor((CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),((V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/)));
    V$50413208/*aspel.audio.SAMPLE_FLOAT32BE*/ = CORE$bor((CORE$bor((CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)));
    V$50413272/*aspel.audio.SAMPLE_FLOAT32LE*/ = CORE$bor((CORE$bor(((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)));
    V$50414744/*aspel.audio.DEVICE_FLAG_OPEN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50414808/*aspel.audio.DEVICE_FLAG_INPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2147483648ULL));
    V$50416728/*aspel.audio.AUDIO_DEVICE_SHUTDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50416792/*aspel.audio.AUDIO_DEVICE_PAUSED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50416856/*aspel.audio.AUDIO_METHOD_SILENCE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$50416920/*aspel.audio.AUDIO_METHOD_CALLBACK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50416984/*aspel.audio.AUDIO_METHOD_STREAM*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50419160/*aspel.audio.MAX_DEVICE_COUNT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2147483647ULL));
    V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL));
    TYPE$297* INITIALIZER$50847152 = (TYPE$297*)CORE$NEW((CORE$U64)(1) * (CORE$U64)(16));
    V$50422040/*aspel.audio.AUDIO_BACKENDS*/ = ([&]()->TYPE$296{
    typedef TYPE$297 TEMP$TYPE;
    { auto TEMP$VAL = ((CORE$PTR) &((V$50374552/*aspel.audio.directsound.DIRECTSOUND_BACKEND*/)));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$50847152[0]);
      *TEMP$PTR = CORE$cast_regular(TYPE$297, TEMP$VAL); }
    return CORE$MAKEARR((CORE$PTR) INITIALIZER$50847152, (CORE$U64) 1);
}());
    V$50422296/*aspel.audio.AUDIO_BACKEND_INVALID*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL));
    V$47567176/*aspel.net.SOCKET_PASSIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$47567240/*aspel.net.SOCKET_READY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$47567624/*aspel.net.MAX_HOST_LENGTH*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1025ULL));
    V$47567688/*aspel.net.MAX_SERVICE_LENGTH*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$47581704/*aspel.log.VERBOSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$47581768/*aspel.log.DEBUG*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$47581832/*aspel.log.INFO*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$47581896/*aspel.log.WARNING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$47581960/*aspel.log.ERROR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$47582024/*aspel.log.CRITICAL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(5ULL));
    V$47582344/*aspel.log.source_list*/ = CORE$cast_regular(TYPE$369, CORE$null_pointer);
    V$47582408/*aspel.log.priority_threshold*/ = (V$47581832/*aspel.log.INFO*/);
    V$47582856/*aspel.log.APP*/ = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D79898_OFF],(CORE$U64) SHARED$STR_2D79898_LEN);
    V$47582920/*aspel.log.ASL*/ = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D798D8_OFF],(CORE$U64) SHARED$STR_2D798D8_LEN);
    V$47582984/*aspel.log.LOGGER*/ = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D79918_OFF],(CORE$U64) SHARED$STR_2D79918_LEN);
    V$47583048/*aspel.log.the_lock*/ = ((TYPE$66(*)())(((CORE$DELEGATE)V$47848720/*aspel.log.create_the_lock*/)))();
    V$47583240/*aspel.log.log*/ = ((CORE$DELEGATE)V$47848480/*aspel.log.default_logger*/);
    V$50374552/*aspel.audio.directsound.DIRECTSOUND_BACKEND*/ = ([&]()->TYPE$298{
    TYPE$298 TEMP$RESULT;
    { typedef TYPE$1 TEMP$TYPE;
      auto TEMP$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306A150_OFF],(CORE$U64) SHARED$STR_306A150_LEN);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = (TEMP$VAL); }
    { typedef TYPE$294 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47867120/*aspel.audio.directsound.directsound_backend_init*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$294, TEMP$VAL); }
    return TEMP$RESULT;
}());
    {
{ (V$50374616/*aspel.audio.directsound.directsound_context_exists*/).m0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))); }
}
    { (V$50374680/*aspel.audio.directsound.the_directsound_context*/) = (0); }
    V$50376024/*aspel.audio.directsound.WAVE_FORMAT_PCM*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(1ULL));
    V$50376088/*aspel.audio.directsound.WAVE_FORMAT_IEEE_FLOAT*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(3ULL));
    V$50376216/*aspel.audio.directsound.DS_OK*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    V$50376280/*aspel.audio.directsound.DSERR_BUFFERLOST*/ = CORE$cast_regular(TYPE$16, CORE$bor((CORE$bor((CORE$shl(((CORE$S64)(1ULL)),((CORE$S64)(31ULL)))),(CORE$shl(((CORE$S64)(2168ULL)),((CORE$S64)(16ULL)))))),((CORE$S64)(150ULL))));
    V$50378072/*aspel.audio.directsound.DSBCAPS_PRIMARYBUFFER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50378136/*aspel.audio.directsound.DSBCAPS_STATIC*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50378200/*aspel.audio.directsound.DSBCAPS_LOCHARDWARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$50378264/*aspel.audio.directsound.DSBCAPS_LOCSOFTWARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$50378328/*aspel.audio.directsound.DSBCAPS_CTRL3D*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$50378392/*aspel.audio.directsound.DSBCAPS_CTRLFREQUENCY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$50378456/*aspel.audio.directsound.DSBCAPS_CTRLPAN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$50378520/*aspel.audio.directsound.DSBCAPS_CTRLVOLUME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$50378584/*aspel.audio.directsound.DSBCAPS_CTRLPOSITIONNOTIFY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$50378648/*aspel.audio.directsound.DSBCAPS_CTRLFX*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$50378712/*aspel.audio.directsound.DSBCAPS_STICKYFOCUS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16384ULL));
    V$50378776/*aspel.audio.directsound.DSBCAPS_GLOBALFOCUS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32768ULL));
    V$50378840/*aspel.audio.directsound.DSBCAPS_GETCURRENTPOSITION2*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL));
    V$50378904/*aspel.audio.directsound.DSBCAPS_MUTE3DATMAXDISTANCE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(131072ULL));
    V$50378968/*aspel.audio.directsound.DSBCAPS_LOCDEFER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(262144ULL));
    V$50379032/*aspel.audio.directsound.DSBCAPS_TRUEPLAYPOSITION*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(524288ULL));
    V$50381400/*aspel.audio.directsound.DSSCL_NORMAL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50381464/*aspel.audio.directsound.DSSCL_PRIORITY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50381528/*aspel.audio.directsound.DSSCL_EXCLUSIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$50381592/*aspel.audio.directsound.DSSCL_WRITEPRIMARY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$50381656/*aspel.audio.directsound.DSBPLAY_LOOPING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50381720/*aspel.audio.directsound.DSBPLAY_LOCHARDWARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50381784/*aspel.audio.directsound.DSBPLAY_LOCSOFTWARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$50381848/*aspel.audio.directsound.DSBPLAY_TERMINATEBY_TIME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$50381912/*aspel.audio.directsound.DSBPLAY_TERMINATEBY_DISTANCE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$50381976/*aspel.audio.directsound.DSBPLAY_TERMINATEBY_PRIORITY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$50382040/*aspel.audio.directsound.DSBSTATUS_PLAYING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50382104/*aspel.audio.directsound.DSBSTATUS_BUFFERLOST*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50382168/*aspel.audio.directsound.DSBSTATUS_LOOPING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$50382232/*aspel.audio.directsound.DSBSTATUS_LOCHARDWARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$50382296/*aspel.audio.directsound.DSBSTATUS_LOCSOFTWARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$50382360/*aspel.audio.directsound.DSBSTATUS_TERMINATED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$50382424/*aspel.audio.directsound.DSBSIZE_MIN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$50382488/*aspel.audio.directsound.DSBSIZE_MAX*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(268435455ULL));
    V$50393560/*aspel.audio.directsound.DSCBCAPS_WAVEMAPPED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2147483648ULL));
    V$50393624/*aspel.audio.directsound.DSCBCAPS_CTRLFX*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$50393688/*aspel.audio.directsound.DSCBLOCK_ENTIREBUFFER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50393752/*aspel.audio.directsound.DSCBSTATUS_CAPTURING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50393816/*aspel.audio.directsound.DSCBSTATUS_LOOPING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$50393880/*aspel.audio.directsound.DSCBSTART_LOOPING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50393944/*aspel.audio.directsound.DSBPN_OFFSETSTOP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL));
    V$50394008/*aspel.audio.directsound.DS_CERTIFIED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$50394072/*aspel.audio.directsound.DS_UNCERTIFIED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$50401624/*aspel.audio.directsound.dsound*/ = (V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/);
    { (V$50401688/*aspel.audio.directsound.DirectSoundCreate8*/) = (0); }
    { (V$50401752/*aspel.audio.directsound.DirectSoundEnumerate*/) = (0); }
    { (V$50401816/*aspel.audio.directsound.DirectSoundCaptureCreate8*/) = (0); }
    { (V$50401880/*aspel.audio.directsound.DirectSoundCaptureEnumerate*/) = (0); }
    V$50407640/*aspel.audio.io.RIFF*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1380533830ULL));
    V$50407704/*aspel.audio.io.WAVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1463899717ULL));
    V$50407768/*aspel.audio.io.FMT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1718449184ULL));
    V$50407832/*aspel.audio.io.DATA*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1684108385ULL));
    V$50407896/*aspel.audio.io.PCM*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(1ULL));
    V$50407960/*aspel.audio.io.IEEE_FLOAT*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(3ULL));
    V$50465496/*aspel.internal.win32.WSAEINTR*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10004ULL));
    V$50465560/*aspel.internal.win32.WSAEBADF*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10009ULL));
    V$50465624/*aspel.internal.win32.WSAEACCES*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10013ULL));
    V$50465688/*aspel.internal.win32.WSAEFAULT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10014ULL));
    V$50465752/*aspel.internal.win32.WSAEINVAL*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10022ULL));
    V$50465816/*aspel.internal.win32.WSAEMFILE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10024ULL));
    V$50465880/*aspel.internal.win32.WSAEWOULDBLOCK*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10035ULL));
    V$50465944/*aspel.internal.win32.WSAEINPROGRESS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10036ULL));
    V$50466008/*aspel.internal.win32.WSAEALREADY*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10037ULL));
    V$50466072/*aspel.internal.win32.WSAENOTSOCK*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10038ULL));
    V$50466136/*aspel.internal.win32.WSAEDESTADDRREQ*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10039ULL));
    V$50466200/*aspel.internal.win32.WSAEMSGSIZE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10040ULL));
    V$50466264/*aspel.internal.win32.WSAEPROTOTYPE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10041ULL));
    V$50466328/*aspel.internal.win32.WSAENOPROTOOPT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10042ULL));
    V$50466392/*aspel.internal.win32.WSAEPROTONOSUPPORT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10043ULL));
    V$50466456/*aspel.internal.win32.WSAESOCKTNOSUPPORT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10044ULL));
    V$50466520/*aspel.internal.win32.WSAEOPNOTSUPP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10045ULL));
    V$50466584/*aspel.internal.win32.WSAEPFNOSUPPORT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10046ULL));
    V$50466648/*aspel.internal.win32.WSAEAFNOSUPPORT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10047ULL));
    V$50466712/*aspel.internal.win32.WSAEADDRINUSE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10048ULL));
    V$50466776/*aspel.internal.win32.WSAEADDRNOTAVAIL*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10049ULL));
    V$50466840/*aspel.internal.win32.WSAENETDOWN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10050ULL));
    V$50466904/*aspel.internal.win32.WSAENETUNREACH*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10051ULL));
    V$50466968/*aspel.internal.win32.WSAENETRESET*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10052ULL));
    V$50467032/*aspel.internal.win32.WSAECONNABORTED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10053ULL));
    V$50467096/*aspel.internal.win32.WSAECONNRESET*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10054ULL));
    V$50467160/*aspel.internal.win32.WSAENOBUFS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10055ULL));
    V$50467224/*aspel.internal.win32.WSAEISCONN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10056ULL));
    V$50467288/*aspel.internal.win32.WSAENOTCONN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10057ULL));
    V$50467352/*aspel.internal.win32.WSAESHUTDOWN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10058ULL));
    V$50467416/*aspel.internal.win32.WSAETOOMANYREFS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10059ULL));
    V$50467480/*aspel.internal.win32.WSAETIMEDOUT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10060ULL));
    V$50467544/*aspel.internal.win32.WSAECONNREFUSED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10061ULL));
    V$50467608/*aspel.internal.win32.WSAELOOP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10062ULL));
    V$50467672/*aspel.internal.win32.WSAENAMETOOLONG*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10063ULL));
    V$50467736/*aspel.internal.win32.WSAEHOSTDOWN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10064ULL));
    V$50467800/*aspel.internal.win32.WSAEHOSTUNREACH*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10065ULL));
    V$50467864/*aspel.internal.win32.WSAENOTEMPTY*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10066ULL));
    V$50467928/*aspel.internal.win32.WSAEPROCLIM*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10067ULL));
    V$50467992/*aspel.internal.win32.WSAEUSERS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10068ULL));
    V$50468056/*aspel.internal.win32.WSAEDQUOT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10069ULL));
    V$50468120/*aspel.internal.win32.WSAESTALE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10070ULL));
    V$50468184/*aspel.internal.win32.WSAEREMOTE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10071ULL));
    V$50468248/*aspel.internal.win32.WSASYSNOTREADY*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10091ULL));
    V$50468312/*aspel.internal.win32.WSAVERNOTSUPPORTED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10092ULL));
    V$50468376/*aspel.internal.win32.WSANOTINITIALISED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10093ULL));
    V$50468440/*aspel.internal.win32.WSAEDISCON*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10101ULL));
    V$50468504/*aspel.internal.win32.WSAENOMORE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10102ULL));
    V$50468568/*aspel.internal.win32.WSAECANCELLED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10103ULL));
    V$50468632/*aspel.internal.win32.WSAEINVALIDPROCTABLE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10104ULL));
    V$50468696/*aspel.internal.win32.WSAEINVALIDPROVIDER*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10105ULL));
    V$50468760/*aspel.internal.win32.WSAEPROVIDERFAILEDINIT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10106ULL));
    V$50468824/*aspel.internal.win32.WSASYSCALLFAILURE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10107ULL));
    V$50468888/*aspel.internal.win32.WSASERVICE_NOT_FOUND*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10108ULL));
    V$50468952/*aspel.internal.win32.WSATYPE_NOT_FOUND*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10109ULL));
    V$50469016/*aspel.internal.win32.WSA_E_NO_MORE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10110ULL));
    V$50469080/*aspel.internal.win32.WSA_E_CANCELLED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10111ULL));
    V$50469144/*aspel.internal.win32.WSAEREFUSED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10112ULL));
    V$50469208/*aspel.internal.win32.WSAHOST_NOT_FOUND*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11001ULL));
    V$50469272/*aspel.internal.win32.WSATRY_AGAIN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11002ULL));
    V$50469336/*aspel.internal.win32.WSANO_RECOVERY*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11003ULL));
    V$50469400/*aspel.internal.win32.WSANO_DATA*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11004ULL));
    V$50469464/*aspel.internal.win32.WSA_QOS_RECEIVERS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11005ULL));
    V$50469528/*aspel.internal.win32.WSA_QOS_SENDERS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11006ULL));
    V$50469592/*aspel.internal.win32.WSA_QOS_NO_SENDERS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11007ULL));
    V$50469656/*aspel.internal.win32.WSA_QOS_NO_RECEIVERS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11008ULL));
    V$50469720/*aspel.internal.win32.WSA_QOS_REQUEST_CONFIRMED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11009ULL));
    V$50469784/*aspel.internal.win32.WSA_QOS_ADMISSION_FAILURE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11010ULL));
    V$50469848/*aspel.internal.win32.WSA_QOS_POLICY_FAILURE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11011ULL));
    V$50469912/*aspel.internal.win32.WSA_QOS_BAD_STYLE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11012ULL));
    V$50469976/*aspel.internal.win32.WSA_QOS_BAD_OBJECT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11013ULL));
    V$50470040/*aspel.internal.win32.WSA_QOS_TRAFFIC_CTRL_ERROR*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11014ULL));
    V$50470104/*aspel.internal.win32.WSA_QOS_GENERIC_ERROR*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11015ULL));
    V$50470168/*aspel.internal.win32.WSA_QOS_ESERVICETYPE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11016ULL));
    V$50470232/*aspel.internal.win32.WSA_QOS_EFLOWSPEC*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11017ULL));
    V$50470296/*aspel.internal.win32.WSA_QOS_EPROVSPECBUF*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11018ULL));
    V$50470360/*aspel.internal.win32.WSA_QOS_EFILTERSTYLE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11019ULL));
    V$50470424/*aspel.internal.win32.WSA_QOS_EFILTERTYPE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11020ULL));
    V$50470488/*aspel.internal.win32.WSA_QOS_EFILTERCOUNT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11021ULL));
    V$50470552/*aspel.internal.win32.WSA_QOS_EOBJLENGTH*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11022ULL));
    V$50470616/*aspel.internal.win32.WSA_QOS_EFLOWCOUNT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11023ULL));
    V$54882200/*aspel.internal.win32.WSA_QOS_EUNKOWNPSOBJ*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11024ULL));
    V$54882264/*aspel.internal.win32.WSA_QOS_EPOLICYOBJ*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11025ULL));
    V$54882328/*aspel.internal.win32.WSA_QOS_EFLOWDESC*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11026ULL));
    V$54882392/*aspel.internal.win32.WSA_QOS_EPSFLOWSPEC*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11027ULL));
    V$54882456/*aspel.internal.win32.WSA_QOS_EPSFILTERSPEC*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11028ULL));
    V$54882520/*aspel.internal.win32.WSA_QOS_ESDMODEOBJ*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11029ULL));
    V$54882584/*aspel.internal.win32.WSA_QOS_ESHAPERATEOBJ*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11030ULL));
    V$54882648/*aspel.internal.win32.WSA_QOS_RESERVED_PETYPE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11031ULL));
    V$54882712/*aspel.internal.win32.WSA_SECURE_HOST_NOT_FOUND*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11032ULL));
    V$54882776/*aspel.internal.win32.WSA_IPSEC_NAME_POLICY_ERROR*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11033ULL));
    V$54882840/*aspel.internal.win32.AF_UNSPEC*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    V$54882904/*aspel.internal.win32.AF_UNIX*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    V$54882968/*aspel.internal.win32.AF_INET*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    V$54883032/*aspel.internal.win32.AF_IMPLINK*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(3ULL));
    V$54883096/*aspel.internal.win32.AF_PUP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL));
    V$54883160/*aspel.internal.win32.AF_CHAOS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
    V$54883224/*aspel.internal.win32.AF_NS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(6ULL));
    V$54883288/*aspel.internal.win32.AF_IPX*/ = (V$54883224/*aspel.internal.win32.AF_NS*/);
    V$54883352/*aspel.internal.win32.AF_ISO*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(7ULL));
    V$54883416/*aspel.internal.win32.AF_OSI*/ = (V$54883352/*aspel.internal.win32.AF_ISO*/);
    V$54883480/*aspel.internal.win32.AF_ECMA*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(8ULL));
    V$54883544/*aspel.internal.win32.AF_DATAKIT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(9ULL));
    V$54883608/*aspel.internal.win32.AF_CCITT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10ULL));
    V$54883672/*aspel.internal.win32.AF_SNA*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11ULL));
    V$54883736/*aspel.internal.win32.AF_DECnet*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(12ULL));
    V$54883800/*aspel.internal.win32.AF_DLI*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(13ULL));
    V$54883864/*aspel.internal.win32.AF_LAT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(14ULL));
    V$54883928/*aspel.internal.win32.AF_HYLINK*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(15ULL));
    V$54883992/*aspel.internal.win32.AF_APPLETALK*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(16ULL));
    V$54884056/*aspel.internal.win32.AF_NETBIOS*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(17ULL));
    V$54884120/*aspel.internal.win32.AF_VOICEVIEW*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(18ULL));
    V$54884184/*aspel.internal.win32.AF_FIREFOX*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(19ULL));
    V$54884248/*aspel.internal.win32.AF_UNKNOWN1*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(20ULL));
    V$54884312/*aspel.internal.win32.AF_BAN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(21ULL));
    V$54884376/*aspel.internal.win32.AF_ATM*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(22ULL));
    V$54884440/*aspel.internal.win32.AF_INET6*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(23ULL));
    V$54884504/*aspel.internal.win32.AF_CLUSTER*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(24ULL));
    V$54884568/*aspel.internal.win32.AF_12844*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(25ULL));
    V$54884632/*aspel.internal.win32.AF_IRDA*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(26ULL));
    V$54884696/*aspel.internal.win32.AF_NETDES*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(28ULL));
    V$54884760/*aspel.internal.win32.SOCK_STREAM*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    V$54884824/*aspel.internal.win32.SOCK_DGRAM*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    V$54884888/*aspel.internal.win32.SOCK_RAW*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(3ULL));
    V$54884952/*aspel.internal.win32.SOCK_RDM*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL));
    V$54885016/*aspel.internal.win32.SOCK_SEQPACKET*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
    V$54885080/*aspel.internal.win32.IPPROTO_IP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    V$54885144/*aspel.internal.win32.IPPROTO_ICMP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    V$54885208/*aspel.internal.win32.IPPROTO_IGMP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    V$54885272/*aspel.internal.win32.IPPROTO_GGP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(3ULL));
    V$54885336/*aspel.internal.win32.IPPROTO_TCP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(6ULL));
    V$54885400/*aspel.internal.win32.IPPROTO_PUP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(12ULL));
    V$54885464/*aspel.internal.win32.IPPROTO_UDP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(17ULL));
    V$54885528/*aspel.internal.win32.IPPROTO_IDP*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(22ULL));
    V$54885592/*aspel.internal.win32.IPPROTO_ND*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(77ULL));
    V$54885656/*aspel.internal.win32.AI_PASSIVE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    V$54885720/*aspel.internal.win32.AI_CANONNAME*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    V$54885784/*aspel.internal.win32.AI_NUMERICHOST*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL));
    V$54885848/*aspel.internal.win32.AI_NUMERICSERV*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(8ULL));
    V$54885912/*aspel.internal.win32.AI_ALL*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(256ULL));
    V$54885976/*aspel.internal.win32.AI_ADDRCONFIG*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(1024ULL));
    V$54886040/*aspel.internal.win32.AI_V4MAPPED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2048ULL));
    V$54886104/*aspel.internal.win32.AI_NON_AUTHORITATIVE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(16384ULL));
    V$54886168/*aspel.internal.win32.AI_SECURE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(32768ULL));
    V$54886232/*aspel.internal.win32.AI_RETURN_PREFERRED_NAMES*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(65536ULL));
    V$54886296/*aspel.internal.win32.AI_FQDN*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(131072ULL));
    V$54886360/*aspel.internal.win32.AI_FILESERVER*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(262144ULL));
    V$54886424/*aspel.internal.win32.AI_DISABLE_IDN_ENCODING*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(524288ULL));
    V$54886488/*aspel.internal.win32.AI_EXTENDED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2147483648ULL));
    V$54896536/*aspel.internal.win32.FOREGROUND_BLUE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(1ULL));
    V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL));
    V$54896664/*aspel.internal.win32.FOREGROUND_RED*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(4ULL));
    V$54896728/*aspel.internal.win32.FOREGROUND_INTENSITY*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL));
    V$54896792/*aspel.internal.win32.BACKGROUND_BLUE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(16ULL));
    V$54896856/*aspel.internal.win32.BACKGROUND_GREEN*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(32ULL));
    V$54896920/*aspel.internal.win32.BACKGROUND_RED*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(64ULL));
    V$54896984/*aspel.internal.win32.BACKGROUND_INTENSITY*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(128ULL));
    V$54897048/*aspel.internal.win32.COMMON_LVB_LEADING_BYTE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(256ULL));
    V$54897112/*aspel.internal.win32.COMMON_LVB_TRAILING_BYTE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(512ULL));
    V$54897176/*aspel.internal.win32.COMMON_LVB_GRID_HORIZONTAL*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(1024ULL));
    V$54897240/*aspel.internal.win32.COMMON_LVB_GRID_LVERTICAL*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(2048ULL));
    V$54897304/*aspel.internal.win32.COMMON_LVB_GRID_RVERTICAL*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(4096ULL));
    V$54897368/*aspel.internal.win32.COMMON_LVB_REVERSE_VIDEO*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(16384ULL));
    V$54897432/*aspel.internal.win32.COMMON_LVB_UNDERSCORE*/ = CORE$cast_regular(TYPE$28, (CORE$S64)(32768ULL));
    V$54897496/*aspel.internal.win32.WM_CAPTURECHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(533ULL));
    V$54897560/*aspel.internal.win32.WM_LBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(515ULL));
    V$54897624/*aspel.internal.win32.WM_LBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(513ULL));
    V$54897688/*aspel.internal.win32.WM_LBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(514ULL));
    V$54897752/*aspel.internal.win32.WM_MBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(521ULL));
    V$54897816/*aspel.internal.win32.WM_MBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(519ULL));
    V$54897880/*aspel.internal.win32.WM_MBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(520ULL));
    V$54897944/*aspel.internal.win32.WM_MOUSEACTIVATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(33ULL));
    V$54898008/*aspel.internal.win32.WM_MOUSEHOVER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(673ULL));
    V$54898072/*aspel.internal.win32.WM_MOUSEHWHEEL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(526ULL));
    V$54898136/*aspel.internal.win32.WM_MOUSELEAVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(675ULL));
    V$54898200/*aspel.internal.win32.WM_MOUSEMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54898264/*aspel.internal.win32.WM_MOUSEWHEEL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(522ULL));
    V$54898328/*aspel.internal.win32.WM_NCHITTEST*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(132ULL));
    V$54898392/*aspel.internal.win32.WM_NCLBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(163ULL));
    V$54898456/*aspel.internal.win32.WM_NCLBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(161ULL));
    V$54898520/*aspel.internal.win32.WM_NCLBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(162ULL));
    V$54898584/*aspel.internal.win32.WM_NCMBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(169ULL));
    V$54898648/*aspel.internal.win32.WM_NCMBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(167ULL));
    V$54898712/*aspel.internal.win32.WM_NCMBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(168ULL));
    V$54898776/*aspel.internal.win32.WM_NCMOUSEHOVER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(672ULL));
    V$54898840/*aspel.internal.win32.WM_NCMOUSELEAVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(674ULL));
    V$54898904/*aspel.internal.win32.WM_NCMOUSEMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(160ULL));
    V$54898968/*aspel.internal.win32.WM_NCRBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(166ULL));
    V$54899032/*aspel.internal.win32.WM_NCRBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(164ULL));
    V$54899096/*aspel.internal.win32.WM_NCRBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(165ULL));
    V$54899160/*aspel.internal.win32.WM_NCXBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(173ULL));
    V$54899224/*aspel.internal.win32.WM_NCXBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(171ULL));
    V$54899288/*aspel.internal.win32.WM_NCXBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(172ULL));
    V$54899352/*aspel.internal.win32.WM_RBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(518ULL));
    V$54899416/*aspel.internal.win32.WM_RBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(516ULL));
    V$54899480/*aspel.internal.win32.WM_RBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(517ULL));
    V$54899544/*aspel.internal.win32.WM_XBUTTONDBLCLK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(525ULL));
    V$54899608/*aspel.internal.win32.WM_XBUTTONDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(523ULL));
    V$54899672/*aspel.internal.win32.WM_XBUTTONUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(524ULL));
    V$54899736/*aspel.internal.win32.GMMP_USE_DISPLAY_POINTS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54899800/*aspel.internal.win32.GMMP_USE_HIGH_RESOLUTION_POINTS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54900760/*aspel.internal.win32.WM_INITMENUPOPUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(279ULL));
    V$54900824/*aspel.internal.win32.WM_MENUCHAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(288ULL));
    V$54900888/*aspel.internal.win32.WM_MENUSELECT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(287ULL));
    V$54900952/*aspel.internal.win32.WM_SYSCHAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(262ULL));
    V$54901016/*aspel.internal.win32.WM_SYSCOMMAND*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(274ULL));
    V$54901080/*aspel.internal.win32.SC_CLOSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61536ULL));
    V$54901144/*aspel.internal.win32.SC_CONTEXTHELP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61824ULL));
    V$54901208/*aspel.internal.win32.SC_DEFAULT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61792ULL));
    V$54901272/*aspel.internal.win32.SC_HOTKEY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61776ULL));
    V$54901336/*aspel.internal.win32.SC_HSCROLL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61568ULL));
    V$54901400/*aspel.internal.win32.SCF_ISSECURE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54901464/*aspel.internal.win32.SC_KEYMENU*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61696ULL));
    V$54901528/*aspel.internal.win32.SC_MAXIMIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61488ULL));
    V$54901592/*aspel.internal.win32.SC_MINIMIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61472ULL));
    V$54901656/*aspel.internal.win32.SC_MONITORPOWER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61808ULL));
    V$54901720/*aspel.internal.win32.SC_MOUSEMENU*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61584ULL));
    V$54901784/*aspel.internal.win32.SC_MOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61456ULL));
    V$54901848/*aspel.internal.win32.SC_NEXTWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61504ULL));
    V$54901912/*aspel.internal.win32.SC_PREVWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61520ULL));
    V$54901976/*aspel.internal.win32.SC_RESTORE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61728ULL));
    V$54902040/*aspel.internal.win32.SC_SCREENSAVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61760ULL));
    V$54902104/*aspel.internal.win32.SC_SIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61440ULL));
    V$54902168/*aspel.internal.win32.SC_TASKLIST*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61744ULL));
    V$54902232/*aspel.internal.win32.SC_VSCROLL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(61552ULL));
    V$54902296/*aspel.internal.win32.WM_ACTIVATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL));
    V$54902360/*aspel.internal.win32.WA_ACTIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54902424/*aspel.internal.win32.WA_CLICKACTIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54902488/*aspel.internal.win32.WA_INACTIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54902552/*aspel.internal.win32.WM_APPCOMMAND*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(793ULL));
    V$54902616/*aspel.internal.win32.WM_CHAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(258ULL));
    V$54902680/*aspel.internal.win32.WM_DEADCHAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(259ULL));
    V$54902744/*aspel.internal.win32.WM_HOTKEY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(786ULL));
    V$54902808/*aspel.internal.win32.WM_KEYDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54902872/*aspel.internal.win32.WM_KEYUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(257ULL));
    V$54902936/*aspel.internal.win32.WM_KILLFOCUS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54903000/*aspel.internal.win32.WM_SETFOCUS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(7ULL));
    V$54903064/*aspel.internal.win32.WM_SYSDEADCHAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(263ULL));
    V$54903128/*aspel.internal.win32.WM_SYSKEYDOWN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(260ULL));
    V$54903192/*aspel.internal.win32.WM_SYSKEYUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(261ULL));
    V$54903256/*aspel.internal.win32.WM_UNICHAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(265ULL));
    V$54903320/*aspel.internal.win32.WM_INPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(255ULL));
    V$54903384/*aspel.internal.win32.RIM_INPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54903448/*aspel.internal.win32.RIM_INPUTSINK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54903512/*aspel.internal.win32.WM_INPUT_DEVICE_CHANGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(254ULL));
    V$54903576/*aspel.internal.win32.GIDC_ARRIVAL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54903640/*aspel.internal.win32.GIDC_REMOVAL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54903704/*aspel.internal.win32.RIM_TYPEHID*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54903768/*aspel.internal.win32.RIM_TYPEKEYBOARD*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54903832/*aspel.internal.win32.RIM_TYPEMOUSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54903896/*aspel.internal.win32.RIDEV_APPKEYS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54903960/*aspel.internal.win32.RIDEV_CAPTUREMOUSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54904024/*aspel.internal.win32.RIDEV_DEVNOTIFY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8192ULL));
    V$54904088/*aspel.internal.win32.RIDEV_EXCLUDE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54904152/*aspel.internal.win32.RIDEV_EXINPUTSINK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4096ULL));
    V$54904216/*aspel.internal.win32.RIDEV_INPUTSINK*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54904280/*aspel.internal.win32.RIDEV_NOHOTKEYS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54904344/*aspel.internal.win32.RIDEV_NOLEGACY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(48ULL));
    V$54904408/*aspel.internal.win32.RIDEV_PAGEONLY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54904472/*aspel.internal.win32.RIDEV_REMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54908120/*aspel.internal.win32.RID_HEADER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(268435461ULL));
    V$54908184/*aspel.internal.win32.RID_INPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(268435459ULL));
    V$54908248/*aspel.internal.win32.RIDI_DEVICENAME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870919ULL));
    V$54908312/*aspel.internal.win32.RIDI_DEVICEINFO*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870923ULL));
    V$54908376/*aspel.internal.win32.RIDI_PREPARSEDDATA*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870917ULL));
    V$54908440/*aspel.internal.win32.GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54908504/*aspel.internal.win32.GET_MODULE_HANDLE_EX_FLAG_PIN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54908568/*aspel.internal.win32.GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54908632/*aspel.internal.win32.DONT_RESOLVE_DLL_REFERENCES*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54908696/*aspel.internal.win32.LOAD_IGNORE_CODE_AUTHZ_LEVEL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54908760/*aspel.internal.win32.LOAD_LIBRARY_AS_DATAFILE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54908824/*aspel.internal.win32.LOAD_WITH_ALTERED_SEARCH_PATH*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54908888/*aspel.internal.win32.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$54908952/*aspel.internal.win32.LOAD_LIBRARY_AS_IMAGE_RESOURCE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54909016/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_APPLICATION_DIR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54909080/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4096ULL));
    V$54909144/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54909208/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_SYSTEM32*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2048ULL));
    V$54909272/*aspel.internal.win32.LOAD_LIBRARY_SEARCH_USER_DIRS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54910872/*aspel.internal.win32.DISPLAY_DEVICE_ACTIVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54910936/*aspel.internal.win32.DISPLAY_DEVICE_MIRRORING_DRIVER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54911000/*aspel.internal.win32.DISPLAY_DEVICE_MODESPRUNED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(134217728ULL));
    V$54911064/*aspel.internal.win32.DISPLAY_DEVICE_PRIMARY_DEVICE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54911128/*aspel.internal.win32.DISPLAY_DEVICE_REMOVABLE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54911192/*aspel.internal.win32.DISPLAY_DEVICE_VGA_COMPATIBLE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54913112/*aspel.internal.win32.PFD_DOUBLEBUFFER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54913176/*aspel.internal.win32.PFD_STEREO*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54913240/*aspel.internal.win32.PFD_DRAW_TO_WINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54913304/*aspel.internal.win32.PFD_DRAW_TO_BITMAP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54913368/*aspel.internal.win32.PFD_SUPPORT_GDI*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54913432/*aspel.internal.win32.PFD_SUPPORT_OPENGL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54913496/*aspel.internal.win32.PFD_GENERIC_FORMAT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$54913560/*aspel.internal.win32.PFD_NEED_PALETTE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$54913624/*aspel.internal.win32.PFD_NEED_SYSTEM_PALETTE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54913688/*aspel.internal.win32.PFD_SWAP_EXCHANGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54913752/*aspel.internal.win32.PFD_SWAP_COPY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54913816/*aspel.internal.win32.PFD_SWAP_LAYER_BUFFERS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2048ULL));
    V$54913880/*aspel.internal.win32.PFD_GENERIC_ACCELERATED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4096ULL));
    V$54913944/*aspel.internal.win32.PFD_SUPPORT_DIRECTDRAW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8192ULL));
    V$54914008/*aspel.internal.win32.PFD_DIRECT3D_ACCELERATED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16384ULL));
    V$54914072/*aspel.internal.win32.PFD_SUPPORT_COMPOSITION*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32768ULL));
    V$54914136/*aspel.internal.win32.PFD_DEPTH_DONTCARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870912ULL));
    V$54914200/*aspel.internal.win32.PFD_DOUBLEBUFFER_DONTCARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1073741824ULL));
    V$54914264/*aspel.internal.win32.PFD_STEREO_DONTCARE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2147483648ULL));
    V$54914328/*aspel.internal.win32.PFD_TYPE_RGBA*/ = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    V$54914392/*aspel.internal.win32.PFD_TYPE_COLORINDEX*/ = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    V$54914456/*aspel.internal.win32.PFD_MAIN_PLANE*/ = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    V$54914520/*aspel.internal.win32.PFD_OVERLAY_PLANE*/ = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    V$54914584/*aspel.internal.win32.PFD_UNDERLAY_PLANE*/ = CORE$cast_regular(TYPE$2, (-((CORE$S64)(1ULL))));
    V$54914776/*aspel.internal.win32.WM_ENTERMENULOOP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(529ULL));
    V$54914840/*aspel.internal.win32.WM_EXITMENULOOP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(530ULL));
    V$54915992/*aspel.internal.win32.QS_ALLEVENTS*/ = CORE$bor((CORE$bor((CORE$bor((CORE$bor(((V$54916248/*aspel.internal.win32.QS_INPUT*/)),((V$54916632/*aspel.internal.win32.QS_POSTMESSAGE*/)))),((V$54916824/*aspel.internal.win32.QS_TIMER*/)))),((V$54916568/*aspel.internal.win32.QS_PAINT*/)))),((V$54916184/*aspel.internal.win32.QS_HOTKEY*/)));
    V$54916056/*aspel.internal.win32.QS_ALLINPUT*/ = CORE$bor((CORE$bor((CORE$bor((CORE$bor((CORE$bor(((V$54916248/*aspel.internal.win32.QS_INPUT*/)),((V$54916632/*aspel.internal.win32.QS_POSTMESSAGE*/)))),((V$54916824/*aspel.internal.win32.QS_TIMER*/)))),((V$54916568/*aspel.internal.win32.QS_PAINT*/)))),((V$54916184/*aspel.internal.win32.QS_HOTKEY*/)))),((V$54916760/*aspel.internal.win32.QS_SENDMESSAGE*/)));
    V$54916120/*aspel.internal.win32.QS_ALLPOSTMESSAGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54916184/*aspel.internal.win32.QS_HOTKEY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$54916248/*aspel.internal.win32.QS_INPUT*/ = CORE$bor((CORE$bor(((V$54916376/*aspel.internal.win32.QS_MOUSE*/)),((V$54916312/*aspel.internal.win32.QS_KEY*/)))),((V$54916696/*aspel.internal.win32.QS_RAWINPUT*/)));
    V$54916312/*aspel.internal.win32.QS_KEY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54916376/*aspel.internal.win32.QS_MOUSE*/ = CORE$bor(((V$54916504/*aspel.internal.win32.QS_MOUSEMOVE*/)),((V$54916440/*aspel.internal.win32.QS_MOUSEBUTTON*/)));
    V$54916440/*aspel.internal.win32.QS_MOUSEBUTTON*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54916504/*aspel.internal.win32.QS_MOUSEMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54916568/*aspel.internal.win32.QS_PAINT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54916632/*aspel.internal.win32.QS_POSTMESSAGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54916696/*aspel.internal.win32.QS_RAWINPUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54916760/*aspel.internal.win32.QS_SENDMESSAGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$54916824/*aspel.internal.win32.QS_TIMER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54916888/*aspel.internal.win32.PM_NOREMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54916952/*aspel.internal.win32.PM_REMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54917016/*aspel.internal.win32.PM_NOYIELD*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54917080/*aspel.internal.win32.PM_QS_INPUT*/ = CORE$shl(((V$54916248/*aspel.internal.win32.QS_INPUT*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))));
    V$54917144/*aspel.internal.win32.PM_QS_PAINT*/ = CORE$shl(((V$54916568/*aspel.internal.win32.QS_PAINT*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))));
    V$54917208/*aspel.internal.win32.PM_QS_POSTMESSAGE*/ = CORE$shl((CORE$bor((CORE$bor(((V$54916632/*aspel.internal.win32.QS_POSTMESSAGE*/)),((V$54916184/*aspel.internal.win32.QS_HOTKEY*/)))),((V$54916824/*aspel.internal.win32.QS_TIMER*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))));
    V$54917272/*aspel.internal.win32.PM_QS_SENDMESSAGE*/ = CORE$shl(((V$54916760/*aspel.internal.win32.QS_SENDMESSAGE*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))));
    V$54920216/*aspel.internal.win32.GUI_CARETBLINKING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54920280/*aspel.internal.win32.GUI_INMENUMODE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54920344/*aspel.internal.win32.GUI_INMOVESIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54920408/*aspel.internal.win32.GUI_POPUPMENUMODE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54920472/*aspel.internal.win32.GUI_SYSTEMMENUMODE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54923224/*aspel.internal.win32.WPF_ASYNCWINDOWPLACEMENT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54923288/*aspel.internal.win32.WPF_RESTORETOMAXIMIZED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54923352/*aspel.internal.win32.WPF_SETMINPOSITION*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54923416/*aspel.internal.win32.SW_FORCEMINIMIZE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(11ULL));
    V$54923480/*aspel.internal.win32.SW_HIDE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    V$54923544/*aspel.internal.win32.SW_MAXIMIZE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(3ULL));
    V$54923608/*aspel.internal.win32.SW_MINIMIZE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(6ULL));
    V$54923672/*aspel.internal.win32.SW_RESTORE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(9ULL));
    V$54923736/*aspel.internal.win32.SW_SHOW*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
    V$54923800/*aspel.internal.win32.SW_SHOWDEFAULT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(10ULL));
    V$54923864/*aspel.internal.win32.SW_SHOWMAXIMIZED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(3ULL));
    V$54923928/*aspel.internal.win32.SW_SHOWMINIMIZED*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    V$54923992/*aspel.internal.win32.SW_SHOWMINNOACTIVE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(7ULL));
    V$54924056/*aspel.internal.win32.SW_SHOWNA*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(8ULL));
    V$54924120/*aspel.internal.win32.SW_SHOWNOACTIVATE*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL));
    V$54924184/*aspel.internal.win32.SW_SHOWNORMAL*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    V$54924888/*aspel.internal.win32.SWP_DRAWFRAME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54924952/*aspel.internal.win32.SWP_FRAMECHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54925016/*aspel.internal.win32.SWP_HIDEWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$54925080/*aspel.internal.win32.SWP_NOACTIVATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54925144/*aspel.internal.win32.SWP_NOCOPYBITS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54925208/*aspel.internal.win32.SWP_NOMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54925272/*aspel.internal.win32.SWP_NOOWNERZORDER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54925336/*aspel.internal.win32.SWP_NOREDRAW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54925400/*aspel.internal.win32.SWP_NOREPOSITION*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54925464/*aspel.internal.win32.SWP_NOSENDCHANGING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54925528/*aspel.internal.win32.SWP_NOSIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54925592/*aspel.internal.win32.SWP_NOZORDER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54925656/*aspel.internal.win32.SWP_SHOWWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$54925720/*aspel.internal.win32.WS_BORDER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8388608ULL));
    V$54925784/*aspel.internal.win32.WS_CAPTION*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(12582912ULL));
    V$54925848/*aspel.internal.win32.WS_CHILD*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1073741824ULL));
    V$54925912/*aspel.internal.win32.WS_CHILDWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1073741824ULL));
    V$54925976/*aspel.internal.win32.WS_CLIPCHILDREN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(33554432ULL));
    V$54926040/*aspel.internal.win32.WS_CLIPSIBLINGS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(67108864ULL));
    V$54926104/*aspel.internal.win32.WS_DISABLED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(134217728ULL));
    V$54926168/*aspel.internal.win32.WS_DLGFRAME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4194304ULL));
    V$54926232/*aspel.internal.win32.WS_GROUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(131072ULL));
    V$54926296/*aspel.internal.win32.WS_HSCROLL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1048576ULL));
    V$54926360/*aspel.internal.win32.WS_ICONIC*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870912ULL));
    V$54926424/*aspel.internal.win32.WS_MAXIMIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16777216ULL));
    V$54926488/*aspel.internal.win32.WS_MAXIMIZEBOX*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL));
    V$54926552/*aspel.internal.win32.WS_MINIMIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(536870912ULL));
    V$54926616/*aspel.internal.win32.WS_MINIMIZEBOX*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(131072ULL));
    V$54926680/*aspel.internal.win32.WS_OVERLAPPED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54926744/*aspel.internal.win32.WS_OVERLAPPEDWINDOW*/ = CORE$bor((CORE$bor((CORE$bor((CORE$bor((CORE$bor(((V$54926680/*aspel.internal.win32.WS_OVERLAPPED*/)),((V$54925784/*aspel.internal.win32.WS_CAPTION*/)))),((V$54927000/*aspel.internal.win32.WS_SYSMENU*/)))),((V$54927128/*aspel.internal.win32.WS_THICKFRAME*/)))),((V$54926616/*aspel.internal.win32.WS_MINIMIZEBOX*/)))),((V$54926488/*aspel.internal.win32.WS_MAXIMIZEBOX*/)));
    V$54926808/*aspel.internal.win32.WS_POPUP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2147483648ULL));
    V$54926872/*aspel.internal.win32.WS_POPUPWINDOW*/ = CORE$bor((CORE$bor(((V$54926808/*aspel.internal.win32.WS_POPUP*/)),((V$54925720/*aspel.internal.win32.WS_BORDER*/)))),((V$54927000/*aspel.internal.win32.WS_SYSMENU*/)));
    V$54926936/*aspel.internal.win32.WS_SIZEBOX*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(262144ULL));
    V$54927000/*aspel.internal.win32.WS_SYSMENU*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(524288ULL));
    V$54927064/*aspel.internal.win32.WS_TABSTOP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL));
    V$54927128/*aspel.internal.win32.WS_THICKFRAME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(262144ULL));
    V$54927192/*aspel.internal.win32.WS_TILED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54927256/*aspel.internal.win32.WS_TILEDWINDOW*/ = CORE$bor((CORE$bor((CORE$bor((CORE$bor((CORE$bor(((V$54926680/*aspel.internal.win32.WS_OVERLAPPED*/)),((V$54925784/*aspel.internal.win32.WS_CAPTION*/)))),((V$54927000/*aspel.internal.win32.WS_SYSMENU*/)))),((V$54927128/*aspel.internal.win32.WS_THICKFRAME*/)))),((V$54926616/*aspel.internal.win32.WS_MINIMIZEBOX*/)))),((V$54926488/*aspel.internal.win32.WS_MAXIMIZEBOX*/)));
    V$54927320/*aspel.internal.win32.WS_VISIBLE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(268435456ULL));
    V$54927384/*aspel.internal.win32.WS_VSCROLL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2097152ULL));
    V$54927448/*aspel.internal.win32.WS_EX_ACCEPTFILES*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54927512/*aspel.internal.win32.WS_EX_APPWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(262144ULL));
    V$54927576/*aspel.internal.win32.WS_EX_CLIENTEDGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54927640/*aspel.internal.win32.WS_EX_COMPOSITED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(33554432ULL));
    V$54927704/*aspel.internal.win32.WS_EX_CONTEXTHELP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54927768/*aspel.internal.win32.WS_EX_CONTROLPARENT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL));
    V$54927832/*aspel.internal.win32.WS_EX_DLGMODALFRAME*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54927896/*aspel.internal.win32.WS_EX_LAYERED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(524288ULL));
    V$54927960/*aspel.internal.win32.WS_EX_LAYOUTRTL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4194304ULL));
    V$54928024/*aspel.internal.win32.WS_EX_LEFT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54928088/*aspel.internal.win32.WS_EX_LEFTSCROLLBAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16384ULL));
    V$54928152/*aspel.internal.win32.WS_EX_LTRREADING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54928216/*aspel.internal.win32.WS_EX_MDICHILD*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$54928280/*aspel.internal.win32.WS_EX_NOACTIVATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(134217728ULL));
    V$54928344/*aspel.internal.win32.WS_EX_NOINHERITLAYOUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1048576ULL));
    V$54928408/*aspel.internal.win32.WS_EX_NOPARENTNOTIFY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    V$54928472/*aspel.internal.win32.WS_EX_NOREDIRECTIONBITMAP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2097152ULL));
    V$54928536/*aspel.internal.win32.WS_EX_OVERLAPPEDWINDOW*/ = CORE$bor(((V$54929112/*aspel.internal.win32.WS_EX_WINDOWEDGE*/)),((V$54927576/*aspel.internal.win32.WS_EX_CLIENTEDGE*/)));
    V$54928600/*aspel.internal.win32.WS_EX_PALETTEWINDOW*/ = CORE$bor((CORE$bor(((V$54929112/*aspel.internal.win32.WS_EX_WINDOWEDGE*/)),((V$54928920/*aspel.internal.win32.WS_EX_TOOLWINDOW*/)))),((V$54928984/*aspel.internal.win32.WS_EX_TOPMOST*/)));
    V$54928664/*aspel.internal.win32.WS_EX_RIGHT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4096ULL));
    V$54928728/*aspel.internal.win32.WS_EX_RIGHTSCROLLBAR*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54928792/*aspel.internal.win32.WS_EX_RTLREADING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8192ULL));
    V$54928856/*aspel.internal.win32.WS_EX_STATICEDGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(131072ULL));
    V$54928920/*aspel.internal.win32.WS_EX_TOOLWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$54928984/*aspel.internal.win32.WS_EX_TOPMOST*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54929048/*aspel.internal.win32.WS_EX_TRANSPARENT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54929112/*aspel.internal.win32.WS_EX_WINDOWEDGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54929176/*aspel.internal.win32.CW_USEDEFAULT*/ = CORE$cast_regular(TYPE$16, (CORE$S64)(2147483648ULL));
    V$54929240/*aspel.internal.win32.WM_ACTIVATEAPP*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(28ULL));
    V$54929304/*aspel.internal.win32.WM_CANCELMODE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(31ULL));
    V$54929368/*aspel.internal.win32.WM_CHILDACTIVATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(34ULL));
    V$54929432/*aspel.internal.win32.WM_CLOSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    V$54929496/*aspel.internal.win32.WM_COMPACTING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(65ULL));
    V$54929560/*aspel.internal.win32.WM_CREATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54929624/*aspel.internal.win32.WM_DESTROY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54929688/*aspel.internal.win32.WM_DPICHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(736ULL));
    V$54929752/*aspel.internal.win32.WM_ENABLE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL));
    V$54929816/*aspel.internal.win32.WM_ENTERSIZEMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(561ULL));
    V$54929880/*aspel.internal.win32.WM_EXITSIZEMOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(562ULL));
    V$54929944/*aspel.internal.win32.WM_GETICON*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(127ULL));
    V$54930008/*aspel.internal.win32.WM_GETMINMAXINFO*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(36ULL));
    V$54930072/*aspel.internal.win32.WM_INPUTLANGCHANGE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(81ULL));
    V$54930136/*aspel.internal.win32.WM_INPUTLANGCHANGEREQUEST*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(80ULL));
    V$54930200/*aspel.internal.win32.WM_MOVE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    V$54930264/*aspel.internal.win32.WM_MOVING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(534ULL));
    V$54930328/*aspel.internal.win32.WM_NCACTIVATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(134ULL));
    V$54930392/*aspel.internal.win32.WM_NCCALCSIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(131ULL));
    V$54930456/*aspel.internal.win32.WM_NCCREATE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(129ULL));
    V$54930520/*aspel.internal.win32.WM_NCDESTROY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(130ULL));
    V$54930584/*aspel.internal.win32.WM_NULL*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54930648/*aspel.internal.win32.WM_QUERYDRAGICON*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(55ULL));
    V$54930712/*aspel.internal.win32.WM_QUERYOPEN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(19ULL));
    V$54930776/*aspel.internal.win32.WM_QUIT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(18ULL));
    V$54930840/*aspel.internal.win32.WM_SHOWWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(24ULL));
    V$54930904/*aspel.internal.win32.WM_SIZE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(5ULL));
    V$54930968/*aspel.internal.win32.WM_SIZING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(532ULL));
    V$54931032/*aspel.internal.win32.WM_STYLECHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(125ULL));
    V$54931096/*aspel.internal.win32.WM_STYLECHANGING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(124ULL));
    V$54931160/*aspel.internal.win32.WM_THEMECHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(794ULL));
    V$54931224/*aspel.internal.win32.WM_USERCHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(84ULL));
    V$54931288/*aspel.internal.win32.WM_WINDOWPOSCHANGED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(71ULL));
    V$54931352/*aspel.internal.win32.WM_WINDOWPOSCHANGING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(70ULL));
    V$54933208/*aspel.internal.win32.CS_BYTEALIGNCLIENT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4096ULL));
    V$54933272/*aspel.internal.win32.CS_BYTEALIGNWINDOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8192ULL));
    V$54933336/*aspel.internal.win32.CS_CLASSDC*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    V$54933400/*aspel.internal.win32.CS_DBLCLKS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    V$54933464/*aspel.internal.win32.CS_DROPSHADOW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(131072ULL));
    V$54933528/*aspel.internal.win32.CS_GLOBALCLASS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(16384ULL));
    V$54933592/*aspel.internal.win32.CS_HREDRAW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54933656/*aspel.internal.win32.CS_NOCLOSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54933720/*aspel.internal.win32.CS_OWNDC*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    V$54933784/*aspel.internal.win32.CS_PARENTDC*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$54933848/*aspel.internal.win32.CS_SAVEBITS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2048ULL));
    V$54933912/*aspel.internal.win32.CS_VREDRAW*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54933976/*aspel.internal.win32.GCW_ATOM*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(32ULL))));
    V$54934040/*aspel.internal.win32.GCL_CBCLSEXTRA*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(20ULL))));
    V$54934104/*aspel.internal.win32.GCL_CBWNDEXTRA*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(18ULL))));
    V$54934168/*aspel.internal.win32.GCL_HBRBACKGROUND*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(10ULL))));
    V$54934232/*aspel.internal.win32.GCL_HCURSOR*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(12ULL))));
    V$54934296/*aspel.internal.win32.GCL_HICON*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(14ULL))));
    V$54934360/*aspel.internal.win32.GCL_HICONSM*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(34ULL))));
    V$54934424/*aspel.internal.win32.GCL_HMODULE*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(16ULL))));
    V$54934488/*aspel.internal.win32.GCL_MENUNAME*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(8ULL))));
    V$54934552/*aspel.internal.win32.GCL_STYLE*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(26ULL))));
    V$54934616/*aspel.internal.win32.GCL_WNDPROC*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(24ULL))));
    V$54934680/*aspel.internal.win32.GWL_EXSTYLE*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(20ULL))));
    V$54934744/*aspel.internal.win32.GWL_HINSTANCE*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(6ULL))));
    V$54934808/*aspel.internal.win32.GWL_HWNDPARENT*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(8ULL))));
    V$54934872/*aspel.internal.win32.GWL_ID*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(12ULL))));
    V$54934936/*aspel.internal.win32.GWL_STYLE*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(16ULL))));
    V$54935000/*aspel.internal.win32.GWL_USERDATA*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(21ULL))));
    V$54935064/*aspel.internal.win32.GWL_WNDPROC*/ = CORE$cast_regular(TYPE$16, (-((CORE$S64)(4ULL))));
    V$54935832/*aspel.internal.win32.INVALID_HANDLE_VALUE*/ = CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL))));
    V$54935896/*aspel.internal.win32.FORMAT_MESSAGE_ALLOCATE_BUFFER*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    V$54935960/*aspel.internal.win32.FORMAT_MESSAGE_ARGUMENT_ARRAY*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8192ULL));
    V$54936024/*aspel.internal.win32.FORMAT_MESSAGE_FROM_HMODULE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2048ULL));
    V$54936088/*aspel.internal.win32.FORMAT_MESSAGE_FROM_STRING*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    V$54936152/*aspel.internal.win32.FORMAT_MESSAGE_FROM_SYSTEM*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4096ULL));
    V$54936216/*aspel.internal.win32.FORMAT_MESSAGE_IGNORE_INSERTS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    V$54936280/*aspel.internal.win32.INFINITE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL));
    V$54938456/*aspel.internal.win32.WAIT_ABANDONED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    V$54938520/*aspel.internal.win32.WAIT_OBJECT_0*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    V$54938584/*aspel.internal.win32.WAIT_TIMEOUT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(258ULL));
    V$54938648/*aspel.internal.win32.WAIT_FAILED*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL));
    V$54938712/*aspel.internal.win32.DUPLICATE_CLOSE_SOURCE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54938776/*aspel.internal.win32.DUPLICATE_SAME_ACCESS*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54938840/*aspel.internal.win32.HANDLE_FLAG_INHERIT*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    V$54938904/*aspel.internal.win32.HANDLE_FLAG_PROTECT_FROM_CLOSE*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    V$54950296/*aspel.internal.win32.WIN32*/ = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_391B7C0_OFF],(CORE$U64) SHARED$STR_391B7C0_LEN);
}

void __aspel_internal__initialize_isolated() {
    (ISOLATED$BASE.V$15413376/*aspel.thread.current_thread*/) = CORE$cast_regular(TYPE$5, ((TYPE$19(CORE$STDCALL*)())(((CORE$DELEGATE)V$51753736/*aspel.internal.win32.GetCurrentThread*/)))());
    (ISOLATED$BASE.V$15413440/*aspel.thread.current_thread_id*/) = CORE$cast_regular(TYPE$5, ((TYPE$19(CORE$STDCALL*)())(((CORE$DELEGATE)V$51753816/*aspel.internal.win32.GetCurrentThreadId*/)))());
        (ISOLATED$BASE.V$15414464/*aspel.text.NODE_SPLIT*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$15414528/*aspel.text.NODE_MATCH*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$15422720/*aspel.text.TOKEN_STATE_WHITESPACE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    (ISOLATED$BASE.V$15422784/*aspel.text.TOKEN_STATE_WORD*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(257ULL));
    (ISOLATED$BASE.V$15422848/*aspel.text.TOKEN_STATE_NUMBER*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(258ULL));
    (ISOLATED$BASE.V$46951200/*aspel.text.CONTEXT_STATE_INITIAL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$46951264/*aspel.text.CONTEXT_STATE_COMPLETE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$46951328/*aspel.text.TOKEN_STATE_INITIAL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$46951392/*aspel.text.TOKEN_STATE_COMPLETE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$46951456/*aspel.text.TOKEN_STATE_ILLEGAL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$46951520/*aspel.text.TOKEN_STATE_ABORT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    (ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/) = (-((CORE$S64)(1ULL)));
    (ISOLATED$BASE.V$46953248/*aspel.text.FORMAT_ITEM_ALIGNMENT_LEFT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$46953312/*aspel.text.FORMAT_ITEM_ALIGNMENT_RIGHT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$46953376/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_LEFT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$46953440/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_RIGHT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    (ISOLATED$BASE.V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL));
    (ISOLATED$BASE.V$46965280/*aspel.text.REPLACEMENT_CHARACTER*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(65533ULL));
    (ISOLATED$BASE.V$47573384/*aspel.math.E*/) = (CORE$F64)(2.71828);
    (ISOLATED$BASE.V$47573448/*aspel.math.PI*/) = (CORE$F64)(3.14159);
    (ISOLATED$BASE.V$47573512/*aspel.math.FLOAT32_NAN*/) = CORE$cast_regular(TYPE$172, CORE$div(((CORE$F64)(0.00000)),((CORE$F64)(0.00000))));
    (ISOLATED$BASE.V$47573576/*aspel.math.FLOAT32_MAX_VALUE*/) = CORE$cast_regular(TYPE$172, (CORE$F64)(-9223372036854775808.00000));
    (ISOLATED$BASE.V$47573640/*aspel.math.FLOAT32_MIN_VALUE*/) = CORE$cast_regular(TYPE$172, (-((CORE$F64)(-9223372036854775808.00000))));
    (ISOLATED$BASE.V$47573704/*aspel.math.FLOAT32_MIN_NORMAL*/) = CORE$cast_regular(TYPE$172, (CORE$F64)(0.00000));
    (ISOLATED$BASE.V$47573768/*aspel.math.FLOAT32_MAX_EXPONENT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(127ULL));
    (ISOLATED$BASE.V$47573832/*aspel.math.FLOAT32_MIN_EXPONENT*/) = CORE$cast_regular(TYPE$16, (-((CORE$S64)(126ULL))));
    (ISOLATED$BASE.V$47573896/*aspel.math.FLOAT64_NAN*/) = CORE$div(((CORE$F64)(0.00000)),((CORE$F64)(0.00000)));
    (ISOLATED$BASE.V$47573960/*aspel.math.FLOAT64_MAX_VALUE*/) = (CORE$F64)(-9223372036854775808.00000);
    (ISOLATED$BASE.V$47574024/*aspel.math.FLOAT64_MIN_VALUE*/) = (-((CORE$F64)(-9223372036854775808.00000)));
    (ISOLATED$BASE.V$47574088/*aspel.math.FLOAT64_MIN_NORMAL*/) = (CORE$F64)(0.00000);
    (ISOLATED$BASE.V$47574152/*aspel.math.FLOAT64_MAX_EXPONENT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(1023ULL));
    (ISOLATED$BASE.V$47574216/*aspel.math.FLOAT64_MIN_EXPONENT*/) = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1022ULL))));
    (ISOLATED$BASE.V$47575752/*aspel.math.DEFAULT_INITIAL_LENGTH*/) = CORE$cast_regular(TYPE$5, (CORE$S64)(8ULL));
    (ISOLATED$BASE.V$47585096/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_LINE*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$47585160/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_FILL*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$47593032/*aspel.cml.ui.layouts.HORIZONTAL_LAYOUT*/) = ([&]()->TYPE$412{
    TYPE$412 TEMP$RESULT;
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851360/*aspel.cml.ui.layouts.horizontal_layout_begin*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851440/*aspel.cml.ui.layouts.horizontal_layout_end*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851520/*aspel.cml.ui.layouts.horizontal_layout*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851600/*aspel.cml.ui.layouts.horizontal_layout_available*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$415 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851680/*aspel.cml.ui.layouts.horizontal_layout_post*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m4);
      *TEMP$PTR = CORE$cast_regular(TYPE$415, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = (CORE$U64)(56);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m5);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    (ISOLATED$BASE.V$47596680/*aspel.cml.ui.layouts.VERTICAL_LAYOUT*/) = ([&]()->TYPE$412{
    TYPE$412 TEMP$RESULT;
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851840/*aspel.cml.ui.layouts.vertical_layout_begin*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47851920/*aspel.cml.ui.layouts.vertical_layout_end*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852000/*aspel.cml.ui.layouts.vertical_layout*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852080/*aspel.cml.ui.layouts.vertical_layout_available*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$415 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852160/*aspel.cml.ui.layouts.vertical_layout_post*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m4);
      *TEMP$PTR = CORE$cast_regular(TYPE$415, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = (CORE$U64)(56);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m5);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    (ISOLATED$BASE.V$47600328/*aspel.cml.ui.layouts.PANE_LAYOUT*/) = ([&]()->TYPE$412{
    TYPE$412 TEMP$RESULT;
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852320/*aspel.cml.ui.layouts.pane_layout_begin*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852400/*aspel.cml.ui.layouts.pane_layout_end*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852480/*aspel.cml.ui.layouts.pane_layout*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852560/*aspel.cml.ui.layouts.pane_layout_available*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$415 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852640/*aspel.cml.ui.layouts.pane_layout_post*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m4);
      *TEMP$PTR = CORE$cast_regular(TYPE$415, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = (CORE$U64)(48);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m5);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    (ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/) = CORE$cast_regular(TYPE$16, (-((CORE$S64)(2ULL))));
    (ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/) = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    (ISOLATED$BASE.V$47604040/*aspel.cml.ui.layouts.ROOT_LAYOUT*/) = ([&]()->TYPE$412{
    TYPE$412 TEMP$RESULT;
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = CORE$null_delegate;
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$413 TEMP$TYPE;
      auto TEMP$VAL = CORE$null_delegate;
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$413, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852720/*aspel.cml.ui.layouts.root_layout*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$414 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852800/*aspel.cml.ui.layouts.root_layout_available*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$414, TEMP$VAL); }
    { typedef TYPE$415 TEMP$TYPE;
      auto TEMP$VAL = ((CORE$DELEGATE)V$47852880/*aspel.cml.ui.layouts.root_layout_post*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m4);
      *TEMP$PTR = CORE$cast_regular(TYPE$415, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m5);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    (ISOLATED$BASE.V$47605768/*aspel.cml.ui.style_array_size*/) = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$47606024/*aspel.cml.ui.STYLE_SIZE_PADDING_VERTICAL*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(16)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606088/*aspel.cml.ui.STYLE_SIZE_PADDING_HORIZONTAL*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(16)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606152/*aspel.cml.ui.STYLE_DIMENSIONS_BUTTON*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(331)), (CORE$U64)(8));
    (ISOLATED$BASE.V$47606216/*aspel.cml.ui.STYLE_MARGINS*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(420)), (CORE$U64)(16));
    (ISOLATED$BASE.V$47606280/*aspel.cml.ui.STYLE_MARGINS_PANE*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(420)), (CORE$U64)(16));
    (ISOLATED$BASE.V$47606344/*aspel.cml.ui.STYLE_COLOR_TEXT*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(407)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606408/*aspel.cml.ui.STYLE_COLOR_TEXT_FOCUS*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(407)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606472/*aspel.cml.ui.STYLE_COLOR_BORDER*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(407)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606536/*aspel.cml.ui.STYLE_COLOR_BUTTON*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(407)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606600/*aspel.cml.ui.STYLE_COLOR_BUTTON_HOT*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(407)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47606664/*aspel.cml.ui.STYLE_COLOR_BUTTON_FOCUS*/) = ((TYPE$401(*)(TYPE$169,TYPE$5))(((CORE$DELEGATE)V$47852960/*aspel.cml.ui.create_style_attribute*/)))(((CORE$TYPEID)(407)), (CORE$U64)(4));
    (ISOLATED$BASE.V$47612104/*aspel.cml.ui.WIDGET_NONE*/) = ([&]()->TYPE$191{
    TYPE$191 TEMP$RESULT;
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    (ISOLATED$BASE.V$47614664/*aspel.cml.event.KEYMOD_LSHIFT*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$47614728/*aspel.cml.event.KEYMOD_RSHIFT*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$47614792/*aspel.cml.event.KEYMOD_LCTRL*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(4ULL));
    (ISOLATED$BASE.V$47614856/*aspel.cml.event.KEYMOD_RCTRL*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL));
    (ISOLATED$BASE.V$47614920/*aspel.cml.event.KEYMOD_LALT*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(16ULL));
    (ISOLATED$BASE.V$47614984/*aspel.cml.event.KEYMOD_RALT*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(32ULL));
    (ISOLATED$BASE.V$47615048/*aspel.cml.event.KEYMOD_LGUI*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(64ULL));
    (ISOLATED$BASE.V$47615112/*aspel.cml.event.KEYMOD_RGUI*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(128ULL));
    (ISOLATED$BASE.V$47615176/*aspel.cml.event.KEYMOD_NUM*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(4096ULL));
    (ISOLATED$BASE.V$47615240/*aspel.cml.event.KEYMOD_CAPS*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(8192ULL));
    (ISOLATED$BASE.V$47615304/*aspel.cml.event.KEYMOD_MODE*/) = CORE$cast_regular(TYPE$28, (CORE$S64)(16384ULL));
    (ISOLATED$BASE.V$47615432/*aspel.cml.event.SCANCODE_A*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL));
    (ISOLATED$BASE.V$47615496/*aspel.cml.event.SCANCODE_B*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
    (ISOLATED$BASE.V$47615560/*aspel.cml.event.SCANCODE_C*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(6ULL));
    (ISOLATED$BASE.V$47615624/*aspel.cml.event.SCANCODE_D*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(7ULL));
    (ISOLATED$BASE.V$47615688/*aspel.cml.event.SCANCODE_E*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(8ULL));
    (ISOLATED$BASE.V$47615752/*aspel.cml.event.SCANCODE_F*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(9ULL));
    (ISOLATED$BASE.V$47615816/*aspel.cml.event.SCANCODE_G*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(10ULL));
    (ISOLATED$BASE.V$47615880/*aspel.cml.event.SCANCODE_H*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(11ULL));
    (ISOLATED$BASE.V$47615944/*aspel.cml.event.SCANCODE_I*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(12ULL));
    (ISOLATED$BASE.V$47616008/*aspel.cml.event.SCANCODE_J*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(13ULL));
    (ISOLATED$BASE.V$47616072/*aspel.cml.event.SCANCODE_K*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(14ULL));
    (ISOLATED$BASE.V$47616136/*aspel.cml.event.SCANCODE_L*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(15ULL));
    (ISOLATED$BASE.V$47616200/*aspel.cml.event.SCANCODE_M*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(16ULL));
    (ISOLATED$BASE.V$47616264/*aspel.cml.event.SCANCODE_N*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(17ULL));
    (ISOLATED$BASE.V$47616328/*aspel.cml.event.SCANCODE_O*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(18ULL));
    (ISOLATED$BASE.V$47616392/*aspel.cml.event.SCANCODE_P*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(19ULL));
    (ISOLATED$BASE.V$47616456/*aspel.cml.event.SCANCODE_Q*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(20ULL));
    (ISOLATED$BASE.V$47616520/*aspel.cml.event.SCANCODE_R*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(21ULL));
    (ISOLATED$BASE.V$47616584/*aspel.cml.event.SCANCODE_S*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(22ULL));
    (ISOLATED$BASE.V$47616648/*aspel.cml.event.SCANCODE_T*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(23ULL));
    (ISOLATED$BASE.V$47616712/*aspel.cml.event.SCANCODE_U*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(24ULL));
    (ISOLATED$BASE.V$47616776/*aspel.cml.event.SCANCODE_V*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(25ULL));
    (ISOLATED$BASE.V$47616840/*aspel.cml.event.SCANCODE_W*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(26ULL));
    (ISOLATED$BASE.V$47616904/*aspel.cml.event.SCANCODE_X*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(27ULL));
    (ISOLATED$BASE.V$47616968/*aspel.cml.event.SCANCODE_Y*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(28ULL));
    (ISOLATED$BASE.V$47617032/*aspel.cml.event.SCANCODE_Z*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(29ULL));
    (ISOLATED$BASE.V$47617096/*aspel.cml.event.SCANCODE_1*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(30ULL));
    (ISOLATED$BASE.V$47617160/*aspel.cml.event.SCANCODE_2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(31ULL));
    (ISOLATED$BASE.V$47617224/*aspel.cml.event.SCANCODE_3*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(32ULL));
    (ISOLATED$BASE.V$47617288/*aspel.cml.event.SCANCODE_4*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(33ULL));
    (ISOLATED$BASE.V$47617352/*aspel.cml.event.SCANCODE_5*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(34ULL));
    (ISOLATED$BASE.V$47617416/*aspel.cml.event.SCANCODE_6*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(35ULL));
    (ISOLATED$BASE.V$47617480/*aspel.cml.event.SCANCODE_7*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(36ULL));
    (ISOLATED$BASE.V$47617544/*aspel.cml.event.SCANCODE_8*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(37ULL));
    (ISOLATED$BASE.V$47617608/*aspel.cml.event.SCANCODE_9*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(38ULL));
    (ISOLATED$BASE.V$47617672/*aspel.cml.event.SCANCODE_0*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(39ULL));
    (ISOLATED$BASE.V$47617736/*aspel.cml.event.SCANCODE_RETURN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(40ULL));
    (ISOLATED$BASE.V$47617800/*aspel.cml.event.SCANCODE_ESCAPE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(41ULL));
    (ISOLATED$BASE.V$47617864/*aspel.cml.event.SCANCODE_BACKSPACE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(42ULL));
    (ISOLATED$BASE.V$47617928/*aspel.cml.event.SCANCODE_TAB*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(43ULL));
    (ISOLATED$BASE.V$47617992/*aspel.cml.event.SCANCODE_SPACE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(44ULL));
    (ISOLATED$BASE.V$47618056/*aspel.cml.event.SCANCODE_MINUS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(45ULL));
    (ISOLATED$BASE.V$47618120/*aspel.cml.event.SCANCODE_EQUALS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(46ULL));
    (ISOLATED$BASE.V$47618184/*aspel.cml.event.SCANCODE_LEFTBRACKET*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(47ULL));
    (ISOLATED$BASE.V$47618248/*aspel.cml.event.SCANCODE_RIGHTBRACKET*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(48ULL));
    (ISOLATED$BASE.V$47618312/*aspel.cml.event.SCANCODE_BACKSLASH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(49ULL));
    (ISOLATED$BASE.V$47618376/*aspel.cml.event.SCANCODE_NONUSHASH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(50ULL));
    (ISOLATED$BASE.V$47618440/*aspel.cml.event.SCANCODE_SEMICOLON*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(51ULL));
    (ISOLATED$BASE.V$47618504/*aspel.cml.event.SCANCODE_APOSTROPHE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(52ULL));
    (ISOLATED$BASE.V$47618568/*aspel.cml.event.SCANCODE_GRAVE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(53ULL));
    (ISOLATED$BASE.V$47618632/*aspel.cml.event.SCANCODE_COMMA*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(54ULL));
    (ISOLATED$BASE.V$47618696/*aspel.cml.event.SCANCODE_PERIOD*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(55ULL));
    (ISOLATED$BASE.V$47618760/*aspel.cml.event.SCANCODE_SLASH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(56ULL));
    (ISOLATED$BASE.V$47618824/*aspel.cml.event.SCANCODE_CAPSLOCK*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(57ULL));
    (ISOLATED$BASE.V$47618888/*aspel.cml.event.SCANCODE_F1*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(58ULL));
    (ISOLATED$BASE.V$47618952/*aspel.cml.event.SCANCODE_F2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(59ULL));
    (ISOLATED$BASE.V$47619016/*aspel.cml.event.SCANCODE_F3*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(60ULL));
    (ISOLATED$BASE.V$47619080/*aspel.cml.event.SCANCODE_F4*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(61ULL));
    (ISOLATED$BASE.V$47619144/*aspel.cml.event.SCANCODE_F5*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(62ULL));
    (ISOLATED$BASE.V$47619208/*aspel.cml.event.SCANCODE_F6*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(63ULL));
    (ISOLATED$BASE.V$47619272/*aspel.cml.event.SCANCODE_F7*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(64ULL));
    (ISOLATED$BASE.V$47619336/*aspel.cml.event.SCANCODE_F8*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(65ULL));
    (ISOLATED$BASE.V$47619400/*aspel.cml.event.SCANCODE_F9*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(66ULL));
    (ISOLATED$BASE.V$47619464/*aspel.cml.event.SCANCODE_F10*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(67ULL));
    (ISOLATED$BASE.V$47619528/*aspel.cml.event.SCANCODE_F11*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(68ULL));
    (ISOLATED$BASE.V$47619592/*aspel.cml.event.SCANCODE_F12*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(69ULL));
    (ISOLATED$BASE.V$47619656/*aspel.cml.event.SCANCODE_PRINTSCREEN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(70ULL));
    (ISOLATED$BASE.V$47619720/*aspel.cml.event.SCANCODE_SCROLLLOCK*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(71ULL));
    (ISOLATED$BASE.V$47619784/*aspel.cml.event.SCANCODE_PAUSE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(72ULL));
    (ISOLATED$BASE.V$47619848/*aspel.cml.event.SCANCODE_INSERT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(73ULL));
    (ISOLATED$BASE.V$47619912/*aspel.cml.event.SCANCODE_HOME*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(74ULL));
    (ISOLATED$BASE.V$47619976/*aspel.cml.event.SCANCODE_PAGEUP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(75ULL));
    (ISOLATED$BASE.V$47620040/*aspel.cml.event.SCANCODE_DELETE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(76ULL));
    (ISOLATED$BASE.V$47620104/*aspel.cml.event.SCANCODE_END*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(77ULL));
    (ISOLATED$BASE.V$47620168/*aspel.cml.event.SCANCODE_PAGEDOWN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(78ULL));
    (ISOLATED$BASE.V$47620232/*aspel.cml.event.SCANCODE_RIGHT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(79ULL));
    (ISOLATED$BASE.V$47620296/*aspel.cml.event.SCANCODE_LEFT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(80ULL));
    (ISOLATED$BASE.V$47620360/*aspel.cml.event.SCANCODE_DOWN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(81ULL));
    (ISOLATED$BASE.V$47620424/*aspel.cml.event.SCANCODE_UP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(82ULL));
    (ISOLATED$BASE.V$47620488/*aspel.cml.event.SCANCODE_NUMLOCKCLEAR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(83ULL));
    (ISOLATED$BASE.V$47620552/*aspel.cml.event.SCANCODE_KP_DIVIDE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(84ULL));
    (ISOLATED$BASE.V$47620616/*aspel.cml.event.SCANCODE_KP_MULTIPLY*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(85ULL));
    (ISOLATED$BASE.V$47620680/*aspel.cml.event.SCANCODE_KP_MINUS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(86ULL));
    (ISOLATED$BASE.V$47620744/*aspel.cml.event.SCANCODE_KP_PLUS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(87ULL));
    (ISOLATED$BASE.V$47620808/*aspel.cml.event.SCANCODE_KP_ENTER*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(88ULL));
    (ISOLATED$BASE.V$47620872/*aspel.cml.event.SCANCODE_KP_1*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(89ULL));
    (ISOLATED$BASE.V$47620936/*aspel.cml.event.SCANCODE_KP_2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(90ULL));
    (ISOLATED$BASE.V$47621000/*aspel.cml.event.SCANCODE_KP_3*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(91ULL));
    (ISOLATED$BASE.V$47621064/*aspel.cml.event.SCANCODE_KP_4*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(92ULL));
    (ISOLATED$BASE.V$47621128/*aspel.cml.event.SCANCODE_KP_5*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(93ULL));
    (ISOLATED$BASE.V$47621192/*aspel.cml.event.SCANCODE_KP_6*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(94ULL));
    (ISOLATED$BASE.V$47621256/*aspel.cml.event.SCANCODE_KP_7*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(95ULL));
    (ISOLATED$BASE.V$47621320/*aspel.cml.event.SCANCODE_KP_8*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(96ULL));
    (ISOLATED$BASE.V$47621384/*aspel.cml.event.SCANCODE_KP_9*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(97ULL));
    (ISOLATED$BASE.V$47621448/*aspel.cml.event.SCANCODE_KP_0*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(98ULL));
    (ISOLATED$BASE.V$47621512/*aspel.cml.event.SCANCODE_KP_PERIOD*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(99ULL));
    (ISOLATED$BASE.V$47621576/*aspel.cml.event.SCANCODE_NONUSBACKSLASH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(100ULL));
    (ISOLATED$BASE.V$47621640/*aspel.cml.event.SCANCODE_APPLICATION*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(101ULL));
    (ISOLATED$BASE.V$47621704/*aspel.cml.event.SCANCODE_POWER*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(102ULL));
    (ISOLATED$BASE.V$47621768/*aspel.cml.event.SCANCODE_KP_EQUALS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(103ULL));
    (ISOLATED$BASE.V$47621832/*aspel.cml.event.SCANCODE_F13*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(104ULL));
    (ISOLATED$BASE.V$47621896/*aspel.cml.event.SCANCODE_F14*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(105ULL));
    (ISOLATED$BASE.V$47621960/*aspel.cml.event.SCANCODE_F15*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(106ULL));
    (ISOLATED$BASE.V$47622024/*aspel.cml.event.SCANCODE_F16*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(107ULL));
    (ISOLATED$BASE.V$47622088/*aspel.cml.event.SCANCODE_F17*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(108ULL));
    (ISOLATED$BASE.V$47622152/*aspel.cml.event.SCANCODE_F18*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(109ULL));
    (ISOLATED$BASE.V$47622216/*aspel.cml.event.SCANCODE_F19*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(110ULL));
    (ISOLATED$BASE.V$47622280/*aspel.cml.event.SCANCODE_F20*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(111ULL));
    (ISOLATED$BASE.V$47622344/*aspel.cml.event.SCANCODE_F21*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(112ULL));
    (ISOLATED$BASE.V$47622408/*aspel.cml.event.SCANCODE_F22*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(113ULL));
    (ISOLATED$BASE.V$47622472/*aspel.cml.event.SCANCODE_F23*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(114ULL));
    (ISOLATED$BASE.V$47622536/*aspel.cml.event.SCANCODE_F24*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(115ULL));
    (ISOLATED$BASE.V$47622600/*aspel.cml.event.SCANCODE_EXECUTE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(116ULL));
    (ISOLATED$BASE.V$47622664/*aspel.cml.event.SCANCODE_HELP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(117ULL));
    (ISOLATED$BASE.V$47622728/*aspel.cml.event.SCANCODE_MENU*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(118ULL));
    (ISOLATED$BASE.V$47622792/*aspel.cml.event.SCANCODE_SELECT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(119ULL));
    (ISOLATED$BASE.V$47622856/*aspel.cml.event.SCANCODE_STOP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(120ULL));
    (ISOLATED$BASE.V$47622920/*aspel.cml.event.SCANCODE_AGAIN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(121ULL));
    (ISOLATED$BASE.V$47622984/*aspel.cml.event.SCANCODE_UNDO*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(122ULL));
    (ISOLATED$BASE.V$47623048/*aspel.cml.event.SCANCODE_CUT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(123ULL));
    (ISOLATED$BASE.V$47623112/*aspel.cml.event.SCANCODE_COPY*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(124ULL));
    (ISOLATED$BASE.V$47623176/*aspel.cml.event.SCANCODE_PASTE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(125ULL));
    (ISOLATED$BASE.V$47623240/*aspel.cml.event.SCANCODE_FIND*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(126ULL));
    (ISOLATED$BASE.V$47623304/*aspel.cml.event.SCANCODE_MUTE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(127ULL));
    (ISOLATED$BASE.V$47623368/*aspel.cml.event.SCANCODE_VOLUMEUP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(128ULL));
    (ISOLATED$BASE.V$47623432/*aspel.cml.event.SCANCODE_VOLUMEDOWN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(129ULL));
    (ISOLATED$BASE.V$47623496/*aspel.cml.event.SCANCODE_KP_COMMA*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(133ULL));
    (ISOLATED$BASE.V$47623560/*aspel.cml.event.SCANCODE_KP_EQUALSAS400*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(134ULL));
    (ISOLATED$BASE.V$47623624/*aspel.cml.event.SCANCODE_INTERNATIONAL1*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(135ULL));
    (ISOLATED$BASE.V$47623688/*aspel.cml.event.SCANCODE_INTERNATIONAL2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(136ULL));
    (ISOLATED$BASE.V$47623752/*aspel.cml.event.SCANCODE_INTERNATIONAL3*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(137ULL));
    (ISOLATED$BASE.V$47623816/*aspel.cml.event.SCANCODE_INTERNATIONAL4*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(138ULL));
    (ISOLATED$BASE.V$47623880/*aspel.cml.event.SCANCODE_INTERNATIONAL5*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(139ULL));
    (ISOLATED$BASE.V$47623944/*aspel.cml.event.SCANCODE_INTERNATIONAL6*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(140ULL));
    (ISOLATED$BASE.V$47624008/*aspel.cml.event.SCANCODE_INTERNATIONAL7*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(141ULL));
    (ISOLATED$BASE.V$47624072/*aspel.cml.event.SCANCODE_INTERNATIONAL8*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(142ULL));
    (ISOLATED$BASE.V$47624136/*aspel.cml.event.SCANCODE_INTERNATIONAL9*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(143ULL));
    (ISOLATED$BASE.V$47624200/*aspel.cml.event.SCANCODE_LANG1*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(144ULL));
    (ISOLATED$BASE.V$47624264/*aspel.cml.event.SCANCODE_LANG2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(145ULL));
    (ISOLATED$BASE.V$47624328/*aspel.cml.event.SCANCODE_LANG3*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(146ULL));
    (ISOLATED$BASE.V$47624392/*aspel.cml.event.SCANCODE_LANG4*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(147ULL));
    (ISOLATED$BASE.V$47624456/*aspel.cml.event.SCANCODE_LANG5*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(148ULL));
    (ISOLATED$BASE.V$47624520/*aspel.cml.event.SCANCODE_LANG6*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(149ULL));
    (ISOLATED$BASE.V$47624584/*aspel.cml.event.SCANCODE_LANG7*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(150ULL));
    (ISOLATED$BASE.V$47624648/*aspel.cml.event.SCANCODE_LANG8*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(151ULL));
    (ISOLATED$BASE.V$47624712/*aspel.cml.event.SCANCODE_LANG9*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(152ULL));
    (ISOLATED$BASE.V$47624776/*aspel.cml.event.SCANCODE_ALTERASE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(153ULL));
    (ISOLATED$BASE.V$47624840/*aspel.cml.event.SCANCODE_SYSREQ*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(154ULL));
    (ISOLATED$BASE.V$47624904/*aspel.cml.event.SCANCODE_CANCEL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(155ULL));
    (ISOLATED$BASE.V$47624968/*aspel.cml.event.SCANCODE_CLEAR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(156ULL));
    (ISOLATED$BASE.V$47625032/*aspel.cml.event.SCANCODE_PRIOR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(157ULL));
    (ISOLATED$BASE.V$47625096/*aspel.cml.event.SCANCODE_RETURN2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(158ULL));
    (ISOLATED$BASE.V$47625160/*aspel.cml.event.SCANCODE_SEPARATOR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(159ULL));
    (ISOLATED$BASE.V$47625224/*aspel.cml.event.SCANCODE_OUT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(160ULL));
    (ISOLATED$BASE.V$47625288/*aspel.cml.event.SCANCODE_OPER*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(161ULL));
    (ISOLATED$BASE.V$47625352/*aspel.cml.event.SCANCODE_CLEARAGAIN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(162ULL));
    (ISOLATED$BASE.V$47625416/*aspel.cml.event.SCANCODE_CRSEL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(163ULL));
    (ISOLATED$BASE.V$47625480/*aspel.cml.event.SCANCODE_EXSEL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(164ULL));
    (ISOLATED$BASE.V$47625544/*aspel.cml.event.SCANCODE_KP_00*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(176ULL));
    (ISOLATED$BASE.V$47625608/*aspel.cml.event.SCANCODE_KP_000*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(177ULL));
    (ISOLATED$BASE.V$47625672/*aspel.cml.event.SCANCODE_THOUSANDSSEPARATOR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(178ULL));
    (ISOLATED$BASE.V$47625736/*aspel.cml.event.SCANCODE_DECIMALSEPARATOR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(179ULL));
    (ISOLATED$BASE.V$47625800/*aspel.cml.event.SCANCODE_CURRENCYUNIT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(180ULL));
    (ISOLATED$BASE.V$47625864/*aspel.cml.event.SCANCODE_CURRENCYSUBUNIT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(181ULL));
    (ISOLATED$BASE.V$47625928/*aspel.cml.event.SCANCODE_KP_LEFTPAREN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(182ULL));
    (ISOLATED$BASE.V$47625992/*aspel.cml.event.SCANCODE_KP_RIGHTPAREN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(183ULL));
    (ISOLATED$BASE.V$47626056/*aspel.cml.event.SCANCODE_KP_LEFTBRACE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(184ULL));
    (ISOLATED$BASE.V$47626120/*aspel.cml.event.SCANCODE_KP_RIGHTBRACE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(185ULL));
    (ISOLATED$BASE.V$47626184/*aspel.cml.event.SCANCODE_KP_TAB*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(186ULL));
    (ISOLATED$BASE.V$47626248/*aspel.cml.event.SCANCODE_KP_BACKSPACE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(187ULL));
    (ISOLATED$BASE.V$47626312/*aspel.cml.event.SCANCODE_KP_A*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(188ULL));
    (ISOLATED$BASE.V$47626376/*aspel.cml.event.SCANCODE_KP_B*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(189ULL));
    (ISOLATED$BASE.V$47626440/*aspel.cml.event.SCANCODE_KP_C*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(190ULL));
    (ISOLATED$BASE.V$47626504/*aspel.cml.event.SCANCODE_KP_D*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(191ULL));
    (ISOLATED$BASE.V$47626568/*aspel.cml.event.SCANCODE_KP_E*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(192ULL));
    (ISOLATED$BASE.V$47626632/*aspel.cml.event.SCANCODE_KP_F*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(193ULL));
    (ISOLATED$BASE.V$47626696/*aspel.cml.event.SCANCODE_KP_XOR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(194ULL));
    (ISOLATED$BASE.V$47626760/*aspel.cml.event.SCANCODE_KP_POWER*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(195ULL));
    (ISOLATED$BASE.V$47626824/*aspel.cml.event.SCANCODE_KP_PERCENT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(196ULL));
    (ISOLATED$BASE.V$47626888/*aspel.cml.event.SCANCODE_KP_LESS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(197ULL));
    (ISOLATED$BASE.V$47626952/*aspel.cml.event.SCANCODE_KP_GREATER*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(198ULL));
    (ISOLATED$BASE.V$47627016/*aspel.cml.event.SCANCODE_KP_AMPERSAND*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(199ULL));
    (ISOLATED$BASE.V$47627080/*aspel.cml.event.SCANCODE_KP_DBLAMPERSAND*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(200ULL));
    (ISOLATED$BASE.V$47627144/*aspel.cml.event.SCANCODE_KP_VERTICALBAR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(201ULL));
    (ISOLATED$BASE.V$47627208/*aspel.cml.event.SCANCODE_KP_DBLVERTICALBAR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(202ULL));
    (ISOLATED$BASE.V$47627272/*aspel.cml.event.SCANCODE_KP_COLON*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(203ULL));
    (ISOLATED$BASE.V$50339608/*aspel.cml.event.SCANCODE_KP_HASH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(204ULL));
    (ISOLATED$BASE.V$50339672/*aspel.cml.event.SCANCODE_KP_SPACE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(205ULL));
    (ISOLATED$BASE.V$50339736/*aspel.cml.event.SCANCODE_KP_AT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(206ULL));
    (ISOLATED$BASE.V$50339800/*aspel.cml.event.SCANCODE_KP_EXCLAM*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(207ULL));
    (ISOLATED$BASE.V$50339864/*aspel.cml.event.SCANCODE_KP_MEMSTORE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(208ULL));
    (ISOLATED$BASE.V$50339928/*aspel.cml.event.SCANCODE_KP_MEMRECALL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(209ULL));
    (ISOLATED$BASE.V$50339992/*aspel.cml.event.SCANCODE_KP_MEMCLEAR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(210ULL));
    (ISOLATED$BASE.V$50340056/*aspel.cml.event.SCANCODE_KP_MEMADD*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(211ULL));
    (ISOLATED$BASE.V$50340120/*aspel.cml.event.SCANCODE_KP_MEMSUBTRACT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(212ULL));
    (ISOLATED$BASE.V$50340184/*aspel.cml.event.SCANCODE_KP_MEMMULTIPLY*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(213ULL));
    (ISOLATED$BASE.V$50340248/*aspel.cml.event.SCANCODE_KP_MEMDIVIDE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(214ULL));
    (ISOLATED$BASE.V$50340312/*aspel.cml.event.SCANCODE_KP_PLUSMINUS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(215ULL));
    (ISOLATED$BASE.V$50340376/*aspel.cml.event.SCANCODE_KP_CLEAR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(216ULL));
    (ISOLATED$BASE.V$50340440/*aspel.cml.event.SCANCODE_KP_CLEARENTRY*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(217ULL));
    (ISOLATED$BASE.V$50340504/*aspel.cml.event.SCANCODE_KP_BINARY*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(218ULL));
    (ISOLATED$BASE.V$50340568/*aspel.cml.event.SCANCODE_KP_OCTAL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(219ULL));
    (ISOLATED$BASE.V$50340632/*aspel.cml.event.SCANCODE_KP_DECIMAL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(220ULL));
    (ISOLATED$BASE.V$50340696/*aspel.cml.event.SCANCODE_KP_HEXADECIMAL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(221ULL));
    (ISOLATED$BASE.V$50340760/*aspel.cml.event.SCANCODE_LCTRL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(224ULL));
    (ISOLATED$BASE.V$50340824/*aspel.cml.event.SCANCODE_LSHIFT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(225ULL));
    (ISOLATED$BASE.V$50340888/*aspel.cml.event.SCANCODE_LALT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(226ULL));
    (ISOLATED$BASE.V$50340952/*aspel.cml.event.SCANCODE_LGUI*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(227ULL));
    (ISOLATED$BASE.V$50341016/*aspel.cml.event.SCANCODE_RCTRL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(228ULL));
    (ISOLATED$BASE.V$50341080/*aspel.cml.event.SCANCODE_RSHIFT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(229ULL));
    (ISOLATED$BASE.V$50341144/*aspel.cml.event.SCANCODE_RALT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(230ULL));
    (ISOLATED$BASE.V$50341208/*aspel.cml.event.SCANCODE_RGUI*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(231ULL));
    (ISOLATED$BASE.V$50341272/*aspel.cml.event.SCANCODE_MODE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(257ULL));
    (ISOLATED$BASE.V$50341336/*aspel.cml.event.SCANCODE_AUDIONEXT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(258ULL));
    (ISOLATED$BASE.V$50341400/*aspel.cml.event.SCANCODE_AUDIOPREV*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(259ULL));
    (ISOLATED$BASE.V$50341464/*aspel.cml.event.SCANCODE_AUDIOSTOP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(260ULL));
    (ISOLATED$BASE.V$50341528/*aspel.cml.event.SCANCODE_AUDIOPLAY*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(261ULL));
    (ISOLATED$BASE.V$50341592/*aspel.cml.event.SCANCODE_AUDIOMUTE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(262ULL));
    (ISOLATED$BASE.V$50341656/*aspel.cml.event.SCANCODE_MEDIASELECT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(263ULL));
    (ISOLATED$BASE.V$50341720/*aspel.cml.event.SCANCODE_WWW*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(264ULL));
    (ISOLATED$BASE.V$50341784/*aspel.cml.event.SCANCODE_MAIL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(265ULL));
    (ISOLATED$BASE.V$50341848/*aspel.cml.event.SCANCODE_CALCULATOR*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(266ULL));
    (ISOLATED$BASE.V$50341912/*aspel.cml.event.SCANCODE_COMPUTER*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(267ULL));
    (ISOLATED$BASE.V$50341976/*aspel.cml.event.SCANCODE_AC_SEARCH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(268ULL));
    (ISOLATED$BASE.V$50342040/*aspel.cml.event.SCANCODE_AC_HOME*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(269ULL));
    (ISOLATED$BASE.V$50342104/*aspel.cml.event.SCANCODE_AC_BACK*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(270ULL));
    (ISOLATED$BASE.V$50342168/*aspel.cml.event.SCANCODE_AC_FORWARD*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(271ULL));
    (ISOLATED$BASE.V$50342232/*aspel.cml.event.SCANCODE_AC_STOP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(272ULL));
    (ISOLATED$BASE.V$50342296/*aspel.cml.event.SCANCODE_AC_REFRESH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(273ULL));
    (ISOLATED$BASE.V$50342360/*aspel.cml.event.SCANCODE_AC_BOOKMARKS*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(274ULL));
    (ISOLATED$BASE.V$50342424/*aspel.cml.event.SCANCODE_BRIGHTNESSDOWN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(275ULL));
    (ISOLATED$BASE.V$50342488/*aspel.cml.event.SCANCODE_BRIGHTNESSUP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(276ULL));
    (ISOLATED$BASE.V$50342552/*aspel.cml.event.SCANCODE_DISPLAYSWITCH*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(277ULL));
    (ISOLATED$BASE.V$50342616/*aspel.cml.event.SCANCODE_KBDILLUMTOGGLE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(278ULL));
    (ISOLATED$BASE.V$50342680/*aspel.cml.event.SCANCODE_KBDILLUMDOWN*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(279ULL));
    (ISOLATED$BASE.V$50342744/*aspel.cml.event.SCANCODE_KBDILLUMUP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(280ULL));
    (ISOLATED$BASE.V$50342808/*aspel.cml.event.SCANCODE_EJECT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(281ULL));
    (ISOLATED$BASE.V$50342872/*aspel.cml.event.SCANCODE_SLEEP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(282ULL));
    (ISOLATED$BASE.V$50342936/*aspel.cml.event.SCANCODE_APP1*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(283ULL));
    (ISOLATED$BASE.V$50343000/*aspel.cml.event.SCANCODE_APP2*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(284ULL));
    (ISOLATED$BASE.V$50343128/*aspel.cml.event.EVENT_QUIT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(256ULL));
    (ISOLATED$BASE.V$50343192/*aspel.cml.event.EVENT_WINDOW*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    (ISOLATED$BASE.V$50343256/*aspel.cml.event.EVENT_KEY_DOWN*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(768ULL));
    (ISOLATED$BASE.V$50343320/*aspel.cml.event.EVENT_KEY_UP*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(769ULL));
    (ISOLATED$BASE.V$50343384/*aspel.cml.event.EVENT_MOUSE_MOTION*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    (ISOLATED$BASE.V$50343448/*aspel.cml.event.EVENT_MOUSE_BUTTON_DOWN*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1025ULL));
    (ISOLATED$BASE.V$50343512/*aspel.cml.event.EVENT_MOUSE_BUTTON_UP*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1026ULL));
    (ISOLATED$BASE.V$50343576/*aspel.cml.event.EVENT_MOUSE_WHEEL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1027ULL));
    (ISOLATED$BASE.V$50343704/*aspel.cml.event.EVENT_WINDOW_SHOWN*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50343768/*aspel.cml.event.EVENT_WINDOW_HIDDEN*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$50343832/*aspel.cml.event.EVENT_WINDOW_EXPOSED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
    (ISOLATED$BASE.V$50343896/*aspel.cml.event.EVENT_WINDOW_MOVED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
    (ISOLATED$BASE.V$50343960/*aspel.cml.event.EVENT_WINDOW_RESIZED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
    (ISOLATED$BASE.V$50344024/*aspel.cml.event.EVENT_WINDOW_SIZE_CHANGED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(6ULL));
    (ISOLATED$BASE.V$50344088/*aspel.cml.event.EVENT_WINDOW_MINIMIZED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(7ULL));
    (ISOLATED$BASE.V$50344152/*aspel.cml.event.EVENT_WINDOW_MAXIMIZED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(8ULL));
    (ISOLATED$BASE.V$50344216/*aspel.cml.event.EVENT_WINDOW_RESTORED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(9ULL));
    (ISOLATED$BASE.V$50344280/*aspel.cml.event.EVENT_WINDOW_ENTER*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(10ULL));
    (ISOLATED$BASE.V$50344344/*aspel.cml.event.EVENT_WINDOW_LEAVE*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(11ULL));
    (ISOLATED$BASE.V$50344408/*aspel.cml.event.EVENT_WINDOW_FOCUS_GAINED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(12ULL));
    (ISOLATED$BASE.V$50344472/*aspel.cml.event.EVENT_WINDOW_FOCUS_LOST*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(13ULL));
    (ISOLATED$BASE.V$50344536/*aspel.cml.event.EVENT_WINDOW_CLOSE*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(14ULL));
    (ISOLATED$BASE.V$50344664/*aspel.cml.event.BUTTON_RELEASED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50344728/*aspel.cml.event.BUTTON_PRESSED*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50344856/*aspel.cml.event.MOUSE_BUTTON_LEFT*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50344920/*aspel.cml.event.MOUSE_BUTTON_MIDDLE*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$50344984/*aspel.cml.event.MOUSE_BUTTON_RIGHT*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
    (ISOLATED$BASE.V$50345048/*aspel.cml.event.MOUSE_BUTTON_X1*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
    (ISOLATED$BASE.V$50345112/*aspel.cml.event.MOUSE_BUTTON_X2*/) = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
    (ISOLATED$BASE.V$50345240/*aspel.cml.event.MOUSE_BUTTON_MASK_LEFT*/) = CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$sub(((CORE$S64)(1ULL)),((CORE$S64)(1ULL))))));
    (ISOLATED$BASE.V$50345304/*aspel.cml.event.MOUSE_BUTTON_MASK_MIDDLE*/) = CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$sub(((CORE$S64)(2ULL)),((CORE$S64)(1ULL))))));
    (ISOLATED$BASE.V$50345368/*aspel.cml.event.MOUSE_BUTTON_MASK_RIGHT*/) = CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$sub(((CORE$S64)(3ULL)),((CORE$S64)(1ULL))))));
    (ISOLATED$BASE.V$50345432/*aspel.cml.event.MOUSE_BUTTON_MASK_X1*/) = CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$sub(((CORE$S64)(4ULL)),((CORE$S64)(1ULL))))));
    (ISOLATED$BASE.V$50345496/*aspel.cml.event.MOUSE_BUTTON_MASK_X2*/) = CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$sub(((CORE$S64)(5ULL)),((CORE$S64)(1ULL))))));
    (ISOLATED$BASE.V$50345624/*aspel.cml.event.MOUSE_WHEEL_NORMAL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50345688/*aspel.cml.event.MOUSE_WHEEL_FLIPPED*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50360856/*aspel.cml.video.TEXTURE_ACCESS_STATIC*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50360920/*aspel.cml.video.TEXTURE_ACCESS_STREAMING*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50360984/*aspel.cml.video.TEXTURE_ACCESS_TARGET*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$50367256/*aspel.cml.video.WINDOW_OPENGL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$50367320/*aspel.cml.video.WINDOW_BORDERLESS*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    (ISOLATED$BASE.V$50367384/*aspel.cml.video.WINDOW_RESIZABLE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    (ISOLATED$BASE.V$50367448/*aspel.cml.video.WINDOW_MINIMIZED*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    (ISOLATED$BASE.V$50367512/*aspel.cml.video.WINDOW_MAXIMIZED*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL));
    (ISOLATED$BASE.V$50367576/*aspel.cml.video.WINDOW_INPUT_FOCUS*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(512ULL));
    (ISOLATED$BASE.V$50367640/*aspel.cml.video.WINDOW_MOUSE_FOCUS*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1024ULL));
    (ISOLATED$BASE.V$50367896/*aspel.cml.video.WINDOW_POSITION_DEFAULT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(536805376ULL));
    (ISOLATED$BASE.V$50367960/*aspel.cml.video.WINDOW_POSITION_CENTERED*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(805240832ULL));
    (ISOLATED$BASE.V$50368024/*aspel.cml.video.WINDOW_WINDOWED*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50368088/*aspel.cml.video.WINDOW_FULLSCREEN*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50368152/*aspel.cml.video.WINDOW_WINDOWED_FULLSCREEN*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(4097ULL));
    (ISOLATED$BASE.V$50370584/*aspel.cml.video.HIT_TEST_RESULT_NORMAL*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50370648/*aspel.cml.video.HIT_TEST_RESULT_DRAGGABLE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50370712/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_TOP_LEFT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$50370776/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_TOP*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(3ULL));
    (ISOLATED$BASE.V$50370840/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_TOP_RIGHT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL));
    (ISOLATED$BASE.V$50370904/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_BOTTOM_LEFT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
    (ISOLATED$BASE.V$50370968/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_BOTTOM*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(6ULL));
    (ISOLATED$BASE.V$50371032/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_BOTTOM_RIGHT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(7ULL));
    (ISOLATED$BASE.V$50371096/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_LEFT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(8ULL));
    (ISOLATED$BASE.V$50371160/*aspel.cml.video.HIT_TEST_RESULT_RESIZE_RIGHT*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(9ULL));
    (ISOLATED$BASE.V$50371544/*aspel.cml.video.GL_RED_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50371608/*aspel.cml.video.GL_GREEN_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50371672/*aspel.cml.video.GL_BLUE_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL));
    (ISOLATED$BASE.V$50371736/*aspel.cml.video.GL_ALPHA_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(3ULL));
    (ISOLATED$BASE.V$50371800/*aspel.cml.video.GL_BUFFER_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    (ISOLATED$BASE.V$50371864/*aspel.cml.video.GL_DOUBLEBUFFER*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(5ULL));
    (ISOLATED$BASE.V$50371928/*aspel.cml.video.GL_DEPTH_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL));
    (ISOLATED$BASE.V$50371992/*aspel.cml.video.GL_STENCIL_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(7ULL));
    (ISOLATED$BASE.V$50372056/*aspel.cml.video.GL_ACCUM_RED_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    (ISOLATED$BASE.V$50372120/*aspel.cml.video.GL_ACCUM_GREEN_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(9ULL));
    (ISOLATED$BASE.V$50372184/*aspel.cml.video.GL_ACCUM_BLUE_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL));
    (ISOLATED$BASE.V$50372248/*aspel.cml.video.GL_ACCUM_ALPHA_SIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(11ULL));
    (ISOLATED$BASE.V$50372312/*aspel.cml.video.GL_STEREO*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(12ULL));
    (ISOLATED$BASE.V$50372376/*aspel.cml.video.GL_MULTISAMPLEBUFFERS*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(13ULL));
    (ISOLATED$BASE.V$50372440/*aspel.cml.video.GL_MULTISAMPLESAMPLES*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(14ULL));
    (ISOLATED$BASE.V$50372504/*aspel.cml.video.GL_ACCELERATED_VISUAL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(15ULL));
    (ISOLATED$BASE.V$50372568/*aspel.cml.video.GL_RETAINED_BACKING*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL));
    (ISOLATED$BASE.V$50372632/*aspel.cml.video.GL_CONTEXT_MAJOR_VERSION*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(17ULL));
    (ISOLATED$BASE.V$50372696/*aspel.cml.video.GL_CONTEXT_MINOR_VERSION*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(18ULL));
    (ISOLATED$BASE.V$50372760/*aspel.cml.video.GL_CONTEXT_EGL*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(19ULL));
    (ISOLATED$BASE.V$50372824/*aspel.cml.video.GL_CONTEXT_FLAGS*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(20ULL));
    (ISOLATED$BASE.V$50372888/*aspel.cml.video.GL_CONTEXT_PROFILE_MASK*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(21ULL));
    (ISOLATED$BASE.V$50372952/*aspel.cml.video.GL_SHARE_WITH_CURRENT_CONTEXT*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(22ULL));
    (ISOLATED$BASE.V$50373016/*aspel.cml.video.GL_FRAMEBUFFER_SRGB_CAPABLE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(23ULL));
    (ISOLATED$BASE.V$50373080/*aspel.cml.video.GL_CONTEXT_RELEASE_BEHAVIOR*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(24ULL));
    (ISOLATED$BASE.V$50373656/*aspel.cml.video.VERTICAL_SYNC_IMMEDIATE*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    (ISOLATED$BASE.V$50373720/*aspel.cml.video.VERTICAL_SYNC_SYNCHRONIZED*/) = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    (ISOLATED$BASE.V$50373784/*aspel.cml.video.VERTICAL_SYNC_LATE_SWAP_TEARING*/) = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    (ISOLATED$BASE.V$50374296/*aspel.cml.CML_SUBSYSTEM_VIDEO*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL));
    (ISOLATED$BASE.V$50374360/*aspel.cml.CML_SUBSYSTEM_EVENTS*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(16384ULL));
    (ISOLATED$BASE.V$50374424/*aspel.cml.CML_SUBSYSTEM_ALL*/) = CORE$bor((((ISOLATED$BASE.V$50374296/*aspel.cml.CML_SUBSYSTEM_VIDEO*/))),(((ISOLATED$BASE.V$50374360/*aspel.cml.CML_SUBSYSTEM_EVENTS*/))));
    (ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/) = (~(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    (ISOLATED$BASE.V$54887512/*aspel.internal.win32.SOCKET_ERROR*/) = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    (ISOLATED$BASE.V$54888728/*aspel.internal.win32.FD_SETSIZE*/) = CORE$cast_regular(TYPE$19, (CORE$S64)(64ULL));
    (ISOLATED$BASE.V$54950488/*kutikula.WINDOW_TITLE*/) = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_391BD00_OFF],(CORE$U64) SHARED$STR_391BD00_LEN);
    (ISOLATED$BASE.V$54950552/*kutikula.WINDOW_WIDTH*/) = (CORE$S64)(500ULL);
    (ISOLATED$BASE.V$54950616/*kutikula.WINDOW_HEIGHT*/) = (CORE$S64)(500ULL);
    { ((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)) = (0); }
    (ISOLATED$BASE.V$54950744/*kutikula.window_should_close*/) = CORE$false;
}

//////////////////////////////////////////////////
 // Code
//////////////////////////////////////////////////

TYPE$1 V$51734936/*aspel.concatenate*/(TYPE$3 V$50460440/*aspel.concatenate.strings*/)
{
    {
    TYPE$4 V$50460504/*aspel.concatenate.total_length*/ = (CORE$S64)(0ULL);
    {
    TYPE$3 FOREACH$ARRAY = (V$50460440/*aspel.concatenate.strings*/);
    CORE$U64 FOREACH$ITERATOR = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++FOREACH$ITERATOR < FOREACH$ARRAY.n) {
    TYPE$1 V$50460632/*aspel.concatenate..string*/ = ((TYPE$1*) FOREACH$ARRAY.a)[FOREACH$ITERATOR];
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, ((V$50460632/*aspel.concatenate..string*/).n)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50460504/*aspel.concatenate.total_length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    TYPE$1 V$50460696/*aspel.concatenate.result*/ = CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, (V$50460504/*aspel.concatenate.total_length*/))), (CORE$U64)(1));
    if (CORE$eq((CORE$cast_array_to_ptr((V$50460696/*aspel.concatenate.result*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50460696/*aspel.concatenate.result*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$3 FOREACH$ARRAY = (V$50460440/*aspel.concatenate.strings*/);
    CORE$U64 FOREACH$ITERATOR = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++FOREACH$ITERATOR < FOREACH$ARRAY.n) {
    TYPE$1 V$50460824/*aspel.concatenate..string*/ = ((TYPE$1*) FOREACH$ARRAY.a)[FOREACH$ITERATOR];
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_regular(TYPE$7, ((V$50460824/*aspel.concatenate..string*/).a)), CORE$cast_regular(TYPE$7, CORE$add((((V$50460696/*aspel.concatenate.result*/).a)),(CORE$cast_regular(TYPE$10, ((V$50460696/*aspel.concatenate.result*/).n)))*(1))), ((V$50460824/*aspel.concatenate..string*/).n));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50460824/*aspel.concatenate..string*/).n));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50460696/*aspel.concatenate.result*/).n));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$1 RET$VAL = (V$50460696/*aspel.concatenate.result*/);
    return RET$VAL;
    }
    }
}

TYPE$10 V$51735016/*aspel.c_style_string*/(TYPE$1 V$50460888/*aspel.c_style_string.string*/)
{
    {
    TYPE$1 V$50460952/*aspel.c_style_string.c_style*/ = CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$50460888/*aspel.c_style_string.string*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$50460952/*aspel.c_style_string.c_style*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$10 RET$VAL = CORE$cast_regular(TYPE$10, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_array_to_ptr((V$50460888/*aspel.c_style_string.string*/)), CORE$cast_array_to_ptr((V$50460952/*aspel.c_style_string.c_style*/)), ((V$50460888/*aspel.c_style_string.string*/).n));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, ((V$50460952/*aspel.c_style_string.c_style*/)), (CORE$U64)(((V$50460888/*aspel.c_style_string.string*/).n)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x73\x74\x72\x69\x6E\x67\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(30)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    TYPE$10 RET$VAL = CORE$cast_array_to_ptr((V$50460952/*aspel.c_style_string.c_style*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$51735096/*aspel.repeat*/(TYPE$7 V$50461016/*aspel.repeat.memory*/, TYPE$5 V$50461080/*aspel.repeat.length*/, TYPE$2 V$50461144/*aspel.repeat.byte*/)
{
    {
    TYPE$10 V$50461208/*aspel.repeat.bytes*/ = CORE$cast_regular(TYPE$10, (V$50461016/*aspel.repeat.memory*/));
    while (CORE$gt(((V$50461080/*aspel.repeat.length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50461144/*aspel.repeat.byte*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$2*)((V$50461208/*aspel.repeat.bytes*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461208/*aspel.repeat.bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461080/*aspel.repeat.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$51735176/*aspel.copy*/(TYPE$7 V$50461272/*aspel.copy.source*/, TYPE$7 V$50461336/*aspel.copy.destination*/, TYPE$5 V$50461400/*aspel.copy.length*/)
{
    {
    TYPE$10 V$50461464/*aspel.copy.source_bytes*/ = CORE$cast_regular(TYPE$10, (V$50461272/*aspel.copy.source*/));
    TYPE$10 V$50461528/*aspel.copy.destination_bytes*/ = CORE$cast_regular(TYPE$10, (V$50461336/*aspel.copy.destination*/));
    while (CORE$gt(((V$50461400/*aspel.copy.length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$2*)((V$50461464/*aspel.copy.source_bytes*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$2*)((V$50461528/*aspel.copy.destination_bytes*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461464/*aspel.copy.source_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461528/*aspel.copy.destination_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461400/*aspel.copy.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$51735256/*aspel.move*/(TYPE$7 V$50461592/*aspel.move.source*/, TYPE$7 V$50461656/*aspel.move.destination*/, TYPE$5 V$50461720/*aspel.move.length*/)
{
    {
    if (CORE$eq(((V$50461592/*aspel.move.source*/)),((V$50461656/*aspel.move.destination*/)))) {
    {
    {
    return;
    }
    }
    }
    if (CORE$lt(((V$50461592/*aspel.move.source*/)),((V$50461656/*aspel.move.destination*/)))) {
    {
    TYPE$10 V$50461784/*aspel.move..source_bytes*/ = CORE$add((CORE$cast_regular(TYPE$10, (V$50461592/*aspel.move.source*/))),(CORE$cast_regular(TYPE$10, (V$50461720/*aspel.move.length*/)))*(1));
    TYPE$10 V$50461848/*aspel.move..destination_bytes*/ = CORE$add((CORE$cast_regular(TYPE$10, (V$50461656/*aspel.move.destination*/))),(CORE$cast_regular(TYPE$10, (V$50461720/*aspel.move.length*/)))*(1));
    while (CORE$gt(((V$50461720/*aspel.move.length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461784/*aspel.move..source_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461848/*aspel.move..destination_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$2*)((V$50461784/*aspel.move..source_bytes*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$2*)((V$50461848/*aspel.move..destination_bytes*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461720/*aspel.move.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$10 V$50461912/*aspel.move..source_bytes*/ = CORE$cast_regular(TYPE$10, (V$50461592/*aspel.move.source*/));
    TYPE$10 V$50461976/*aspel.move..destination_bytes*/ = CORE$cast_regular(TYPE$10, (V$50461656/*aspel.move.destination*/));
    while (CORE$gt(((V$50461720/*aspel.move.length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$2*)((V$50461912/*aspel.move..source_bytes*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$2*)((V$50461976/*aspel.move..destination_bytes*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461912/*aspel.move..source_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461976/*aspel.move..destination_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50461720/*aspel.move.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$6 V$51735336/*aspel.compare*/(TYPE$7 V$50462040/*aspel.compare.memory1*/, TYPE$7 V$50462104/*aspel.compare.memory2*/, TYPE$5 V$50462168/*aspel.compare.length*/)
{
    {
    if (CORE$eq(((V$50462040/*aspel.compare.memory1*/)),((V$50462104/*aspel.compare.memory2*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    TYPE$10 V$50462232/*aspel.compare.bytes1*/ = CORE$cast_regular(TYPE$10, (V$50462040/*aspel.compare.memory1*/));
    TYPE$10 V$50462296/*aspel.compare.bytes2*/ = CORE$cast_regular(TYPE$10, (V$50462104/*aspel.compare.memory2*/));
    while (CORE$gt(((V$50462168/*aspel.compare.length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    if (CORE$ne(((*(TYPE$2*)((V$50462232/*aspel.compare.bytes1*/)))),((*(TYPE$2*)((V$50462296/*aspel.compare.bytes2*/)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462232/*aspel.compare.bytes1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462296/*aspel.compare.bytes2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462168/*aspel.compare.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$51735416/*aspel.compare*/(TYPE$1 V$50462360/*aspel.compare.memory1*/, TYPE$1 V$50462424/*aspel.compare.memory2*/)
{
    {
    if (CORE$ne((((V$50462360/*aspel.compare.memory1*/).n)),(((V$50462424/*aspel.compare.memory2*/).n)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((((V$50462360/*aspel.compare.memory1*/).a)),(((V$50462424/*aspel.compare.memory2*/).a)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    TYPE$10 V$50462488/*aspel.compare.bytes1*/ = CORE$cast_regular(TYPE$10, ((V$50462360/*aspel.compare.memory1*/).a));
    TYPE$10 V$50462552/*aspel.compare.bytes2*/ = CORE$cast_regular(TYPE$10, ((V$50462424/*aspel.compare.memory2*/).a));
    TYPE$5 V$50462616/*aspel.compare.length*/ = ((V$50462360/*aspel.compare.memory1*/).n);
    while (CORE$gt((CORE$cast_regular(TYPE$4, (V$50462616/*aspel.compare.length*/))),((CORE$S64)(0ULL)))) {
    {
    if (CORE$ne(((*(TYPE$2*)((V$50462488/*aspel.compare.bytes1*/)))),((*(TYPE$2*)((V$50462552/*aspel.compare.bytes2*/)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462488/*aspel.compare.bytes1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462552/*aspel.compare.bytes2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462616/*aspel.compare.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$16 V$51735496/*aspel.difference*/(TYPE$7 V$50462680/*aspel.difference.memory1*/, TYPE$7 V$50462744/*aspel.difference.memory2*/, TYPE$5 V$50462808/*aspel.difference.length*/)
{
    {
    if (CORE$eq(((V$50462680/*aspel.difference.memory1*/)),((V$50462744/*aspel.difference.memory2*/)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    TYPE$10 V$50462872/*aspel.difference.bytes1*/ = CORE$cast_regular(TYPE$10, (V$50462680/*aspel.difference.memory1*/));
    TYPE$10 V$50462936/*aspel.difference.bytes2*/ = CORE$cast_regular(TYPE$10, (V$50462744/*aspel.difference.memory2*/));
    while (CORE$gt(((V$50462808/*aspel.difference.length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    if (CORE$ne(((*(TYPE$2*)((V$50462872/*aspel.difference.bytes1*/)))),((*(TYPE$2*)((V$50462936/*aspel.difference.bytes2*/)))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$sub((CORE$cast_regular(TYPE$16, (*(TYPE$2*)((V$50462872/*aspel.difference.bytes1*/))))),(CORE$cast_regular(TYPE$16, (*(TYPE$2*)((V$50462936/*aspel.difference.bytes2*/))))));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462872/*aspel.difference.bytes1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462936/*aspel.difference.bytes2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50462808/*aspel.difference.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$16 V$51735576/*aspel.difference*/(TYPE$1 V$50463000/*aspel.difference.memory1*/, TYPE$1 V$50463064/*aspel.difference.memory2*/)
{
    {
    if (CORE$eq((((V$50463000/*aspel.difference.memory1*/).a)),(((V$50463064/*aspel.difference.memory2*/).a)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    TYPE$10 V$50463128/*aspel.difference.bytes1*/ = ((V$50463000/*aspel.difference.memory1*/).a);
    TYPE$10 V$50463192/*aspel.difference.bytes2*/ = ((V$50463064/*aspel.difference.memory2*/).a);
    TYPE$5 V$50463256/*aspel.difference.length*/ = ((V$50463000/*aspel.difference.memory1*/).n);
    if (CORE$lt((((V$50463064/*aspel.difference.memory2*/).n)),((V$50463256/*aspel.difference.length*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50463064/*aspel.difference.memory2*/).n));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50463256/*aspel.difference.length*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    while (CORE$gt((CORE$cast_regular(TYPE$4, (V$50463256/*aspel.difference.length*/))),((CORE$S64)(0ULL)))) {
    {
    if (CORE$ne(((*(TYPE$2*)((V$50463128/*aspel.difference.bytes1*/)))),((*(TYPE$2*)((V$50463192/*aspel.difference.bytes2*/)))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$sub((CORE$cast_regular(TYPE$16, (*(TYPE$2*)((V$50463128/*aspel.difference.bytes1*/))))),(CORE$cast_regular(TYPE$16, (*(TYPE$2*)((V$50463192/*aspel.difference.bytes2*/))))));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50463128/*aspel.difference.bytes1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50463192/*aspel.difference.bytes2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50463256/*aspel.difference.length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((((V$50463064/*aspel.difference.memory2*/).n)),(((V$50463000/*aspel.difference.memory1*/).n)))) {
    {
    {
    TYPE$16 RET$VAL = (-(CORE$cast_regular(TYPE$16, (*(TYPE$2*)((V$50463192/*aspel.difference.bytes2*/))))));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt((((V$50463000/*aspel.difference.memory1*/).n)),(((V$50463064/*aspel.difference.memory2*/).n)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (*(TYPE$2*)((V$50463128/*aspel.difference.bytes1*/))));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$5 V$51735656/*aspel.find_first_from_left*/(TYPE$1 V$50463320/*aspel.find_first_from_left.memory*/, TYPE$2 V$50463384/*aspel.find_first_from_left.byte*/)
{
    {
    TYPE$4 V$50463448/*aspel.find_first_from_left.index*/ = (CORE$S64)(0ULL);
    while (CORE$lt(((V$50463448/*aspel.find_first_from_left.index*/)),(CORE$cast_regular(TYPE$4, ((V$50463320/*aspel.find_first_from_left.memory*/).n))))) {
    {
    if (CORE$eq((((TYPE$2*)(((V$50463320/*aspel.find_first_from_left.memory*/).a)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50463448/*aspel.find_first_from_left.index*/)))]),((V$50463384/*aspel.find_first_from_left.byte*/)))) {
    {
    {
    TYPE$5 RET$VAL = CORE$cast_regular(TYPE$5, (V$50463448/*aspel.find_first_from_left.index*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50463448/*aspel.find_first_from_left.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$5 RET$VAL = ((V$50463320/*aspel.find_first_from_left.memory*/).n);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51735736/*aspel.find_first_from_right*/(TYPE$1 V$50463512/*aspel.find_first_from_right.memory*/, TYPE$2 V$50463576/*aspel.find_first_from_right.byte*/)
{
    {
    TYPE$5 V$50463640/*aspel.find_first_from_right.index*/ = ((V$50463512/*aspel.find_first_from_right.memory*/).n);
    while (CORE$gt((CORE$cast_regular(TYPE$4, (V$50463640/*aspel.find_first_from_right.index*/))),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50463640/*aspel.find_first_from_right.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$eq((((TYPE$2*)(((V$50463512/*aspel.find_first_from_right.memory*/).a)))[(CORE$U64)((V$50463640/*aspel.find_first_from_right.index*/))]),((V$50463576/*aspel.find_first_from_right.byte*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$50463640/*aspel.find_first_from_right.index*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = CORE$cast_regular(TYPE$5, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$7 V$15376048/*aspel.memory.memcopy*/(TYPE$7 V$15406784/*aspel.memory.memcopy.destination*/, TYPE$7 V$15406848/*aspel.memory.memcopy.source*/, TYPE$5 V$15406912/*aspel.memory.memcopy.len*/)
{
    {
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15376128/*aspel.memory.crt_memcpy*/)))(CORE$cast_regular(TYPE$19, (V$15406784/*aspel.memory.memcopy.destination*/)), CORE$cast_regular(TYPE$19, (V$15406848/*aspel.memory.memcopy.source*/)), CORE$cast_regular(TYPE$19, (V$15406912/*aspel.memory.memcopy.len*/))));
    return RET$VAL;
    }
    }
}

TYPE$7 V$15376208/*aspel.memory.memmove*/(TYPE$7 V$15406976/*aspel.memory.memmove.destination*/, TYPE$7 V$15407040/*aspel.memory.memmove.source*/, TYPE$5 V$15407104/*aspel.memory.memmove.len*/)
{
    {
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15376288/*aspel.memory.crt_memmove*/)))(CORE$cast_regular(TYPE$19, (V$15406976/*aspel.memory.memmove.destination*/)), CORE$cast_regular(TYPE$19, (V$15407040/*aspel.memory.memmove.source*/)), CORE$cast_regular(TYPE$19, (V$15407104/*aspel.memory.memmove.len*/))));
    return RET$VAL;
    }
    }
}

TYPE$16 V$15376368/*aspel.memory.memcompare*/(TYPE$7 V$15407168/*aspel.memory.memcompare.ptr1*/, TYPE$7 V$15407232/*aspel.memory.memcompare.ptr2*/, TYPE$5 V$15407296/*aspel.memory.memcompare.len*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15376448/*aspel.memory.crt_memcmp*/)))(CORE$cast_regular(TYPE$19, (V$15407168/*aspel.memory.memcompare.ptr1*/)), CORE$cast_regular(TYPE$19, (V$15407232/*aspel.memory.memcompare.ptr2*/)), CORE$cast_regular(TYPE$19, (V$15407296/*aspel.memory.memcompare.len*/)));
    return RET$VAL;
    }
    }
}

TYPE$7 V$15376528/*aspel.memory.memset*/(TYPE$7 V$15407360/*aspel.memory.memset.ptr*/, TYPE$2 V$15407424/*aspel.memory.memset.value*/, TYPE$5 V$15407488/*aspel.memory.memset.len*/)
{
    {
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)(TYPE$19,TYPE$2,TYPE$19))(((CORE$DELEGATE)V$15376608/*aspel.memory.crt_memset*/)))(CORE$cast_regular(TYPE$19, (V$15407360/*aspel.memory.memset.ptr*/)), (V$15407424/*aspel.memory.memset.value*/), CORE$cast_regular(TYPE$19, (V$15407488/*aspel.memory.memset.len*/))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15395808/*aspel.memory.open_interprocess_object*/(TYPE$27 V$47570760/*aspel.memory.open_interprocess_object.object*/, TYPE$1 V$47570824/*aspel.memory.open_interprocess_object.name*/, TYPE$5 V$47570888/*aspel.memory.open_interprocess_object.size*/, TYPE$28 V$47570952/*aspel.memory.open_interprocess_object.privileges*/)
{
    {
    if (CORE$eq(((V$47570888/*aspel.memory.open_interprocess_object.size*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$47582920/*aspel.log.ASL*/);
    TYPE$19 TEMP$ARG1 = (V$47581960/*aspel.log.ERROR*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D71AB8_OFF],(CORE$U64) SHARED$STR_2D71AB8_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((CORE$band(((V$47570952/*aspel.memory.open_interprocess_object.privileges*/)),((V$47572296/*aspel.memory.MEMORY_READ*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$47582920/*aspel.log.ASL*/);
    TYPE$19 TEMP$ARG1 = (V$47581896/*aspel.log.WARNING*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D71BD8_OFF],(CORE$U64) SHARED$STR_2D71BD8_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    }
    }
    TYPE$19 V$47571016/*aspel.memory.open_interprocess_object.flProtect*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    if (CORE$ne((CORE$band(((V$47570952/*aspel.memory.open_interprocess_object.privileges*/)),((V$47572360/*aspel.memory.MEMORY_WRITE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47571016/*aspel.memory.open_interprocess_object.flProtect*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47571016/*aspel.memory.open_interprocess_object.flProtect*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne((CORE$band(((V$47570952/*aspel.memory.open_interprocess_object.privileges*/)),((V$47572424/*aspel.memory.MEMORY_EXECUTE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47571016/*aspel.memory.open_interprocess_object.flProtect*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    TYPE$19 V$47571080/*aspel.memory.open_interprocess_object.dwMaximumSizeHigh*/ = CORE$cast_regular(TYPE$19, CORE$shr(((V$47570888/*aspel.memory.open_interprocess_object.size*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)))));
    TYPE$19 V$47571144/*aspel.memory.open_interprocess_object.dwMaximumSizeLow*/ = CORE$cast_regular(TYPE$19, (V$47570888/*aspel.memory.open_interprocess_object.size*/));
    TYPE$5 V$47571208/*aspel.memory.open_interprocess_object.name16_length*/ = ((TYPE$5(*)(TYPE$1))(((CORE$DELEGATE)V$15386608/*aspel.text.length_utf8_as_utf16*/)))((V$47570824/*aspel.memory.open_interprocess_object.name*/));
    TYPE$30 V$47571272/*aspel.memory.open_interprocess_object.name16*/ = CORE$NEWARR((CORE$U64)(CORE$add(((V$47571208/*aspel.memory.open_interprocess_object.name16_length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), (CORE$U64)(2));
    if (CORE$eq((CORE$cast_array_to_ptr((V$47571272/*aspel.memory.open_interprocess_object.name16*/))),(CORE$null_pointer))) {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$47582920/*aspel.log.ASL*/);
    TYPE$19 TEMP$ARG1 = (V$47581960/*aspel.log.ERROR*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D71EF8_OFF],(CORE$U64) SHARED$STR_2D71EF8_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$19(*)(TYPE$1,TYPE$30))(((CORE$DELEGATE)V$15387008/*aspel.text.convert_utf8_to_utf16*/)))((V$47570824/*aspel.memory.open_interprocess_object.name*/), (V$47571272/*aspel.memory.open_interprocess_object.name16*/))),((V$46966304/*aspel.text.UTF_CONVERSION_OK*/)))) {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$47582920/*aspel.log.ASL*/);
    TYPE$19 TEMP$ARG1 = (V$47581960/*aspel.log.ERROR*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D720B8_OFF],(CORE$U64) SHARED$STR_2D720B8_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$47571272/*aspel.memory.open_interprocess_object.name16*/)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$28, ((V$47571272/*aspel.memory.open_interprocess_object.name16*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub((CORE$cast_regular(TYPE$4, ((V$47571272/*aspel.memory.open_interprocess_object.name16*/).n))),((CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x65\x6D\x6F\x72\x79\\\x69\x6E\x74\x65\x72\x70\x72\x6F\x63\x65\x73\x73\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(55)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    TYPE$19 V$47571336/*aspel.memory.open_interprocess_object.lpName*/ = CORE$cast_regular(TYPE$19, ((V$47571272/*aspel.memory.open_interprocess_object.name16*/).a));
    TYPE$19 V$47571400/*aspel.memory.open_interprocess_object.fd*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51754376/*aspel.internal.win32.CreateFileMapping*/)))((V$54935832/*aspel.internal.win32.INVALID_HANDLE_VALUE*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), (V$47571016/*aspel.memory.open_interprocess_object.flProtect*/), (V$47571080/*aspel.memory.open_interprocess_object.dwMaximumSizeHigh*/), (V$47571144/*aspel.memory.open_interprocess_object.dwMaximumSizeLow*/), (V$47571336/*aspel.memory.open_interprocess_object.lpName*/));
    if (CORE$eq(((V$47571400/*aspel.memory.open_interprocess_object.fd*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$47571272/*aspel.memory.open_interprocess_object.name16*/)).a));    return RET$VAL;
    }
    }
    }
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51751576/*aspel.internal.win32.SetLastError*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    {
    typedef TYPE$25 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$25{
    TYPE$25 TEMP$RESULT;
    { typedef TYPE$19 TEMP$TYPE;
      auto TEMP$VAL = (V$47571400/*aspel.memory.open_interprocess_object.fd*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$25*)((V$47570760/*aspel.memory.open_interprocess_object.object*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$25, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    CORE$DEL((void*)(((V$47571272/*aspel.memory.open_interprocess_object.name16*/)).a));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$47571272/*aspel.memory.open_interprocess_object.name16*/)).a));    }
}

TYPE$8 V$15395888/*aspel.memory.close_interprocess_object*/(TYPE$25 V$47571464/*aspel.memory.close_interprocess_object.object*/)
{
    {
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752856/*aspel.internal.win32.CloseHandle*/)))(((V$47571464/*aspel.memory.close_interprocess_object.object*/).m0))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    }
    }
    }
}

TYPE$7 V$15395968/*aspel.memory.open_interprocess_view*/(TYPE$25 V$47571528/*aspel.memory.open_interprocess_view.object*/, TYPE$5 V$47571592/*aspel.memory.open_interprocess_view.offset*/, TYPE$5 V$47571656/*aspel.memory.open_interprocess_view.width*/, TYPE$28 V$47571720/*aspel.memory.open_interprocess_view.privileges*/)
{
    {
    if (CORE$eq((CORE$band(((V$47571720/*aspel.memory.open_interprocess_view.privileges*/)),((V$47572296/*aspel.memory.MEMORY_READ*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$47582920/*aspel.log.ASL*/);
    TYPE$19 TEMP$ARG1 = (V$47581896/*aspel.log.WARNING*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D725D8_OFF],(CORE$U64) SHARED$STR_2D725D8_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    }
    }
    TYPE$19 V$47571784/*aspel.memory.open_interprocess_view.dwDesiredAccess*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL));
    if (CORE$ne((CORE$band(((V$47571720/*aspel.memory.open_interprocess_view.privileges*/)),((V$47572360/*aspel.memory.MEMORY_WRITE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47571784/*aspel.memory.open_interprocess_view.dwDesiredAccess*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne((CORE$band(((V$47571720/*aspel.memory.open_interprocess_view.privileges*/)),((V$47572424/*aspel.memory.MEMORY_EXECUTE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47571784/*aspel.memory.open_interprocess_view.dwDesiredAccess*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    TYPE$19 V$47571848/*aspel.memory.open_interprocess_view.dwFileOffsetHigh*/ = CORE$cast_regular(TYPE$19, CORE$shr(((V$47571592/*aspel.memory.open_interprocess_view.offset*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)))));
    TYPE$19 V$47571912/*aspel.memory.open_interprocess_view.dwFileOffsetLow*/ = CORE$cast_regular(TYPE$19, (V$47571592/*aspel.memory.open_interprocess_view.offset*/));
    TYPE$19 V$47571976/*aspel.memory.open_interprocess_view.dwNumberOfBytesToMap*/ = CORE$cast_regular(TYPE$19, (V$47571656/*aspel.memory.open_interprocess_view.width*/));
    if (CORE$ne((CORE$cast_regular(TYPE$5, (V$47571976/*aspel.memory.open_interprocess_view.dwNumberOfBytesToMap*/))),((V$47571656/*aspel.memory.open_interprocess_view.width*/)))) {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$47582920/*aspel.log.ASL*/);
    TYPE$19 TEMP$ARG1 = (V$47581960/*aspel.log.ERROR*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D72878_OFF],(CORE$U64) SHARED$STR_2D72878_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    {
    TYPE$7 RET$VAL = CORE$null_pointer;
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$47572040/*aspel.memory.open_interprocess_view.view*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51754456/*aspel.internal.win32.MapViewOfFile*/)))(((V$47571528/*aspel.memory.open_interprocess_view.object*/).m0), (V$47571784/*aspel.memory.open_interprocess_view.dwDesiredAccess*/), (V$47571848/*aspel.memory.open_interprocess_view.dwFileOffsetHigh*/), (V$47571912/*aspel.memory.open_interprocess_view.dwFileOffsetLow*/), (V$47571976/*aspel.memory.open_interprocess_view.dwNumberOfBytesToMap*/));
    if (CORE$eq(((V$47572040/*aspel.memory.open_interprocess_view.view*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    {
    TYPE$7 RET$VAL = CORE$null_pointer;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, (V$47572040/*aspel.memory.open_interprocess_view.view*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15396048/*aspel.memory.close_interprocess_view*/(TYPE$7 V$47572104/*aspel.memory.close_interprocess_view.base*/, TYPE$5 V$47572168/*aspel.memory.close_interprocess_view.width*/)
{
    {
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51754616/*aspel.internal.win32.UnmapViewOfFile*/)))(CORE$cast_regular(TYPE$19, (V$47572104/*aspel.memory.close_interprocess_view.base*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    }
    }
    }
}

TYPE$45 V$15376688/*aspel.time.stopwatch.start_stopwatch*/()
{
    {
    {
    TYPE$45 RET$VAL = ([&]()->TYPE$45{
    TYPE$45 TEMP$RESULT;
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = ((TYPE$5(*)())(((CORE$DELEGATE)V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/)))();
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    { typedef TYPE$6 TEMP$TYPE;
      auto TEMP$VAL = CORE$true;
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_to_bool(TEMP$VAL); }
    return TEMP$RESULT;
}());
    return RET$VAL;
    }
    }
}

TYPE$8 V$15376768/*aspel.time.stopwatch.reset_stopwatch*/(TYPE$49 V$15407872/*aspel.time.stopwatch.reset_stopwatch.stopwatch*/)
{
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)())(((CORE$DELEGATE)V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/)))());
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15407872/*aspel.time.stopwatch.reset_stopwatch.stopwatch*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15407872/*aspel.time.stopwatch.reset_stopwatch.stopwatch*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15407872/*aspel.time.stopwatch.reset_stopwatch.stopwatch*/)))->m2));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$8 V$15376848/*aspel.time.stopwatch.pause_stopwatch*/(TYPE$49 V$15407936/*aspel.time.stopwatch.pause_stopwatch.stopwatch*/)
{
    {
    if ((!((((TYPE$45*)((V$15407936/*aspel.time.stopwatch.pause_stopwatch.stopwatch*/)))->m2)))) {
    {
    {
    return;
    }
    }
    }
    TYPE$5 V$15408000/*aspel.time.stopwatch.pause_stopwatch.current*/ = ((TYPE$5(*)())(((CORE$DELEGATE)V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/)))();
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((V$15408000/*aspel.time.stopwatch.pause_stopwatch.current*/)),((((TYPE$45*)((V$15407936/*aspel.time.stopwatch.pause_stopwatch.stopwatch*/)))->m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15407936/*aspel.time.stopwatch.pause_stopwatch.stopwatch*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15407936/*aspel.time.stopwatch.pause_stopwatch.stopwatch*/)))->m2));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$8 V$15376928/*aspel.time.stopwatch.resume_stopwatch*/(TYPE$49 V$15408064/*aspel.time.stopwatch.resume_stopwatch.stopwatch*/)
{
    {
    if ((((TYPE$45*)((V$15408064/*aspel.time.stopwatch.resume_stopwatch.stopwatch*/)))->m2)) {
    {
    {
    return;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)())(((CORE$DELEGATE)V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/)))());
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15408064/*aspel.time.stopwatch.resume_stopwatch.stopwatch*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$45*)((V$15408064/*aspel.time.stopwatch.resume_stopwatch.stopwatch*/)))->m2));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$51 V$15377008/*aspel.time.stopwatch.query_stopwatch*/(TYPE$49 V$15408128/*aspel.time.stopwatch.query_stopwatch.stopwatch*/)
{
    {
    TYPE$5 V$15408192/*aspel.time.stopwatch.query_stopwatch.ticks*/ = (((TYPE$45*)((V$15408128/*aspel.time.stopwatch.query_stopwatch.stopwatch*/)))->m1);
    if ((((TYPE$45*)((V$15408128/*aspel.time.stopwatch.query_stopwatch.stopwatch*/)))->m2)) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((((TYPE$5(*)())(((CORE$DELEGATE)V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/)))()),((((TYPE$45*)((V$15408128/*aspel.time.stopwatch.query_stopwatch.stopwatch*/)))->m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15408192/*aspel.time.stopwatch.query_stopwatch.ticks*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$51 RET$VAL = CORE$div((CORE$cast_regular(TYPE$51, (V$15408192/*aspel.time.stopwatch.query_stopwatch.ticks*/))),(CORE$cast_regular(TYPE$51, (V$15407808/*aspel.time.stopwatch.STOPWATCH_FREQUENCY*/))));
    return RET$VAL;
    }
    }
}

TYPE$5 V$15377088/*aspel.time.stopwatch.query_stopwatch_ticks*/(TYPE$49 V$15408256/*aspel.time.stopwatch.query_stopwatch_ticks.stopwatch*/)
{
    {
    TYPE$5 V$15408320/*aspel.time.stopwatch.query_stopwatch_ticks.ticks*/ = (((TYPE$45*)((V$15408256/*aspel.time.stopwatch.query_stopwatch_ticks.stopwatch*/)))->m1);
    if ((((TYPE$45*)((V$15408256/*aspel.time.stopwatch.query_stopwatch_ticks.stopwatch*/)))->m2)) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((((TYPE$5(*)())(((CORE$DELEGATE)V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/)))()),((((TYPE$45*)((V$15408256/*aspel.time.stopwatch.query_stopwatch_ticks.stopwatch*/)))->m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15408320/*aspel.time.stopwatch.query_stopwatch_ticks.ticks*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$15408320/*aspel.time.stopwatch.query_stopwatch_ticks.ticks*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$15377168/*aspel.time.stopwatch.get_high_precision_frequency*/()
{
    {
    TYPE$5 V$15408384/*aspel.time.stopwatch.get_high_precision_frequency.frequency*/;
    TYPE$16 V$15408448/*aspel.time.stopwatch.get_high_precision_frequency.success*/ = ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752776/*aspel.internal.win32.QueryPerformanceFrequency*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$15408384/*aspel.time.stopwatch.get_high_precision_frequency.frequency*/)))));
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$15408448/*aspel.time.stopwatch.get_high_precision_frequency.success*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_EA5E98_OFF],(CORE$U64) SHARED$STR_EA5E98_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x69\x6D\x65\\\x73\x74\x6F\x70\x77\x61\x74\x63\x68\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(67)));
    {
    TYPE$5 RET$VAL = (V$15408384/*aspel.time.stopwatch.get_high_precision_frequency.frequency*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$15377248/*aspel.time.stopwatch.get_high_precision_counter*/()
{
    {
    TYPE$5 V$15408512/*aspel.time.stopwatch.get_high_precision_counter.counter*/;
    TYPE$16 V$15408576/*aspel.time.stopwatch.get_high_precision_counter.success*/ = ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752696/*aspel.internal.win32.QueryPerformanceCounter*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$15408512/*aspel.time.stopwatch.get_high_precision_counter.counter*/)))));
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$15408576/*aspel.time.stopwatch.get_high_precision_counter.success*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_EA5FF8_OFF],(CORE$U64) SHARED$STR_EA5FF8_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x69\x6D\x65\\\x73\x74\x6F\x70\x77\x61\x74\x63\x68\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(77)));
    {
    TYPE$5 RET$VAL = (V$15408512/*aspel.time.stopwatch.get_high_precision_counter.counter*/);
    return RET$VAL;
    }
    }
}

TYPE$60 V$15377328/*aspel.thread.pool.create_thread_pool*/(TYPE$19 V$15409792/*aspel.thread.pool.create_thread_pool.worker_count*/, TYPE$19 V$15409856/*aspel.thread.pool.create_thread_pool.queue_length*/, TYPE$6 V$15409920/*aspel.thread.pool.create_thread_pool.wait_on_queue_overflow*/)
{
    {
    TYPE$60 V$15409984/*aspel.thread.pool.create_thread_pool.pool*/ = (CORE$PTR)(CORE$NEWINIT(48, [&] (void* data) {
    typedef TYPE$56 type;
    type* val = (type*) data;
    {
    { ((*val).m0) = (CORE$null_array); }
    { ((*val).m1) = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))); }
    { ((*val).m2) = (CORE$null_array); }
    { ((*val).m3) = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))); }
    { ((*val).m4) = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))); }
}
}));
    if (CORE$eq(((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$60))(((CORE$DELEGATE)V$15377568/*aspel.thread.pool.destroy_thread_pool*/)))((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/));
    {
    TYPE$60 RET$VAL = CORE$cast_regular(TYPE$60, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$57 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, (V$15409792/*aspel.thread.pool.create_thread_pool.worker_count*/))), (CORE$U64)(24), [] (void* data) {
    typedef TYPE$55 type;
    type* val = (type*) data;
    {
    { ((*val).m0) = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))); }
    { ((*val).m1) = ((V$15408768/*aspel.thread.pool.WORKER_CREATED*/)); }
    { ((*val).m2) = (CORE$cast_regular(TYPE$54, CORE$null_pointer)); }
    { ((*val).m3) = (CORE$null_delegate); }
}
}));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m0));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m0))),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$60))(((CORE$DELEGATE)V$15377568/*aspel.thread.pool.destroy_thread_pool*/)))((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/));
    {
    TYPE$60 RET$VAL = CORE$cast_regular(TYPE$60, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$58 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, (V$15409856/*aspel.thread.pool.create_thread_pool.queue_length*/))), (CORE$U64)(8)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m2));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m2))),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$60))(((CORE$DELEGATE)V$15377568/*aspel.thread.pool.destroy_thread_pool*/)))((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/));
    {
    TYPE$60 RET$VAL = CORE$cast_regular(TYPE$60, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15409920/*aspel.thread.pool.create_thread_pool.wait_on_queue_overflow*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m5));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    TYPE$57 FOREACH$ARRAY = (((TYPE$56*)((V$15409984/*aspel.thread.pool.create_thread_pool.pool*/)))->m0);
    CORE$U64 FOREACH$ITERATOR = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++FOREACH$ITERATOR < FOREACH$ARRAY.n) {
    TYPE$62 V$15410112/*aspel.thread.pool.create_thread_pool..worker*/ = ((TYPE$62) FOREACH$ARRAY.a) + FOREACH$ITERATOR;
    {
    }
    }
    }
    {
    TYPE$60 RET$VAL = (V$15409984/*aspel.thread.pool.create_thread_pool.pool*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15377408/*aspel.thread.pool.wait_workers*/(TYPE$60 V$15410176/*aspel.thread.pool.wait_workers.pool*/)
{
    {
    }
}

TYPE$8 V$15377488/*aspel.thread.pool.detach_workers*/(TYPE$60 V$15410240/*aspel.thread.pool.detach_workers.pool*/)
{
    {
    }
}

TYPE$8 V$15377568/*aspel.thread.pool.destroy_thread_pool*/(TYPE$60 V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)
{
    {
    if (CORE$ne(((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)),(CORE$null_pointer))) {
    {
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$56*)((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)))->m0))),(CORE$null_pointer))) {
    {
    {
    TYPE$57 FOREACH$ARRAY = (((TYPE$56*)((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)))->m0);
    CORE$U64 FOREACH$ITERATOR = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++FOREACH$ITERATOR < FOREACH$ARRAY.n) {
    TYPE$62 V$15410432/*aspel.thread.pool.destroy_thread_pool....worker*/ = ((TYPE$62) FOREACH$ARRAY.a) + FOREACH$ITERATOR;
    {
    if (CORE$ne(((((TYPE$55*)((V$15410432/*aspel.thread.pool.destroy_thread_pool....worker*/)))->m2)),(CORE$null_pointer))) {
    {
    }
    }
    }
    }
    }
    CORE$DEL((void*)(((((TYPE$56*)((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)))->m0)).a));    }
    }
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$56*)((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)))->m2))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$56*)((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/)))->m2)).a));    }
    }
    CORE$DEL((void*)(((V$15410304/*aspel.thread.pool.destroy_thread_pool.pool*/))));    }
    }
    }
}

TYPE$66 V$15377648/*aspel.thread.mutex.create_mutex*/()
{
    {
    TYPE$66 V$15410624/*aspel.thread.mutex.create_mutex.mutex*/ = (CORE$PTR)(CORE$NEWINIT(24, [&] (void* data) {
    typedef TYPE$63 type;
    type* val = (type*) data;
    {
    {
    { (((((*val).m0)).m0)) = (0); }
    { (((((*val).m0)).m1)) = (0); }
    { (((((*val).m0)).m2)) = (0); }
    { (((((*val).m0)).m3)) = (0); }
    { (((((*val).m0)).m4)) = (0); }
    { (((((*val).m0)).m5)) = (0); }
}
}
}));
    if (CORE$eq(((V$15410624/*aspel.thread.mutex.create_mutex.mutex*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$66 RET$VAL = CORE$cast_regular(TYPE$66, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51751896/*aspel.internal.win32.InitializeCriticalSectionAndSpinCount*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$63*)((V$15410624/*aspel.thread.mutex.create_mutex.mutex*/)))->m0)))), CORE$cast_regular(TYPE$19, (CORE$S64)(2000ULL)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    CORE$DEL((void*)(((V$15410624/*aspel.thread.mutex.create_mutex.mutex*/))));    {
    TYPE$66 RET$VAL = CORE$cast_regular(TYPE$66, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$66 RET$VAL = (V$15410624/*aspel.thread.mutex.create_mutex.mutex*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15377728/*aspel.thread.mutex.destroy_mutex*/(TYPE$66 V$15410688/*aspel.thread.mutex.destroy_mutex.mutex*/)
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51751656/*aspel.internal.win32.DeleteCriticalSection*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$63*)((V$15410688/*aspel.thread.mutex.destroy_mutex.mutex*/)))->m0)))));
    CORE$DEL((void*)(((V$15410688/*aspel.thread.mutex.destroy_mutex.mutex*/))));    }
}

TYPE$6 V$15377808/*aspel.thread.mutex.try_lock_mutex*/(TYPE$66 V$15410752/*aspel.thread.mutex.try_lock_mutex.mutex*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752216/*aspel.internal.win32.TryEnterCriticalSection*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$63*)((V$15410752/*aspel.thread.mutex.try_lock_mutex.mutex*/)))->m0)))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15377888/*aspel.thread.mutex.lock_mutex*/(TYPE$66 V$15410816/*aspel.thread.mutex.lock_mutex.mutex*/)
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51751736/*aspel.internal.win32.EnterCriticalSection*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$63*)((V$15410816/*aspel.thread.mutex.lock_mutex.mutex*/)))->m0)))));
    }
}

TYPE$8 V$15377968/*aspel.thread.mutex.unlock_mutex*/(TYPE$66 V$15410880/*aspel.thread.mutex.unlock_mutex.mutex*/)
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752056/*aspel.internal.win32.LeaveCriticalSection*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$63*)((V$15410880/*aspel.thread.mutex.unlock_mutex.mutex*/)))->m0)))));
    }
}

TYPE$76 V$15378048/*aspel.thread.condition.create_condition*/()
{
    {
    TYPE$76 V$15411072/*aspel.thread.condition.create_condition.cond*/ = (CORE$PTR)(CORE$NEWINIT(4, [&] (void* data) {
    typedef TYPE$73 type;
    type* val = (type*) data;
    {
    {
    { ((((*val).m0)).m0) = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))); }
}
}
}));
    if (CORE$eq(((V$15411072/*aspel.thread.condition.create_condition.cond*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$76 RET$VAL = (V$15411072/*aspel.thread.condition.create_condition.cond*/);
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752296/*aspel.internal.win32.InitializeConditionVariable*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$73*)((V$15411072/*aspel.thread.condition.create_condition.cond*/)))->m0)))));
    {
    TYPE$76 RET$VAL = (V$15411072/*aspel.thread.condition.create_condition.cond*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15378128/*aspel.thread.condition.destroy_condition*/(TYPE$76 V$15411136/*aspel.thread.condition.destroy_condition.cond*/)
{
    {
    CORE$DEL((void*)(((V$15411136/*aspel.thread.condition.destroy_condition.cond*/))));    }
}

TYPE$6 V$15378208/*aspel.thread.condition.wait*/(TYPE$76 V$15411200/*aspel.thread.condition.wait.cond*/, TYPE$66 V$15411264/*aspel.thread.condition.wait.mutex*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51752376/*aspel.internal.win32.SleepConditionVariableCS*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$73*)((V$15411200/*aspel.thread.condition.wait.cond*/)))->m0)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$63*)((V$15411264/*aspel.thread.condition.wait.mutex*/)))->m0)))), CORE$cast_regular(TYPE$19, (V$54936280/*aspel.internal.win32.INFINITE*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15378288/*aspel.thread.condition.notify*/(TYPE$76 V$15411328/*aspel.thread.condition.notify.cond*/)
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752456/*aspel.internal.win32.WakeConditionVariable*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$73*)((V$15411328/*aspel.thread.condition.notify.cond*/)))->m0)))));
    }
}

TYPE$8 V$15378368/*aspel.thread.condition.broadcast*/(TYPE$76 V$15411392/*aspel.thread.condition.broadcast.cond*/)
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752536/*aspel.internal.win32.WakeAllConditionVariable*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$73*)((V$15411392/*aspel.thread.condition.broadcast.cond*/)))->m0)))));
    }
}

TYPE$6 V$15378848/*aspel.thread.atomic.atomic_try_lock*/(TYPE$86 V$15411520/*aspel.thread.atomic.atomic_try_lock.lock*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$15378608/*aspel.thread.atomic.InterlockedExchange*/)))(CORE$cast_regular(TYPE$19, (V$15411520/*aspel.thread.atomic.atomic_try_lock.lock*/)), CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15378928/*aspel.thread.atomic.atomic_lock*/(TYPE$86 V$15411584/*aspel.thread.atomic.atomic_lock.lock*/)
{
    {
    while ((!(((TYPE$6(*)(TYPE$86))(((CORE$DELEGATE)V$15378848/*aspel.thread.atomic.atomic_try_lock*/)))((V$15411584/*aspel.thread.atomic.atomic_lock.lock*/))))) {
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51753896/*aspel.internal.win32.Sleep*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    }
    }
    }
}

TYPE$8 V$15379008/*aspel.thread.atomic.atomic_unlock*/(TYPE$86 V$15411648/*aspel.thread.atomic.atomic_unlock.lock*/)
{
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$15411648/*aspel.thread.atomic.atomic_unlock.lock*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
}

TYPE$6 V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/(TYPE$90 V$15411840/*aspel.thread.atomic.atomic_compare_and_swap.atomic*/, TYPE$16 V$15411904/*aspel.thread.atomic.atomic_compare_and_swap.new_value*/, TYPE$16 V$15411968/*aspel.thread.atomic.atomic_compare_and_swap.old_value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15378448/*aspel.thread.atomic.InterlockedCompareExchange*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$88*)((V$15411840/*aspel.thread.atomic.atomic_compare_and_swap.atomic*/)))->m0)))), (V$15411904/*aspel.thread.atomic.atomic_compare_and_swap.new_value*/), (V$15411968/*aspel.thread.atomic.atomic_compare_and_swap.old_value*/))),((V$15411968/*aspel.thread.atomic.atomic_compare_and_swap.old_value*/)));
    return RET$VAL;
    }
    }
}

TYPE$16 V$15379168/*aspel.thread.atomic.atomic_get*/(TYPE$90 V$15412032/*aspel.thread.atomic.atomic_get.atomic*/)
{
    {
    while (CORE$true) {
    {
    TYPE$16 V$15412096/*aspel.thread.atomic.atomic_get..current_value*/ = (((TYPE$88*)((V$15412032/*aspel.thread.atomic.atomic_get.atomic*/)))->m0);
    if (((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))((V$15412032/*aspel.thread.atomic.atomic_get.atomic*/), (V$15412096/*aspel.thread.atomic.atomic_get..current_value*/), (V$15412096/*aspel.thread.atomic.atomic_get..current_value*/))) {
    {
    {
    TYPE$16 RET$VAL = (V$15412096/*aspel.thread.atomic.atomic_get..current_value*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$16 V$15379248/*aspel.thread.atomic.atomic_set*/(TYPE$90 V$15412160/*aspel.thread.atomic.atomic_set.atomic*/, TYPE$16 V$15412224/*aspel.thread.atomic.atomic_set.new_value*/)
{
    {
    while (CORE$true) {
    {
    TYPE$16 V$15412288/*aspel.thread.atomic.atomic_set..current_value*/ = (((TYPE$88*)((V$15412160/*aspel.thread.atomic.atomic_set.atomic*/)))->m0);
    if (((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))((V$15412160/*aspel.thread.atomic.atomic_set.atomic*/), (V$15412224/*aspel.thread.atomic.atomic_set.new_value*/), (V$15412288/*aspel.thread.atomic.atomic_set..current_value*/))) {
    {
    {
    TYPE$16 RET$VAL = (V$15412288/*aspel.thread.atomic.atomic_set..current_value*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$16 V$15379328/*aspel.thread.atomic.atomic_add*/(TYPE$90 V$15412352/*aspel.thread.atomic.atomic_add.atomic*/, TYPE$16 V$15412416/*aspel.thread.atomic.atomic_add.value*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$15378688/*aspel.thread.atomic.InterlockedExchangeAdd*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$88*)((V$15412352/*aspel.thread.atomic.atomic_add.atomic*/)))->m0)))), (V$15412416/*aspel.thread.atomic.atomic_add.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15379408/*aspel.thread.atomic.atomic_increment*/(TYPE$90 V$15412480/*aspel.thread.atomic.atomic_increment.atomic*/)
{
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$15378768/*aspel.thread.atomic.InterlockedIncrement*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$88*)((V$15412480/*aspel.thread.atomic.atomic_increment.atomic*/)))->m0)))));
    }
}

TYPE$6 V$15379488/*aspel.thread.atomic.atomic_decrement*/(TYPE$90 V$15412544/*aspel.thread.atomic.atomic_decrement.atomic*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$15378528/*aspel.thread.atomic.InterlockedDecrement*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$88*)((V$15412544/*aspel.thread.atomic.atomic_decrement.atomic*/)))->m0)))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15379568/*aspel.thread.atomic.atomic_and*/(TYPE$90 V$15412608/*aspel.thread.atomic.atomic_and.atomic*/, TYPE$19 V$15412672/*aspel.thread.atomic.atomic_and.value*/)
{
    {
    while (CORE$true) {
    {
    TYPE$16 V$15412736/*aspel.thread.atomic.atomic_and..current_value*/ = (((TYPE$88*)((V$15412608/*aspel.thread.atomic.atomic_and.atomic*/)))->m0);
    if (((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))((V$15412608/*aspel.thread.atomic.atomic_and.atomic*/), CORE$band(((V$15412736/*aspel.thread.atomic.atomic_and..current_value*/)),(CORE$cast_regular(TYPE$16, (V$15412672/*aspel.thread.atomic.atomic_and.value*/)))), (V$15412736/*aspel.thread.atomic.atomic_and..current_value*/))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (V$15412736/*aspel.thread.atomic.atomic_and..current_value*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15379648/*aspel.thread.atomic.atomic_or*/(TYPE$90 V$15412800/*aspel.thread.atomic.atomic_or.atomic*/, TYPE$19 V$15412864/*aspel.thread.atomic.atomic_or.value*/)
{
    {
    while (CORE$true) {
    {
    TYPE$16 V$15412928/*aspel.thread.atomic.atomic_or..current_value*/ = (((TYPE$88*)((V$15412800/*aspel.thread.atomic.atomic_or.atomic*/)))->m0);
    if (((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))((V$15412800/*aspel.thread.atomic.atomic_or.atomic*/), CORE$bor(((V$15412928/*aspel.thread.atomic.atomic_or..current_value*/)),(CORE$cast_regular(TYPE$16, (V$15412864/*aspel.thread.atomic.atomic_or.value*/)))), (V$15412928/*aspel.thread.atomic.atomic_or..current_value*/))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (V$15412928/*aspel.thread.atomic.atomic_or..current_value*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15379728/*aspel.thread.atomic.atomic_xor*/(TYPE$90 V$15412992/*aspel.thread.atomic.atomic_xor.atomic*/, TYPE$19 V$15413056/*aspel.thread.atomic.atomic_xor.value*/)
{
    {
    while (CORE$true) {
    {
    TYPE$16 V$15413120/*aspel.thread.atomic.atomic_xor..current_value*/ = (((TYPE$88*)((V$15412992/*aspel.thread.atomic.atomic_xor.atomic*/)))->m0);
    if (((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))((V$15412992/*aspel.thread.atomic.atomic_xor.atomic*/), CORE$bxor(((V$15413120/*aspel.thread.atomic.atomic_xor..current_value*/)),(CORE$cast_regular(TYPE$16, (V$15413056/*aspel.thread.atomic.atomic_xor.value*/)))), (V$15413120/*aspel.thread.atomic.atomic_xor..current_value*/))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (V$15413120/*aspel.thread.atomic.atomic_xor..current_value*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15379808/*aspel.thread.win32_thread_start*/(TYPE$19 V$15413760/*aspel.thread.win32_thread_start.lpParameter*/)
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51736056/*aspel.internal.initialize_thread*/)))();
    TYPE$100 V$15413824/*aspel.thread.win32_thread_start.thread_arguments*/ = CORE$cast_regular(TYPE$100, (V$15413760/*aspel.thread.win32_thread_start.lpParameter*/));
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$98*)((V$15413824/*aspel.thread.win32_thread_start.thread_arguments*/)))->m1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((ISOLATED$BASE.V$15413504/*aspel.thread.current_thread_argument*/)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    ((TYPE$8(*)())((((TYPE$98*)((V$15413824/*aspel.thread.win32_thread_start.thread_arguments*/)))->m0)))();
    CORE$DEL((void*)(((V$15413824/*aspel.thread.win32_thread_start.thread_arguments*/))));    ((TYPE$8(*)())(((CORE$DELEGATE)V$51736136/*aspel.internal.finalize_thread*/)))();
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15379888/*aspel.thread.create_thread*/(TYPE$54 V$15413888/*aspel.thread.create_thread.thread*/, TYPE$37 V$15413952/*aspel.thread.create_thread.start_function*/, TYPE$7 V$15414016/*aspel.thread.create_thread.thread_argument*/)
{
    {
    TYPE$99 V$15414080/*aspel.thread.create_thread.real_start*/ = ((CORE$DELEGATE)V$15379808/*aspel.thread.win32_thread_start*/);
    TYPE$100 V$15414144/*aspel.thread.create_thread.thread_arguments*/ = (CORE$PTR)(CORE$NEW(16));
    {
    typedef TYPE$37 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15413952/*aspel.thread.create_thread.start_function*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$98*)((V$15414144/*aspel.thread.create_thread.thread_arguments*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$37, TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15414016/*aspel.thread.create_thread.thread_argument*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$98*)((V$15414144/*aspel.thread.create_thread.thread_arguments*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    TYPE$19 V$15414208/*aspel.thread.create_thread.handle*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51753256/*aspel.internal.win32.CreateThread*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), (*(TYPE$19*)(CORE$cast_regular(TYPE$103, ((CORE$PTR) &((V$15414080/*aspel.thread.create_thread.real_start*/)))))), CORE$cast_regular(TYPE$19, (V$15414144/*aspel.thread.create_thread.thread_arguments*/)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    if (CORE$eq(((V$15414208/*aspel.thread.create_thread.handle*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    CORE$DEL((void*)(((V$15414144/*aspel.thread.create_thread.thread_arguments*/))));    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((V$15413888/*aspel.thread.create_thread.thread*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$15414208/*aspel.thread.create_thread.handle*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15413888/*aspel.thread.create_thread.thread*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$15379968/*aspel.thread.wait_thread*/(TYPE$5 V$15414272/*aspel.thread.wait_thread.thread*/)
{
    {
    ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51752616/*aspel.internal.win32.WaitForSingleObject*/)))(CORE$cast_regular(TYPE$19, (V$15414272/*aspel.thread.wait_thread.thread*/)), (V$54936280/*aspel.internal.win32.INFINITE*/));
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752856/*aspel.internal.win32.CloseHandle*/)))(CORE$cast_regular(TYPE$19, (V$15414272/*aspel.thread.wait_thread.thread*/)));
    }
}

TYPE$8 V$15380048/*aspel.thread.detach_thread*/(TYPE$5 V$15414336/*aspel.thread.detach_thread.thread*/)
{
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752856/*aspel.internal.win32.CloseHandle*/)))(CORE$cast_regular(TYPE$19, (V$15414336/*aspel.thread.detach_thread.thread*/)));
    }
}

TYPE$8 V$15380128/*aspel.thread.sleep*/(TYPE$19 V$15414400/*aspel.thread.sleep.millis*/)
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51753896/*aspel.internal.win32.Sleep*/)))(CORE$cast_regular(TYPE$19, (V$15414400/*aspel.thread.sleep.millis*/)));
    }
}

TYPE$109 V$15380208/*aspel.text.push_node*/(TYPE$119 V$15416000/*aspel.text.push_node.pattern*/)
{
    {
    TYPE$109 V$15416064/*aspel.text.push_node.node*/ = ((CORE$PTR) &(CORE$ABC(TYPE$108, ((((TYPE$113*)((V$15416000/*aspel.text.push_node.pattern*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$113*)((V$15416000/*aspel.text.push_node.pattern*/)))->m3))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(45))));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15416000/*aspel.text.push_node.pattern*/)))->m3));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$109 RET$VAL = (V$15416064/*aspel.text.push_node.node*/);
    return RET$VAL;
    }
    }
}

TYPE$121 V$15380288/*aspel.text.push_fragment*/(TYPE$119 V$15416128/*aspel.text.push_fragment.pattern*/)
{
    {
    TYPE$121 V$15416192/*aspel.text.push_fragment.frag*/ = ((CORE$PTR) &(CORE$ABC(TYPE$111, ((((TYPE$113*)((V$15416128/*aspel.text.push_fragment.pattern*/)))->m2)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$113*)((V$15416128/*aspel.text.push_fragment.pattern*/)))->m5))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(52))));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15416128/*aspel.text.push_fragment.pattern*/)))->m5));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$121 RET$VAL = (V$15416192/*aspel.text.push_fragment.frag*/);
    return RET$VAL;
    }
    }
}

TYPE$112 V$15380368/*aspel.text.single*/(TYPE$119 V$15416256/*aspel.text.single.pattern*/, TYPE$7 V$15416320/*aspel.text.single.pointer*/)
{
    {
    TYPE$112 V$15416384/*aspel.text.single.list*/ = ((CORE$PTR) &(CORE$ABC(TYPE$110, ((((TYPE$113*)((V$15416256/*aspel.text.single.pattern*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$113*)((V$15416256/*aspel.text.single.pattern*/)))->m4))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(59))));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15416256/*aspel.text.single.pattern*/)))->m4));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$110*)((V$15416384/*aspel.text.single.list*/)))->m0));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15416320/*aspel.text.single.pointer*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$110*)((V$15416384/*aspel.text.single.list*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    TYPE$112 RET$VAL = (V$15416384/*aspel.text.single.list*/);
    return RET$VAL;
    }
    }
}

TYPE$112 V$15380448/*aspel.text.append*/(TYPE$119 V$15416448/*aspel.text.append.pattern*/, TYPE$112 V$15416512/*aspel.text.append.list1*/, TYPE$112 V$15416576/*aspel.text.append.list2*/)
{
    {
    TYPE$112 V$15416640/*aspel.text.append.list*/ = ((CORE$PTR) &(CORE$ABC(TYPE$110, ((((TYPE$113*)((V$15416448/*aspel.text.append.pattern*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$113*)((V$15416448/*aspel.text.append.pattern*/)))->m4))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(68))));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15416448/*aspel.text.append.pattern*/)))->m4));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$110*)((V$15416640/*aspel.text.append.list*/)))->m0));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$7, (V$15416512/*aspel.text.append.list1*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$110*)((V$15416640/*aspel.text.append.list*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$7, (V$15416576/*aspel.text.append.list2*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$110*)((V$15416640/*aspel.text.append.list*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    TYPE$112 RET$VAL = (V$15416640/*aspel.text.append.list*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15380528/*aspel.text.patch*/(TYPE$112 V$15416704/*aspel.text.patch.list*/, TYPE$109 V$15416768/*aspel.text.patch.node*/)
{
    {
    if ((((TYPE$110*)((V$15416704/*aspel.text.patch.list*/)))->m0)) {
    {
    ((TYPE$8(*)(TYPE$112,TYPE$109))(((CORE$DELEGATE)V$15380528/*aspel.text.patch*/)))(CORE$cast_regular(TYPE$112, (((TYPE$110*)((V$15416704/*aspel.text.patch.list*/)))->m1)), (V$15416768/*aspel.text.patch.node*/));
    ((TYPE$8(*)(TYPE$112,TYPE$109))(((CORE$DELEGATE)V$15380528/*aspel.text.patch*/)))(CORE$cast_regular(TYPE$112, (((TYPE$110*)((V$15416704/*aspel.text.patch.list*/)))->m2)), (V$15416768/*aspel.text.patch.node*/));
    }
    }
    else {
    {
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15416768/*aspel.text.patch.node*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$109*)(CORE$cast_regular(TYPE$125, (((TYPE$110*)((V$15416704/*aspel.text.patch.list*/)))->m1)))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$2 V$15380608/*aspel.text.peek_byte*/(TYPE$1 V$15416832/*aspel.text.peek_byte.regex*/, TYPE$5 V$15416896/*aspel.text.peek_byte.offset*/)
{
    {
    if (CORE$ge(((V$15416896/*aspel.text.peek_byte.offset*/)),(((V$15416832/*aspel.text.peek_byte.regex*/).n)))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$2 RET$VAL = CORE$ABC(TYPE$2, ((V$15416832/*aspel.text.peek_byte.regex*/)), (CORE$U64)((V$15416896/*aspel.text.peek_byte.offset*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(93));
    return RET$VAL;
    }
    }
}

TYPE$121 V$15380688/*aspel.text.parse_leaf*/(TYPE$119 V$15416960/*aspel.text.parse_leaf.pattern*/, TYPE$1 V$15417024/*aspel.text.parse_leaf.regex*/, TYPE$54 V$15417088/*aspel.text.parse_leaf.offset*/)
{
    {
    TYPE$121 V$15417152/*aspel.text.parse_leaf.leaf*/;
    TYPE$2 V$15417216/*aspel.text.parse_leaf.current*/ = ((TYPE$2(*)(TYPE$1,TYPE$5))(((CORE$DELEGATE)V$15380608/*aspel.text.peek_byte*/)))((V$15417024/*aspel.text.parse_leaf.regex*/), (*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    if (CORE$eq(((V$15417216/*aspel.text.parse_leaf.current*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(40ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$121 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$121(*)(TYPE$119,TYPE$1,TYPE$54))(((CORE$DELEGATE)V$15380768/*aspel.text.parse_concat*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/), (V$15417024/*aspel.text.parse_leaf.regex*/), (V$15417088/*aspel.text.parse_leaf.offset*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15417152/*aspel.text.parse_leaf.leaf*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$121, TEMP$VAL0);
    }
    if (CORE$ne((((TYPE$2(*)(TYPE$1,TYPE$5))(((CORE$DELEGATE)V$15380608/*aspel.text.peek_byte*/)))((V$15417024/*aspel.text.parse_leaf.regex*/), (*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))))),(CORE$cast_regular(TYPE$2, (CORE$S64)(41ULL))))) {
    {
    {
    TYPE$121 RET$VAL = CORE$cast_regular(TYPE$121, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    TYPE$109 V$15417280/*aspel.text.parse_leaf..leaf_node*/ = ((TYPE$109(*)(TYPE$119))(((CORE$DELEGATE)V$15380208/*aspel.text.push_node*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15417216/*aspel.text.parse_leaf.current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417280/*aspel.text.parse_leaf..leaf_node*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$109, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417280/*aspel.text.parse_leaf..leaf_node*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    {
    typedef TYPE$121 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$121(*)(TYPE$119))(((CORE$DELEGATE)V$15380288/*aspel.text.push_fragment*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15417152/*aspel.text.parse_leaf.leaf*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$121, TEMP$VAL0);
    }
    {
    typedef TYPE$111 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$111{
    TYPE$111 TEMP$RESULT;
    { typedef TYPE$109 TEMP$TYPE;
      auto TEMP$VAL = (V$15417280/*aspel.text.parse_leaf..leaf_node*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$109, TEMP$VAL); }
    { typedef TYPE$112 TEMP$TYPE;
      auto TEMP$VAL = ((TYPE$112(*)(TYPE$119,TYPE$7))(((CORE$DELEGATE)V$15380368/*aspel.text.single*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((((TYPE$108*)((V$15417280/*aspel.text.parse_leaf..leaf_node*/)))->m1)))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$112, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$111, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2(*)(TYPE$1,TYPE$5))(((CORE$DELEGATE)V$15380608/*aspel.text.peek_byte*/)))((V$15417024/*aspel.text.parse_leaf.regex*/), (*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15417216/*aspel.text.parse_leaf.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    if (CORE$eq(((V$15417216/*aspel.text.parse_leaf.current*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(63ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    TYPE$109 V$15417344/*aspel.text.parse_leaf..operator_node*/ = ((TYPE$109(*)(TYPE$119))(((CORE$DELEGATE)V$15380208/*aspel.text.push_node*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15414464/*aspel.text.NODE_SPLIT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417344/*aspel.text.parse_leaf..operator_node*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417344/*aspel.text.parse_leaf..operator_node*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$109, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417344/*aspel.text.parse_leaf..operator_node*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    TYPE$121 V$15417408/*aspel.text.parse_leaf..this*/ = (V$15417152/*aspel.text.parse_leaf.leaf*/);
    {
    typedef TYPE$121 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$121(*)(TYPE$119))(((CORE$DELEGATE)V$15380288/*aspel.text.push_fragment*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15417152/*aspel.text.parse_leaf.leaf*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$121, TEMP$VAL0);
    }
    {
    typedef TYPE$111 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$111{
    TYPE$111 TEMP$RESULT;
    { typedef TYPE$109 TEMP$TYPE;
      auto TEMP$VAL = (V$15417344/*aspel.text.parse_leaf..operator_node*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$109, TEMP$VAL); }
    { typedef TYPE$112 TEMP$TYPE;
      auto TEMP$VAL = ((TYPE$112(*)(TYPE$119,TYPE$112,TYPE$112))(((CORE$DELEGATE)V$15380448/*aspel.text.append*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/), (((TYPE$111*)((V$15417408/*aspel.text.parse_leaf..this*/)))->m1), ((TYPE$112(*)(TYPE$119,TYPE$7))(((CORE$DELEGATE)V$15380368/*aspel.text.single*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((((TYPE$108*)((V$15417344/*aspel.text.parse_leaf..operator_node*/)))->m2))))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$112, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$111, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$15417216/*aspel.text.parse_leaf.current*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(42ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    TYPE$109 V$15417472/*aspel.text.parse_leaf...operator_node*/ = ((TYPE$109(*)(TYPE$119))(((CORE$DELEGATE)V$15380208/*aspel.text.push_node*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15414464/*aspel.text.NODE_SPLIT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417472/*aspel.text.parse_leaf...operator_node*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417472/*aspel.text.parse_leaf...operator_node*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$109, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417472/*aspel.text.parse_leaf...operator_node*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$112,TYPE$109))(((CORE$DELEGATE)V$15380528/*aspel.text.patch*/)))((((TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/)))->m1), (V$15417472/*aspel.text.parse_leaf...operator_node*/));
    {
    typedef TYPE$121 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$121(*)(TYPE$119))(((CORE$DELEGATE)V$15380288/*aspel.text.push_fragment*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15417152/*aspel.text.parse_leaf.leaf*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$121, TEMP$VAL0);
    }
    {
    typedef TYPE$111 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$111{
    TYPE$111 TEMP$RESULT;
    { typedef TYPE$109 TEMP$TYPE;
      auto TEMP$VAL = (V$15417472/*aspel.text.parse_leaf...operator_node*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$109, TEMP$VAL); }
    { typedef TYPE$112 TEMP$TYPE;
      auto TEMP$VAL = ((TYPE$112(*)(TYPE$119,TYPE$7))(((CORE$DELEGATE)V$15380368/*aspel.text.single*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((((TYPE$108*)((V$15417472/*aspel.text.parse_leaf...operator_node*/)))->m2)))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$112, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$111, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$15417216/*aspel.text.parse_leaf.current*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(43ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$15417088/*aspel.text.parse_leaf.offset*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    TYPE$109 V$15417536/*aspel.text.parse_leaf....operator_node*/ = ((TYPE$109(*)(TYPE$119))(((CORE$DELEGATE)V$15380208/*aspel.text.push_node*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15414464/*aspel.text.NODE_SPLIT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417536/*aspel.text.parse_leaf....operator_node*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417536/*aspel.text.parse_leaf....operator_node*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$109, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15417536/*aspel.text.parse_leaf....operator_node*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$112,TYPE$109))(((CORE$DELEGATE)V$15380528/*aspel.text.patch*/)))((((TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/)))->m1), (V$15417536/*aspel.text.parse_leaf....operator_node*/));
    TYPE$121 V$15417600/*aspel.text.parse_leaf....this*/ = (V$15417152/*aspel.text.parse_leaf.leaf*/);
    {
    typedef TYPE$121 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$121(*)(TYPE$119))(((CORE$DELEGATE)V$15380288/*aspel.text.push_fragment*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15417152/*aspel.text.parse_leaf.leaf*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$121, TEMP$VAL0);
    }
    {
    typedef TYPE$111 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$111{
    TYPE$111 TEMP$RESULT;
    { typedef TYPE$109 TEMP$TYPE;
      auto TEMP$VAL = (((TYPE$111*)((V$15417600/*aspel.text.parse_leaf....this*/)))->m0);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$109, TEMP$VAL); }
    { typedef TYPE$112 TEMP$TYPE;
      auto TEMP$VAL = ((TYPE$112(*)(TYPE$119,TYPE$7))(((CORE$DELEGATE)V$15380368/*aspel.text.single*/)))((V$15416960/*aspel.text.parse_leaf.pattern*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((((TYPE$108*)((V$15417536/*aspel.text.parse_leaf....operator_node*/)))->m2)))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$112, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$111*)((V$15417152/*aspel.text.parse_leaf.leaf*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$111, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    {
    TYPE$121 RET$VAL = (V$15417152/*aspel.text.parse_leaf.leaf*/);
    return RET$VAL;
    }
    }
}

TYPE$121 V$15380768/*aspel.text.parse_concat*/(TYPE$119 V$15417664/*aspel.text.parse_concat.pattern*/, TYPE$1 V$15417728/*aspel.text.parse_concat.regex*/, TYPE$54 V$15417792/*aspel.text.parse_concat.offset*/)
{
    {
    TYPE$121 V$15417856/*aspel.text.parse_concat.frag*/ = ((TYPE$121(*)(TYPE$119,TYPE$1,TYPE$54))(((CORE$DELEGATE)V$15380688/*aspel.text.parse_leaf*/)))((V$15417664/*aspel.text.parse_concat.pattern*/), (V$15417728/*aspel.text.parse_concat.regex*/), (V$15417792/*aspel.text.parse_concat.offset*/));
    while (CORE$lt(((*(TYPE$5*)((V$15417792/*aspel.text.parse_concat.offset*/)))),(((V$15417728/*aspel.text.parse_concat.regex*/).n)))) {
    {
    TYPE$2 V$15417920/*aspel.text.parse_concat..current*/ = CORE$ABC(TYPE$2, ((V$15417728/*aspel.text.parse_concat.regex*/)), (CORE$U64)((*(TYPE$5*)((V$15417792/*aspel.text.parse_concat.offset*/)))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(174));
    if (CORE$eq(((V$15417920/*aspel.text.parse_concat..current*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(41ULL))))) {
    {
    {
    break;
    }
    }
    }
    TYPE$121 V$15417984/*aspel.text.parse_concat..another*/ = ((TYPE$121(*)(TYPE$119,TYPE$1,TYPE$54))(((CORE$DELEGATE)V$15380688/*aspel.text.parse_leaf*/)))((V$15417664/*aspel.text.parse_concat.pattern*/), (V$15417728/*aspel.text.parse_concat.regex*/), (V$15417792/*aspel.text.parse_concat.offset*/));
    ((TYPE$8(*)(TYPE$112,TYPE$109))(((CORE$DELEGATE)V$15380528/*aspel.text.patch*/)))((((TYPE$111*)((V$15417856/*aspel.text.parse_concat.frag*/)))->m1), (((TYPE$111*)((V$15417984/*aspel.text.parse_concat..another*/)))->m0));
    {
    typedef TYPE$111 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$111{
    TYPE$111 TEMP$RESULT;
    { typedef TYPE$109 TEMP$TYPE;
      auto TEMP$VAL = (((TYPE$111*)((V$15417856/*aspel.text.parse_concat.frag*/)))->m0);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$109, TEMP$VAL); }
    { typedef TYPE$112 TEMP$TYPE;
      auto TEMP$VAL = (((TYPE$111*)((V$15417984/*aspel.text.parse_concat..another*/)))->m1);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$112, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$111*)((V$15417856/*aspel.text.parse_concat.frag*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$111, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$121 RET$VAL = (V$15417856/*aspel.text.parse_concat.frag*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$15380848/*aspel.text.compile_pattern*/(TYPE$119 V$15418048/*aspel.text.compile_pattern.pattern*/, TYPE$1 V$15418112/*aspel.text.compile_pattern.regex*/)
{
    {
    {
    typedef TYPE$115 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$mul((CORE$cast_regular(TYPE$4, ((V$15418112/*aspel.text.compile_pattern.regex*/).n))),((CORE$S64)(2ULL))))), (CORE$U64)(20)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$116 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARR((CORE$U64)(((V$15418112/*aspel.text.compile_pattern.regex*/).n)), (CORE$U64)(16)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$114 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$15418112/*aspel.text.compile_pattern.regex*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(25)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m0));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m0))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$117 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$15418112/*aspel.text.compile_pattern.regex*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(8)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m6));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m6))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m0)).a));    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$117 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$15418112/*aspel.text.compile_pattern.regex*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(8)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m7));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m7))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m0)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m6)).a));    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    return RET$VAL;
    }
    }
    }
    TYPE$5 V$15418176/*aspel.text.compile_pattern.offset*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$121 V$15418240/*aspel.text.compile_pattern.start_frag*/ = ((TYPE$121(*)(TYPE$119,TYPE$1,TYPE$54))(((CORE$DELEGATE)V$15380768/*aspel.text.parse_concat*/)))((V$15418048/*aspel.text.compile_pattern.pattern*/), (V$15418112/*aspel.text.compile_pattern.regex*/), ((CORE$PTR) &((V$15418176/*aspel.text.compile_pattern.offset*/))));
    if (CORE$eq(((V$15418240/*aspel.text.compile_pattern.start_frag*/)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$119))(((CORE$DELEGATE)V$15381328/*aspel.text.destroy_pattern*/)))((V$15418048/*aspel.text.compile_pattern.pattern*/));
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    return RET$VAL;
    }
    }
    }
    TYPE$109 V$15418304/*aspel.text.compile_pattern.match_node*/ = ((TYPE$109(*)(TYPE$119))(((CORE$DELEGATE)V$15380208/*aspel.text.push_node*/)))((V$15418048/*aspel.text.compile_pattern.pattern*/));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15414528/*aspel.text.NODE_MATCH*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15418304/*aspel.text.compile_pattern.match_node*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$112,TYPE$109))(((CORE$DELEGATE)V$15380528/*aspel.text.patch*/)))((((TYPE$111*)((V$15418240/*aspel.text.compile_pattern.start_frag*/)))->m1), (V$15418304/*aspel.text.compile_pattern.match_node*/));
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$111*)((V$15418240/*aspel.text.compile_pattern.start_frag*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m8));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    return RET$VAL;
    }
    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m2)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15418048/*aspel.text.compile_pattern.pattern*/)))->m1)).a));    }
}

TYPE$5 V$15380928/*aspel.text.get_node_id*/(TYPE$119 V$15418368/*aspel.text.get_node_id.pattern*/, TYPE$109 V$15418432/*aspel.text.get_node_id.node*/)
{
    {
    if (CORE$eq(((V$15418432/*aspel.text.get_node_id.node*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$5 RET$VAL = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$5 RET$VAL = CORE$add((CORE$div((CORE$sub((CORE$cast_regular(TYPE$5, (V$15418432/*aspel.text.get_node_id.node*/))),(CORE$cast_regular(TYPE$5, ((((TYPE$113*)((V$15418368/*aspel.text.get_node_id.pattern*/)))->m0).a))))),((CORE$U64)(25)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15381008/*aspel.text.debug_print_nodes*/(TYPE$119 V$15418496/*aspel.text.debug_print_nodes.pattern*/, TYPE$109 V$15418560/*aspel.text.debug_print_nodes.node*/)
{
    {
    if (CORE$ne(((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m3)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    return;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    ([&]()->TYPE$4{
    TYPE$1 TEMP$ARG0 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_EEB9A0_OFF],(CORE$U64) SHARED$STR_EEB9A0_LEN);
    TYPE$35 VARARGS$VALUES[1];
    VARARGS$VALUES[0] = CORE$PACK(5, ((TYPE$5(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15380928/*aspel.text.get_node_id*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (V$15418560/*aspel.text.debug_print_nodes.node*/)));
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 1);
    return ((TYPE$4(*)(TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383328/*aspel.text.format*/)))(TEMP$ARG0, VARARGS$ARRAY);
})();
    if (CORE$eq(((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m0)),(((ISOLATED$BASE.V$15414464/*aspel.text.NODE_SPLIT*/))))) {
    {
    ([&]()->TYPE$4{
    TYPE$1 TEMP$ARG0 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_EEBAE0_OFF],(CORE$U64) SHARED$STR_EEBAE0_LEN);
    TYPE$35 VARARGS$VALUES[2];
    VARARGS$VALUES[0] = CORE$PACK(5, ((TYPE$5(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15380928/*aspel.text.get_node_id*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m1)));
    VARARGS$VALUES[1] = CORE$PACK(5, ((TYPE$5(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15380928/*aspel.text.get_node_id*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m2)));
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 2);
    return ((TYPE$4(*)(TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383328/*aspel.text.format*/)))(TEMP$ARG0, VARARGS$ARRAY);
})();
    if (CORE$ne(((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m1)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15381008/*aspel.text.debug_print_nodes*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m1));
    }
    }
    if (CORE$ne(((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m2)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15381008/*aspel.text.debug_print_nodes*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m2));
    }
    }
    }
    }
    else {
    {
    if (CORE$eq(((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m0)),(((ISOLATED$BASE.V$15414528/*aspel.text.NODE_MATCH*/))))) {
    {
    ([&]()->TYPE$4{
    TYPE$1 TEMP$ARG0 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F41B50_OFF],(CORE$U64) SHARED$STR_F41B50_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$4(*)(TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383328/*aspel.text.format*/)))(TEMP$ARG0, VARARGS$ARRAY);
})();
    }
    }
    else {
    {
    TYPE$2 INITIALIZER$15997872[1];
    TYPE$1 V$15418624/*aspel.text.debug_print_nodes...string*/ = ([&]()->TYPE$1{
    typedef TYPE$2 TEMP$TYPE;
    { auto TEMP$VAL = (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m0);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$15997872[0]);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return CORE$MAKEARR((CORE$PTR) INITIALIZER$15997872, (CORE$U64) 1);
}());
    ([&]()->TYPE$4{
    TYPE$1 TEMP$ARG0 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F41C30_OFF],(CORE$U64) SHARED$STR_F41C30_LEN);
    TYPE$35 VARARGS$VALUES[2];
    VARARGS$VALUES[0] = CORE$PACK(1, (CORE$PTR)&((V$15418624/*aspel.text.debug_print_nodes...string*/)));
    VARARGS$VALUES[1] = CORE$PACK(5, ((TYPE$5(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15380928/*aspel.text.get_node_id*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m1)));
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 2);
    return ((TYPE$4(*)(TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383328/*aspel.text.format*/)))(TEMP$ARG0, VARARGS$ARRAY);
})();
    if (CORE$ne(((((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m1)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$119,TYPE$109))(((CORE$DELEGATE)V$15381008/*aspel.text.debug_print_nodes*/)))((V$15418496/*aspel.text.debug_print_nodes.pattern*/), (((TYPE$108*)((V$15418560/*aspel.text.debug_print_nodes.node*/)))->m1));
    }
    }
    }
    }
    }
    }
    }
}

TYPE$6 V$15381088/*aspel.text.reached_matching_states*/(TYPE$135 V$15418880/*aspel.text.reached_matching_states.list*/)
{
    {
    {
    TYPE$4 V$15418944/*aspel.text.reached_matching_states..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub(((((TYPE$133*)((V$15418880/*aspel.text.reached_matching_states.list*/)))->m1)),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$15418944/*aspel.text.reached_matching_states..i*/ -= FOREACH$STEP;
    while ((V$15418944/*aspel.text.reached_matching_states..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if (CORE$eq(((((TYPE$108*)(CORE$ABC(TYPE$109, ((((TYPE$133*)((V$15418880/*aspel.text.reached_matching_states.list*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$15418944/*aspel.text.reached_matching_states..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(277))))->m0)),(((ISOLATED$BASE.V$15414528/*aspel.text.NODE_MATCH*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$8 V$15381168/*aspel.text.add_node*/(TYPE$135 V$15419008/*aspel.text.add_node.list*/, TYPE$109 V$15419072/*aspel.text.add_node.node*/, TYPE$5 V$15419136/*aspel.text.add_node.generation*/)
{
    {
    if (CORE$lor((CORE$eq(((V$15419072/*aspel.text.add_node.node*/)),(CORE$null_pointer))),(CORE$eq(((((TYPE$108*)((V$15419072/*aspel.text.add_node.node*/)))->m3)),((V$15419136/*aspel.text.add_node.generation*/)))))) {
    {
    {
    return;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15419136/*aspel.text.add_node.generation*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$108*)((V$15419072/*aspel.text.add_node.node*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$eq(((((TYPE$108*)((V$15419072/*aspel.text.add_node.node*/)))->m0)),(((ISOLATED$BASE.V$15414464/*aspel.text.NODE_SPLIT*/))))) {
    {
    ((TYPE$8(*)(TYPE$135,TYPE$109,TYPE$5))(((CORE$DELEGATE)V$15381168/*aspel.text.add_node*/)))((V$15419008/*aspel.text.add_node.list*/), (((TYPE$108*)((V$15419072/*aspel.text.add_node.node*/)))->m1), (V$15419136/*aspel.text.add_node.generation*/));
    ((TYPE$8(*)(TYPE$135,TYPE$109,TYPE$5))(((CORE$DELEGATE)V$15381168/*aspel.text.add_node*/)))((V$15419008/*aspel.text.add_node.list*/), (((TYPE$108*)((V$15419072/*aspel.text.add_node.node*/)))->m2), (V$15419136/*aspel.text.add_node.generation*/));
    {
    return;
    }
    }
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$15419072/*aspel.text.add_node.node*/)),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(295)));
    {
    typedef TYPE$109 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15419072/*aspel.text.add_node.node*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$109, ((((TYPE$133*)((V$15419008/*aspel.text.add_node.list*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$133*)((V$15419008/*aspel.text.add_node.list*/)))->m1))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(296)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$109, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$133*)((V$15419008/*aspel.text.add_node.list*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
}

TYPE$6 V$15381248/*aspel.text.matches_pattern*/(TYPE$119 V$15419200/*aspel.text.matches_pattern.pattern*/, TYPE$1 V$15419264/*aspel.text.matches_pattern.text*/)
{
    {
    TYPE$133 V$15419328/*aspel.text.matches_pattern.current*/ = ([&]()->TYPE$133{
    TYPE$133 TEMP$RESULT;
    { typedef TYPE$117 TEMP$TYPE;
      auto TEMP$VAL = (((TYPE$113*)((V$15419200/*aspel.text.matches_pattern.pattern*/)))->m6);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = (TEMP$VAL); }
    { typedef TYPE$4 TEMP$TYPE;
      auto TEMP$VAL = (CORE$S64)(0ULL);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$4, TEMP$VAL); }
    return TEMP$RESULT;
}());
    TYPE$133 V$15419392/*aspel.text.matches_pattern.next*/ = ([&]()->TYPE$133{
    TYPE$133 TEMP$RESULT;
    { typedef TYPE$117 TEMP$TYPE;
      auto TEMP$VAL = (((TYPE$113*)((V$15419200/*aspel.text.matches_pattern.pattern*/)))->m7);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = (TEMP$VAL); }
    { typedef TYPE$4 TEMP$TYPE;
      auto TEMP$VAL = (CORE$S64)(0ULL);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$4, TEMP$VAL); }
    return TEMP$RESULT;
}());
    {
    TYPE$4 V$15419456/*aspel.text.matches_pattern..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub(((((TYPE$113*)((V$15419200/*aspel.text.matches_pattern.pattern*/)))->m3)),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$15419456/*aspel.text.matches_pattern..i*/ -= FOREACH$STEP;
    while ((V$15419456/*aspel.text.matches_pattern..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$108, ((((TYPE$113*)((V$15419200/*aspel.text.matches_pattern.pattern*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$15419456/*aspel.text.matches_pattern..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(306)).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    TYPE$19 V$15419520/*aspel.text.matches_pattern.generation*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    ((TYPE$8(*)(TYPE$135,TYPE$109,TYPE$5))(((CORE$DELEGATE)V$15381168/*aspel.text.add_node*/)))(((CORE$PTR) &((V$15419328/*aspel.text.matches_pattern.current*/))), (((TYPE$113*)((V$15419200/*aspel.text.matches_pattern.pattern*/)))->m8), CORE$cast_regular(TYPE$5, (V$15419520/*aspel.text.matches_pattern.generation*/)));
    {
    TYPE$4 V$15419584/*aspel.text.matches_pattern..text_iterator*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub((CORE$cast_regular(TYPE$4, ((V$15419264/*aspel.text.matches_pattern.text*/).n))),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$15419584/*aspel.text.matches_pattern..text_iterator*/ -= FOREACH$STEP;
    while ((V$15419584/*aspel.text.matches_pattern..text_iterator*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15419520/*aspel.text.matches_pattern.generation*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15419392/*aspel.text.matches_pattern.next*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$4 V$15419648/*aspel.text.matches_pattern...i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub((((V$15419328/*aspel.text.matches_pattern.current*/).m1)),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$15419648/*aspel.text.matches_pattern...i*/ -= FOREACH$STEP;
    while ((V$15419648/*aspel.text.matches_pattern...i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    TYPE$109 V$15419712/*aspel.text.matches_pattern...node*/ = CORE$ABC(TYPE$109, (((V$15419328/*aspel.text.matches_pattern.current*/).m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$15419648/*aspel.text.matches_pattern...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(317));
    if (CORE$eq(((((TYPE$108*)((V$15419712/*aspel.text.matches_pattern...node*/)))->m0)),(CORE$ABC(TYPE$2, ((V$15419264/*aspel.text.matches_pattern.text*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$15419584/*aspel.text.matches_pattern..text_iterator*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x72\x65\x67\x65\x78\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(318))))) {
    {
    ((TYPE$8(*)(TYPE$135,TYPE$109,TYPE$5))(((CORE$DELEGATE)V$15381168/*aspel.text.add_node*/)))(((CORE$PTR) &((V$15419392/*aspel.text.matches_pattern.next*/))), (((TYPE$108*)((V$15419712/*aspel.text.matches_pattern...node*/)))->m1), CORE$cast_regular(TYPE$5, (V$15419520/*aspel.text.matches_pattern.generation*/)));
    }
    }
    }
    }
    }
    {
    typedef TYPE$133 TEMP$TYPE0;
    typedef TYPE$133 TEMP$TYPE1;
    auto TEMP$VAL0 = ((V$15419392/*aspel.text.matches_pattern.next*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15419328/*aspel.text.matches_pattern.current*/));
    auto TEMP$VAL1 = ((V$15419328/*aspel.text.matches_pattern.current*/));
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&((V$15419392/*aspel.text.matches_pattern.next*/));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$133, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_type_pun(TYPE$133, TEMP$VAL1);
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$135))(((CORE$DELEGATE)V$15381088/*aspel.text.reached_matching_states*/)))(((CORE$PTR) &((V$15419328/*aspel.text.matches_pattern.current*/))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15381328/*aspel.text.destroy_pattern*/(TYPE$119 V$15419776/*aspel.text.destroy_pattern.pattern*/)
{
    {
    CORE$DEL((void*)(((((TYPE$113*)((V$15419776/*aspel.text.destroy_pattern.pattern*/)))->m0)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15419776/*aspel.text.destroy_pattern.pattern*/)))->m6)).a));    CORE$DEL((void*)(((((TYPE$113*)((V$15419776/*aspel.text.destroy_pattern.pattern*/)))->m7)).a));    }
}

TYPE$6 V$15381408/*aspel.text.could_be_parsed_as_integer*/(TYPE$1 V$15419840/*aspel.text.could_be_parsed_as_integer.string*/)
{
    {
    {
    TYPE$1 FOREACH$ARRAY = (V$15419840/*aspel.text.could_be_parsed_as_integer.string*/);
    CORE$U64 V$15420032/*aspel.text.could_be_parsed_as_integer..index*/ = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++V$15420032/*aspel.text.could_be_parsed_as_integer..index*/ < FOREACH$ARRAY.n) {
    TYPE$2 V$15419968/*aspel.text.could_be_parsed_as_integer..byte*/ = ((TYPE$2*) FOREACH$ARRAY.a)[V$15420032/*aspel.text.could_be_parsed_as_integer..index*/];
    {
    if (CORE$land((CORE$eq(((V$15419968/*aspel.text.could_be_parsed_as_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL))))),(CORE$eq((CORE$cast_regular(TYPE$4, (V$15420032/*aspel.text.could_be_parsed_as_integer..index*/))),((CORE$S64)(0ULL)))))) {
    {
    {
    continue;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$15419968/*aspel.text.could_be_parsed_as_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL))))),(CORE$le(((V$15419968/*aspel.text.could_be_parsed_as_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(57ULL))))))) {
    {
    {
    continue;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15381488/*aspel.text.try_parse_integer*/(TYPE$1 V$15420096/*aspel.text.try_parse_integer.string*/, TYPE$139 V$15420160/*aspel.text.try_parse_integer.result*/)
{
    {
    TYPE$6 V$15420224/*aspel.text.try_parse_integer.negative*/ = CORE$false;
    TYPE$4 V$15420288/*aspel.text.try_parse_integer.value*/ = (CORE$S64)(0ULL);
    {
    TYPE$1 FOREACH$ARRAY = (V$15420096/*aspel.text.try_parse_integer.string*/);
    CORE$U64 V$15420480/*aspel.text.try_parse_integer..index*/ = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++V$15420480/*aspel.text.try_parse_integer..index*/ < FOREACH$ARRAY.n) {
    TYPE$2 V$15420416/*aspel.text.try_parse_integer..byte*/ = ((TYPE$2*) FOREACH$ARRAY.a)[V$15420480/*aspel.text.try_parse_integer..index*/];
    {
    if (CORE$land((CORE$eq(((V$15420416/*aspel.text.try_parse_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL))))),(CORE$eq((CORE$cast_regular(TYPE$4, (V$15420480/*aspel.text.try_parse_integer..index*/))),((CORE$S64)(0ULL)))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420224/*aspel.text.try_parse_integer.negative*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$land((CORE$ge(((V$15420416/*aspel.text.try_parse_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL))))),(CORE$le(((V$15420416/*aspel.text.try_parse_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(57ULL))))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$add((CORE$mul(((V$15420288/*aspel.text.try_parse_integer.value*/)),((CORE$S64)(10ULL)))),(CORE$cast_regular(TYPE$4, (V$15420416/*aspel.text.try_parse_integer..byte*/))))),((CORE$S64)(48ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420288/*aspel.text.try_parse_integer.value*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    if ((V$15420224/*aspel.text.try_parse_integer.negative*/)) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((V$15420288/*aspel.text.try_parse_integer.value*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420288/*aspel.text.try_parse_integer.value*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15420288/*aspel.text.try_parse_integer.value*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$15420160/*aspel.text.try_parse_integer.result*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$4 V$15381568/*aspel.text.parse_integer*/(TYPE$1 V$15420544/*aspel.text.parse_integer.string*/)
{
    {
    TYPE$6 V$15420608/*aspel.text.parse_integer.negative*/ = CORE$false;
    TYPE$4 V$15420672/*aspel.text.parse_integer.value*/ = (CORE$S64)(0ULL);
    {
    TYPE$1 FOREACH$ARRAY = (V$15420544/*aspel.text.parse_integer.string*/);
    CORE$U64 V$15420864/*aspel.text.parse_integer..index*/ = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++V$15420864/*aspel.text.parse_integer..index*/ < FOREACH$ARRAY.n) {
    TYPE$2 V$15420800/*aspel.text.parse_integer..byte*/ = ((TYPE$2*) FOREACH$ARRAY.a)[V$15420864/*aspel.text.parse_integer..index*/];
    {
    if (CORE$land((CORE$eq(((V$15420800/*aspel.text.parse_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL))))),(CORE$eq((CORE$cast_regular(TYPE$4, (V$15420864/*aspel.text.parse_integer..index*/))),((CORE$S64)(0ULL)))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420608/*aspel.text.parse_integer.negative*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$land((CORE$ge(((V$15420800/*aspel.text.parse_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL))))),(CORE$le(((V$15420800/*aspel.text.parse_integer..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(57ULL))))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$add((CORE$mul(((V$15420672/*aspel.text.parse_integer.value*/)),((CORE$S64)(10ULL)))),(CORE$cast_regular(TYPE$4, (V$15420800/*aspel.text.parse_integer..byte*/))))),((CORE$S64)(48ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420672/*aspel.text.parse_integer.value*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F42D90_OFF],(CORE$U64) SHARED$STR_F42D90_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(43)));
    }
    }
    }
    }
    }
    }
    }
    if ((V$15420608/*aspel.text.parse_integer.negative*/)) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((V$15420672/*aspel.text.parse_integer.value*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420672/*aspel.text.parse_integer.value*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$15420672/*aspel.text.parse_integer.value*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$15381648/*aspel.text.could_be_parsed_as_float*/(TYPE$1 V$15420928/*aspel.text.could_be_parsed_as_float.string*/)
{
    {
    TYPE$6 V$15420992/*aspel.text.could_be_parsed_as_float.found_decimal*/ = CORE$false;
    {
    TYPE$1 FOREACH$ARRAY = (V$15420928/*aspel.text.could_be_parsed_as_float.string*/);
    CORE$U64 V$15421184/*aspel.text.could_be_parsed_as_float..index*/ = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++V$15421184/*aspel.text.could_be_parsed_as_float..index*/ < FOREACH$ARRAY.n) {
    TYPE$2 V$15421120/*aspel.text.could_be_parsed_as_float..byte*/ = ((TYPE$2*) FOREACH$ARRAY.a)[V$15421184/*aspel.text.could_be_parsed_as_float..index*/];
    {
    if (CORE$land((CORE$eq(((V$15421120/*aspel.text.could_be_parsed_as_float..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL))))),(CORE$eq((CORE$cast_regular(TYPE$4, (V$15421184/*aspel.text.could_be_parsed_as_float..index*/))),((CORE$S64)(0ULL)))))) {
    {
    {
    continue;
    }
    }
    }
    if (CORE$land((CORE$eq(((V$15421120/*aspel.text.could_be_parsed_as_float..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(46ULL))))),((!((V$15420992/*aspel.text.could_be_parsed_as_float.found_decimal*/)))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15420992/*aspel.text.could_be_parsed_as_float.found_decimal*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    continue;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$15421120/*aspel.text.could_be_parsed_as_float..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL))))),(CORE$le(((V$15421120/*aspel.text.could_be_parsed_as_float..byte*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(57ULL))))))) {
    {
    {
    continue;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15381808/*aspel.text.try_parse_float*/(TYPE$1 V$15421248/*aspel.text.try_parse_float.string*/, TYPE$143 V$15421312/*aspel.text.try_parse_float.result*/)
{
    {
    TYPE$10 V$15421376/*aspel.text.try_parse_float.c_string*/ = ((TYPE$10(*)(TYPE$1))(((CORE$DELEGATE)V$51735016/*aspel.c_style_string*/)))((V$15421248/*aspel.text.try_parse_float.string*/));
    if (CORE$eq(((V$15421376/*aspel.text.try_parse_float.c_string*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51(*)(TYPE$19))(((CORE$DELEGATE)V$15381728/*aspel.text.atof*/)))(CORE$cast_regular(TYPE$19, (V$15421376/*aspel.text.try_parse_float.c_string*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$51*)((V$15421312/*aspel.text.try_parse_float.result*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    CORE$DEL((void*)(((V$15421376/*aspel.text.try_parse_float.c_string*/))));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$15421376/*aspel.text.try_parse_float.c_string*/))));    }
}

TYPE$51 V$15381888/*aspel.text.parse_float*/(TYPE$1 V$15421440/*aspel.text.parse_float.string*/)
{
    {
    TYPE$51 V$15421504/*aspel.text.parse_float.value*/;
    CORE$ASSERT(((CORE$BOOL)(((TYPE$6(*)(TYPE$1,TYPE$143))(((CORE$DELEGATE)V$15381808/*aspel.text.try_parse_float*/)))((V$15421440/*aspel.text.parse_float.string*/), ((CORE$PTR) &((V$15421504/*aspel.text.parse_float.value*/)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(81)));
    {
    TYPE$51 RET$VAL = (V$15421504/*aspel.text.parse_float.value*/);
    return RET$VAL;
    }
    }
}

TYPE$1 V$15381968/*aspel.text.integer_to_string*/(TYPE$1 V$15421568/*aspel.text.integer_to_string.string*/, TYPE$6 V$15421632/*aspel.text.integer_to_string.is_negative*/, TYPE$5 V$15421696/*aspel.text.integer_to_string.value*/, TYPE$1 V$15421760/*aspel.text.integer_to_string.base*/)
{
    {
    TYPE$5 V$15421824/*aspel.text.integer_to_string.index*/ = ((V$15421568/*aspel.text.integer_to_string.string*/).n);
    if (CORE$eq(((V$15421696/*aspel.text.integer_to_string.value*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15421824/*aspel.text.integer_to_string.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$2, ((V$15421760/*aspel.text.integer_to_string.base*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(93)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, ((V$15421568/*aspel.text.integer_to_string.string*/)), (CORE$U64)((V$15421824/*aspel.text.integer_to_string.index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(93)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    else {
    {
    while (CORE$ne(((V$15421696/*aspel.text.integer_to_string.value*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15421824/*aspel.text.integer_to_string.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$2, ((V$15421760/*aspel.text.integer_to_string.base*/)), (CORE$U64)(CORE$mod(((V$15421696/*aspel.text.integer_to_string.value*/)),(((V$15421760/*aspel.text.integer_to_string.base*/).n)))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(100)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, ((V$15421568/*aspel.text.integer_to_string.string*/)), (CORE$U64)((V$15421824/*aspel.text.integer_to_string.index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(100)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$15421760/*aspel.text.integer_to_string.base*/).n));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15421696/*aspel.text.integer_to_string.value*/));
    *TEMP$PTR0 = (*TEMP$PTR0) / CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    if ((V$15421632/*aspel.text.integer_to_string.is_negative*/)) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$15421824/*aspel.text.integer_to_string.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, ((V$15421568/*aspel.text.integer_to_string.string*/)), (CORE$U64)((V$15421824/*aspel.text.integer_to_string.index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(108)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    TYPE$1 V$15421888/*aspel.text.integer_to_string.result*/;
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((((V$15421568/*aspel.text.integer_to_string.string*/).a)),(CORE$cast_regular(TYPE$10, (V$15421824/*aspel.text.integer_to_string.index*/)))*(1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15421888/*aspel.text.integer_to_string.result*/).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((((V$15421568/*aspel.text.integer_to_string.string*/).n)),((V$15421824/*aspel.text.integer_to_string.index*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15421888/*aspel.text.integer_to_string.result*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$1 RET$VAL = (V$15421888/*aspel.text.integer_to_string.result*/);
    return RET$VAL;
    }
    }
}

TYPE$1 V$15382048/*aspel.text.integer_to_string*/(TYPE$1 V$15421952/*aspel.text.integer_to_string.string*/, TYPE$6 V$15422016/*aspel.text.integer_to_string.is_negative*/, TYPE$5 V$15422080/*aspel.text.integer_to_string.value*/, TYPE$19 V$15422144/*aspel.text.integer_to_string.base*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$land((CORE$ge(((V$15422144/*aspel.text.integer_to_string.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL))))),(CORE$le(((V$15422144/*aspel.text.integer_to_string.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL)))))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(119)));
    TYPE$1 V$15422208/*aspel.text.integer_to_string.base_digits*/;
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_array_to_ptr(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F43770_OFF],(CORE$U64) SHARED$STR_F43770_LEN)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15422208/*aspel.text.integer_to_string.base_digits*/).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$15422144/*aspel.text.integer_to_string.base*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15422208/*aspel.text.integer_to_string.base_digits*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$1 RET$VAL = ((TYPE$1(*)(TYPE$1,TYPE$6,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$15381968/*aspel.text.integer_to_string*/)))((V$15421952/*aspel.text.integer_to_string.string*/), (V$15422016/*aspel.text.integer_to_string.is_negative*/), (V$15422080/*aspel.text.integer_to_string.value*/), (V$15422208/*aspel.text.integer_to_string.base_digits*/));
    return RET$VAL;
    }
    }
}

TYPE$1 V$15382128/*aspel.text.integer_to_string*/(TYPE$1 V$15422272/*aspel.text.integer_to_string.string*/, TYPE$4 V$15422336/*aspel.text.integer_to_string.value*/, TYPE$1 V$15422400/*aspel.text.integer_to_string.base*/)
{
    {
    if (CORE$lt(((V$15422336/*aspel.text.integer_to_string.value*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$1 RET$VAL = ((TYPE$1(*)(TYPE$1,TYPE$6,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$15381968/*aspel.text.integer_to_string*/)))((V$15422272/*aspel.text.integer_to_string.string*/), CORE$true, CORE$cast_regular(TYPE$5, (-((V$15422336/*aspel.text.integer_to_string.value*/)))), (V$15422400/*aspel.text.integer_to_string.base*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$1 RET$VAL = ((TYPE$1(*)(TYPE$1,TYPE$6,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$15381968/*aspel.text.integer_to_string*/)))((V$15422272/*aspel.text.integer_to_string.string*/), CORE$false, CORE$cast_regular(TYPE$5, (V$15422336/*aspel.text.integer_to_string.value*/)), (V$15422400/*aspel.text.integer_to_string.base*/));
    return RET$VAL;
    }
    }
}

TYPE$1 V$15382208/*aspel.text.integer_to_string*/(TYPE$1 V$15422464/*aspel.text.integer_to_string.string*/, TYPE$4 V$15422528/*aspel.text.integer_to_string.value*/, TYPE$19 V$15422592/*aspel.text.integer_to_string.base*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$land((CORE$ge(((V$15422592/*aspel.text.integer_to_string.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL))))),(CORE$le(((V$15422592/*aspel.text.integer_to_string.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL)))))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x70\x72\x69\x6D\x69\x74\x69\x76\x65\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(135)));
    TYPE$1 V$15422656/*aspel.text.integer_to_string.base_digits*/;
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_array_to_ptr(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F43B30_OFF],(CORE$U64) SHARED$STR_F43B30_LEN)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15422656/*aspel.text.integer_to_string.base_digits*/).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$15422592/*aspel.text.integer_to_string.base*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$15422656/*aspel.text.integer_to_string.base_digits*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$lt(((V$15422528/*aspel.text.integer_to_string.value*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$1 RET$VAL = ((TYPE$1(*)(TYPE$1,TYPE$6,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$15381968/*aspel.text.integer_to_string*/)))((V$15422464/*aspel.text.integer_to_string.string*/), CORE$true, CORE$cast_regular(TYPE$5, (-((V$15422528/*aspel.text.integer_to_string.value*/)))), (V$15422656/*aspel.text.integer_to_string.base_digits*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$1 RET$VAL = ((TYPE$1(*)(TYPE$1,TYPE$6,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$15381968/*aspel.text.integer_to_string*/)))((V$15422464/*aspel.text.integer_to_string.string*/), CORE$false, CORE$cast_regular(TYPE$5, (V$15422528/*aspel.text.integer_to_string.value*/)), (V$15422656/*aspel.text.integer_to_string.base_digits*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15382288/*aspel.text.is_code_point_whitespace*/(TYPE$19 V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)
{
    {
    if (CORE$land((CORE$ge(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(9ULL))))),(CORE$le(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(13ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(32ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(160ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(5760ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8192ULL))))),(CORE$le(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8202ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8239ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8287ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15422912/*aspel.text.is_code_point_whitespace.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(12288ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15382368/*aspel.text.is_code_point_digit*/(TYPE$19 V$15422976/*aspel.text.is_code_point_digit.code_point*/)
{
    {
    if (CORE$land((CORE$ge(((V$15422976/*aspel.text.is_code_point_digit.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(48ULL))))),(CORE$le(((V$15422976/*aspel.text.is_code_point_digit.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(57ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15382448/*aspel.text.is_code_point_word_beginning*/(TYPE$19 V$15423040/*aspel.text.is_code_point_word_beginning.code_point*/)
{
    {
    if (CORE$land((CORE$ge(((V$15423040/*aspel.text.is_code_point_word_beginning.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(65ULL))))),(CORE$le(((V$15423040/*aspel.text.is_code_point_word_beginning.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(90ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$15423040/*aspel.text.is_code_point_word_beginning.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(97ULL))))),(CORE$le(((V$15423040/*aspel.text.is_code_point_word_beginning.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(122ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15423040/*aspel.text.is_code_point_word_beginning.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(95ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15382528/*aspel.text.is_code_point_word_letter*/(TYPE$19 V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)
{
    {
    if (CORE$land((CORE$ge(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(48ULL))))),(CORE$le(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(57ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(65ULL))))),(CORE$le(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(90ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(97ULL))))),(CORE$le(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(122ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$15423104/*aspel.text.is_code_point_word_letter.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(95ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$19 V$15382608/*aspel.text.aspel_tokenization_rule_state_machine*/(TYPE$151 V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/, TYPE$19 V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/)
{
    {
    if (CORE$eq(((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4)),(((ISOLATED$BASE.V$46951520/*aspel.text.TOKEN_STATE_ABORT*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4)),(((ISOLATED$BASE.V$46951328/*aspel.text.TOKEN_STATE_INITIAL*/))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15422720/*aspel.text.TOKEN_STATE_WHITESPACE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$19 SWITCH$TEMP = (((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4);
    if ((SWITCH$TEMP == (((ISOLATED$BASE.V$15422720/*aspel.text.TOKEN_STATE_WHITESPACE*/))))) {
    {
    if (((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15382288/*aspel.text.is_code_point_whitespace*/)))((V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
    }
    if (((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15382448/*aspel.text.is_code_point_word_beginning*/)))((V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15422784/*aspel.text.TOKEN_STATE_WORD*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/);
    return RET$VAL;
    }
    }
    }
    if (((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15382368/*aspel.text.is_code_point_digit*/)))((V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$15422848/*aspel.text.TOKEN_STATE_NUMBER*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951392/*aspel.text.TOKEN_STATE_COMPLETE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((ISOLATED$BASE.V$15422784/*aspel.text.TOKEN_STATE_WORD*/))))) {
    {
    if (((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15382528/*aspel.text.is_code_point_word_letter*/)))((V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/))) {
    {
    {
    TYPE$19 RET$VAL = (V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/);
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951392/*aspel.text.TOKEN_STATE_COMPLETE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    else if ((SWITCH$TEMP == (((ISOLATED$BASE.V$15422848/*aspel.text.TOKEN_STATE_NUMBER*/))))) {
    {
    if (((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15382368/*aspel.text.is_code_point_digit*/)))((V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/))) {
    {
    {
    TYPE$19 RET$VAL = (V$46951136/*aspel.text.aspel_tokenization_rule_state_machine.code_point*/);
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951392/*aspel.text.TOKEN_STATE_COMPLETE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46951072/*aspel.text.aspel_tokenization_rule_state_machine.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    else {}
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F44A70_OFF],(CORE$U64) SHARED$STR_F44A70_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x74\x6F\x6B\x65\x6E\x69\x7A\x65\x72\x5F\x61\x73\x70\x65\x6C\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(117)));
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
}

TYPE$152 V$15382688/*aspel.text.create_tokenization_context*/(TYPE$153 V$46952096/*aspel.text.create_tokenization_context.stream*/)
{
    {
    TYPE$152 V$46952160/*aspel.text.create_tokenization_context.context*/;
    {
    typedef TYPE$153 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46952096/*aspel.text.create_tokenization_context.stream*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46952160/*aspel.text.create_tokenization_context.context*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$153, TEMP$VAL0);
    }
    {
    typedef TYPE$150 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15382608/*aspel.text.aspel_tokenization_rule_state_machine*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46952160/*aspel.text.create_tokenization_context.context*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$150, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951200/*aspel.text.CONTEXT_STATE_INITIAL*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46952160/*aspel.text.create_tokenization_context.context*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46952160/*aspel.text.create_tokenization_context.context*/).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$152 RET$VAL = (V$46952160/*aspel.text.create_tokenization_context.context*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15382768/*aspel.text.set_tokenization_state_machine*/(TYPE$151 V$46952224/*aspel.text.set_tokenization_state_machine.context*/, TYPE$150 V$46952288/*aspel.text.set_tokenization_state_machine.state_machine*/)
{
    {
    {
    typedef TYPE$150 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46952288/*aspel.text.set_tokenization_state_machine.state_machine*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952224/*aspel.text.set_tokenization_state_machine.context*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$150, TEMP$VAL0);
    }
    }
}

TYPE$19 V$15382848/*aspel.text.abort_utf8_reading*/(TYPE$151 V$46952352/*aspel.text.abort_utf8_reading.context*/)
{
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951520/*aspel.text.TOKEN_STATE_ABORT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952352/*aspel.text.abort_utf8_reading.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    ((TYPE$19(*)(TYPE$151,TYPE$19))((((TYPE$152*)((V$46952352/*aspel.text.abort_utf8_reading.context*/)))->m1)))((V$46952352/*aspel.text.abort_utf8_reading.context*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15382928/*aspel.text.read_utf8_from_stream*/(TYPE$151 V$46952416/*aspel.text.read_utf8_from_stream.context*/)
{
    {
    TYPE$1 V$46952480/*aspel.text.read_utf8_from_stream.utf8_sequence*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(4ULL))), (CORE$U64)(1));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$10))(((CORE$DELEGATE)V$15393088/*aspel.io.read_u8*/)))((((TYPE$152*)((V$46952416/*aspel.text.read_utf8_from_stream.context*/)))->m0), ((CORE$PTR) &(CORE$ABC(TYPE$2, ((V$46952480/*aspel.text.read_utf8_from_stream.utf8_sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x74\x6F\x6B\x65\x6E\x69\x7A\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(56)))))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951264/*aspel.text.CONTEXT_STATE_COMPLETE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952416/*aspel.text.read_utf8_from_stream.context*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/));
    return RET$VAL;
    }
    }
    }
    TYPE$2 V$46952544/*aspel.text.read_utf8_from_stream.sequence_length*/ = ((TYPE$2(*)(TYPE$2))(((CORE$DELEGATE)V$15385488/*aspel.text.assume_utf8_sequence_length*/)))(CORE$ABC(TYPE$2, ((V$46952480/*aspel.text.read_utf8_from_stream.utf8_sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x74\x6F\x6B\x65\x6E\x69\x7A\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(62)));
    if (CORE$gt(((V$46952544/*aspel.text.read_utf8_from_stream.sequence_length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$151))(((CORE$DELEGATE)V$15382848/*aspel.text.abort_utf8_reading*/)))((V$46952416/*aspel.text.read_utf8_from_stream.context*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$46952544/*aspel.text.read_utf8_from_stream.sequence_length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL))))) {
    {
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((((TYPE$152*)((V$46952416/*aspel.text.read_utf8_from_stream.context*/)))->m0), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((V$46952480/*aspel.text.read_utf8_from_stream.utf8_sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x74\x6F\x6B\x65\x6E\x69\x7A\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(67))))), CORE$cast_regular(TYPE$4, CORE$sub(((V$46952544/*aspel.text.read_utf8_from_stream.sequence_length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL))))))),(CORE$cast_regular(TYPE$4, CORE$sub(((V$46952544/*aspel.text.read_utf8_from_stream.sequence_length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL)))))))) {
    {
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$151))(((CORE$DELEGATE)V$15382848/*aspel.text.abort_utf8_reading*/)))((V$46952416/*aspel.text.read_utf8_from_stream.context*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    TYPE$19 V$46952608/*aspel.text.read_utf8_from_stream.code_point*/;
    if ((!(((TYPE$6(*)(TYPE$10,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385888/*aspel.text.decode_utf8_sequence*/)))(CORE$cast_array_to_ptr((V$46952480/*aspel.text.read_utf8_from_stream.utf8_sequence*/)), (V$46952544/*aspel.text.read_utf8_from_stream.sequence_length*/), ((CORE$PTR) &((V$46952608/*aspel.text.read_utf8_from_stream.code_point*/))))))) {
    {
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$151))(((CORE$DELEGATE)V$15382848/*aspel.text.abort_utf8_reading*/)))((V$46952416/*aspel.text.read_utf8_from_stream.context*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = (V$46952608/*aspel.text.read_utf8_from_stream.code_point*/);
    return RET$VAL;
    }
    }
}

TYPE$1 V$15383008/*aspel.text.next_token*/(TYPE$151 V$46952672/*aspel.text.next_token.context*/, TYPE$1 V$46952736/*aspel.text.next_token.buffer*/)
{
    {
    if (CORE$eq(((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m3)),(((ISOLATED$BASE.V$46951264/*aspel.text.CONTEXT_STATE_COMPLETE*/))))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951328/*aspel.text.TOKEN_STATE_INITIAL*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$5 V$46952800/*aspel.text.next_token.token_length*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$true) {
    {
    TYPE$19 V$46952864/*aspel.text.next_token..code_point*/;
    if (CORE$ne(((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m5)),(((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m5));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46952864/*aspel.text.next_token..code_point*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$151))(((CORE$DELEGATE)V$15382928/*aspel.text.read_utf8_from_stream*/)))((V$46952672/*aspel.text.next_token.context*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46952864/*aspel.text.next_token..code_point*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    if (CORE$eq(((V$46952864/*aspel.text.next_token..code_point*/)),(((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/))))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    }
    }
    TYPE$19 V$46952928/*aspel.text.next_token..output_code_point*/ = ((TYPE$19(*)(TYPE$151,TYPE$19))((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m1)))((V$46952672/*aspel.text.next_token.context*/), (V$46952864/*aspel.text.next_token..code_point*/));
    if (CORE$ne(((V$46952928/*aspel.text.next_token..output_code_point*/)),(((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/))))) {
    {
    CORE$ASSERT(((CORE$BOOL)(((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15384848/*aspel.text.is_legal_code_point*/)))((V$46952864/*aspel.text.next_token..code_point*/)))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F458F0_OFF],(CORE$U64) SHARED$STR_F458F0_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x74\x6F\x6B\x65\x6E\x69\x7A\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(107)));
    TYPE$2 V$46952992/*aspel.text.next_token...output_sequence_length*/ = ((TYPE$2(*)(TYPE$19))(((CORE$DELEGATE)V$15385568/*aspel.text.get_utf8_sequence_length*/)))((V$46952928/*aspel.text.next_token..output_code_point*/));
    if (CORE$gt((CORE$add(((V$46952800/*aspel.text.next_token.token_length*/)),(CORE$cast_regular(TYPE$5, (V$46952992/*aspel.text.next_token...output_sequence_length*/))))),(((V$46952736/*aspel.text.next_token.buffer*/).n)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46951520/*aspel.text.TOKEN_STATE_ABORT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    ((TYPE$19(*)(TYPE$151,TYPE$19))((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m1)))((V$46952672/*aspel.text.next_token.context*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$19,TYPE$10,TYPE$2))(((CORE$DELEGATE)V$15385808/*aspel.text.encode_utf8_sequence_unchecked*/)))((V$46952928/*aspel.text.next_token..output_code_point*/), ((CORE$PTR) &(CORE$ABC(TYPE$2, ((V$46952736/*aspel.text.next_token.buffer*/)), (CORE$U64)((V$46952800/*aspel.text.next_token.token_length*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x74\x6F\x6B\x65\x6E\x69\x7A\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(117)))), (V$46952992/*aspel.text.next_token...output_sequence_length*/));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46952992/*aspel.text.next_token...output_sequence_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46952800/*aspel.text.next_token.token_length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m4)),(((ISOLATED$BASE.V$46951456/*aspel.text.TOKEN_STATE_ILLEGAL*/))))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m4)),(((ISOLATED$BASE.V$46951264/*aspel.text.CONTEXT_STATE_COMPLETE*/))))) {
    {
    if (CORE$eq(((V$46952928/*aspel.text.next_token..output_code_point*/)),(((ISOLATED$BASE.V$46965216/*aspel.text.SENTINEL*/))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46952864/*aspel.text.next_token..code_point*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$152*)((V$46952672/*aspel.text.next_token.context*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    break;
    }
    }
    }
    }
    }
    TYPE$1 V$46953056/*aspel.text.next_token.token*/;
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$46952736/*aspel.text.next_token.buffer*/).a));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46953056/*aspel.text.next_token.token*/).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46952800/*aspel.text.next_token.token_length*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46953056/*aspel.text.next_token.token*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$1 RET$VAL = (V$46953056/*aspel.text.next_token.token*/);
    return RET$VAL;
    }
    }
}

TYPE$166 V$15383088/*aspel.text.standard_format_provider*/(TYPE$169 V$46954336/*aspel.text.standard_format_provider.value_type*/)
{
    {
    {
    TYPE$169 SWITCH$TEMP = (V$46954336/*aspel.text.standard_format_provider.value_type*/);
    if ((SWITCH$TEMP == (((CORE$TYPEID)(6))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383888/*aspel.text.format_bool*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(170))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(171))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(16))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(4))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(2))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(28))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(19))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(5))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383968/*aspel.text.format_integer*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(172))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15384128/*aspel.text.format_floating_point*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(51))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15384128/*aspel.text.format_floating_point*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(1))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15383808/*aspel.text.format_string*/);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == (((CORE$TYPEID)(173))))) {
    {
    {
    TYPE$166 RET$VAL = ((CORE$DELEGATE)V$15384208/*aspel.text.format_big_integer*/);
    return RET$VAL;
    }
    }
    }
    else {}
    }
    {
    TYPE$166 RET$VAL = CORE$null_delegate;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15383168/*aspel.text.parse_format_item_number*/(TYPE$167 V$46954400/*aspel.text.parse_format_item_number.item*/, TYPE$139 V$46954464/*aspel.text.parse_format_item_number.position*/, TYPE$139 V$46954528/*aspel.text.parse_format_item_number.number*/)
{
    {
    TYPE$4 V$46954592/*aspel.text.parse_format_item_number.pos*/ = (*(TYPE$4*)((V$46954464/*aspel.text.parse_format_item_number.position*/)));
    if (CORE$eq(((V$46954592/*aspel.text.parse_format_item_number.pos*/)),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0).n))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$lor((CORE$lt((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954592/*aspel.text.parse_format_item_number.pos*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(64))),(CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL))))),(CORE$gt((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954592/*aspel.text.parse_format_item_number.pos*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(64))),(CORE$cast_regular(TYPE$2, (CORE$S64)(57ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46954656/*aspel.text.parse_format_item_number.num*/ = CORE$sub((CORE$cast_regular(TYPE$4, CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954592/*aspel.text.parse_format_item_number.pos*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(66)))),((CORE$S64)(48ULL)));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954592/*aspel.text.parse_format_item_number.pos*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$land((CORE$lt(((V$46954592/*aspel.text.parse_format_item_number.pos*/)),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0).n))))),(CORE$land((CORE$ge((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954592/*aspel.text.parse_format_item_number.pos*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(68))),(CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL))))),(CORE$le((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954592/*aspel.text.parse_format_item_number.pos*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(68))),(CORE$cast_regular(TYPE$2, (CORE$S64)(57ULL))))))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$add((CORE$mul(((V$46954656/*aspel.text.parse_format_item_number.num*/)),((CORE$S64)(10ULL)))),(CORE$cast_regular(TYPE$4, CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954400/*aspel.text.parse_format_item_number.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954592/*aspel.text.parse_format_item_number.pos*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(70)))))),((CORE$S64)(48ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954656/*aspel.text.parse_format_item_number.num*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954592/*aspel.text.parse_format_item_number.pos*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46954592/*aspel.text.parse_format_item_number.pos*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46954464/*aspel.text.parse_format_item_number.position*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46954656/*aspel.text.parse_format_item_number.num*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46954528/*aspel.text.parse_format_item_number.number*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15383248/*aspel.text.parse_format_item*/(TYPE$167 V$46954720/*aspel.text.parse_format_item.item*/)
{
    {
    TYPE$4 V$46954784/*aspel.text.parse_format_item.position*/ = (CORE$S64)(0ULL);
    if ((!(((TYPE$6(*)(TYPE$167,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383168/*aspel.text.parse_format_item_number*/)))((V$46954720/*aspel.text.parse_format_item.item*/), ((CORE$PTR) &((V$46954784/*aspel.text.parse_format_item.position*/))), ((CORE$PTR) &((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m2))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46953312/*aspel.text.FORMAT_ITEM_ALIGNMENT_RIGHT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    while (CORE$true) {
    {
    if (CORE$eq(((V$46954784/*aspel.text.parse_format_item.position*/)),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0).n))))) {
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954784/*aspel.text.parse_format_item.position*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(94))),(CORE$cast_regular(TYPE$2, (CORE$S64)(58ULL))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954784/*aspel.text.parse_format_item.position*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$eq(((V$46954784/*aspel.text.parse_format_item.position*/)),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0).n))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0).a)),(CORE$cast_regular(TYPE$10, (V$46954784/*aspel.text.parse_format_item.position*/)))*(1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m1).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, CORE$sub((CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0).n))),((V$46954784/*aspel.text.parse_format_item.position*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m1).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954784/*aspel.text.parse_format_item.position*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(104))),(CORE$cast_regular(TYPE$2, (CORE$S64)(44ULL))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954784/*aspel.text.parse_format_item.position*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    TYPE$6 V$46954848/*aspel.text.parse_format_item.....left*/ = CORE$false;
    TYPE$6 V$46954912/*aspel.text.parse_format_item.....right*/ = CORE$false;
    while (CORE$true) {
    {
    if (CORE$ge(((V$46954784/*aspel.text.parse_format_item.position*/)),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0).n))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954784/*aspel.text.parse_format_item.position*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(115))),(CORE$cast_regular(TYPE$2, (CORE$S64)(43ULL))))) {
    {
    if ((V$46954912/*aspel.text.parse_format_item.....right*/)) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954912/*aspel.text.parse_format_item.....right*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    if ((V$46954848/*aspel.text.parse_format_item.....left*/)) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46953376/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_LEFT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46953312/*aspel.text.FORMAT_ITEM_ALIGNMENT_RIGHT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46954784/*aspel.text.parse_format_item.position*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(125))),(CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL))))) {
    {
    if ((V$46954848/*aspel.text.parse_format_item.....left*/)) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954848/*aspel.text.parse_format_item.....left*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    if ((V$46954912/*aspel.text.parse_format_item.....right*/)) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46953440/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_RIGHT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$46953248/*aspel.text.FORMAT_ITEM_ALIGNMENT_LEFT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    break;
    }
    }
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46954784/*aspel.text.parse_format_item.position*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$167,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383168/*aspel.text.parse_format_item_number*/)))((V$46954720/*aspel.text.parse_format_item.item*/), ((CORE$PTR) &((V$46954784/*aspel.text.parse_format_item.position*/))), ((CORE$PTR) &((((TYPE$165*)((V$46954720/*aspel.text.parse_format_item.item*/)))->m3))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$4 V$15383328/*aspel.text.format*/(TYPE$1 V$46954976/*aspel.text.format.format_string*/, TYPE$34 V$46955040/*aspel.text.format.values*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383568/*aspel.text.format*/)))((V$46979360/*aspel.io.standard_out*/), ((CORE$DELEGATE)V$15383088/*aspel.text.standard_format_provider*/), (V$46954976/*aspel.text.format.format_string*/), (V$46955040/*aspel.text.format.values*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15383408/*aspel.text.format*/(TYPE$153 V$46955104/*aspel.text.format.stream*/, TYPE$1 V$46955168/*aspel.text.format.format_string*/, TYPE$34 V$46955232/*aspel.text.format.values*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383568/*aspel.text.format*/)))((V$46955104/*aspel.text.format.stream*/), ((CORE$DELEGATE)V$15383088/*aspel.text.standard_format_provider*/), (V$46955168/*aspel.text.format.format_string*/), (V$46955232/*aspel.text.format.values*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15383488/*aspel.text.format*/(TYPE$168 V$46955296/*aspel.text.format.provider*/, TYPE$1 V$46955360/*aspel.text.format.format_string*/, TYPE$34 V$46955424/*aspel.text.format.values*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383568/*aspel.text.format*/)))((V$46979360/*aspel.io.standard_out*/), (V$46955296/*aspel.text.format.provider*/), (V$46955360/*aspel.text.format.format_string*/), (V$46955424/*aspel.text.format.values*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15383568/*aspel.text.format*/(TYPE$153 V$46955488/*aspel.text.format.stream*/, TYPE$168 V$46955552/*aspel.text.format.provider*/, TYPE$1 V$46955616/*aspel.text.format.format*/, TYPE$34 V$46955680/*aspel.text.format.values*/)
{
    {
    TYPE$4 V$46955744/*aspel.text.format.items_written*/ = (CORE$S64)(0ULL);
    TYPE$4 V$46955808/*aspel.text.format.format_item*/ = (-((CORE$S64)(1ULL)));
    TYPE$4 V$46955872/*aspel.text.format.i*/ = (CORE$S64)(0ULL);
    while (CORE$lt(((V$46955872/*aspel.text.format.i*/)),(CORE$cast_regular(TYPE$4, ((V$46955616/*aspel.text.format.format*/).n))))) {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((V$46955616/*aspel.text.format.format*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46955872/*aspel.text.format.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(171))),(CORE$cast_regular(TYPE$2, (CORE$S64)(92ULL))))) {
    {
    if (CORE$ge((CORE$add(((V$46955872/*aspel.text.format.i*/)),((CORE$S64)(1ULL)))),(CORE$cast_regular(TYPE$4, ((V$46955616/*aspel.text.format.format*/).n))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$46955808/*aspel.text.format.format_item*/)),((-((CORE$S64)(1ULL)))))) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46955488/*aspel.text.format.stream*/), CORE$ABC(TYPE$2, ((V$46955616/*aspel.text.format.format*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$46955872/*aspel.text.format.i*/)),((CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(177)))))) {
    {
    {
    TYPE$4 RET$VAL = (V$46955744/*aspel.text.format.items_written*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955744/*aspel.text.format.items_written*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(2ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955872/*aspel.text.format.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((V$46955616/*aspel.text.format.format*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46955872/*aspel.text.format.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(184))),(CORE$cast_regular(TYPE$2, (CORE$S64)(123ULL))))) {
    {
    if (CORE$ne(((V$46955808/*aspel.text.format.format_item*/)),((-((CORE$S64)(1ULL)))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$46955872/*aspel.text.format.i*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955808/*aspel.text.format.format_item*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955872/*aspel.text.format.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((V$46955616/*aspel.text.format.format*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46955872/*aspel.text.format.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(190))),(CORE$cast_regular(TYPE$2, (CORE$S64)(125ULL))))) {
    {
    if (CORE$eq(((V$46955808/*aspel.text.format.format_item*/)),((-((CORE$S64)(1ULL)))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    TYPE$165 V$46955936/*aspel.text.format.....item*/;
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((((V$46955616/*aspel.text.format.format*/).a)),(CORE$cast_regular(TYPE$10, (V$46955808/*aspel.text.format.format_item*/)))*(1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((V$46955936/*aspel.text.format.....item*/).m0).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, CORE$sub(((V$46955872/*aspel.text.format.i*/)),((V$46955808/*aspel.text.format.format_item*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((V$46955936/*aspel.text.format.....item*/).m0).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if ((!(((TYPE$6(*)(TYPE$167))(((CORE$DELEGATE)V$15383248/*aspel.text.parse_format_item*/)))(((CORE$PTR) &((V$46955936/*aspel.text.format.....item*/))))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ge((((V$46955936/*aspel.text.format.....item*/).m2)),(CORE$cast_regular(TYPE$4, ((V$46955680/*aspel.text.format.values*/).n))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$35 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$35, ((V$46955680/*aspel.text.format.values*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, ((V$46955936/*aspel.text.format.....item*/).m2))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(201)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46955936/*aspel.text.format.....item*/).m5));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    TYPE$166 V$46956000/*aspel.text.format.....function*/ = ((TYPE$166(*)(TYPE$169))((V$46955552/*aspel.text.format.provider*/)))((((V$46955936/*aspel.text.format.....item*/).m5).t));
    if (CORE$eq(((V$46956000/*aspel.text.format.....function*/)),(CORE$null_delegate))) {
    {
    }
    }
    else {
    {
    TYPE$19 V$46956064/*aspel.text.format......result*/ = ((TYPE$19(*)(TYPE$153,TYPE$167))((V$46956000/*aspel.text.format.....function*/)))((V$46955488/*aspel.text.format.stream*/), ((CORE$PTR) &((V$46955936/*aspel.text.format.....item*/))));
    if (CORE$eq(((V$46956064/*aspel.text.format......result*/)),(((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$46956064/*aspel.text.format......result*/)),(((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/))))) {
    {
    {
    TYPE$4 RET$VAL = (V$46955744/*aspel.text.format.items_written*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955744/*aspel.text.format.items_written*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955808/*aspel.text.format.format_item*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955872/*aspel.text.format.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46955808/*aspel.text.format.format_item*/)),((-((CORE$S64)(1ULL)))))) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46955488/*aspel.text.format.stream*/), CORE$ABC(TYPE$2, ((V$46955616/*aspel.text.format.format*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46955872/*aspel.text.format.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(223)))))) {
    {
    {
    TYPE$4 RET$VAL = (V$46955744/*aspel.text.format.items_written*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955744/*aspel.text.format.items_written*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46955872/*aspel.text.format.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
    if (CORE$ne(((V$46955808/*aspel.text.format.format_item*/)),((-((CORE$S64)(1ULL)))))) {
    {
    {
    TYPE$4 RET$VAL = ((ISOLATED$BASE.V$46953120/*aspel.text.FORMAT_ERROR*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$46955744/*aspel.text.format.items_written*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15383648/*aspel.text.determine_padding*/(TYPE$167 V$46956128/*aspel.text.determine_padding.item*/, TYPE$4 V$46956192/*aspel.text.determine_padding.width*/, TYPE$139 V$46956256/*aspel.text.determine_padding.padding_left*/, TYPE$139 V$46956320/*aspel.text.determine_padding.padding_right*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ge(((((TYPE$165*)((V$46956128/*aspel.text.determine_padding.item*/)))->m3)),((CORE$S64)(0ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(236)));
    CORE$ASSERT(((CORE$BOOL)(CORE$ge(((V$46956192/*aspel.text.determine_padding.width*/)),((CORE$S64)(0ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(237)));
    if (CORE$ge(((V$46956192/*aspel.text.determine_padding.width*/)),((((TYPE$165*)((V$46956128/*aspel.text.determine_padding.item*/)))->m3)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956256/*aspel.text.determine_padding.padding_left*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956320/*aspel.text.determine_padding.padding_right*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    return;
    }
    }
    }
    TYPE$4 V$46956384/*aspel.text.determine_padding.padding*/ = CORE$sub(((((TYPE$165*)((V$46956128/*aspel.text.determine_padding.item*/)))->m3)),((V$46956192/*aspel.text.determine_padding.width*/)));
    {
    TYPE$19 SWITCH$TEMP = (((TYPE$165*)((V$46956128/*aspel.text.determine_padding.item*/)))->m4);
    if ((SWITCH$TEMP == (((ISOLATED$BASE.V$46953248/*aspel.text.FORMAT_ITEM_ALIGNMENT_LEFT*/))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956256/*aspel.text.determine_padding.padding_left*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46956384/*aspel.text.determine_padding.padding*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956320/*aspel.text.determine_padding.padding_right*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == (((ISOLATED$BASE.V$46953312/*aspel.text.FORMAT_ITEM_ALIGNMENT_RIGHT*/))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46956384/*aspel.text.determine_padding.padding*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956256/*aspel.text.determine_padding.padding_left*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956320/*aspel.text.determine_padding.padding_right*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == (((ISOLATED$BASE.V$46953376/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_LEFT*/))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$div(((V$46956384/*aspel.text.determine_padding.padding*/)),((CORE$S64)(2ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956256/*aspel.text.determine_padding.padding_left*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$div(((V$46956384/*aspel.text.determine_padding.padding*/)),((CORE$S64)(2ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956320/*aspel.text.determine_padding.padding_right*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$ne((CORE$mod(((V$46956384/*aspel.text.determine_padding.padding*/)),((CORE$S64)(2ULL)))),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956320/*aspel.text.determine_padding.padding_right*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else if ((SWITCH$TEMP == (((ISOLATED$BASE.V$46953440/*aspel.text.FORMAT_ITEM_ALIGNMENT_CENTER_RIGHT*/))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$div(((V$46956384/*aspel.text.determine_padding.padding*/)),((CORE$S64)(2ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956256/*aspel.text.determine_padding.padding_left*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$div(((V$46956384/*aspel.text.determine_padding.padding*/)),((CORE$S64)(2ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956320/*aspel.text.determine_padding.padding_right*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$ne((CORE$mod(((V$46956384/*aspel.text.determine_padding.padding*/)),((CORE$S64)(2ULL)))),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$4*)((V$46956256/*aspel.text.determine_padding.padding_left*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F48310_OFF],(CORE$U64) SHARED$STR_F48310_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(274)));
    }
    }
    }
    }
}

TYPE$6 V$15383728/*aspel.text.write_padding*/(TYPE$153 V$46956448/*aspel.text.write_padding.stream*/, TYPE$167 V$46956512/*aspel.text.write_padding.item*/, TYPE$4 V$46956576/*aspel.text.write_padding.padding*/)
{
    {
    {
    TYPE$4 V$46956640/*aspel.text.write_padding..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub(((V$46956576/*aspel.text.write_padding.padding*/)),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46956640/*aspel.text.write_padding..i*/ -= FOREACH$STEP;
    while ((V$46956640/*aspel.text.write_padding..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46956448/*aspel.text.write_padding.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(32ULL)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$19 V$15383808/*aspel.text.format_string*/(TYPE$153 V$46956704/*aspel.text.format_string.stream*/, TYPE$167 V$46956768/*aspel.text.format_string.item*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((((TYPE$165*)((V$46956768/*aspel.text.format_string.item*/)))->m5).t)),(((CORE$TYPEID)(1)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(288)));
    TYPE$1 V$46956832/*aspel.text.format_string.string*/ = (*CORE$UNPACK<TYPE$1*>((((TYPE$165*)((V$46956768/*aspel.text.format_string.item*/)))->m5)));
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$165*)((V$46956768/*aspel.text.format_string.item*/)))->m1))),(CORE$null_pointer))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46956896/*aspel.text.format_string.padding_left*/;
    TYPE$4 V$46956960/*aspel.text.format_string.padding_right*/;
    ((TYPE$8(*)(TYPE$167,TYPE$4,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383648/*aspel.text.determine_padding*/)))((V$46956768/*aspel.text.format_string.item*/), CORE$cast_regular(TYPE$4, ((V$46956832/*aspel.text.format_string.string*/).n)), ((CORE$PTR) &((V$46956896/*aspel.text.format_string.padding_left*/))), ((CORE$PTR) &((V$46956960/*aspel.text.format_string.padding_right*/))));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46956704/*aspel.text.format_string.stream*/), (V$46956768/*aspel.text.format_string.item*/), (V$46956896/*aspel.text.format_string.padding_left*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$46956704/*aspel.text.format_string.stream*/), CORE$cast_regular(TYPE$7, ((V$46956832/*aspel.text.format_string.string*/).a)), CORE$cast_regular(TYPE$4, ((V$46956832/*aspel.text.format_string.string*/).n)))),(CORE$cast_regular(TYPE$4, ((V$46956832/*aspel.text.format_string.string*/).n))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46956704/*aspel.text.format_string.stream*/), (V$46956768/*aspel.text.format_string.item*/), (V$46956960/*aspel.text.format_string.padding_right*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15383888/*aspel.text.format_bool*/(TYPE$153 V$46957024/*aspel.text.format_bool.stream*/, TYPE$167 V$46957088/*aspel.text.format_bool.item*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((((TYPE$165*)((V$46957088/*aspel.text.format_bool.item*/)))->m5).t)),(((CORE$TYPEID)(6)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(312)));
    TYPE$6 V$46957152/*aspel.text.format_bool.value*/ = CORE$UNPACK<TYPE$6>((((TYPE$165*)((V$46957088/*aspel.text.format_bool.item*/)))->m5));
    TYPE$1 V$46957216/*aspel.text.format_bool.string*/;
    { (V$46957216/*aspel.text.format_bool.string*/).a = (0); }
{ (V$46957216/*aspel.text.format_bool.string*/).n = (0); }
    if ((V$46957152/*aspel.text.format_bool.value*/)) {
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F48A30_OFF],(CORE$U64) SHARED$STR_F48A30_LEN));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957216/*aspel.text.format_bool.string*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F48A70_OFF],(CORE$U64) SHARED$STR_F48A70_LEN));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957216/*aspel.text.format_bool.string*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$165*)((V$46957088/*aspel.text.format_bool.item*/)))->m1))),(CORE$null_pointer))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46957280/*aspel.text.format_bool.padding_left*/;
    TYPE$4 V$46957344/*aspel.text.format_bool.padding_right*/;
    ((TYPE$8(*)(TYPE$167,TYPE$4,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383648/*aspel.text.determine_padding*/)))((V$46957088/*aspel.text.format_bool.item*/), CORE$cast_regular(TYPE$4, ((V$46957216/*aspel.text.format_bool.string*/).n)), ((CORE$PTR) &((V$46957280/*aspel.text.format_bool.padding_left*/))), ((CORE$PTR) &((V$46957344/*aspel.text.format_bool.padding_right*/))));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46957024/*aspel.text.format_bool.stream*/), (V$46957088/*aspel.text.format_bool.item*/), (V$46957280/*aspel.text.format_bool.padding_left*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$46957024/*aspel.text.format_bool.stream*/), CORE$cast_regular(TYPE$7, ((V$46957216/*aspel.text.format_bool.string*/).a)), CORE$cast_regular(TYPE$4, ((V$46957216/*aspel.text.format_bool.string*/).n)))),(CORE$cast_regular(TYPE$4, ((V$46957216/*aspel.text.format_bool.string*/).n))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46957024/*aspel.text.format_bool.stream*/), (V$46957088/*aspel.text.format_bool.item*/), (V$46957344/*aspel.text.format_bool.padding_right*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15383968/*aspel.text.format_integer*/(TYPE$153 V$46957408/*aspel.text.format_integer.stream*/, TYPE$167 V$46957472/*aspel.text.format_integer.item*/)
{
    {
    TYPE$5 V$46957536/*aspel.text.format_integer.integer*/;
    TYPE$6 V$46957600/*aspel.text.format_integer.negative*/ = CORE$false;
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(2))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, CORE$UNPACK<TYPE$2>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957536/*aspel.text.format_integer.integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(28))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, CORE$UNPACK<TYPE$28>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957536/*aspel.text.format_integer.integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(19))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, CORE$UNPACK<TYPE$19>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957536/*aspel.text.format_integer.integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(5))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$5>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957536/*aspel.text.format_integer.integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    TYPE$4 V$46957664/*aspel.text.format_integer.....signed_integer*/;
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(170))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, CORE$UNPACK<TYPE$170>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957664/*aspel.text.format_integer.....signed_integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(171))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, CORE$UNPACK<TYPE$171>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957664/*aspel.text.format_integer.....signed_integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(16))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, CORE$UNPACK<TYPE$16>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957664/*aspel.text.format_integer.....signed_integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5).t)),(((CORE$TYPEID)(4))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$4>((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m5)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957664/*aspel.text.format_integer.....signed_integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(353)));
    }
    }
    }
    }
    }
    }
    }
    }
    if (CORE$lt(((V$46957664/*aspel.text.format_integer.....signed_integer*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957600/*aspel.text.format_integer.negative*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((V$46957664/*aspel.text.format_integer.....signed_integer*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957664/*aspel.text.format_integer.....signed_integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46957664/*aspel.text.format_integer.....signed_integer*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957536/*aspel.text.format_integer.integer*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
    TYPE$19 V$46957728/*aspel.text.format_integer.base*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    TYPE$6 V$46957792/*aspel.text.format_integer.digits_capital*/ = CORE$false;
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m1))),(CORE$null_pointer))) {
    {
    {
    TYPE$4 V$46957856/*aspel.text.format_integer...i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub((CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m1).n))),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46957856/*aspel.text.format_integer...i*/ -= FOREACH$STEP;
    while ((V$46957856/*aspel.text.format_integer...i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if (CORE$lor((CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46957856/*aspel.text.format_integer...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(371))),(CORE$cast_regular(TYPE$2, (CORE$S64)(120ULL))))),(CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46957856/*aspel.text.format_integer...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(371))),(CORE$cast_regular(TYPE$2, (CORE$S64)(88ULL))))))) {
    {
    if (CORE$ne(((V$46957728/*aspel.text.format_integer.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957728/*aspel.text.format_integer.base*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46957472/*aspel.text.format_integer.item*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46957856/*aspel.text.format_integer...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(375))),(CORE$cast_regular(TYPE$2, (CORE$S64)(88ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957792/*aspel.text.format_integer.digits_capital*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    TYPE$1 V$46957920/*aspel.text.format_integer.digits*/;
    if (CORE$eq(((V$46957728/*aspel.text.format_integer.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))))) {
    {
    if ((V$46957792/*aspel.text.format_integer.digits_capital*/)) {
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F49610_OFF],(CORE$U64) SHARED$STR_F49610_LEN));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957920/*aspel.text.format_integer.digits*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F49650_OFF],(CORE$U64) SHARED$STR_F49650_LEN));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957920/*aspel.text.format_integer.digits*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((V$46957728/*aspel.text.format_integer.base*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(390)));
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_F496D0_OFF],(CORE$U64) SHARED$STR_F496D0_LEN));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957920/*aspel.text.format_integer.digits*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46957728/*aspel.text.format_integer.base*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    TYPE$1 V$46957984/*aspel.text.format_integer.string*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL))), (CORE$U64)(1));
    TYPE$1 V$46958048/*aspel.text.format_integer.formatted*/ = ((TYPE$1(*)(TYPE$1,TYPE$6,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$15381968/*aspel.text.integer_to_string*/)))((V$46957984/*aspel.text.format_integer.string*/), (V$46957600/*aspel.text.format_integer.negative*/), (V$46957536/*aspel.text.format_integer.integer*/), (V$46957920/*aspel.text.format_integer.digits*/));
    TYPE$4 V$46958112/*aspel.text.format_integer.padding_left*/;
    TYPE$4 V$46958176/*aspel.text.format_integer.padding_right*/;
    ((TYPE$8(*)(TYPE$167,TYPE$4,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383648/*aspel.text.determine_padding*/)))((V$46957472/*aspel.text.format_integer.item*/), CORE$cast_regular(TYPE$4, ((V$46958048/*aspel.text.format_integer.formatted*/).n)), ((CORE$PTR) &((V$46958112/*aspel.text.format_integer.padding_left*/))), ((CORE$PTR) &((V$46958176/*aspel.text.format_integer.padding_right*/))));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46957408/*aspel.text.format_integer.stream*/), (V$46957472/*aspel.text.format_integer.item*/), (V$46958112/*aspel.text.format_integer.padding_left*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$46957408/*aspel.text.format_integer.stream*/), CORE$cast_regular(TYPE$7, ((V$46958048/*aspel.text.format_integer.formatted*/).a)), CORE$cast_regular(TYPE$4, ((V$46958048/*aspel.text.format_integer.formatted*/).n)))),(CORE$cast_regular(TYPE$4, ((V$46958048/*aspel.text.format_integer.formatted*/).n))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46957408/*aspel.text.format_integer.stream*/), (V$46957472/*aspel.text.format_integer.item*/), (V$46958176/*aspel.text.format_integer.padding_right*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15384128/*aspel.text.format_floating_point*/(TYPE$153 V$46958240/*aspel.text.format_floating_point.stream*/, TYPE$167 V$46958304/*aspel.text.format_floating_point.item*/)
{
    {
    TYPE$51 V$46958368/*aspel.text.format_floating_point.floating_point*/;
    if (CORE$eq((((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m5).t)),(((CORE$TYPEID)(172))))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, CORE$UNPACK<TYPE$172>((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958368/*aspel.text.format_floating_point.floating_point*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq((((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m5).t)),(((CORE$TYPEID)(51))))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$51>((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m5)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958368/*aspel.text.format_floating_point.floating_point*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    else {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(426)));
    }
    }
    }
    }
    TYPE$4 V$46958432/*aspel.text.format_floating_point.min_digits_left*/ = (CORE$S64)(1ULL);
    TYPE$4 V$46958496/*aspel.text.format_floating_point.max_digits_right*/ = (CORE$S64)(4ULL);
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m1))),(CORE$null_pointer))) {
    {
    TYPE$4 V$46958560/*aspel.text.format_floating_point..position*/ = CORE$sub((CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m1).a))),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m0).a))));
    TYPE$6 V$46958624/*aspel.text.format_floating_point..point*/ = CORE$false;
    TYPE$6 V$46958688/*aspel.text.format_floating_point..left*/ = CORE$false;
    TYPE$6 V$46958752/*aspel.text.format_floating_point..right*/ = CORE$false;
    while (CORE$lt(((V$46958560/*aspel.text.format_floating_point..position*/)),(CORE$cast_regular(TYPE$4, ((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m0).n))))) {
    {
    if (CORE$eq((CORE$ABC(TYPE$2, ((((TYPE$165*)((V$46958304/*aspel.text.format_floating_point.item*/)))->m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46958560/*aspel.text.format_floating_point..position*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(439))),(CORE$cast_regular(TYPE$2, (CORE$S64)(46ULL))))) {
    {
    if ((V$46958624/*aspel.text.format_floating_point..point*/)) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958624/*aspel.text.format_floating_point..point*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958688/*aspel.text.format_floating_point..left*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958560/*aspel.text.format_floating_point..position*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$land(((V$46958688/*aspel.text.format_floating_point..left*/)),((V$46958752/*aspel.text.format_floating_point..right*/)))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    else {
    {
    if ((!((V$46958688/*aspel.text.format_floating_point..left*/)))) {
    {
    if ((!(((TYPE$6(*)(TYPE$167,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383168/*aspel.text.parse_format_item_number*/)))((V$46958304/*aspel.text.format_floating_point.item*/), ((CORE$PTR) &((V$46958560/*aspel.text.format_floating_point..position*/))), ((CORE$PTR) &((V$46958432/*aspel.text.format_floating_point.min_digits_left*/))))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958688/*aspel.text.format_floating_point..left*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    if ((!(((TYPE$6(*)(TYPE$167,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383168/*aspel.text.parse_format_item_number*/)))((V$46958304/*aspel.text.format_floating_point.item*/), ((CORE$PTR) &((V$46958560/*aspel.text.format_floating_point..position*/))), ((CORE$PTR) &((V$46958496/*aspel.text.format_floating_point.max_digits_right*/))))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954144/*aspel.text.FORMAT_FUNCTION_INVALID*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46958752/*aspel.text.format_floating_point..right*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    TYPE$1 V$46958816/*aspel.text.format_floating_point.buffer*/ = CORE$PUSHARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(350ULL))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    TYPE$1 V$46958880/*aspel.text.format_floating_point.string*/;
    ((TYPE$8(*)(TYPE$183,TYPE$51,TYPE$1,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15384048/*aspel.text.aspel_lazy_float_to_string*/)))(((CORE$PTR) &((V$46958880/*aspel.text.format_floating_point.string*/))), (V$46958368/*aspel.text.format_floating_point.floating_point*/), (V$46958816/*aspel.text.format_floating_point.buffer*/), CORE$cast_regular(TYPE$16, (V$46958432/*aspel.text.format_floating_point.min_digits_left*/)), CORE$cast_regular(TYPE$16, (V$46958496/*aspel.text.format_floating_point.max_digits_right*/)));
    TYPE$4 V$46958944/*aspel.text.format_floating_point.padding_left*/;
    TYPE$4 V$46959008/*aspel.text.format_floating_point.padding_right*/;
    ((TYPE$8(*)(TYPE$167,TYPE$4,TYPE$139,TYPE$139))(((CORE$DELEGATE)V$15383648/*aspel.text.determine_padding*/)))((V$46958304/*aspel.text.format_floating_point.item*/), CORE$cast_regular(TYPE$4, ((V$46958880/*aspel.text.format_floating_point.string*/).n)), ((CORE$PTR) &((V$46958944/*aspel.text.format_floating_point.padding_left*/))), ((CORE$PTR) &((V$46959008/*aspel.text.format_floating_point.padding_right*/))));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46958240/*aspel.text.format_floating_point.stream*/), (V$46958304/*aspel.text.format_floating_point.item*/), (V$46958944/*aspel.text.format_floating_point.padding_left*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$46958240/*aspel.text.format_floating_point.stream*/), CORE$cast_regular(TYPE$7, ((V$46958880/*aspel.text.format_floating_point.string*/).a)), CORE$cast_regular(TYPE$4, ((V$46958880/*aspel.text.format_floating_point.string*/).n)))),(CORE$cast_regular(TYPE$4, ((V$46958880/*aspel.text.format_floating_point.string*/).n))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$167,TYPE$4))(((CORE$DELEGATE)V$15383728/*aspel.text.write_padding*/)))((V$46958240/*aspel.text.format_floating_point.stream*/), (V$46958304/*aspel.text.format_floating_point.item*/), (V$46959008/*aspel.text.format_floating_point.padding_right*/))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15384208/*aspel.text.format_big_integer*/(TYPE$153 V$46959072/*aspel.text.format_big_integer.stream*/, TYPE$167 V$46959136/*aspel.text.format_big_integer.item*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((((TYPE$165*)((V$46959136/*aspel.text.format_big_integer.item*/)))->m5).t)),(((CORE$TYPEID)(173)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(484)));
    TYPE$173 V$46959200/*aspel.text.format_big_integer.big*/ = (*CORE$UNPACK<TYPE$173*>((((TYPE$165*)((V$46959136/*aspel.text.format_big_integer.item*/)))->m5)));
    if (CORE$ge((((V$46959200/*aspel.text.format_big_integer.big*/).m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46959072/*aspel.text.format_big_integer.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(43ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46959072/*aspel.text.format_big_integer.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(45ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    if (CORE$eq((((V$46959200/*aspel.text.format_big_integer.big*/).m2)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$4 V$46959264/*aspel.text.format_big_integer...bit*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)((CORE$S64)(31ULL));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46959264/*aspel.text.format_big_integer...bit*/ -= FOREACH$STEP;
    while ((V$46959264/*aspel.text.format_big_integer...bit*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46959072/*aspel.text.format_big_integer.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    {
    TYPE$4 V$46959328/*aspel.text.format_big_integer..index*/ = (TYPE$4)((CORE$S64)(1ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, ((V$46959200/*aspel.text.format_big_integer.big*/).m2)));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46959328/*aspel.text.format_big_integer..index*/ -= FOREACH$STEP;
    while ((V$46959328/*aspel.text.format_big_integer..index*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if (CORE$gt(((V$46959328/*aspel.text.format_big_integer..index*/)),((CORE$S64)(1ULL)))) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46959072/*aspel.text.format_big_integer.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(32ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    TYPE$19 V$46959392/*aspel.text.format_big_integer..value*/ = CORE$ABC(TYPE$19, (((V$46959200/*aspel.text.format_big_integer.big*/).m1)), (CORE$U64)(CORE$sub((((V$46959200/*aspel.text.format_big_integer.big*/).m2)),(CORE$cast_regular(TYPE$5, (V$46959328/*aspel.text.format_big_integer..index*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(511));
    {
    TYPE$4 V$46959456/*aspel.text.format_big_integer...bit*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)((CORE$S64)(31ULL));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46959456/*aspel.text.format_big_integer...bit*/ -= FOREACH$STEP;
    while ((V$46959456/*aspel.text.format_big_integer...bit*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if (CORE$ne((CORE$band(((V$46959392/*aspel.text.format_big_integer..value*/)),(CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$sub(((CORE$S64)(31ULL)),((V$46959456/*aspel.text.format_big_integer...bit*/))))))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46959072/*aspel.text.format_big_integer.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(49ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$2))(((CORE$DELEGATE)V$15393888/*aspel.io.write_u8*/)))((V$46959072/*aspel.text.format_big_integer.stream*/), CORE$cast_regular(TYPE$2, (CORE$S64)(48ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954080/*aspel.text.FORMAT_FUNCTION_FAILED*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    {
    TYPE$19 RET$VAL = ((ISOLATED$BASE.V$46954016/*aspel.text.FORMAT_FUNCTION_OK*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15384288/*aspel.text.try_make_string*/(TYPE$1 V$46959648/*aspel.text.try_make_string.source*/, TYPE$187 V$46959712/*aspel.text.try_make_string.result*/)
{
    {
    TYPE$5 V$46959776/*aspel.text.try_make_string.legal_length*/;
    { (V$46959776/*aspel.text.try_make_string.legal_length*/) = (0); }
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$54,TYPE$54))(((CORE$DELEGATE)V$15386048/*aspel.text.get_utf8_length*/)))(((V$46959648/*aspel.text.try_make_string.source*/).a), ((V$46959648/*aspel.text.try_make_string.source*/).n), ((CORE$PTR) &((V$46959776/*aspel.text.try_make_string.legal_length*/))), CORE$cast_regular(TYPE$54, CORE$null_pointer));
    if (CORE$ne(((V$46959776/*aspel.text.try_make_string.legal_length*/)),(((V$46959648/*aspel.text.try_make_string.source*/).n)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$185 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$185{
    TYPE$185 TEMP$RESULT;
    { typedef TYPE$1 TEMP$TYPE;
      auto TEMP$VAL = (V$46959648/*aspel.text.try_make_string.source*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = (TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$185*)((V$46959712/*aspel.text.try_make_string.result*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$185, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$185 V$15384368/*aspel.text.make_string*/(TYPE$1 V$46959840/*aspel.text.make_string.source*/)
{
    {
    TYPE$5 V$46959904/*aspel.text.make_string.legal_length*/;
    { (V$46959904/*aspel.text.make_string.legal_length*/) = (0); }
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$54,TYPE$54))(((CORE$DELEGATE)V$15386048/*aspel.text.get_utf8_length*/)))(((V$46959840/*aspel.text.make_string.source*/).a), ((V$46959840/*aspel.text.make_string.source*/).n), ((CORE$PTR) &((V$46959904/*aspel.text.make_string.legal_length*/))), CORE$cast_regular(TYPE$54, CORE$null_pointer));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((V$46959904/*aspel.text.make_string.legal_length*/)),(((V$46959840/*aspel.text.make_string.source*/).n))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2CF2A98_OFF],(CORE$U64) SHARED$STR_2CF2A98_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x5F\x73\x74\x72\x69\x6E\x67\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(39)));
    {
    TYPE$185 RET$VAL = ([&]()->TYPE$185{
    TYPE$185 TEMP$RESULT;
    { typedef TYPE$1 TEMP$TYPE;
      auto TEMP$VAL = (V$46959840/*aspel.text.make_string.source*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = (TEMP$VAL); }
    return TEMP$RESULT;
}());
    return RET$VAL;
    }
    }
}

TYPE$185 V$15384448/*aspel.text.make_string_unchecked*/(TYPE$1 V$46959968/*aspel.text.make_string_unchecked.source*/)
{
    {
    {
    TYPE$185 RET$VAL = ([&]()->TYPE$185{
    TYPE$185 TEMP$RESULT;
    { typedef TYPE$1 TEMP$TYPE;
      auto TEMP$VAL = (V$46959968/*aspel.text.make_string_unchecked.source*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = (TEMP$VAL); }
    return TEMP$RESULT;
}());
    return RET$VAL;
    }
    }
}

TYPE$185 V$15384528/*aspel.text.copy_string*/(TYPE$185 V$46960032/*aspel.text.copy_string.string*/)
{
    {
    TYPE$185 V$46960096/*aspel.text.copy_string.new_string*/;
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARRINIT((CORE$U64)((((V$46960032/*aspel.text.copy_string.string*/).m0).n)), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46960096/*aspel.text.copy_string.new_string*/).m0));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$ne((CORE$cast_array_to_ptr(((V$46960096/*aspel.text.copy_string.new_string*/).m0))),(CORE$null_pointer)))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2CF2C58_OFF],(CORE$U64) SHARED$STR_2CF2C58_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x5F\x73\x74\x72\x69\x6E\x67\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(59)));
    {
    TYPE$4 V$46960160/*aspel.text.copy_string..index*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub((CORE$cast_regular(TYPE$4, (((V$46960032/*aspel.text.copy_string.string*/).m0).n))),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46960160/*aspel.text.copy_string..index*/ -= FOREACH$STEP;
    while ((V$46960160/*aspel.text.copy_string..index*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$2, (((V$46960032/*aspel.text.copy_string.string*/).m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46960160/*aspel.text.copy_string..index*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x5F\x73\x74\x72\x69\x6E\x67\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(62)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, (((V$46960096/*aspel.text.copy_string.new_string*/).m0)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46960160/*aspel.text.copy_string..index*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x5F\x73\x74\x72\x69\x6E\x67\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(62)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$185 RET$VAL = (V$46960096/*aspel.text.copy_string.new_string*/);
    return RET$VAL;
    }
    }
}

TYPE$191 V$15384608/*aspel.text.get_string_length*/(TYPE$185 V$46960416/*aspel.text.get_string_length.string*/)
{
    {
    TYPE$191 V$46960480/*aspel.text.get_string_length.length*/;
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$54,TYPE$54))(((CORE$DELEGATE)V$15386128/*aspel.text.get_utf8_length_unchecked*/)))((((V$46960416/*aspel.text.get_string_length.string*/).m0).a), (((V$46960416/*aspel.text.get_string_length.string*/).m0).n), ((CORE$PTR) &(((V$46960480/*aspel.text.get_string_length.length*/).m0))), ((CORE$PTR) &(((V$46960480/*aspel.text.get_string_length.length*/).m1))));
    {
    TYPE$191 RET$VAL = (V$46960480/*aspel.text.get_string_length.length*/);
    return RET$VAL;
    }
    }
}

TYPE$193 V$15384688/*aspel.text.make_code_point_iterator*/(TYPE$185 V$46960800/*aspel.text.make_code_point_iterator.string*/)
{
    {
    {
    TYPE$193 RET$VAL = ([&]()->TYPE$193{
    TYPE$193 TEMP$RESULT;
    { typedef TYPE$185 TEMP$TYPE;
      auto TEMP$VAL = (V$46960800/*aspel.text.make_code_point_iterator.string*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_type_pun(TYPE$185, TEMP$VAL); }
    { typedef TYPE$19 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    return RET$VAL;
    }
    }
}

TYPE$6 V$15384768/*aspel.text.next_code_point*/(TYPE$196 V$46960864/*aspel.text.next_code_point.iterator*/)
{
    {
    if (CORE$ge(((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m2)),((((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m0).m0).n)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$2 V$46960928/*aspel.text.next_code_point.sequence_length*/ = ((TYPE$2(*)(TYPE$2))(((CORE$DELEGATE)V$15385488/*aspel.text.assume_utf8_sequence_length*/)))(CORE$ABC(TYPE$2, (((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m0).m0)), (CORE$U64)((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m2)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x5F\x73\x74\x72\x69\x6E\x67\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(105)));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$10,TYPE$2))(((CORE$DELEGATE)V$15385968/*aspel.text.decode_utf8_sequence_unchecked*/)))(CORE$add(((((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m0).m0).a)),(CORE$cast_regular(TYPE$10, (((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m2)))*(1)), (V$46960928/*aspel.text.next_code_point.sequence_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46960928/*aspel.text.next_code_point.sequence_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$193*)((V$46960864/*aspel.text.next_code_point.iterator*/)))->m2));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15384848/*aspel.text.is_legal_code_point*/(TYPE$19 V$46960992/*aspel.text.is_legal_code_point.code_point*/)
{
    {
    if (CORE$gt(((V$46960992/*aspel.text.is_legal_code_point.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1114111ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$ge(((V$46960992/*aspel.text.is_legal_code_point.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(55296ULL))))),(CORE$le(((V$46960992/*aspel.text.is_legal_code_point.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(57343ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$2 V$15384928/*aspel.text.assume_utf16_sequence_length*/(TYPE$28 V$46961056/*aspel.text.assume_utf16_sequence_length.first_in_sequence*/)
{
    {
    if (CORE$land((CORE$ge(((V$46961056/*aspel.text.assume_utf16_sequence_length.first_in_sequence*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL))))),(CORE$le(((V$46961056/*aspel.text.assume_utf16_sequence_length.first_in_sequence*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(56319ULL))))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
}

TYPE$2 V$15385008/*aspel.text.get_utf16_sequence_length*/(TYPE$19 V$46961120/*aspel.text.get_utf16_sequence_length.code_point*/)
{
    {
    if (CORE$lt(((V$46961120/*aspel.text.get_utf16_sequence_length.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15385088/*aspel.text.is_legal_utf16_sequence*/(TYPE$31 V$46961184/*aspel.text.is_legal_utf16_sequence.source*/, TYPE$2 V$46961248/*aspel.text.is_legal_utf16_sequence.length*/)
{
    {
    if (CORE$gt(((V$46961248/*aspel.text.is_legal_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$46961248/*aspel.text.is_legal_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    if (CORE$lor((CORE$lt((((TYPE$28*)((V$46961184/*aspel.text.is_legal_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL))))),(CORE$gt((((TYPE$28*)((V$46961184/*aspel.text.is_legal_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(56319ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$lor((CORE$lt((((TYPE$28*)((V$46961184/*aspel.text.is_legal_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(56320ULL))))),(CORE$gt((((TYPE$28*)((V$46961184/*aspel.text.is_legal_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(57343ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$ge((((TYPE$28*)((V$46961184/*aspel.text.is_legal_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL))))),(CORE$le((((TYPE$28*)((V$46961184/*aspel.text.is_legal_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(57343ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15385168/*aspel.text.encode_utf16_sequence*/(TYPE$19 V$46961312/*aspel.text.encode_utf16_sequence.code_point*/, TYPE$31 V$46961376/*aspel.text.encode_utf16_sequence.target*/, TYPE$2 V$46961440/*aspel.text.encode_utf16_sequence.length*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15384848/*aspel.text.is_legal_code_point*/)))((V$46961312/*aspel.text.encode_utf16_sequence.code_point*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$46961440/*aspel.text.encode_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$46961440/*aspel.text.encode_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46961312/*aspel.text.encode_utf16_sequence.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL))),(CORE$cast_regular(TYPE$28, CORE$shr(((V$46961312/*aspel.text.encode_utf16_sequence.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL))))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$46961376/*aspel.text.encode_utf16_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$cast_regular(TYPE$28, (CORE$S64)(56320ULL))),(CORE$cast_regular(TYPE$28, CORE$band(((V$46961312/*aspel.text.encode_utf16_sequence.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1023ULL))))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$46961376/*aspel.text.encode_utf16_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (V$46961312/*aspel.text.encode_utf16_sequence.code_point*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$46961376/*aspel.text.encode_utf16_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$15385248/*aspel.text.encode_utf16_sequence_unchecked*/(TYPE$19 V$46961504/*aspel.text.encode_utf16_sequence_unchecked.code_point*/, TYPE$31 V$46961568/*aspel.text.encode_utf16_sequence_unchecked.target*/, TYPE$2 V$46961632/*aspel.text.encode_utf16_sequence_unchecked.length*/)
{
    {
    if (CORE$ge(((V$46961632/*aspel.text.encode_utf16_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46961504/*aspel.text.encode_utf16_sequence_unchecked.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL))),(CORE$cast_regular(TYPE$28, CORE$shr(((V$46961504/*aspel.text.encode_utf16_sequence_unchecked.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL))))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$46961568/*aspel.text.encode_utf16_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$cast_regular(TYPE$28, (CORE$S64)(56320ULL))),(CORE$cast_regular(TYPE$28, CORE$band(((V$46961504/*aspel.text.encode_utf16_sequence_unchecked.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1023ULL))))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$46961568/*aspel.text.encode_utf16_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    return;
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (V$46961504/*aspel.text.encode_utf16_sequence_unchecked.code_point*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$46961568/*aspel.text.encode_utf16_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
}

TYPE$6 V$15385328/*aspel.text.decode_utf16_sequence*/(TYPE$31 V$46961696/*aspel.text.decode_utf16_sequence.source*/, TYPE$2 V$46961760/*aspel.text.decode_utf16_sequence.length*/, TYPE$103 V$46961824/*aspel.text.decode_utf16_sequence.code_point*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$31,TYPE$2))(((CORE$DELEGATE)V$15385088/*aspel.text.is_legal_utf16_sequence*/)))((V$46961696/*aspel.text.decode_utf16_sequence.source*/), (V$46961760/*aspel.text.decode_utf16_sequence.length*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$46961760/*aspel.text.decode_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    TYPE$19 V$46961888/*aspel.text.decode_utf16_sequence..cp*/ = CORE$shl((CORE$cast_regular(TYPE$19, CORE$sub((((TYPE$28*)((V$46961696/*aspel.text.decode_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL)))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL))));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, CORE$sub((((TYPE$28*)((V$46961696/*aspel.text.decode_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(56320ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46961888/*aspel.text.decode_utf16_sequence..cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$46961888/*aspel.text.decode_utf16_sequence..cp*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46961824/*aspel.text.decode_utf16_sequence.code_point*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, ((TYPE$28*)((V$46961696/*aspel.text.decode_utf16_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46961824/*aspel.text.decode_utf16_sequence.code_point*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$19 V$15385408/*aspel.text.decode_utf16_sequence_unchecked*/(TYPE$31 V$46961952/*aspel.text.decode_utf16_sequence_unchecked.source*/, TYPE$2 V$46962016/*aspel.text.decode_utf16_sequence_unchecked.length*/)
{
    {
    if (CORE$ge(((V$46962016/*aspel.text.decode_utf16_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    TYPE$19 V$46962080/*aspel.text.decode_utf16_sequence_unchecked..code_point*/ = CORE$shl((CORE$cast_regular(TYPE$19, CORE$sub((((TYPE$28*)((V$46961952/*aspel.text.decode_utf16_sequence_unchecked.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(55296ULL)))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(10ULL))));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, CORE$sub((((TYPE$28*)((V$46961952/*aspel.text.decode_utf16_sequence_unchecked.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(56320ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962080/*aspel.text.decode_utf16_sequence_unchecked..code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = CORE$add(((V$46962080/*aspel.text.decode_utf16_sequence_unchecked..code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL))));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, ((TYPE$28*)((V$46961952/*aspel.text.decode_utf16_sequence_unchecked.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    return RET$VAL;
    }
    }
}

TYPE$2 V$15385488/*aspel.text.assume_utf8_sequence_length*/(TYPE$2 V$46962336/*aspel.text.assume_utf8_sequence_length.first_in_sequence*/)
{
    {
    {
    TYPE$2 RET$VAL = CORE$ABC(TYPE$2, ((V$46962144/*aspel.text.ASSUMED_UTF8_SEQUENCE_LENGTH*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46962336/*aspel.text.assume_utf8_sequence_length.first_in_sequence*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(61));
    return RET$VAL;
    }
    }
}

TYPE$2 V$15385568/*aspel.text.get_utf8_sequence_length*/(TYPE$19 V$46962400/*aspel.text.get_utf8_sequence_length.code_point*/)
{
    {
    if (CORE$lt(((V$46962400/*aspel.text.get_utf8_sequence_length.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$lt(((V$46962400/*aspel.text.get_utf8_sequence_length.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(2048ULL))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$lt(((V$46962400/*aspel.text.get_utf8_sequence_length.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(65536ULL))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$lt(((V$46962400/*aspel.text.get_utf8_sequence_length.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(2097152ULL))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$lt(((V$46962400/*aspel.text.get_utf8_sequence_length.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(67108864ULL))))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(6ULL));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15385648/*aspel.text.is_legal_utf8_sequence*/(TYPE$10 V$46962464/*aspel.text.is_legal_utf8_sequence.source*/, TYPE$2 V$46962528/*aspel.text.is_legal_utf8_sequence.length*/)
{
    {
    if (CORE$ge(((V$46962528/*aspel.text.is_legal_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ge(((V$46962528/*aspel.text.is_legal_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    if (CORE$lor((CORE$lt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(3ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL))))),(CORE$gt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(3ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(191ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    if (CORE$ge(((V$46962528/*aspel.text.is_legal_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL))))) {
    {
    if (CORE$lor((CORE$lt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL))))),(CORE$gt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(191ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    if (CORE$ge(((V$46962528/*aspel.text.is_legal_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    if (CORE$lor((CORE$lt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL))))),(CORE$gt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(191ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$2 SWITCH$TEMP = ((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))];
    if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$2, (CORE$S64)(224ULL))))) {
    {
    if (CORE$lt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(160ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$2, (CORE$S64)(237ULL))))) {
    {
    if (CORE$gt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(159ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$2, (CORE$S64)(240ULL))))) {
    {
    if (CORE$lt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(144ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$2, (CORE$S64)(244ULL))))) {
    {
    if (CORE$gt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(143ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else {}
    }
    }
    }
    if (CORE$land((CORE$ge((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL))))),(CORE$lt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(194ULL))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$gt((((TYPE$2*)((V$46962464/*aspel.text.is_legal_utf8_sequence.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(244ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15385728/*aspel.text.encode_utf8_sequence*/(TYPE$19 V$46962592/*aspel.text.encode_utf8_sequence.code_point*/, TYPE$10 V$46962656/*aspel.text.encode_utf8_sequence.target*/, TYPE$2 V$46962720/*aspel.text.encode_utf8_sequence.length*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$15384848/*aspel.text.is_legal_code_point*/)))((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$46962720/*aspel.text.encode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ge(((V$46962720/*aspel.text.encode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$band((CORE$bor(((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(191ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962656/*aspel.text.encode_utf8_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(3ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46962720/*aspel.text.encode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$band((CORE$bor(((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(191ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962656/*aspel.text.encode_utf8_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46962720/*aspel.text.encode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$band((CORE$bor(((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(191ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962656/*aspel.text.encode_utf8_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$bor(((V$46962592/*aspel.text.encode_utf8_sequence.code_point*/)),(CORE$cast_regular(TYPE$19, CORE$ABC(TYPE$2, ((V$46962272/*aspel.text.UTF8_FIRST_MARK*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46962720/*aspel.text.encode_utf8_sequence.length*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(127)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962656/*aspel.text.encode_utf8_sequence.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$15385808/*aspel.text.encode_utf8_sequence_unchecked*/(TYPE$19 V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/, TYPE$10 V$46962848/*aspel.text.encode_utf8_sequence_unchecked.target*/, TYPE$2 V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/)
{
    {
    if (CORE$gt(((V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$band((CORE$bor(((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(191ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962848/*aspel.text.encode_utf8_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(3ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$band((CORE$bor(((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(191ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962848/*aspel.text.encode_utf8_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$band((CORE$bor(((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(191ULL))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962848/*aspel.text.encode_utf8_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, CORE$bor(((V$46962784/*aspel.text.encode_utf8_sequence_unchecked.code_point*/)),(CORE$cast_regular(TYPE$19, CORE$ABC(TYPE$2, ((V$46962272/*aspel.text.UTF8_FIRST_MARK*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46962912/*aspel.text.encode_utf8_sequence_unchecked.length*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(146)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46962848/*aspel.text.encode_utf8_sequence_unchecked.target*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
}

TYPE$6 V$15385888/*aspel.text.decode_utf8_sequence*/(TYPE$10 V$46962976/*aspel.text.decode_utf8_sequence.source*/, TYPE$2 V$46963040/*aspel.text.decode_utf8_sequence.length*/, TYPE$103 V$46963104/*aspel.text.decode_utf8_sequence.code_point*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$10,TYPE$2))(((CORE$DELEGATE)V$15385648/*aspel.text.is_legal_utf8_sequence*/)))((V$46962976/*aspel.text.decode_utf8_sequence.source*/), (V$46963040/*aspel.text.decode_utf8_sequence.length*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$46963168/*aspel.text.decode_utf8_sequence.cp*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    if (CORE$ge(((V$46963040/*aspel.text.decode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46962976/*aspel.text.decode_utf8_sequence.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962976/*aspel.text.decode_utf8_sequence.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46963040/*aspel.text.decode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46962976/*aspel.text.decode_utf8_sequence.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962976/*aspel.text.decode_utf8_sequence.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46963040/*aspel.text.decode_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46962976/*aspel.text.decode_utf8_sequence.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46962976/*aspel.text.decode_utf8_sequence.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46962976/*aspel.text.decode_utf8_sequence.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$19, ((V$46962208/*aspel.text.UTF8_DECODING_MAGIC*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46963040/*aspel.text.decode_utf8_sequence.length*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(169)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963168/*aspel.text.decode_utf8_sequence.cp*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46963104/*aspel.text.decode_utf8_sequence.code_point*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$19 V$15385968/*aspel.text.decode_utf8_sequence_unchecked*/(TYPE$10 V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/, TYPE$2 V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/)
{
    {
    TYPE$19 V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    if (CORE$ge(((V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(5ULL))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(4ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(3ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(6ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) << CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (*(TYPE$2*)((V$46963232/*aspel.text.decode_utf8_sequence_unchecked.source*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$19, ((V$46962208/*aspel.text.UTF8_DECODING_MAGIC*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46963296/*aspel.text.decode_utf8_sequence_unchecked.length*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x38\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(194)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$46963360/*aspel.text.decode_utf8_sequence_unchecked.cp*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15386048/*aspel.text.get_utf8_length*/(TYPE$10 V$46963424/*aspel.text.get_utf8_length.source*/, TYPE$5 V$46963488/*aspel.text.get_utf8_length.source_length*/, TYPE$54 V$46963552/*aspel.text.get_utf8_length.in_code_units*/, TYPE$54 V$46963616/*aspel.text.get_utf8_length.in_code_points*/)
{
    {
    TYPE$5 V$46963680/*aspel.text.get_utf8_length.code_points*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$46963744/*aspel.text.get_utf8_length.code_units*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$ne(((V$46963744/*aspel.text.get_utf8_length.code_units*/)),((V$46963488/*aspel.text.get_utf8_length.source_length*/)))) {
    {
    TYPE$2 V$46963808/*aspel.text.get_utf8_length..sequence_length*/ = ((TYPE$2(*)(TYPE$2))(((CORE$DELEGATE)V$15385488/*aspel.text.assume_utf8_sequence_length*/)))(((TYPE$2*)((V$46963424/*aspel.text.get_utf8_length.source*/)))[(CORE$U64)((V$46963744/*aspel.text.get_utf8_length.code_units*/))]);
    if (CORE$gt((CORE$cast_regular(TYPE$5, (V$46963808/*aspel.text.get_utf8_length..sequence_length*/))),(CORE$sub(((V$46963488/*aspel.text.get_utf8_length.source_length*/)),((V$46963744/*aspel.text.get_utf8_length.code_units*/)))))) {
    {
    if (CORE$ne(((V$46963552/*aspel.text.get_utf8_length.in_code_units*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963744/*aspel.text.get_utf8_length.code_units*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46963552/*aspel.text.get_utf8_length.in_code_units*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$46963616/*aspel.text.get_utf8_length.in_code_points*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963680/*aspel.text.get_utf8_length.code_points*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46963616/*aspel.text.get_utf8_length.in_code_points*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    return;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$10,TYPE$2))(((CORE$DELEGATE)V$15385648/*aspel.text.is_legal_utf8_sequence*/)))(CORE$add(((V$46963424/*aspel.text.get_utf8_length.source*/)),(CORE$cast_regular(TYPE$10, (V$46963744/*aspel.text.get_utf8_length.code_units*/)))*(1)), (V$46963808/*aspel.text.get_utf8_length..sequence_length*/))))) {
    {
    if (CORE$ne(((V$46963552/*aspel.text.get_utf8_length.in_code_units*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963744/*aspel.text.get_utf8_length.code_units*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46963552/*aspel.text.get_utf8_length.in_code_units*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$46963616/*aspel.text.get_utf8_length.in_code_points*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963680/*aspel.text.get_utf8_length.code_points*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46963616/*aspel.text.get_utf8_length.in_code_points*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    return;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46963808/*aspel.text.get_utf8_length..sequence_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963744/*aspel.text.get_utf8_length.code_units*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46963680/*aspel.text.get_utf8_length.code_points*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$46963552/*aspel.text.get_utf8_length.in_code_units*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963744/*aspel.text.get_utf8_length.code_units*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46963552/*aspel.text.get_utf8_length.in_code_units*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$46963616/*aspel.text.get_utf8_length.in_code_points*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963680/*aspel.text.get_utf8_length.code_points*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46963616/*aspel.text.get_utf8_length.in_code_points*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$15386128/*aspel.text.get_utf8_length_unchecked*/(TYPE$10 V$46963872/*aspel.text.get_utf8_length_unchecked.source*/, TYPE$5 V$46963936/*aspel.text.get_utf8_length_unchecked.source_length*/, TYPE$54 V$46964000/*aspel.text.get_utf8_length_unchecked.in_code_units*/, TYPE$54 V$46964064/*aspel.text.get_utf8_length_unchecked.in_code_points*/)
{
    {
    TYPE$5 V$46964128/*aspel.text.get_utf8_length_unchecked.code_points*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    {
    TYPE$4 V$46964192/*aspel.text.get_utf8_length_unchecked..index*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((V$46963936/*aspel.text.get_utf8_length_unchecked.source_length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46964192/*aspel.text.get_utf8_length_unchecked..index*/ -= FOREACH$STEP;
    while ((V$46964192/*aspel.text.get_utf8_length_unchecked..index*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if (CORE$lor((CORE$lt((((TYPE$2*)((V$46963872/*aspel.text.get_utf8_length_unchecked.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$46964192/*aspel.text.get_utf8_length_unchecked..index*/)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL))))),(CORE$gt((((TYPE$2*)((V$46963872/*aspel.text.get_utf8_length_unchecked.source*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$46964192/*aspel.text.get_utf8_length_unchecked..index*/)))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(191ULL))))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46964128/*aspel.text.get_utf8_length_unchecked.code_points*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    if (CORE$ne(((V$46964000/*aspel.text.get_utf8_length_unchecked.in_code_units*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46963936/*aspel.text.get_utf8_length_unchecked.source_length*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46964000/*aspel.text.get_utf8_length_unchecked.in_code_units*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$46964064/*aspel.text.get_utf8_length_unchecked.in_code_points*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46964128/*aspel.text.get_utf8_length_unchecked.code_points*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46964064/*aspel.text.get_utf8_length_unchecked.in_code_points*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$19 V$15386208/*aspel.text.read_utf8_sequence*/(TYPE$153 V$46964576/*aspel.text.read_utf8_sequence.stream*/, TYPE$103 V$46964640/*aspel.text.read_utf8_sequence.result*/, TYPE$6 V$46964704/*aspel.text.read_utf8_sequence.check_legal*/)
{
    {
    TYPE$1 V$46964768/*aspel.text.read_utf8_sequence.sequence*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(6ULL))), (CORE$U64)(1));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$10))(((CORE$DELEGATE)V$15393088/*aspel.io.read_u8*/)))((V$46964576/*aspel.text.read_utf8_sequence.stream*/), ((CORE$PTR) &(CORE$ABC(TYPE$2, ((V$46964768/*aspel.text.read_utf8_sequence.sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(24)))))))) {
    {
    {
    TYPE$19 RET$VAL = (V$46964384/*aspel.text.UTF_STREAM_END*/);
    return RET$VAL;
    }
    }
    }
    TYPE$2 V$46964832/*aspel.text.read_utf8_sequence.length*/ = ((TYPE$2(*)(TYPE$2))(((CORE$DELEGATE)V$15385488/*aspel.text.assume_utf8_sequence_length*/)))(CORE$ABC(TYPE$2, ((V$46964768/*aspel.text.read_utf8_sequence.sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(27)));
    if (CORE$gt(((V$46964832/*aspel.text.read_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL))))) {
    {
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((V$46964576/*aspel.text.read_utf8_sequence.stream*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((V$46964768/*aspel.text.read_utf8_sequence.sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(29))))), CORE$cast_regular(TYPE$4, CORE$sub(((V$46964832/*aspel.text.read_utf8_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL))))))),(CORE$sub((CORE$cast_regular(TYPE$4, (V$46964832/*aspel.text.read_utf8_sequence.length*/))),((CORE$S64)(1ULL)))))) {
    {
    {
    TYPE$19 RET$VAL = (V$46964448/*aspel.text.UTF_STREAM_ERROR*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    if ((V$46964704/*aspel.text.read_utf8_sequence.check_legal*/)) {
    {
    if ((!(((TYPE$6(*)(TYPE$10,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385888/*aspel.text.decode_utf8_sequence*/)))(CORE$cast_array_to_ptr((V$46964768/*aspel.text.read_utf8_sequence.sequence*/)), (V$46964832/*aspel.text.read_utf8_sequence.length*/), (V$46964640/*aspel.text.read_utf8_sequence.result*/))))) {
    {
    {
    TYPE$19 RET$VAL = (V$46964512/*aspel.text.UTF_STREAM_ILLEGAL*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$10,TYPE$2))(((CORE$DELEGATE)V$15385968/*aspel.text.decode_utf8_sequence_unchecked*/)))(CORE$cast_array_to_ptr((V$46964768/*aspel.text.read_utf8_sequence.sequence*/)), (V$46964832/*aspel.text.read_utf8_sequence.length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46964640/*aspel.text.read_utf8_sequence.result*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$19 RET$VAL = (V$46964320/*aspel.text.UTF_STREAM_OK*/);
    return RET$VAL;
    }
    }
}

TYPE$19 V$15386288/*aspel.text.read_utf16_sequence*/(TYPE$153 V$46964896/*aspel.text.read_utf16_sequence.stream*/, TYPE$103 V$46964960/*aspel.text.read_utf16_sequence.result*/, TYPE$6 V$46965024/*aspel.text.read_utf16_sequence.check_legal*/)
{
    {
    TYPE$30 V$46965088/*aspel.text.read_utf16_sequence.sequence*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))), (CORE$U64)(2));
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393168/*aspel.io.read_u16*/)))((V$46964896/*aspel.text.read_utf16_sequence.stream*/), ((CORE$PTR) &(CORE$ABC(TYPE$28, ((V$46965088/*aspel.text.read_utf16_sequence.sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(58)))))))) {
    {
    {
    TYPE$19 RET$VAL = (V$46964384/*aspel.text.UTF_STREAM_END*/);
    return RET$VAL;
    }
    }
    }
    TYPE$2 V$46965152/*aspel.text.read_utf16_sequence.length*/ = ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$15384928/*aspel.text.assume_utf16_sequence_length*/)))(CORE$ABC(TYPE$28, ((V$46965088/*aspel.text.read_utf16_sequence.sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(61)));
    CORE$ASSERT(((CORE$BOOL)(CORE$lor((CORE$eq(((V$46965152/*aspel.text.read_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL))))),(CORE$eq(((V$46965152/*aspel.text.read_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL)))))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(63)));
    if (CORE$eq(((V$46965152/*aspel.text.read_utf16_sequence.length*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(2ULL))))) {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393168/*aspel.io.read_u16*/)))((V$46964896/*aspel.text.read_utf16_sequence.stream*/), ((CORE$PTR) &(CORE$ABC(TYPE$28, ((V$46965088/*aspel.text.read_utf16_sequence.sequence*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x74\x65\x78\x74\\\x75\x74\x66\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(65)))))))) {
    {
    {
    TYPE$19 RET$VAL = (V$46964448/*aspel.text.UTF_STREAM_ERROR*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    if ((V$46965024/*aspel.text.read_utf16_sequence.check_legal*/)) {
    {
    if ((!(((TYPE$6(*)(TYPE$31,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385328/*aspel.text.decode_utf16_sequence*/)))(CORE$cast_array_to_ptr((V$46965088/*aspel.text.read_utf16_sequence.sequence*/)), (V$46965152/*aspel.text.read_utf16_sequence.length*/), (V$46964960/*aspel.text.read_utf16_sequence.result*/))))) {
    {
    {
    TYPE$19 RET$VAL = (V$46964512/*aspel.text.UTF_STREAM_ILLEGAL*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$31,TYPE$2))(((CORE$DELEGATE)V$15385408/*aspel.text.decode_utf16_sequence_unchecked*/)))(CORE$cast_array_to_ptr((V$46965088/*aspel.text.read_utf16_sequence.sequence*/)), (V$46965152/*aspel.text.read_utf16_sequence.length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46964960/*aspel.text.read_utf16_sequence.result*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$19 RET$VAL = (V$46964320/*aspel.text.UTF_STREAM_OK*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$15386368/*aspel.text.length_utf16_as_utf8*/(TYPE$31 V$46965344/*aspel.text.length_utf16_as_utf8.source*/, TYPE$5 V$46965408/*aspel.text.length_utf16_as_utf8.length*/)
{
    {
    TYPE$5 V$46965472/*aspel.text.length_utf16_as_utf8.result*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$46965536/*aspel.text.length_utf16_as_utf8.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$true) {
    {
    TYPE$2 V$46965600/*aspel.text.length_utf16_as_utf8..assumed_length*/ = ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$15384928/*aspel.text.assume_utf16_sequence_length*/)))(((TYPE$28*)((V$46965344/*aspel.text.length_utf16_as_utf8.source*/)))[(CORE$U64)((V$46965536/*aspel.text.length_utf16_as_utf8.index*/))]);
    if (CORE$gt((CORE$add(((V$46965536/*aspel.text.length_utf16_as_utf8.index*/)),(CORE$cast_regular(TYPE$5, (V$46965600/*aspel.text.length_utf16_as_utf8..assumed_length*/))))),((V$46965408/*aspel.text.length_utf16_as_utf8.length*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$46965472/*aspel.text.length_utf16_as_utf8.result*/);
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$46965664/*aspel.text.length_utf16_as_utf8..code_point*/;
    if ((!(((TYPE$6(*)(TYPE$31,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385328/*aspel.text.decode_utf16_sequence*/)))(CORE$add(((V$46965344/*aspel.text.length_utf16_as_utf8.source*/)),(CORE$cast_regular(TYPE$31, (V$46965536/*aspel.text.length_utf16_as_utf8.index*/)))*(2)), (V$46965600/*aspel.text.length_utf16_as_utf8..assumed_length*/), ((CORE$PTR) &((V$46965664/*aspel.text.length_utf16_as_utf8..code_point*/))))))) {
    {
    {
    TYPE$5 RET$VAL = (V$46965472/*aspel.text.length_utf16_as_utf8.result*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, ((TYPE$2(*)(TYPE$19))(((CORE$DELEGATE)V$15385568/*aspel.text.get_utf8_sequence_length*/)))((V$46965664/*aspel.text.length_utf16_as_utf8..code_point*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46965472/*aspel.text.length_utf16_as_utf8.result*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46965600/*aspel.text.length_utf16_as_utf8..assumed_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46965536/*aspel.text.length_utf16_as_utf8.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$46965472/*aspel.text.length_utf16_as_utf8.result*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$15386448/*aspel.text.length_utf16_as_utf8*/(TYPE$30 V$46965728/*aspel.text.length_utf16_as_utf8.source*/)
{
    {
    {
    TYPE$5 RET$VAL = ((TYPE$5(*)(TYPE$31,TYPE$5))(((CORE$DELEGATE)V$15386368/*aspel.text.length_utf16_as_utf8*/)))(((V$46965728/*aspel.text.length_utf16_as_utf8.source*/).a), ((V$46965728/*aspel.text.length_utf16_as_utf8.source*/).n));
    return RET$VAL;
    }
    }
}

TYPE$5 V$15386528/*aspel.text.length_utf8_as_utf16*/(TYPE$10 V$46965792/*aspel.text.length_utf8_as_utf16.source*/, TYPE$5 V$46965856/*aspel.text.length_utf8_as_utf16.length*/)
{
    {
    TYPE$5 V$46965920/*aspel.text.length_utf8_as_utf16.result*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$46965984/*aspel.text.length_utf8_as_utf16.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$true) {
    {
    TYPE$2 V$46966048/*aspel.text.length_utf8_as_utf16..assumed_length*/ = ((TYPE$2(*)(TYPE$2))(((CORE$DELEGATE)V$15385488/*aspel.text.assume_utf8_sequence_length*/)))(((TYPE$2*)((V$46965792/*aspel.text.length_utf8_as_utf16.source*/)))[(CORE$U64)((V$46965984/*aspel.text.length_utf8_as_utf16.index*/))]);
    if (CORE$gt((CORE$add(((V$46965984/*aspel.text.length_utf8_as_utf16.index*/)),(CORE$cast_regular(TYPE$5, (V$46966048/*aspel.text.length_utf8_as_utf16..assumed_length*/))))),((V$46965856/*aspel.text.length_utf8_as_utf16.length*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$46965920/*aspel.text.length_utf8_as_utf16.result*/);
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$46966112/*aspel.text.length_utf8_as_utf16..code_point*/;
    if ((!(((TYPE$6(*)(TYPE$10,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385888/*aspel.text.decode_utf8_sequence*/)))(CORE$add(((V$46965792/*aspel.text.length_utf8_as_utf16.source*/)),(CORE$cast_regular(TYPE$10, (V$46965984/*aspel.text.length_utf8_as_utf16.index*/)))*(1)), (V$46966048/*aspel.text.length_utf8_as_utf16..assumed_length*/), ((CORE$PTR) &((V$46966112/*aspel.text.length_utf8_as_utf16..code_point*/))))))) {
    {
    {
    TYPE$5 RET$VAL = (V$46965920/*aspel.text.length_utf8_as_utf16.result*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, ((TYPE$2(*)(TYPE$19))(((CORE$DELEGATE)V$15385008/*aspel.text.get_utf16_sequence_length*/)))((V$46966112/*aspel.text.length_utf8_as_utf16..code_point*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46965920/*aspel.text.length_utf8_as_utf16.result*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46966048/*aspel.text.length_utf8_as_utf16..assumed_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46965984/*aspel.text.length_utf8_as_utf16.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$46965920/*aspel.text.length_utf8_as_utf16.result*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$15386608/*aspel.text.length_utf8_as_utf16*/(TYPE$1 V$46966176/*aspel.text.length_utf8_as_utf16.source*/)
{
    {
    {
    TYPE$5 RET$VAL = ((TYPE$5(*)(TYPE$10,TYPE$5))(((CORE$DELEGATE)V$15386528/*aspel.text.length_utf8_as_utf16*/)))(((V$46966176/*aspel.text.length_utf8_as_utf16.source*/).a), ((V$46966176/*aspel.text.length_utf8_as_utf16.source*/).n));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15386688/*aspel.text.convert_utf16_to_utf8*/(TYPE$212 V$46966496/*aspel.text.convert_utf16_to_utf8.source*/, TYPE$54 V$46966560/*aspel.text.convert_utf16_to_utf8.source_remaining*/, TYPE$213 V$46966624/*aspel.text.convert_utf16_to_utf8.target*/, TYPE$54 V$46966688/*aspel.text.convert_utf16_to_utf8.target_remaining*/)
{
    {
    TYPE$19 V$46966752/*aspel.text.convert_utf16_to_utf8.status*/ = (V$46966304/*aspel.text.UTF_CONVERSION_OK*/);
    TYPE$31 V$46966816/*aspel.text.convert_utf16_to_utf8.src*/ = (*(TYPE$31*)((V$46966496/*aspel.text.convert_utf16_to_utf8.source*/)));
    TYPE$5 V$46966880/*aspel.text.convert_utf16_to_utf8.src_remaining*/ = (*(TYPE$5*)((V$46966560/*aspel.text.convert_utf16_to_utf8.source_remaining*/)));
    TYPE$10 V$46966944/*aspel.text.convert_utf16_to_utf8.tgt*/ = (*(TYPE$10*)((V$46966624/*aspel.text.convert_utf16_to_utf8.target*/)));
    TYPE$5 V$46967008/*aspel.text.convert_utf16_to_utf8.tgt_remaining*/ = (*(TYPE$5*)((V$46966688/*aspel.text.convert_utf16_to_utf8.target_remaining*/)));
    while (CORE$gt(((V$46966880/*aspel.text.convert_utf16_to_utf8.src_remaining*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    TYPE$28 V$46967072/*aspel.text.convert_utf16_to_utf8..first*/ = (*(TYPE$28*)((V$46966816/*aspel.text.convert_utf16_to_utf8.src*/)));
    TYPE$2 V$46967136/*aspel.text.convert_utf16_to_utf8..assumed_length*/ = ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$15384928/*aspel.text.assume_utf16_sequence_length*/)))((V$46967072/*aspel.text.convert_utf16_to_utf8..first*/));
    if (CORE$gt((CORE$cast_regular(TYPE$5, (V$46967136/*aspel.text.convert_utf16_to_utf8..assumed_length*/))),((V$46966880/*aspel.text.convert_utf16_to_utf8.src_remaining*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966368/*aspel.text.UTF_CONVERSION_SOURCE_ILLEGAL*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46966752/*aspel.text.convert_utf16_to_utf8.status*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    TYPE$19 V$46967200/*aspel.text.convert_utf16_to_utf8..code_point*/;
    if ((!(((TYPE$6(*)(TYPE$31,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385328/*aspel.text.decode_utf16_sequence*/)))((V$46966816/*aspel.text.convert_utf16_to_utf8.src*/), (V$46967136/*aspel.text.convert_utf16_to_utf8..assumed_length*/), ((CORE$PTR) &((V$46967200/*aspel.text.convert_utf16_to_utf8..code_point*/))))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966368/*aspel.text.UTF_CONVERSION_SOURCE_ILLEGAL*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46966752/*aspel.text.convert_utf16_to_utf8.status*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    TYPE$2 V$46967264/*aspel.text.convert_utf16_to_utf8..length*/ = ((TYPE$2(*)(TYPE$19))(((CORE$DELEGATE)V$15385568/*aspel.text.get_utf8_sequence_length*/)))((V$46967200/*aspel.text.convert_utf16_to_utf8..code_point*/));
    if (CORE$gt((CORE$cast_regular(TYPE$5, (V$46967264/*aspel.text.convert_utf16_to_utf8..length*/))),((V$46967008/*aspel.text.convert_utf16_to_utf8.tgt_remaining*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966432/*aspel.text.UTF_CONVERSION_TARGET_OVERFLOW*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46966752/*aspel.text.convert_utf16_to_utf8.status*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    ((TYPE$8(*)(TYPE$19,TYPE$10,TYPE$2))(((CORE$DELEGATE)V$15385808/*aspel.text.encode_utf8_sequence_unchecked*/)))((V$46967200/*aspel.text.convert_utf16_to_utf8..code_point*/), (V$46966944/*aspel.text.convert_utf16_to_utf8.tgt*/), (V$46967264/*aspel.text.convert_utf16_to_utf8..length*/));
    {
    typedef TYPE$31 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$31, (V$46967136/*aspel.text.convert_utf16_to_utf8..assumed_length*/))*(2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46966816/*aspel.text.convert_utf16_to_utf8.src*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$31, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46967136/*aspel.text.convert_utf16_to_utf8..assumed_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46966880/*aspel.text.convert_utf16_to_utf8.src_remaining*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$46967264/*aspel.text.convert_utf16_to_utf8..length*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46966944/*aspel.text.convert_utf16_to_utf8.tgt*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46967264/*aspel.text.convert_utf16_to_utf8..length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46967008/*aspel.text.convert_utf16_to_utf8.tgt_remaining*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$31 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966816/*aspel.text.convert_utf16_to_utf8.src*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$31*)((V$46966496/*aspel.text.convert_utf16_to_utf8.source*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$31, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966880/*aspel.text.convert_utf16_to_utf8.src_remaining*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46966560/*aspel.text.convert_utf16_to_utf8.source_remaining*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966944/*aspel.text.convert_utf16_to_utf8.tgt*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$10*)((V$46966624/*aspel.text.convert_utf16_to_utf8.target*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46967008/*aspel.text.convert_utf16_to_utf8.tgt_remaining*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46966688/*aspel.text.convert_utf16_to_utf8.target_remaining*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$46966752/*aspel.text.convert_utf16_to_utf8.status*/);
    return RET$VAL;
    }
    }
}

TYPE$19 V$15386768/*aspel.text.convert_utf16_to_utf8*/(TYPE$30 V$46967328/*aspel.text.convert_utf16_to_utf8.source*/, TYPE$1 V$46967392/*aspel.text.convert_utf16_to_utf8.target*/)
{
    {
    TYPE$31 V$46967456/*aspel.text.convert_utf16_to_utf8.source_pointer*/ = ((V$46967328/*aspel.text.convert_utf16_to_utf8.source*/).a);
    TYPE$5 V$46967520/*aspel.text.convert_utf16_to_utf8.source_remaining*/ = ((V$46967328/*aspel.text.convert_utf16_to_utf8.source*/).n);
    TYPE$10 V$46967584/*aspel.text.convert_utf16_to_utf8.target_pointer*/ = ((V$46967392/*aspel.text.convert_utf16_to_utf8.target*/).a);
    TYPE$5 V$46967648/*aspel.text.convert_utf16_to_utf8.target_remaining*/ = ((V$46967392/*aspel.text.convert_utf16_to_utf8.target*/).n);
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$212,TYPE$54,TYPE$213,TYPE$54))(((CORE$DELEGATE)V$15386688/*aspel.text.convert_utf16_to_utf8*/)))(((CORE$PTR) &((V$46967456/*aspel.text.convert_utf16_to_utf8.source_pointer*/))), ((CORE$PTR) &((V$46967520/*aspel.text.convert_utf16_to_utf8.source_remaining*/))), ((CORE$PTR) &((V$46967584/*aspel.text.convert_utf16_to_utf8.target_pointer*/))), ((CORE$PTR) &((V$46967648/*aspel.text.convert_utf16_to_utf8.target_remaining*/))));
    return RET$VAL;
    }
    }
}

TYPE$1 V$15386848/*aspel.text.convert_utf16_to_utf8*/(TYPE$30 V$46967712/*aspel.text.convert_utf16_to_utf8.source*/)
{
    {
    TYPE$5 V$46967776/*aspel.text.convert_utf16_to_utf8.target_length*/ = ((TYPE$5(*)(TYPE$30))(((CORE$DELEGATE)V$15386448/*aspel.text.length_utf16_as_utf8*/)))((V$46967712/*aspel.text.convert_utf16_to_utf8.source*/));
    TYPE$1 V$46967840/*aspel.text.convert_utf16_to_utf8.target*/ = CORE$NEWARR((CORE$U64)((V$46967776/*aspel.text.convert_utf16_to_utf8.target_length*/)), (CORE$U64)(1));
    if (CORE$eq((CORE$cast_array_to_ptr((V$46967840/*aspel.text.convert_utf16_to_utf8.target*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    TYPE$31 V$46967904/*aspel.text.convert_utf16_to_utf8.source_pointer*/ = ((V$46967712/*aspel.text.convert_utf16_to_utf8.source*/).a);
    TYPE$5 V$46967968/*aspel.text.convert_utf16_to_utf8.source_remaining*/ = ((V$46967712/*aspel.text.convert_utf16_to_utf8.source*/).n);
    TYPE$10 V$46968032/*aspel.text.convert_utf16_to_utf8.target_pointer*/ = ((V$46967840/*aspel.text.convert_utf16_to_utf8.target*/).a);
    TYPE$5 V$46968096/*aspel.text.convert_utf16_to_utf8.target_remaining*/ = ((V$46967840/*aspel.text.convert_utf16_to_utf8.target*/).n);
    if (CORE$ne((((TYPE$19(*)(TYPE$212,TYPE$54,TYPE$213,TYPE$54))(((CORE$DELEGATE)V$15386688/*aspel.text.convert_utf16_to_utf8*/)))(((CORE$PTR) &((V$46967904/*aspel.text.convert_utf16_to_utf8.source_pointer*/))), ((CORE$PTR) &((V$46967968/*aspel.text.convert_utf16_to_utf8.source_remaining*/))), ((CORE$PTR) &((V$46968032/*aspel.text.convert_utf16_to_utf8.target_pointer*/))), ((CORE$PTR) &((V$46968096/*aspel.text.convert_utf16_to_utf8.target_remaining*/))))),((V$46966304/*aspel.text.UTF_CONVERSION_OK*/)))) {
    {
    CORE$DEL((void*)(((V$46967840/*aspel.text.convert_utf16_to_utf8.target*/)).a));    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$1 RET$VAL = (V$46967840/*aspel.text.convert_utf16_to_utf8.target*/);
    return RET$VAL;
    }
    }
}

TYPE$19 V$15386928/*aspel.text.convert_utf8_to_utf16*/(TYPE$213 V$46968160/*aspel.text.convert_utf8_to_utf16.source*/, TYPE$54 V$46968224/*aspel.text.convert_utf8_to_utf16.source_remaining*/, TYPE$212 V$46968288/*aspel.text.convert_utf8_to_utf16.target*/, TYPE$54 V$46968352/*aspel.text.convert_utf8_to_utf16.target_remaining*/)
{
    {
    TYPE$19 V$46968416/*aspel.text.convert_utf8_to_utf16.status*/ = (V$46966304/*aspel.text.UTF_CONVERSION_OK*/);
    TYPE$10 V$46968480/*aspel.text.convert_utf8_to_utf16.src*/ = (*(TYPE$10*)((V$46968160/*aspel.text.convert_utf8_to_utf16.source*/)));
    TYPE$5 V$46968544/*aspel.text.convert_utf8_to_utf16.src_remaining*/ = (*(TYPE$5*)((V$46968224/*aspel.text.convert_utf8_to_utf16.source_remaining*/)));
    TYPE$31 V$46968608/*aspel.text.convert_utf8_to_utf16.tgt*/ = (*(TYPE$31*)((V$46968288/*aspel.text.convert_utf8_to_utf16.target*/)));
    TYPE$5 V$46968672/*aspel.text.convert_utf8_to_utf16.tgt_remaining*/ = (*(TYPE$5*)((V$46968352/*aspel.text.convert_utf8_to_utf16.target_remaining*/)));
    while (CORE$gt(((V$46968544/*aspel.text.convert_utf8_to_utf16.src_remaining*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    TYPE$2 V$46968736/*aspel.text.convert_utf8_to_utf16..first*/ = (*(TYPE$2*)((V$46968480/*aspel.text.convert_utf8_to_utf16.src*/)));
    TYPE$2 V$46968800/*aspel.text.convert_utf8_to_utf16..assumed_length*/ = ((TYPE$2(*)(TYPE$2))(((CORE$DELEGATE)V$15385488/*aspel.text.assume_utf8_sequence_length*/)))((V$46968736/*aspel.text.convert_utf8_to_utf16..first*/));
    if (CORE$gt((CORE$cast_regular(TYPE$5, (V$46968800/*aspel.text.convert_utf8_to_utf16..assumed_length*/))),((V$46968544/*aspel.text.convert_utf8_to_utf16.src_remaining*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966368/*aspel.text.UTF_CONVERSION_SOURCE_ILLEGAL*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968416/*aspel.text.convert_utf8_to_utf16.status*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    TYPE$19 V$46968864/*aspel.text.convert_utf8_to_utf16..code_point*/;
    if ((!(((TYPE$6(*)(TYPE$10,TYPE$2,TYPE$103))(((CORE$DELEGATE)V$15385888/*aspel.text.decode_utf8_sequence*/)))((V$46968480/*aspel.text.convert_utf8_to_utf16.src*/), (V$46968800/*aspel.text.convert_utf8_to_utf16..assumed_length*/), ((CORE$PTR) &((V$46968864/*aspel.text.convert_utf8_to_utf16..code_point*/))))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966368/*aspel.text.UTF_CONVERSION_SOURCE_ILLEGAL*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968416/*aspel.text.convert_utf8_to_utf16.status*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    TYPE$2 V$46968928/*aspel.text.convert_utf8_to_utf16..length*/ = ((TYPE$2(*)(TYPE$19))(((CORE$DELEGATE)V$15385008/*aspel.text.get_utf16_sequence_length*/)))((V$46968864/*aspel.text.convert_utf8_to_utf16..code_point*/));
    if (CORE$gt((CORE$cast_regular(TYPE$5, (V$46968928/*aspel.text.convert_utf8_to_utf16..length*/))),((V$46968672/*aspel.text.convert_utf8_to_utf16.tgt_remaining*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46966432/*aspel.text.UTF_CONVERSION_TARGET_OVERFLOW*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968416/*aspel.text.convert_utf8_to_utf16.status*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    ((TYPE$8(*)(TYPE$19,TYPE$31,TYPE$2))(((CORE$DELEGATE)V$15385248/*aspel.text.encode_utf16_sequence_unchecked*/)))((V$46968864/*aspel.text.convert_utf8_to_utf16..code_point*/), (V$46968608/*aspel.text.convert_utf8_to_utf16.tgt*/), (V$46968928/*aspel.text.convert_utf8_to_utf16..length*/));
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$46968800/*aspel.text.convert_utf8_to_utf16..assumed_length*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968480/*aspel.text.convert_utf8_to_utf16.src*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46968800/*aspel.text.convert_utf8_to_utf16..assumed_length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968544/*aspel.text.convert_utf8_to_utf16.src_remaining*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$31 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$31, (V$46968928/*aspel.text.convert_utf8_to_utf16..length*/))*(2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968608/*aspel.text.convert_utf8_to_utf16.tgt*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$31, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46968928/*aspel.text.convert_utf8_to_utf16..length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46968672/*aspel.text.convert_utf8_to_utf16.tgt_remaining*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46968480/*aspel.text.convert_utf8_to_utf16.src*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$10*)((V$46968160/*aspel.text.convert_utf8_to_utf16.source*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46968544/*aspel.text.convert_utf8_to_utf16.src_remaining*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46968224/*aspel.text.convert_utf8_to_utf16.source_remaining*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$31 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46968608/*aspel.text.convert_utf8_to_utf16.tgt*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$31*)((V$46968288/*aspel.text.convert_utf8_to_utf16.target*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$31, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46968672/*aspel.text.convert_utf8_to_utf16.tgt_remaining*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46968352/*aspel.text.convert_utf8_to_utf16.target_remaining*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$46968416/*aspel.text.convert_utf8_to_utf16.status*/);
    return RET$VAL;
    }
    }
}

TYPE$19 V$15387008/*aspel.text.convert_utf8_to_utf16*/(TYPE$1 V$46968992/*aspel.text.convert_utf8_to_utf16.source*/, TYPE$30 V$46969056/*aspel.text.convert_utf8_to_utf16.target*/)
{
    {
    TYPE$10 V$46969120/*aspel.text.convert_utf8_to_utf16.source_pointer*/ = ((V$46968992/*aspel.text.convert_utf8_to_utf16.source*/).a);
    TYPE$5 V$46969184/*aspel.text.convert_utf8_to_utf16.source_remaining*/ = ((V$46968992/*aspel.text.convert_utf8_to_utf16.source*/).n);
    TYPE$31 V$46969248/*aspel.text.convert_utf8_to_utf16.target_pointer*/ = ((V$46969056/*aspel.text.convert_utf8_to_utf16.target*/).a);
    TYPE$5 V$46969312/*aspel.text.convert_utf8_to_utf16.target_remaining*/ = ((V$46969056/*aspel.text.convert_utf8_to_utf16.target*/).n);
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$213,TYPE$54,TYPE$212,TYPE$54))(((CORE$DELEGATE)V$15386928/*aspel.text.convert_utf8_to_utf16*/)))(((CORE$PTR) &((V$46969120/*aspel.text.convert_utf8_to_utf16.source_pointer*/))), ((CORE$PTR) &((V$46969184/*aspel.text.convert_utf8_to_utf16.source_remaining*/))), ((CORE$PTR) &((V$46969248/*aspel.text.convert_utf8_to_utf16.target_pointer*/))), ((CORE$PTR) &((V$46969312/*aspel.text.convert_utf8_to_utf16.target_remaining*/))));
    return RET$VAL;
    }
    }
}

TYPE$30 V$15387088/*aspel.text.convert_utf8_to_utf16*/(TYPE$1 V$46969376/*aspel.text.convert_utf8_to_utf16.source*/)
{
    {
    TYPE$5 V$46969440/*aspel.text.convert_utf8_to_utf16.target_length*/ = ((TYPE$5(*)(TYPE$1))(((CORE$DELEGATE)V$15386608/*aspel.text.length_utf8_as_utf16*/)))((V$46969376/*aspel.text.convert_utf8_to_utf16.source*/));
    TYPE$30 V$46969504/*aspel.text.convert_utf8_to_utf16.target*/ = CORE$NEWARRINIT((CORE$U64)((V$46969440/*aspel.text.convert_utf8_to_utf16.target_length*/)), (CORE$U64)(2), [] (void* data) {
    typedef TYPE$28 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$46969504/*aspel.text.convert_utf8_to_utf16.target*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$30 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    TYPE$10 V$46969568/*aspel.text.convert_utf8_to_utf16.source_pointer*/ = ((V$46969376/*aspel.text.convert_utf8_to_utf16.source*/).a);
    TYPE$5 V$46969632/*aspel.text.convert_utf8_to_utf16.source_remaining*/ = ((V$46969376/*aspel.text.convert_utf8_to_utf16.source*/).n);
    TYPE$31 V$46969696/*aspel.text.convert_utf8_to_utf16.target_pointer*/ = ((V$46969504/*aspel.text.convert_utf8_to_utf16.target*/).a);
    TYPE$5 V$46969760/*aspel.text.convert_utf8_to_utf16.target_remaining*/ = ((V$46969504/*aspel.text.convert_utf8_to_utf16.target*/).n);
    if (CORE$ne((((TYPE$19(*)(TYPE$213,TYPE$54,TYPE$212,TYPE$54))(((CORE$DELEGATE)V$15386928/*aspel.text.convert_utf8_to_utf16*/)))(((CORE$PTR) &((V$46969568/*aspel.text.convert_utf8_to_utf16.source_pointer*/))), ((CORE$PTR) &((V$46969632/*aspel.text.convert_utf8_to_utf16.source_remaining*/))), ((CORE$PTR) &((V$46969696/*aspel.text.convert_utf8_to_utf16.target_pointer*/))), ((CORE$PTR) &((V$46969760/*aspel.text.convert_utf8_to_utf16.target_remaining*/))))),((V$46966304/*aspel.text.UTF_CONVERSION_OK*/)))) {
    {
    CORE$DEL((void*)(((V$46969504/*aspel.text.convert_utf8_to_utf16.target*/)).a));    {
    TYPE$30 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$30 RET$VAL = (V$46969504/*aspel.text.convert_utf8_to_utf16.target*/);
    return RET$VAL;
    }
    }
}

TYPE$7 V$15387168/*aspel.system.load_shared_object*/(TYPE$1 V$46970080/*aspel.system.load_shared_object.path*/)
{
    {
    TYPE$5 V$46970144/*aspel.system.load_shared_object.path16_length*/ = ((TYPE$5(*)(TYPE$1))(((CORE$DELEGATE)V$15386608/*aspel.text.length_utf8_as_utf16*/)))((V$46970080/*aspel.system.load_shared_object.path*/));
    TYPE$30 V$46970208/*aspel.system.load_shared_object.path16*/ = CORE$NEWARR((CORE$U64)(CORE$add(((V$46970144/*aspel.system.load_shared_object.path16_length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), (CORE$U64)(2));
    if (CORE$eq((CORE$cast_array_to_ptr((V$46970208/*aspel.system.load_shared_object.path16*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$7 RET$VAL = (V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$19(*)(TYPE$1,TYPE$30))(((CORE$DELEGATE)V$15387008/*aspel.text.convert_utf8_to_utf16*/)))((V$46970080/*aspel.system.load_shared_object.path*/), (V$46970208/*aspel.system.load_shared_object.path16*/))),((V$46966304/*aspel.text.UTF_CONVERSION_OK*/)))) {
    {
    {
    TYPE$7 RET$VAL = (V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/);
    CORE$DEL((void*)(((V$46970208/*aspel.system.load_shared_object.path16*/)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$28, ((V$46970208/*aspel.system.load_shared_object.path16*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub((CORE$cast_regular(TYPE$4, ((V$46970208/*aspel.system.load_shared_object.path16*/).n))),((CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x73\x79\x73\x74\x65\x6D\\\x73\x68\x61\x72\x65\x64\x5F\x6F\x62\x6A\x65\x63\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(27)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    TYPE$19 V$46970272/*aspel.system.load_shared_object.handle*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51745896/*aspel.internal.win32.LoadLibrary*/)))(CORE$cast_regular(TYPE$19, ((V$46970208/*aspel.system.load_shared_object.path16*/).a)));
    if (CORE$eq(((V$46970272/*aspel.system.load_shared_object.handle*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    {
    TYPE$7 RET$VAL = (V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/);
    CORE$DEL((void*)(((V$46970208/*aspel.system.load_shared_object.path16*/)).a));    return RET$VAL;
    }
    }
    }
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, (V$46970272/*aspel.system.load_shared_object.handle*/));
    CORE$DEL((void*)(((V$46970208/*aspel.system.load_shared_object.path16*/)).a));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$46970208/*aspel.system.load_shared_object.path16*/)).a));    }
}

TYPE$8 V$15387248/*aspel.system.unload_shared_object*/(TYPE$7 V$46970336/*aspel.system.unload_shared_object.so*/)
{
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51745336/*aspel.internal.win32.FreeLibrary*/)))(CORE$cast_regular(TYPE$19, (V$46970336/*aspel.system.unload_shared_object.so*/)));
    }
}

TYPE$7 V$15387328/*aspel.system.lookup_function_address*/(TYPE$7 V$46970400/*aspel.system.lookup_function_address.so*/, TYPE$1 V$46970464/*aspel.system.lookup_function_address.name*/)
{
    {
    TYPE$1 V$46970528/*aspel.system.lookup_function_address.name_nulled*/ = CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$46970464/*aspel.system.lookup_function_address.name*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(1));
    if (CORE$eq((CORE$cast_array_to_ptr((V$46970528/*aspel.system.lookup_function_address.name_nulled*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$7 RET$VAL = (V$46970016/*aspel.system.INVALID_FUNCTION_ADDRESS*/);
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_array_to_ptr((V$46970464/*aspel.system.lookup_function_address.name*/)), CORE$cast_array_to_ptr((V$46970528/*aspel.system.lookup_function_address.name_nulled*/)), ((V$46970464/*aspel.system.lookup_function_address.name*/).n));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, ((V$46970528/*aspel.system.lookup_function_address.name_nulled*/)), (CORE$U64)(((V$46970464/*aspel.system.lookup_function_address.name*/).n)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x73\x79\x73\x74\x65\x6D\\\x73\x68\x61\x72\x65\x64\x5F\x6F\x62\x6A\x65\x63\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(60)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    TYPE$19 V$46970592/*aspel.system.lookup_function_address.proc*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51745816/*aspel.internal.win32.GetProcAddress*/)))(CORE$cast_regular(TYPE$19, (V$46970400/*aspel.system.lookup_function_address.so*/)), CORE$cast_regular(TYPE$19, ((V$46970528/*aspel.system.lookup_function_address.name_nulled*/).a)));
    if (CORE$eq(((V$46970592/*aspel.system.lookup_function_address.proc*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51754696/*aspel.internal.win32.report_win32_error*/)))();
    {
    TYPE$7 RET$VAL = (V$46970016/*aspel.system.INVALID_FUNCTION_ADDRESS*/);
    CORE$DEL((void*)(((V$46970528/*aspel.system.lookup_function_address.name_nulled*/)).a));    return RET$VAL;
    }
    }
    }
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, (V$46970592/*aspel.system.lookup_function_address.proc*/));
    CORE$DEL((void*)(((V$46970528/*aspel.system.lookup_function_address.name_nulled*/)).a));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$46970528/*aspel.system.lookup_function_address.name_nulled*/)).a));    }
}

TYPE$35 V$15387408/*aspel.system.lookup_function_address*/(TYPE$7 V$46970656/*aspel.system.lookup_function_address.so*/, TYPE$1 V$46970720/*aspel.system.lookup_function_address.name*/, TYPE$169 V$46970784/*aspel.system.lookup_function_address.function_type*/)
{
    {
    TYPE$35 V$46970848/*aspel.system.lookup_function_address.delegate*/;
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, ((TYPE$7(*)(TYPE$7,TYPE$1))(((CORE$DELEGATE)V$15387328/*aspel.system.lookup_function_address*/)))((V$46970656/*aspel.system.lookup_function_address.so*/), (V$46970720/*aspel.system.lookup_function_address.name*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46970848/*aspel.system.lookup_function_address.delegate*/).v));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$169 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46970784/*aspel.system.lookup_function_address.function_type*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$46970848/*aspel.system.lookup_function_address.delegate*/).t));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$169, TEMP$VAL0);
    }
    {
    TYPE$35 RET$VAL = (V$46970848/*aspel.system.lookup_function_address.delegate*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15387488/*aspel.system.abandon*/()
{
    {
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51753976/*aspel.internal.win32.TerminateProcess*/)))(((TYPE$19(CORE$STDCALL*)())(((CORE$DELEGATE)V$51753576/*aspel.internal.win32.GetCurrentProcess*/)))(), CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL)))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51753336/*aspel.internal.win32.ExitProcess*/)))(CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL)))));
    }
    }
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51753896/*aspel.internal.win32.Sleep*/)))((V$54936280/*aspel.internal.win32.INFINITE*/));
    }
}

TYPE$8 V$15387568/*aspel.system.exit*/()
{
    {
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51753336/*aspel.internal.win32.ExitProcess*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    }
}

TYPE$28 V$15387648/*aspel.system.swap_bytes16*/(TYPE$28 V$46972000/*aspel.system.swap_bytes16.value*/)
{
    {
    {
    TYPE$28 RET$VAL = CORE$bor((CORE$shl(((V$46972000/*aspel.system.swap_bytes16.value*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))),(CORE$shr(((V$46972000/*aspel.system.swap_bytes16.value*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))));
    return RET$VAL;
    }
    }
}

TYPE$19 V$15387728/*aspel.system.swap_bytes32*/(TYPE$19 V$46972064/*aspel.system.swap_bytes32.value*/)
{
    {
    {
    TYPE$19 RET$VAL = CORE$bor((CORE$bor((CORE$bor((CORE$shl(((V$46972064/*aspel.system.swap_bytes32.value*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(24ULL))))),(CORE$band((CORE$shl(((V$46972064/*aspel.system.swap_bytes32.value*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(16711680ULL))))))),(CORE$band((CORE$shr(((V$46972064/*aspel.system.swap_bytes32.value*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(65280ULL))))))),(CORE$shr(((V$46972064/*aspel.system.swap_bytes32.value*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(24ULL))))));
    return RET$VAL;
    }
    }
}

TYPE$5 V$15387808/*aspel.system.swap_bytes64*/(TYPE$5 V$46972128/*aspel.system.swap_bytes64.value*/)
{
    {
    {
    TYPE$5 RET$VAL = CORE$bor((CORE$shl((CORE$cast_regular(TYPE$5, ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15387728/*aspel.system.swap_bytes32*/)))(CORE$cast_regular(TYPE$19, (V$46972128/*aspel.system.swap_bytes64.value*/))))),(CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL))))),(CORE$cast_regular(TYPE$5, ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15387728/*aspel.system.swap_bytes32*/)))(CORE$cast_regular(TYPE$19, CORE$shr(((V$46972128/*aspel.system.swap_bytes64.value*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)))))))));
    return RET$VAL;
    }
    }
}

TYPE$28 V$15387888/*aspel.system.big_endian_to_native16*/(TYPE$28 V$46972192/*aspel.system.big_endian_to_native16.value*/)
{
    {
    {
    TYPE$28 RET$VAL = ((TYPE$28(*)(TYPE$28))(((CORE$DELEGATE)V$15387648/*aspel.system.swap_bytes16*/)))((V$46972192/*aspel.system.big_endian_to_native16.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15388128/*aspel.system.big_endian_to_native16*/(TYPE$31 V$46972384/*aspel.system.big_endian_to_native16.value*/)
{
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28(*)(TYPE$28))(((CORE$DELEGATE)V$15387648/*aspel.system.swap_bytes16*/)))((*(TYPE$28*)((V$46972384/*aspel.system.big_endian_to_native16.value*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$28*)((V$46972384/*aspel.system.big_endian_to_native16.value*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
}

TYPE$19 V$15387968/*aspel.system.big_endian_to_native32*/(TYPE$19 V$46972256/*aspel.system.big_endian_to_native32.value*/)
{
    {
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15387728/*aspel.system.swap_bytes32*/)))((V$46972256/*aspel.system.big_endian_to_native32.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15388208/*aspel.system.big_endian_to_native32*/(TYPE$103 V$46972448/*aspel.system.big_endian_to_native32.value*/)
{
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15387728/*aspel.system.swap_bytes32*/)))((*(TYPE$19*)((V$46972448/*aspel.system.big_endian_to_native32.value*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46972448/*aspel.system.big_endian_to_native32.value*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$5 V$15388048/*aspel.system.big_endian_to_native64*/(TYPE$5 V$46972320/*aspel.system.big_endian_to_native64.value*/)
{
    {
    {
    TYPE$5 RET$VAL = ((TYPE$5(*)(TYPE$5))(((CORE$DELEGATE)V$15387808/*aspel.system.swap_bytes64*/)))((V$46972320/*aspel.system.big_endian_to_native64.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15388288/*aspel.system.big_endian_to_native64*/(TYPE$54 V$46972512/*aspel.system.big_endian_to_native64.value*/)
{
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$5))(((CORE$DELEGATE)V$15387808/*aspel.system.swap_bytes64*/)))((*(TYPE$5*)((V$46972512/*aspel.system.big_endian_to_native64.value*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46972512/*aspel.system.big_endian_to_native64.value*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
}

TYPE$28 V$15388368/*aspel.system.little_endian_to_native16*/(TYPE$28 V$46972576/*aspel.system.little_endian_to_native16.value*/)
{
    {
    {
    TYPE$28 RET$VAL = (V$46972576/*aspel.system.little_endian_to_native16.value*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15388608/*aspel.system.little_endian_to_native16*/(TYPE$31 V$46972768/*aspel.system.little_endian_to_native16.value*/)
{
    {
    }
}

TYPE$19 V$15388448/*aspel.system.little_endian_to_native32*/(TYPE$19 V$46972640/*aspel.system.little_endian_to_native32.value*/)
{
    {
    {
    TYPE$19 RET$VAL = (V$46972640/*aspel.system.little_endian_to_native32.value*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15388688/*aspel.system.little_endian_to_native32*/(TYPE$103 V$46972832/*aspel.system.little_endian_to_native32.value*/)
{
    {
    }
}

TYPE$5 V$15388528/*aspel.system.little_endian_to_native64*/(TYPE$5 V$46972704/*aspel.system.little_endian_to_native64.value*/)
{
    {
    {
    TYPE$5 RET$VAL = (V$46972704/*aspel.system.little_endian_to_native64.value*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15388768/*aspel.system.little_endian_to_native64*/(TYPE$54 V$46972896/*aspel.system.little_endian_to_native64.value*/)
{
    {
    }
}

TYPE$28 V$15388848/*aspel.system.native_to_big_endian16*/(TYPE$28 V$46972960/*aspel.system.native_to_big_endian16.value*/)
{
    {
    {
    TYPE$28 RET$VAL = ((TYPE$28(*)(TYPE$28))(((CORE$DELEGATE)V$15387648/*aspel.system.swap_bytes16*/)))((V$46972960/*aspel.system.native_to_big_endian16.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15389088/*aspel.system.native_to_big_endian16*/(TYPE$31 V$46973152/*aspel.system.native_to_big_endian16.value*/)
{
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28(*)(TYPE$28))(((CORE$DELEGATE)V$15387648/*aspel.system.swap_bytes16*/)))((*(TYPE$28*)((V$46973152/*aspel.system.native_to_big_endian16.value*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$28*)((V$46973152/*aspel.system.native_to_big_endian16.value*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
}

TYPE$19 V$15388928/*aspel.system.native_to_big_endian32*/(TYPE$19 V$46973024/*aspel.system.native_to_big_endian32.value*/)
{
    {
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15387728/*aspel.system.swap_bytes32*/)))((V$46973024/*aspel.system.native_to_big_endian32.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15389168/*aspel.system.native_to_big_endian32*/(TYPE$103 V$46973216/*aspel.system.native_to_big_endian32.value*/)
{
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15387728/*aspel.system.swap_bytes32*/)))((*(TYPE$19*)((V$46973216/*aspel.system.native_to_big_endian32.value*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$46973216/*aspel.system.native_to_big_endian32.value*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$5 V$15389008/*aspel.system.native_to_big_endian64*/(TYPE$5 V$46973088/*aspel.system.native_to_big_endian64.value*/)
{
    {
    {
    TYPE$5 RET$VAL = ((TYPE$5(*)(TYPE$5))(((CORE$DELEGATE)V$15387808/*aspel.system.swap_bytes64*/)))((V$46973088/*aspel.system.native_to_big_endian64.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15389248/*aspel.system.native_to_big_endian64*/(TYPE$54 V$46973280/*aspel.system.native_to_big_endian64.value*/)
{
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$5))(((CORE$DELEGATE)V$15387808/*aspel.system.swap_bytes64*/)))((*(TYPE$5*)((V$46973280/*aspel.system.native_to_big_endian64.value*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$46973280/*aspel.system.native_to_big_endian64.value*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
}

TYPE$28 V$15389328/*aspel.system.native_to_little_endian16*/(TYPE$28 V$46973344/*aspel.system.native_to_little_endian16.value*/)
{
    {
    {
    TYPE$28 RET$VAL = (V$46973344/*aspel.system.native_to_little_endian16.value*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15389568/*aspel.system.native_to_little_endian16*/(TYPE$31 V$46973536/*aspel.system.native_to_little_endian16.value*/)
{
    {
    }
}

TYPE$19 V$15389408/*aspel.system.native_to_little_endian32*/(TYPE$19 V$46973408/*aspel.system.native_to_little_endian32.value*/)
{
    {
    {
    TYPE$19 RET$VAL = (V$46973408/*aspel.system.native_to_little_endian32.value*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15389648/*aspel.system.native_to_little_endian32*/(TYPE$103 V$46973600/*aspel.system.native_to_little_endian32.value*/)
{
    {
    }
}

TYPE$5 V$15389488/*aspel.system.native_to_little_endian64*/(TYPE$5 V$46973472/*aspel.system.native_to_little_endian64.value*/)
{
    {
    {
    TYPE$5 RET$VAL = (V$46973472/*aspel.system.native_to_little_endian64.value*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15389728/*aspel.system.native_to_little_endian64*/(TYPE$54 V$46973664/*aspel.system.native_to_little_endian64.value*/)
{
    {
    }
}

TYPE$1 V$15389808/*aspel.io.read_all_bytes_from_file*/(TYPE$1 V$46973728/*aspel.io.read_all_bytes_from_file.path*/)
{
    {
    TYPE$153 V$46973792/*aspel.io.read_all_bytes_from_file.stream*/ = ((TYPE$153(*)(TYPE$1,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15390928/*aspel.io.open_file_stream*/)))((V$46973728/*aspel.io.read_all_bytes_from_file.path*/), (V$46975392/*aspel.io.FILE_MODE_OPEN*/), (V$46975712/*aspel.io.FILE_ACCESS_READ*/));
    if (CORE$eq(((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46973856/*aspel.io.read_all_bytes_from_file.amount*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392528/*aspel.io.available*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/));
    if (CORE$eq(((V$46973856/*aspel.io.read_all_bytes_from_file.amount*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15393008/*aspel.io.close*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/));
    return RET$VAL;
    }
    }
    }
    TYPE$1 V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/ = CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, (V$46973856/*aspel.io.read_all_bytes_from_file.amount*/))), (CORE$U64)(1));
    if (CORE$eq((CORE$cast_array_to_ptr((V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15393008/*aspel.io.close*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/), CORE$cast_array_to_ptr((V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/)), CORE$cast_regular(TYPE$4, ((V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/).n)))),(CORE$cast_regular(TYPE$4, ((V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/).n))))) {
    {
    CORE$DEL((void*)(((V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/)).a));    {
    TYPE$1 RET$VAL = CORE$null_array;
    ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15393008/*aspel.io.close*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$1 RET$VAL = (V$46973920/*aspel.io.read_all_bytes_from_file.bytes*/);
    ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15393008/*aspel.io.close*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/));
    return RET$VAL;
    }
    ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15393008/*aspel.io.close*/)))((V$46973792/*aspel.io.read_all_bytes_from_file.stream*/));
    }
}

TYPE$4 V$15390368/*aspel.io.file_available*/(TYPE$153 V$46976032/*aspel.io.file_available.stream*/)
{
    {
    TYPE$244 V$46976096/*aspel.io.file_available.file_stream*/ = CORE$cast_regular(TYPE$244, (V$46976032/*aspel.io.file_available.stream*/));
    TYPE$4 V$46976160/*aspel.io.file_available.current*/ = ((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))(((CORE$DELEGATE)V$15390448/*aspel.io.file_seek*/)))((V$46976032/*aspel.io.file_available.stream*/), (CORE$S64)(0ULL), (V$47563144/*aspel.io.SEEK_CURRENT*/));
    if (CORE$eq(((V$46976160/*aspel.io.file_available.current*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46976224/*aspel.io.file_available.file_size*/;
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15390048/*aspel.io.GetFileSizeEx*/)))(CORE$cast_regular(TYPE$19, (((TYPE$243*)((V$46976096/*aspel.io.file_available.file_stream*/)))->m1)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$46976224/*aspel.io.file_available.file_size*/)))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = CORE$sub(((V$46976224/*aspel.io.file_available.file_size*/)),((V$46976160/*aspel.io.file_available.current*/)));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15390448/*aspel.io.file_seek*/(TYPE$153 V$46976288/*aspel.io.file_seek.stream*/, TYPE$4 V$46976352/*aspel.io.file_seek.offset*/, TYPE$19 V$46976416/*aspel.io.file_seek.origin*/)
{
    {
    TYPE$244 V$46976480/*aspel.io.file_seek.file_stream*/ = CORE$cast_regular(TYPE$244, (V$46976288/*aspel.io.file_seek.stream*/));
    TYPE$19 V$46976544/*aspel.io.file_seek.dw_move_method*/;
    if (CORE$eq(((V$46976416/*aspel.io.file_seek.origin*/)),((V$47563080/*aspel.io.SEEK_BEGIN*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974816/*aspel.io.FILE_BEGIN*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46976544/*aspel.io.file_seek.dw_move_method*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46976416/*aspel.io.file_seek.origin*/)),((V$47563144/*aspel.io.SEEK_CURRENT*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974880/*aspel.io.FILE_CURRENT*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46976544/*aspel.io.file_seek.dw_move_method*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46976416/*aspel.io.file_seek.origin*/)),((V$47563208/*aspel.io.SEEK_END*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974944/*aspel.io.FILE_END*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46976544/*aspel.io.file_seek.dw_move_method*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    TYPE$4 V$46976608/*aspel.io.file_seek.distance_to_move*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46976352/*aspel.io.file_seek.offset*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46976608/*aspel.io.file_seek.distance_to_move*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    TYPE$4 V$46976672/*aspel.io.file_seek.new_file_pointer*/;
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$4,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15389968/*aspel.io.SetFilePointerEx*/)))(CORE$cast_regular(TYPE$19, (((TYPE$243*)((V$46976480/*aspel.io.file_seek.file_stream*/)))->m1)), (V$46976608/*aspel.io.file_seek.distance_to_move*/), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$46976672/*aspel.io.file_seek.new_file_pointer*/)))), (V$46976544/*aspel.io.file_seek.dw_move_method*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$46976672/*aspel.io.file_seek.new_file_pointer*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15390528/*aspel.io.file_read*/(TYPE$153 V$46976736/*aspel.io.file_read.stream*/, TYPE$7 V$46976800/*aspel.io.file_read.ptr*/, TYPE$4 V$46976864/*aspel.io.file_read.count*/)
{
    {
    TYPE$244 V$46976928/*aspel.io.file_read.file_stream*/ = CORE$cast_regular(TYPE$244, (V$46976736/*aspel.io.file_read.stream*/));
    if (CORE$lt(((V$46976864/*aspel.io.file_read.count*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46976992/*aspel.io.file_read.total_number_of_bytes_read*/ = (CORE$S64)(0ULL);
    while (CORE$gt(((V$46976864/*aspel.io.file_read.count*/)),((CORE$S64)(0ULL)))) {
    {
    TYPE$19 V$46977056/*aspel.io.file_read..number_of_bytes_to_read*/ = CORE$cast_regular(TYPE$19, (V$46976864/*aspel.io.file_read.count*/));
    TYPE$19 V$46977120/*aspel.io.file_read..number_of_bytes_read*/;
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15390128/*aspel.io.ReadFile*/)))(CORE$cast_regular(TYPE$19, (((TYPE$243*)((V$46976928/*aspel.io.file_read.file_stream*/)))->m1)), CORE$cast_regular(TYPE$19, (V$46976800/*aspel.io.file_read.ptr*/)), (V$46977056/*aspel.io.file_read..number_of_bytes_to_read*/), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$46977120/*aspel.io.file_read..number_of_bytes_read*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$46977120/*aspel.io.file_read..number_of_bytes_read*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    break;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$46977120/*aspel.io.file_read..number_of_bytes_read*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46976864/*aspel.io.file_read.count*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$46977120/*aspel.io.file_read..number_of_bytes_read*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46976992/*aspel.io.file_read.total_number_of_bytes_read*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$46976992/*aspel.io.file_read.total_number_of_bytes_read*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15390608/*aspel.io.file_write*/(TYPE$153 V$46977184/*aspel.io.file_write.stream*/, TYPE$7 V$46977248/*aspel.io.file_write.ptr*/, TYPE$4 V$46977312/*aspel.io.file_write.count*/)
{
    {
    TYPE$244 V$46977376/*aspel.io.file_write.file_stream*/ = CORE$cast_regular(TYPE$244, (V$46977184/*aspel.io.file_write.stream*/));
    if (CORE$lt(((V$46977312/*aspel.io.file_write.count*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$46977440/*aspel.io.file_write.total_number_of_bytes_written*/ = (CORE$S64)(0ULL);
    while (CORE$gt(((V$46977312/*aspel.io.file_write.count*/)),((CORE$S64)(0ULL)))) {
    {
    TYPE$19 V$46977504/*aspel.io.file_write..number_of_bytes_to_write*/ = CORE$cast_regular(TYPE$19, (V$46977312/*aspel.io.file_write.count*/));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$46977504/*aspel.io.file_write..number_of_bytes_to_write*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46977312/*aspel.io.file_write.count*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    TYPE$19 V$46977568/*aspel.io.file_write..number_of_bytes_written*/;
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15390208/*aspel.io.WriteFile*/)))(CORE$cast_regular(TYPE$19, (((TYPE$243*)((V$46977376/*aspel.io.file_write.file_stream*/)))->m1)), CORE$cast_regular(TYPE$19, (V$46977248/*aspel.io.file_write.ptr*/)), (V$46977504/*aspel.io.file_write..number_of_bytes_to_write*/), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$46977568/*aspel.io.file_write..number_of_bytes_written*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$46977568/*aspel.io.file_write..number_of_bytes_written*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46977440/*aspel.io.file_write.total_number_of_bytes_written*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$ne(((V$46977568/*aspel.io.file_write..number_of_bytes_written*/)),((V$46977504/*aspel.io.file_write..number_of_bytes_to_write*/)))) {
    {
    {
    break;
    }
    }
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$46977440/*aspel.io.file_write.total_number_of_bytes_written*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$15390688/*aspel.io.file_flush*/(TYPE$153 V$46977632/*aspel.io.file_flush.stream*/)
{
    {
    TYPE$244 V$46977696/*aspel.io.file_flush.file_stream*/ = CORE$cast_regular(TYPE$244, (V$46977632/*aspel.io.file_flush.stream*/));
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$15390288/*aspel.io.FlushFileBuffers*/)))(CORE$cast_regular(TYPE$19, (((TYPE$243*)((V$46977696/*aspel.io.file_flush.file_stream*/)))->m1)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15390768/*aspel.io.file_close*/(TYPE$153 V$46977760/*aspel.io.file_close.stream*/)
{
    {
    TYPE$244 V$46977824/*aspel.io.file_close.file_stream*/ = CORE$cast_regular(TYPE$244, (V$46977760/*aspel.io.file_close.stream*/));
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752856/*aspel.internal.win32.CloseHandle*/)))(CORE$cast_regular(TYPE$19, (((TYPE$243*)((V$46977824/*aspel.io.file_close.file_stream*/)))->m1)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    CORE$DEL((void*)(((V$46977824/*aspel.io.file_close.file_stream*/))));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$46977824/*aspel.io.file_close.file_stream*/))));    }
}

TYPE$6 V$15390848/*aspel.io.standard_stream_close*/(TYPE$153 V$46977888/*aspel.io.standard_stream_close.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$153 V$15390928/*aspel.io.open_file_stream*/(TYPE$1 V$46977952/*aspel.io.open_file_stream.file_name*/, TYPE$19 V$46978016/*aspel.io.open_file_stream.mode*/, TYPE$19 V$46978080/*aspel.io.open_file_stream.access*/)
{
    {
    if (CORE$land((CORE$eq(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975712/*aspel.io.FILE_ACCESS_READ*/)))),(CORE$ne(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975392/*aspel.io.FILE_MODE_OPEN*/)))))) {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2CFBA78_OFF],(CORE$U64) SHARED$STR_2CFBA78_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x69\x6F\\\x66\x69\x6C\x65\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(181)));
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$land((CORE$eq(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975520/*aspel.io.FILE_MODE_TRUNCATE*/)))),(CORE$ne(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975776/*aspel.io.FILE_ACCESS_WRITE*/)))))) {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2CFBB58_OFF],(CORE$U64) SHARED$STR_2CFBB58_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x69\x6F\\\x66\x69\x6C\x65\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(187)));
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$5 V$46978144/*aspel.io.open_file_stream.handle*/;
    {
    TYPE$19 V$46978208/*aspel.io.open_file_stream..desired_access*/;
    if (CORE$eq(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975712/*aspel.io.FILE_ACCESS_READ*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974176/*aspel.io.GENERIC_READ*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978208/*aspel.io.open_file_stream..desired_access*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975776/*aspel.io.FILE_ACCESS_WRITE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974240/*aspel.io.GENERIC_WRITE*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978208/*aspel.io.open_file_stream..desired_access*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975840/*aspel.io.FILE_ACCESS_READ_WRITE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor(((V$46974176/*aspel.io.GENERIC_READ*/)),((V$46974240/*aspel.io.GENERIC_WRITE*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978208/*aspel.io.open_file_stream..desired_access*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975904/*aspel.io.FILE_ACCESS_APPEND*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974432/*aspel.io.FILE_APPEND_DATA*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978208/*aspel.io.open_file_stream..desired_access*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978080/*aspel.io.open_file_stream.access*/)),((V$46975968/*aspel.io.FILE_ACCESS_READ_APPEND*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor(((V$46974176/*aspel.io.GENERIC_READ*/)),((V$46974432/*aspel.io.FILE_APPEND_DATA*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978208/*aspel.io.open_file_stream..desired_access*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    TYPE$19 V$46978272/*aspel.io.open_file_stream..creation_disposition*/;
    if (CORE$eq(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975328/*aspel.io.FILE_MODE_CREATE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974496/*aspel.io.CREATE_NEW*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978272/*aspel.io.open_file_stream..creation_disposition*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975392/*aspel.io.FILE_MODE_OPEN*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974624/*aspel.io.OPEN_EXISTING*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978272/*aspel.io.open_file_stream..creation_disposition*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975456/*aspel.io.FILE_MODE_OPEN_OR_CREATE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974688/*aspel.io.OPEN_ALWAYS*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978272/*aspel.io.open_file_stream..creation_disposition*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975520/*aspel.io.FILE_MODE_TRUNCATE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974752/*aspel.io.TRUNCATE_EXISTING*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978272/*aspel.io.open_file_stream..creation_disposition*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$46978016/*aspel.io.open_file_stream.mode*/)),((V$46975584/*aspel.io.FILE_MODE_TRUNCATE_OR_CREATE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46974560/*aspel.io.CREATE_ALWAYS*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978272/*aspel.io.open_file_stream..creation_disposition*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    TYPE$5 V$46978336/*aspel.io.open_file_stream..file_name16_length*/ = ((TYPE$5(*)(TYPE$1))(((CORE$DELEGATE)V$15386608/*aspel.text.length_utf8_as_utf16*/)))((V$46977952/*aspel.io.open_file_stream.file_name*/));
    TYPE$30 V$46978400/*aspel.io.open_file_stream..file_name16*/ = CORE$NEWARR((CORE$U64)(CORE$add(((V$46978336/*aspel.io.open_file_stream..file_name16_length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), (CORE$U64)(2));
    if (CORE$eq((CORE$cast_array_to_ptr((V$46978400/*aspel.io.open_file_stream..file_name16*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$19(*)(TYPE$1,TYPE$30))(((CORE$DELEGATE)V$15387008/*aspel.text.convert_utf8_to_utf16*/)))((V$46977952/*aspel.io.open_file_stream.file_name*/), (V$46978400/*aspel.io.open_file_stream..file_name16*/))),((V$46966304/*aspel.text.UTF_CONVERSION_OK*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    CORE$DEL((void*)(((V$46978400/*aspel.io.open_file_stream..file_name16*/)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$28, ((V$46978400/*aspel.io.open_file_stream..file_name16*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub((CORE$cast_regular(TYPE$4, ((V$46978400/*aspel.io.open_file_stream..file_name16*/).n))),((CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x69\x6F\\\x66\x69\x6C\x65\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(218)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    TYPE$19 V$46978464/*aspel.io.open_file_stream..win_handle*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$15389888/*aspel.io.CreateFile*/)))(CORE$cast_regular(TYPE$19, ((V$46978400/*aspel.io.open_file_stream..file_name16*/).a)), (V$46978208/*aspel.io.open_file_stream..desired_access*/), (V$46974048/*aspel.io.FILE_SHARE_READ*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), (V$46978272/*aspel.io.open_file_stream..creation_disposition*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    if (CORE$eq(((V$46978464/*aspel.io.open_file_stream..win_handle*/)),((V$54935832/*aspel.internal.win32.INVALID_HANDLE_VALUE*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    CORE$DEL((void*)(((V$46978400/*aspel.io.open_file_stream..file_name16*/)).a));    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46978464/*aspel.io.open_file_stream..win_handle*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46978144/*aspel.io.open_file_stream.handle*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    CORE$DEL((void*)(((V$46978400/*aspel.io.open_file_stream..file_name16*/)).a));    }
    TYPE$244 V$46978528/*aspel.io.open_file_stream.file_stream*/ = (CORE$PTR)(CORE$NEW(56));
    if (CORE$eq(((V$46978528/*aspel.io.open_file_stream.file_stream*/)),(CORE$null_pointer))) {
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51752856/*aspel.internal.win32.CloseHandle*/)))(CORE$cast_regular(TYPE$19, (V$46978144/*aspel.io.open_file_stream.handle*/)));
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$153 V$46978592/*aspel.io.open_file_stream.stream*/ = CORE$cast_regular(TYPE$153, (V$46978528/*aspel.io.open_file_stream.file_stream*/));
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390368/*aspel.io.file_available*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46978592/*aspel.io.open_file_stream.stream*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390448/*aspel.io.file_seek*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46978592/*aspel.io.open_file_stream.stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390528/*aspel.io.file_read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46978592/*aspel.io.open_file_stream.stream*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390608/*aspel.io.file_write*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46978592/*aspel.io.open_file_stream.stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390688/*aspel.io.file_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46978592/*aspel.io.open_file_stream.stream*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390768/*aspel.io.file_close*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46978592/*aspel.io.open_file_stream.stream*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46978144/*aspel.io.open_file_stream.handle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$243*)((V$46978528/*aspel.io.open_file_stream.file_stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$153 RET$VAL = (V$46978592/*aspel.io.open_file_stream.stream*/);
    return RET$VAL;
    }
    }
}

TYPE$153 V$15391008/*aspel.io.get_standard_stream*/(TYPE$19 V$46978912/*aspel.io.get_standard_stream.standard_stream*/)
{
    {
    TYPE$19 INITIALIZER$47171864[3];
    TYPE$19 V$46978976/*aspel.io.get_standard_stream.win_device*/ = CORE$ABC(TYPE$19, (([&]()->TYPE$184{
    typedef TYPE$19 TEMP$TYPE;
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (-((CORE$S64)(10ULL))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47171864[0]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (-((CORE$S64)(11ULL))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47171864[1]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { auto TEMP$VAL = CORE$cast_regular(TYPE$19, (-((CORE$S64)(12ULL))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(INITIALIZER$47171864[2]);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    return CORE$MAKEARR((CORE$PTR) INITIALIZER$47171864, (CORE$U64) 3);
}())), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$46978912/*aspel.io.get_standard_stream.standard_stream*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x69\x6F\\\x66\x69\x6C\x65\x5F\x73\x74\x72\x65\x61\x6D\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(265));
    TYPE$19 V$46979040/*aspel.io.get_standard_stream.win_handle*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51741256/*aspel.internal.win32.GetStdHandle*/)))((V$46978976/*aspel.io.get_standard_stream.win_device*/));
    if (CORE$eq(((V$46979040/*aspel.io.get_standard_stream.win_handle*/)),((V$54935832/*aspel.internal.win32.INVALID_HANDLE_VALUE*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$5 V$46979104/*aspel.io.get_standard_stream.handle*/ = CORE$cast_regular(TYPE$5, (V$46979040/*aspel.io.get_standard_stream.win_handle*/));
    TYPE$244 V$46979168/*aspel.io.get_standard_stream.file_stream*/ = (CORE$PTR)(CORE$NEW(56));
    TYPE$153 V$46979232/*aspel.io.get_standard_stream.stream*/ = CORE$cast_regular(TYPE$153, (V$46979168/*aspel.io.get_standard_stream.file_stream*/));
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390368/*aspel.io.file_available*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46979232/*aspel.io.get_standard_stream.stream*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390448/*aspel.io.file_seek*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46979232/*aspel.io.get_standard_stream.stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390528/*aspel.io.file_read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46979232/*aspel.io.get_standard_stream.stream*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390608/*aspel.io.file_write*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46979232/*aspel.io.get_standard_stream.stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390688/*aspel.io.file_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46979232/*aspel.io.get_standard_stream.stream*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15390848/*aspel.io.standard_stream_close*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$46979232/*aspel.io.get_standard_stream.stream*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46979104/*aspel.io.get_standard_stream.handle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$243*)((V$46979168/*aspel.io.get_standard_stream.file_stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$153 RET$VAL = (V$46979232/*aspel.io.get_standard_stream.stream*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15391808/*aspel.io.memory_available*/(TYPE$153 V$46982880/*aspel.io.memory_available.stream*/)
{
    {
    TYPE$250 V$46982944/*aspel.io.memory_available.memory_stream*/ = CORE$cast_regular(TYPE$250, (V$46982880/*aspel.io.memory_available.stream*/));
    {
    TYPE$4 RET$VAL = CORE$sub(((((TYPE$249*)((V$46982944/*aspel.io.memory_available.memory_stream*/)))->m2)),((((TYPE$249*)((V$46982944/*aspel.io.memory_available.memory_stream*/)))->m3)));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15391888/*aspel.io.memory_seek*/(TYPE$153 V$46983008/*aspel.io.memory_seek.stream*/, TYPE$4 V$46983072/*aspel.io.memory_seek.offset*/, TYPE$19 V$46983136/*aspel.io.memory_seek.origin*/)
{
    {
    TYPE$250 V$46983200/*aspel.io.memory_seek.memory_stream*/ = CORE$cast_regular(TYPE$250, (V$46983008/*aspel.io.memory_seek.stream*/));
    TYPE$4 V$46983264/*aspel.io.memory_seek.current_position*/ = (((TYPE$249*)((V$46983200/*aspel.io.memory_seek.memory_stream*/)))->m3);
    TYPE$4 V$46983328/*aspel.io.memory_seek.data_size*/ = (((TYPE$249*)((V$46983200/*aspel.io.memory_seek.memory_stream*/)))->m2);
    TYPE$4 V$46983392/*aspel.io.memory_seek.new_position*/;
    {
    TYPE$19 SWITCH$TEMP = (V$46983136/*aspel.io.memory_seek.origin*/);
    if ((SWITCH$TEMP == ((V$47563080/*aspel.io.SEEK_BEGIN*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46983072/*aspel.io.memory_seek.offset*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46983392/*aspel.io.memory_seek.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47563144/*aspel.io.SEEK_CURRENT*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$46983264/*aspel.io.memory_seek.current_position*/)),((V$46983072/*aspel.io.memory_seek.offset*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46983392/*aspel.io.memory_seek.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47563208/*aspel.io.SEEK_END*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$46983328/*aspel.io.memory_seek.data_size*/)),((V$46983072/*aspel.io.memory_seek.offset*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46983392/*aspel.io.memory_seek.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    }
    if (CORE$gt(((V$46983392/*aspel.io.memory_seek.new_position*/)),((V$46983328/*aspel.io.memory_seek.data_size*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46983328/*aspel.io.memory_seek.data_size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46983392/*aspel.io.memory_seek.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46983392/*aspel.io.memory_seek.new_position*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$46983200/*aspel.io.memory_seek.memory_stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$4 RET$VAL = (V$46983392/*aspel.io.memory_seek.new_position*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15391968/*aspel.io.memory_read*/(TYPE$153 V$46983456/*aspel.io.memory_read.stream*/, TYPE$7 V$46983520/*aspel.io.memory_read.ptr*/, TYPE$4 V$46983584/*aspel.io.memory_read.count*/)
{
    {
    TYPE$250 V$46983648/*aspel.io.memory_read.memory_stream*/ = CORE$cast_regular(TYPE$250, (V$46983456/*aspel.io.memory_read.stream*/));
    if (CORE$gt((CORE$add(((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m3)),((V$46983584/*aspel.io.memory_read.count*/)))),((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m2)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m2)),((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m3))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46983584/*aspel.io.memory_read.count*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    TYPE$10 V$46983712/*aspel.io.memory_read.bytes*/ = CORE$cast_regular(TYPE$10, (V$46983520/*aspel.io.memory_read.ptr*/));
    {
    TYPE$4 V$46983776/*aspel.io.memory_read..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub(((V$46983584/*aspel.io.memory_read.count*/)),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$46983776/*aspel.io.memory_read..i*/ -= FOREACH$STEP;
    while ((V$46983776/*aspel.io.memory_read..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m1)))[(CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m3)),((V$46983776/*aspel.io.memory_read..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$46983712/*aspel.io.memory_read.bytes*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$46983776/*aspel.io.memory_read..i*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46983584/*aspel.io.memory_read.count*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$46983648/*aspel.io.memory_read.memory_stream*/)))->m3));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$4 RET$VAL = (V$46983584/*aspel.io.memory_read.count*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392048/*aspel.io.memory_write*/(TYPE$153 V$47561800/*aspel.io.memory_write.stream*/, TYPE$7 V$47561864/*aspel.io.memory_write.ptr*/, TYPE$4 V$47561928/*aspel.io.memory_write.count*/)
{
    {
    TYPE$250 V$47561992/*aspel.io.memory_write.memory_stream*/ = CORE$cast_regular(TYPE$250, (V$47561800/*aspel.io.memory_write.stream*/));
    if (CORE$gt((CORE$add(((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m3)),((V$47561928/*aspel.io.memory_write.count*/)))),((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m2)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m2)),((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m3))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47561928/*aspel.io.memory_write.count*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    TYPE$10 V$47562056/*aspel.io.memory_write.bytes*/ = CORE$cast_regular(TYPE$10, (V$47561864/*aspel.io.memory_write.ptr*/));
    {
    TYPE$4 V$47562120/*aspel.io.memory_write..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub(((V$47561928/*aspel.io.memory_write.count*/)),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47562120/*aspel.io.memory_write..i*/ -= FOREACH$STEP;
    while ((V$47562120/*aspel.io.memory_write..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$47562056/*aspel.io.memory_write.bytes*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$47562120/*aspel.io.memory_write..i*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m1)))[(CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m3)),((V$47562120/*aspel.io.memory_write..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47561928/*aspel.io.memory_write.count*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47561992/*aspel.io.memory_write.memory_stream*/)))->m3));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$4 RET$VAL = (V$47561928/*aspel.io.memory_write.count*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392128/*aspel.io.memory_write_constant*/(TYPE$153 V$47562184/*aspel.io.memory_write_constant.stream*/, TYPE$7 V$47562248/*aspel.io.memory_write_constant.ptr*/, TYPE$4 V$47562312/*aspel.io.memory_write_constant.count*/)
{
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$15392208/*aspel.io.memory_flush*/(TYPE$153 V$47562376/*aspel.io.memory_flush.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15392288/*aspel.io.memory_close*/(TYPE$153 V$47562440/*aspel.io.memory_close.stream*/)
{
    {
    TYPE$250 V$47562504/*aspel.io.memory_close.memory_stream*/ = CORE$cast_regular(TYPE$250, (V$47562440/*aspel.io.memory_close.stream*/));
    CORE$DEL((void*)(((V$47562504/*aspel.io.memory_close.memory_stream*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$153 V$15392368/*aspel.io.open_memory_stream*/(TYPE$7 V$47562568/*aspel.io.open_memory_stream.memory*/, TYPE$4 V$47562632/*aspel.io.open_memory_stream.size*/)
{
    {
    TYPE$250 V$47562696/*aspel.io.open_memory_stream.memory_stream*/ = (CORE$PTR)(CORE$NEW(72));
    if (CORE$eq(((V$47562696/*aspel.io.open_memory_stream.memory_stream*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$153 V$47562760/*aspel.io.open_memory_stream.stream*/ = CORE$cast_regular(TYPE$153, (V$47562696/*aspel.io.open_memory_stream.memory_stream*/));
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391808/*aspel.io.memory_available*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47562760/*aspel.io.open_memory_stream.stream*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391888/*aspel.io.memory_seek*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47562760/*aspel.io.open_memory_stream.stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391968/*aspel.io.memory_read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47562760/*aspel.io.open_memory_stream.stream*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15392048/*aspel.io.memory_write*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47562760/*aspel.io.open_memory_stream.stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15392208/*aspel.io.memory_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47562760/*aspel.io.open_memory_stream.stream*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15392288/*aspel.io.memory_close*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47562760/*aspel.io.open_memory_stream.stream*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$47562568/*aspel.io.open_memory_stream.memory*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47562696/*aspel.io.open_memory_stream.memory_stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47562632/*aspel.io.open_memory_stream.size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47562696/*aspel.io.open_memory_stream.memory_stream*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47562696/*aspel.io.open_memory_stream.memory_stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$153 RET$VAL = (V$47562760/*aspel.io.open_memory_stream.stream*/);
    return RET$VAL;
    }
    }
}

TYPE$153 V$15392448/*aspel.io.open_constant_memory_stream*/(TYPE$7 V$47562824/*aspel.io.open_constant_memory_stream.memory*/, TYPE$4 V$47562888/*aspel.io.open_constant_memory_stream.size*/)
{
    {
    TYPE$250 V$47562952/*aspel.io.open_constant_memory_stream.memory_stream*/ = (CORE$PTR)(CORE$NEW(72));
    if (CORE$eq(((V$47562952/*aspel.io.open_constant_memory_stream.memory_stream*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$153 V$47563016/*aspel.io.open_constant_memory_stream.stream*/ = CORE$cast_regular(TYPE$153, (V$47562952/*aspel.io.open_constant_memory_stream.memory_stream*/));
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391808/*aspel.io.memory_available*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47563016/*aspel.io.open_constant_memory_stream.stream*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391888/*aspel.io.memory_seek*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47563016/*aspel.io.open_constant_memory_stream.stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391968/*aspel.io.memory_read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47563016/*aspel.io.open_constant_memory_stream.stream*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15392128/*aspel.io.memory_write_constant*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47563016/*aspel.io.open_constant_memory_stream.stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15392208/*aspel.io.memory_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47563016/*aspel.io.open_constant_memory_stream.stream*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15392288/*aspel.io.memory_close*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$154*)((V$47563016/*aspel.io.open_constant_memory_stream.stream*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$47562824/*aspel.io.open_constant_memory_stream.memory*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47562952/*aspel.io.open_constant_memory_stream.memory_stream*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47562888/*aspel.io.open_constant_memory_stream.size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47562952/*aspel.io.open_constant_memory_stream.memory_stream*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$249*)((V$47562952/*aspel.io.open_constant_memory_stream.memory_stream*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$153 RET$VAL = (V$47563016/*aspel.io.open_constant_memory_stream.stream*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392528/*aspel.io.available*/(TYPE$153 V$47563784/*aspel.io.available.stream*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153))((((TYPE$154*)((V$47563784/*aspel.io.available.stream*/)))->m0)))((V$47563784/*aspel.io.available.stream*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392608/*aspel.io.seek*/(TYPE$153 V$47563848/*aspel.io.seek.stream*/, TYPE$4 V$47563912/*aspel.io.seek.offset*/, TYPE$19 V$47563976/*aspel.io.seek.origin*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))((((TYPE$154*)((V$47563848/*aspel.io.seek.stream*/)))->m1)))((V$47563848/*aspel.io.seek.stream*/), (V$47563912/*aspel.io.seek.offset*/), (V$47563976/*aspel.io.seek.origin*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392688/*aspel.io.position*/(TYPE$153 V$47564040/*aspel.io.position.stream*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))((((TYPE$154*)((V$47564040/*aspel.io.position.stream*/)))->m1)))((V$47564040/*aspel.io.position.stream*/), (CORE$S64)(0ULL), (V$47563144/*aspel.io.SEEK_CURRENT*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392768/*aspel.io.read*/(TYPE$153 V$47564104/*aspel.io.read.stream*/, TYPE$7 V$47564168/*aspel.io.read.ptr*/, TYPE$4 V$47564232/*aspel.io.read.count*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))((((TYPE$154*)((V$47564104/*aspel.io.read.stream*/)))->m2)))((V$47564104/*aspel.io.read.stream*/), (V$47564168/*aspel.io.read.ptr*/), (V$47564232/*aspel.io.read.count*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15392848/*aspel.io.write*/(TYPE$153 V$47564296/*aspel.io.write.stream*/, TYPE$7 V$47564360/*aspel.io.write.ptr*/, TYPE$4 V$47564424/*aspel.io.write.count*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))((((TYPE$154*)((V$47564296/*aspel.io.write.stream*/)))->m3)))((V$47564296/*aspel.io.write.stream*/), (V$47564360/*aspel.io.write.ptr*/), (V$47564424/*aspel.io.write.count*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15392928/*aspel.io.flush*/(TYPE$153 V$47564488/*aspel.io.flush.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153))((((TYPE$154*)((V$47564488/*aspel.io.flush.stream*/)))->m4)))((V$47564488/*aspel.io.flush.stream*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393008/*aspel.io.close*/(TYPE$153 V$47564552/*aspel.io.close.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153))((((TYPE$154*)((V$47564552/*aspel.io.close.stream*/)))->m5)))((V$47564552/*aspel.io.close.stream*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393088/*aspel.io.read_u8*/(TYPE$153 V$47564616/*aspel.io.read_u8.stream*/, TYPE$10 V$47564680/*aspel.io.read_u8.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((V$47564616/*aspel.io.read_u8.stream*/), CORE$cast_regular(TYPE$7, (V$47564680/*aspel.io.read_u8.value*/)), (CORE$S64)(1ULL))),((CORE$S64)(1ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393168/*aspel.io.read_u16*/(TYPE$153 V$47564744/*aspel.io.read_u16.stream*/, TYPE$31 V$47564808/*aspel.io.read_u16.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((V$47564744/*aspel.io.read_u16.stream*/), CORE$cast_regular(TYPE$7, (V$47564808/*aspel.io.read_u16.value*/)), (CORE$S64)(2ULL))),((CORE$S64)(2ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393248/*aspel.io.read_u32*/(TYPE$153 V$47564872/*aspel.io.read_u32.stream*/, TYPE$103 V$47564936/*aspel.io.read_u32.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((V$47564872/*aspel.io.read_u32.stream*/), CORE$cast_regular(TYPE$7, (V$47564936/*aspel.io.read_u32.value*/)), (CORE$S64)(4ULL))),((CORE$S64)(4ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393328/*aspel.io.read_u64*/(TYPE$153 V$47565000/*aspel.io.read_u64.stream*/, TYPE$54 V$47565064/*aspel.io.read_u64.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((V$47565000/*aspel.io.read_u64.stream*/), CORE$cast_regular(TYPE$7, (V$47565064/*aspel.io.read_u64.value*/)), (CORE$S64)(8ULL))),((CORE$S64)(8ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393408/*aspel.io.read_be16*/(TYPE$153 V$47565128/*aspel.io.read_be16.stream*/, TYPE$31 V$47565192/*aspel.io.read_be16.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393168/*aspel.io.read_u16*/)))((V$47565128/*aspel.io.read_be16.stream*/), (V$47565192/*aspel.io.read_be16.value*/));
    ((TYPE$8(*)(TYPE$31))(((CORE$DELEGATE)V$15388128/*aspel.system.big_endian_to_native16*/)))((V$47565192/*aspel.io.read_be16.value*/));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$31))(((CORE$DELEGATE)V$15388128/*aspel.system.big_endian_to_native16*/)))((V$47565192/*aspel.io.read_be16.value*/));
    }
}

TYPE$6 V$15393488/*aspel.io.read_be32*/(TYPE$153 V$47565256/*aspel.io.read_be32.stream*/, TYPE$103 V$47565320/*aspel.io.read_be32.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393248/*aspel.io.read_u32*/)))((V$47565256/*aspel.io.read_be32.stream*/), (V$47565320/*aspel.io.read_be32.value*/));
    ((TYPE$8(*)(TYPE$103))(((CORE$DELEGATE)V$15388208/*aspel.system.big_endian_to_native32*/)))((V$47565320/*aspel.io.read_be32.value*/));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$103))(((CORE$DELEGATE)V$15388208/*aspel.system.big_endian_to_native32*/)))((V$47565320/*aspel.io.read_be32.value*/));
    }
}

TYPE$6 V$15393568/*aspel.io.read_be64*/(TYPE$153 V$47565384/*aspel.io.read_be64.stream*/, TYPE$54 V$47565448/*aspel.io.read_be64.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$54))(((CORE$DELEGATE)V$15393328/*aspel.io.read_u64*/)))((V$47565384/*aspel.io.read_be64.stream*/), (V$47565448/*aspel.io.read_be64.value*/));
    ((TYPE$8(*)(TYPE$54))(((CORE$DELEGATE)V$15388288/*aspel.system.big_endian_to_native64*/)))((V$47565448/*aspel.io.read_be64.value*/));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$54))(((CORE$DELEGATE)V$15388288/*aspel.system.big_endian_to_native64*/)))((V$47565448/*aspel.io.read_be64.value*/));
    }
}

TYPE$6 V$15393648/*aspel.io.read_le16*/(TYPE$153 V$47565512/*aspel.io.read_le16.stream*/, TYPE$31 V$47565576/*aspel.io.read_le16.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393168/*aspel.io.read_u16*/)))((V$47565512/*aspel.io.read_le16.stream*/), (V$47565576/*aspel.io.read_le16.value*/));
    ((TYPE$8(*)(TYPE$31))(((CORE$DELEGATE)V$15388608/*aspel.system.little_endian_to_native16*/)))((V$47565576/*aspel.io.read_le16.value*/));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$31))(((CORE$DELEGATE)V$15388608/*aspel.system.little_endian_to_native16*/)))((V$47565576/*aspel.io.read_le16.value*/));
    }
}

TYPE$6 V$15393728/*aspel.io.read_le32*/(TYPE$153 V$47565640/*aspel.io.read_le32.stream*/, TYPE$103 V$47565704/*aspel.io.read_le32.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393248/*aspel.io.read_u32*/)))((V$47565640/*aspel.io.read_le32.stream*/), (V$47565704/*aspel.io.read_le32.value*/));
    ((TYPE$8(*)(TYPE$103))(((CORE$DELEGATE)V$15388688/*aspel.system.little_endian_to_native32*/)))((V$47565704/*aspel.io.read_le32.value*/));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$103))(((CORE$DELEGATE)V$15388688/*aspel.system.little_endian_to_native32*/)))((V$47565704/*aspel.io.read_le32.value*/));
    }
}

TYPE$6 V$15393808/*aspel.io.read_le64*/(TYPE$153 V$47565768/*aspel.io.read_le64.stream*/, TYPE$54 V$47565832/*aspel.io.read_le64.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$54))(((CORE$DELEGATE)V$15393328/*aspel.io.read_u64*/)))((V$47565768/*aspel.io.read_le64.stream*/), (V$47565832/*aspel.io.read_le64.value*/));
    ((TYPE$8(*)(TYPE$54))(((CORE$DELEGATE)V$15388768/*aspel.system.little_endian_to_native64*/)))((V$47565832/*aspel.io.read_le64.value*/));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$54))(((CORE$DELEGATE)V$15388768/*aspel.system.little_endian_to_native64*/)))((V$47565832/*aspel.io.read_le64.value*/));
    }
}

TYPE$6 V$15393888/*aspel.io.write_u8*/(TYPE$153 V$47565896/*aspel.io.write_u8.stream*/, TYPE$2 V$47565960/*aspel.io.write_u8.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$47565896/*aspel.io.write_u8.stream*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((V$47565960/*aspel.io.write_u8.value*/)))), (CORE$S64)(1ULL))),((CORE$S64)(1ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15393968/*aspel.io.write_u16*/(TYPE$153 V$47566024/*aspel.io.write_u16.stream*/, TYPE$28 V$47566088/*aspel.io.write_u16.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$47566024/*aspel.io.write_u16.stream*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((V$47566088/*aspel.io.write_u16.value*/)))), (CORE$S64)(2ULL))),((CORE$S64)(2ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394048/*aspel.io.write_u32*/(TYPE$153 V$47566152/*aspel.io.write_u32.stream*/, TYPE$19 V$47566216/*aspel.io.write_u32.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$47566152/*aspel.io.write_u32.stream*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((V$47566216/*aspel.io.write_u32.value*/)))), (CORE$S64)(4ULL))),((CORE$S64)(4ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394128/*aspel.io.write_u64*/(TYPE$153 V$47566280/*aspel.io.write_u64.stream*/, TYPE$5 V$47566344/*aspel.io.write_u64.value*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((V$47566280/*aspel.io.write_u64.stream*/), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((V$47566344/*aspel.io.write_u64.value*/)))), (CORE$S64)(8ULL))),((CORE$S64)(8ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394208/*aspel.io.write_be16*/(TYPE$153 V$47566408/*aspel.io.write_be16.stream*/, TYPE$28 V$47566472/*aspel.io.write_be16.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$28))(((CORE$DELEGATE)V$15393968/*aspel.io.write_u16*/)))((V$47566408/*aspel.io.write_be16.stream*/), ((TYPE$28(*)(TYPE$28))(((CORE$DELEGATE)V$15388848/*aspel.system.native_to_big_endian16*/)))((V$47566472/*aspel.io.write_be16.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394288/*aspel.io.write_be32*/(TYPE$153 V$47566536/*aspel.io.write_be32.stream*/, TYPE$19 V$47566600/*aspel.io.write_be32.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394048/*aspel.io.write_u32*/)))((V$47566536/*aspel.io.write_be32.stream*/), ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15388928/*aspel.system.native_to_big_endian32*/)))((V$47566600/*aspel.io.write_be32.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394368/*aspel.io.write_be64*/(TYPE$153 V$47566664/*aspel.io.write_be64.stream*/, TYPE$5 V$47566728/*aspel.io.write_be64.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$5))(((CORE$DELEGATE)V$15394128/*aspel.io.write_u64*/)))((V$47566664/*aspel.io.write_be64.stream*/), ((TYPE$5(*)(TYPE$5))(((CORE$DELEGATE)V$15389008/*aspel.system.native_to_big_endian64*/)))((V$47566728/*aspel.io.write_be64.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394448/*aspel.io.write_le16*/(TYPE$153 V$47566792/*aspel.io.write_le16.stream*/, TYPE$28 V$47566856/*aspel.io.write_le16.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$28))(((CORE$DELEGATE)V$15393968/*aspel.io.write_u16*/)))((V$47566792/*aspel.io.write_le16.stream*/), ((TYPE$28(*)(TYPE$28))(((CORE$DELEGATE)V$15389328/*aspel.system.native_to_little_endian16*/)))((V$47566856/*aspel.io.write_le16.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394528/*aspel.io.write_le32*/(TYPE$153 V$47566920/*aspel.io.write_le32.stream*/, TYPE$19 V$47566984/*aspel.io.write_le32.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394048/*aspel.io.write_u32*/)))((V$47566920/*aspel.io.write_le32.stream*/), ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$15389408/*aspel.system.native_to_little_endian32*/)))((V$47566984/*aspel.io.write_le32.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394608/*aspel.io.write_le64*/(TYPE$153 V$47567048/*aspel.io.write_le64.stream*/, TYPE$5 V$47567112/*aspel.io.write_le64.value*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$5))(((CORE$DELEGATE)V$15394128/*aspel.io.write_u64*/)))((V$47567048/*aspel.io.write_le64.stream*/), ((TYPE$5(*)(TYPE$5))(((CORE$DELEGATE)V$15389488/*aspel.system.native_to_little_endian64*/)))((V$47567112/*aspel.io.write_le64.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$153 V$15391088/*aspel.audio.open_data_queue*/(TYPE$19 V$46980320/*aspel.audio.open_data_queue.buffer_size*/, TYPE$19 V$46980384/*aspel.audio.open_data_queue.initial_pool*/, TYPE$66 V$46980448/*aspel.audio.open_data_queue.lock*/)
{
    {
    TYPE$261 V$46980512/*aspel.audio.open_data_queue.queue*/ = (CORE$PTR)(CORE$NEW(92));
    if (CORE$eq(((V$46980512/*aspel.audio.open_data_queue.queue*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391328/*aspel.audio.queue_available*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m0).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391408/*aspel.audio.queue_seek*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m0).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391488/*aspel.audio.queue_read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m0).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391568/*aspel.audio.queue_write*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m0).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391648/*aspel.audio.queue_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m0).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$15391728/*aspel.audio.queue_close*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m0).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$258, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$258, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$258, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46980320/*aspel.audio.open_data_queue.buffer_size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$66 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46980448/*aspel.audio.open_data_queue.lock*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$66, TEMP$VAL0);
    }
    while (CORE$gt(((V$46980384/*aspel.audio.open_data_queue.initial_pool*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$258 V$46980576/*aspel.audio.open_data_queue..buffer*/ = ((TYPE$258(*)(TYPE$261))(((CORE$DELEGATE)V$15391168/*aspel.audio.allocate_buffer*/)))((V$46980512/*aspel.audio.open_data_queue.queue*/));
    if (CORE$eq(((V$46980576/*aspel.audio.open_data_queue..buffer*/)),(CORE$null_pointer))) {
    {
    ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15393008/*aspel.io.close*/)))(CORE$cast_regular(TYPE$153, (V$46980512/*aspel.audio.open_data_queue.queue*/)));
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46980576/*aspel.audio.open_data_queue..buffer*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46980576/*aspel.audio.open_data_queue..buffer*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46980512/*aspel.audio.open_data_queue.queue*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46980384/*aspel.audio.open_data_queue.initial_pool*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, (V$46980512/*aspel.audio.open_data_queue.queue*/));
    return RET$VAL;
    }
    }
}

TYPE$258 V$15391168/*aspel.audio.allocate_buffer*/(TYPE$261 V$46980640/*aspel.audio.allocate_buffer.queue*/)
{
    {
    TYPE$10 V$46980704/*aspel.audio.allocate_buffer.memory*/ = CORE$cast_array_to_ptr(CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$19, (CORE$U64)(24))),((((TYPE$259*)((V$46980640/*aspel.audio.allocate_buffer.queue*/)))->m5))))), (CORE$U64)(1)));
    if (CORE$eq(((V$46980704/*aspel.audio.allocate_buffer.memory*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$258 RET$VAL = CORE$cast_regular(TYPE$258, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$258 V$46980768/*aspel.audio.allocate_buffer.buffer*/ = CORE$cast_regular(TYPE$258, (V$46980704/*aspel.audio.allocate_buffer.memory*/));
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$46980704/*aspel.audio.allocate_buffer.memory*/)),(CORE$cast_regular(TYPE$10, (CORE$U64)(24)))*(1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46980768/*aspel.audio.allocate_buffer.buffer*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46980768/*aspel.audio.allocate_buffer.buffer*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46980768/*aspel.audio.allocate_buffer.buffer*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$258, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46980768/*aspel.audio.allocate_buffer.buffer*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    TYPE$258 RET$VAL = (V$46980768/*aspel.audio.allocate_buffer.buffer*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15391248/*aspel.audio.delete_buffer_list*/(TYPE$258 V$46980832/*aspel.audio.delete_buffer_list.head*/)
{
    {
    TYPE$258 V$46980896/*aspel.audio.delete_buffer_list.current*/ = (V$46980832/*aspel.audio.delete_buffer_list.head*/);
    while (CORE$ne(((V$46980896/*aspel.audio.delete_buffer_list.current*/)),(CORE$null_pointer))) {
    {
    TYPE$258 V$46980960/*aspel.audio.delete_buffer_list..next*/ = (((TYPE$257*)((V$46980896/*aspel.audio.delete_buffer_list.current*/)))->m3);
    CORE$DEL((void*)(((V$46980896/*aspel.audio.delete_buffer_list.current*/))));    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46980960/*aspel.audio.delete_buffer_list..next*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46980896/*aspel.audio.delete_buffer_list.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$4 V$15391328/*aspel.audio.queue_available*/(TYPE$153 V$46981024/*aspel.audio.queue_available.stream*/)
{
    {
    TYPE$261 V$46981088/*aspel.audio.queue_available.queue*/ = CORE$cast_regular(TYPE$261, (V$46981024/*aspel.audio.queue_available.stream*/));
    {
    TYPE$4 RET$VAL = CORE$cast_regular(TYPE$4, (((TYPE$259*)((V$46981088/*aspel.audio.queue_available.queue*/)))->m4));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15391408/*aspel.audio.queue_seek*/(TYPE$153 V$46981152/*aspel.audio.queue_seek.stream*/, TYPE$4 V$46981216/*aspel.audio.queue_seek.offset*/, TYPE$19 V$46981280/*aspel.audio.queue_seek.origin*/)
{
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$15391488/*aspel.audio.queue_read*/(TYPE$153 V$46981344/*aspel.audio.queue_read.stream*/, TYPE$7 V$46981408/*aspel.audio.queue_read.ptr*/, TYPE$4 V$46981472/*aspel.audio.queue_read.count*/)
{
    {
    TYPE$261 V$46981536/*aspel.audio.queue_read.queue*/ = CORE$cast_regular(TYPE$261, (V$46981344/*aspel.audio.queue_read.stream*/));
    if (CORE$lt(((V$46981472/*aspel.audio.queue_read.count*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m6)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m6));
    }
    }
    TYPE$10 V$46981600/*aspel.audio.queue_read.destination*/ = CORE$cast_regular(TYPE$10, (V$46981408/*aspel.audio.queue_read.ptr*/));
    while (CORE$land((CORE$gt(((V$46981472/*aspel.audio.queue_read.count*/)),((CORE$S64)(0ULL)))),(CORE$ne(((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m1)),(CORE$null_pointer))))) {
    {
    TYPE$258 V$46981664/*aspel.audio.queue_read..current*/ = (((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m1);
    TYPE$19 V$46981728/*aspel.audio.queue_read..available*/ = CORE$sub(((((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m2)),((((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m1)));
    TYPE$4 V$46981792/*aspel.audio.queue_read..amount*/ = (V$46981472/*aspel.audio.queue_read.count*/);
    if (CORE$gt(((V$46981792/*aspel.audio.queue_read..amount*/)),(CORE$cast_regular(TYPE$4, (V$46981728/*aspel.audio.queue_read..available*/))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$46981728/*aspel.audio.queue_read..available*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46981792/*aspel.audio.queue_read..amount*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_regular(TYPE$7, CORE$add(((((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m0)),(CORE$cast_regular(TYPE$10, (((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m1)))*(1))), CORE$cast_regular(TYPE$7, (V$46981600/*aspel.audio.queue_read.destination*/)), CORE$cast_regular(TYPE$5, (V$46981792/*aspel.audio.queue_read..amount*/)));
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$46981792/*aspel.audio.queue_read..amount*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46981600/*aspel.audio.queue_read.destination*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46981792/*aspel.audio.queue_read..amount*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46981472/*aspel.audio.queue_read.count*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46981792/*aspel.audio.queue_read..amount*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m4));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$eq(((V$46981792/*aspel.audio.queue_read..amount*/)),(CORE$cast_regular(TYPE$4, (V$46981728/*aspel.audio.queue_read..available*/))))) {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46981664/*aspel.audio.queue_read..current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$46981792/*aspel.audio.queue_read..amount*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46981664/*aspel.audio.queue_read..current*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    }
    if (CORE$eq(((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m1)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$258, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m6)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$259*)((V$46981536/*aspel.audio.queue_read.queue*/)))->m6));
    }
    }
    {
    TYPE$4 RET$VAL = CORE$sub((CORE$cast_regular(TYPE$4, (V$46981600/*aspel.audio.queue_read.destination*/))),(CORE$cast_regular(TYPE$4, (V$46981408/*aspel.audio.queue_read.ptr*/))));
    return RET$VAL;
    }
    }
}

TYPE$4 V$15391568/*aspel.audio.queue_write*/(TYPE$153 V$46981856/*aspel.audio.queue_write.stream*/, TYPE$7 V$46981920/*aspel.audio.queue_write.ptr*/, TYPE$4 V$46981984/*aspel.audio.queue_write.count*/)
{
    {
    TYPE$261 V$46982048/*aspel.audio.queue_write.queue*/ = CORE$cast_regular(TYPE$261, (V$46981856/*aspel.audio.queue_write.stream*/));
    if (CORE$lt(((V$46981984/*aspel.audio.queue_write.count*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m6)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m6));
    }
    }
    TYPE$10 V$46982112/*aspel.audio.queue_write.source*/ = CORE$cast_regular(TYPE$10, (V$46981920/*aspel.audio.queue_write.ptr*/));
    while (CORE$gt(((V$46981984/*aspel.audio.queue_write.count*/)),((CORE$S64)(0ULL)))) {
    {
    TYPE$258 V$46982176/*aspel.audio.queue_write..current*/ = (((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m2);
    if (CORE$lor((CORE$eq(((V$46982176/*aspel.audio.queue_write..current*/)),(CORE$null_pointer))),(CORE$eq(((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m2)),((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m5)))))) {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46982176/*aspel.audio.queue_write..current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    if (CORE$ne(((V$46982176/*aspel.audio.queue_write..current*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$258(*)(TYPE$261))(((CORE$DELEGATE)V$15391168/*aspel.audio.allocate_buffer*/)))((V$46982048/*aspel.audio.queue_write.queue*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46982176/*aspel.audio.queue_write..current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    if (CORE$eq(((V$46982176/*aspel.audio.queue_write..current*/)),(CORE$null_pointer))) {
    {
    {
    break;
    }
    }
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$258, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    if (CORE$eq(((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m2)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46982176/*aspel.audio.queue_write..current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46982176/*aspel.audio.queue_write..current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m2)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$258 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46982176/*aspel.audio.queue_write..current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$258, TEMP$VAL0);
    }
    }
    }
    TYPE$19 V$46982240/*aspel.audio.queue_write..available*/ = CORE$sub(((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m5)),((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m2)));
    TYPE$4 V$46982304/*aspel.audio.queue_write..amount*/ = (V$46981984/*aspel.audio.queue_write.count*/);
    if (CORE$gt(((V$46982304/*aspel.audio.queue_write..amount*/)),(CORE$cast_regular(TYPE$4, (V$46982240/*aspel.audio.queue_write..available*/))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$46982240/*aspel.audio.queue_write..available*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46982304/*aspel.audio.queue_write..amount*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_regular(TYPE$7, (V$46982112/*aspel.audio.queue_write.source*/)), CORE$cast_regular(TYPE$7, CORE$add(((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m0)),(CORE$cast_regular(TYPE$10, (((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m2)))*(1))), CORE$cast_regular(TYPE$5, (V$46982304/*aspel.audio.queue_write..amount*/)));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$46982304/*aspel.audio.queue_write..amount*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$257*)((V$46982176/*aspel.audio.queue_write..current*/)))->m2));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$46982304/*aspel.audio.queue_write..amount*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46982112/*aspel.audio.queue_write.source*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46982304/*aspel.audio.queue_write..amount*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$46981984/*aspel.audio.queue_write.count*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$46982304/*aspel.audio.queue_write..amount*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m4));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m6)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$259*)((V$46982048/*aspel.audio.queue_write.queue*/)))->m6));
    }
    }
    {
    TYPE$4 RET$VAL = CORE$sub((CORE$cast_regular(TYPE$4, (V$46982112/*aspel.audio.queue_write.source*/))),(CORE$cast_regular(TYPE$4, (V$46981920/*aspel.audio.queue_write.ptr*/))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15391648/*aspel.audio.queue_flush*/(TYPE$153 V$46982368/*aspel.audio.queue_flush.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15391728/*aspel.audio.queue_close*/(TYPE$153 V$46982432/*aspel.audio.queue_close.stream*/)
{
    {
    TYPE$261 V$46982496/*aspel.audio.queue_close.queue*/ = CORE$cast_regular(TYPE$261, (V$46982432/*aspel.audio.queue_close.stream*/));
    ((TYPE$8(*)(TYPE$258))(((CORE$DELEGATE)V$15391248/*aspel.audio.delete_buffer_list*/)))((((TYPE$259*)((V$46982496/*aspel.audio.queue_close.queue*/)))->m1));
    ((TYPE$8(*)(TYPE$258))(((CORE$DELEGATE)V$15391248/*aspel.audio.delete_buffer_list*/)))((((TYPE$259*)((V$46982496/*aspel.audio.queue_close.queue*/)))->m3));
    CORE$DEL((void*)(((V$46982496/*aspel.audio.queue_close.queue*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$2 V$47872880/*aspel.audio.get_silence_value*/(TYPE$28 V$50413336/*aspel.audio.get_silence_value.format*/)
{
    {
    if (CORE$eq(((V$50413336/*aspel.audio.get_silence_value.format*/)),((V$50412248/*aspel.audio.SAMPLE_UINT8*/)))) {
    {
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$2 RET$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$28 V$47872960/*aspel.audio.next_sample_format*/(TYPE$28 V$50413400/*aspel.audio.next_sample_format.desired*/, TYPE$28 V$50413464/*aspel.audio.next_sample_format.current*/)
{
    {
    if (CORE$eq((CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),((V$50411800/*aspel.audio.SAMPLE_8_BITS*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50412184/*aspel.audio.SAMPLE_NATIVE_ENDIANNESS*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50413400/*aspel.audio.next_sample_format.desired*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),((V$50411800/*aspel.audio.SAMPLE_8_BITS*/)))) {
    {
    if (CORE$eq((CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)))),(CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)))))) {
    {
    if (CORE$ne((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$28 RET$VAL = CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)))));
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    TYPE$28 RET$VAL = CORE$bor(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)));
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/)))))),(CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50412056/*aspel.audio.SAMPLE_BIG_ENDIAN*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50413464/*aspel.audio.next_sample_format.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    }
    }
    if (CORE$eq((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    if (CORE$eq((CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),(CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))))) {
    {
    if (CORE$ne((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$28 RET$VAL = CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))));
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    TYPE$28 RET$VAL = CORE$bor(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)));
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50412120/*aspel.audio.SAMPLE_SIGNED*/)))))),(CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50412120/*aspel.audio.SAMPLE_SIGNED*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50413464/*aspel.audio.next_sample_format.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    }
    }
    if (CORE$land((CORE$ge((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))))),(CORE$eq((CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))))),(CORE$mul((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50413464/*aspel.audio.next_sample_format.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    if (CORE$gt((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)))) {
    {
    if (CORE$eq((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$28 RET$VAL = CORE$bor((CORE$bor((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))))),((V$50411928/*aspel.audio.SAMPLE_32_BITS*/)))),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)));
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~(CORE$bor(((V$50411736/*aspel.audio.SAMPLE_SIZE*/)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))))))),(CORE$div((CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50413464/*aspel.audio.next_sample_format.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    if (CORE$lt((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),((V$50411800/*aspel.audio.SAMPLE_8_BITS*/)))) {
    {
    {
    TYPE$28 RET$VAL = CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$28 RET$VAL = (V$50413464/*aspel.audio.next_sample_format.current*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    {
    TYPE$28 RET$VAL = (V$50413464/*aspel.audio.next_sample_format.current*/);
    return RET$VAL;
    }
    }
    }
    }
    }
    if (CORE$ne((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$28 RET$VAL = CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))));
    return RET$VAL;
    }
    }
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$le((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$band(((V$50413400/*aspel.audio.next_sample_format.desired*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/))))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x73\x61\x6D\x70\x6C\x65\x5F\x66\x6F\x72\x6D\x61\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(104)));
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((~((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))))),(CORE$div((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50413464/*aspel.audio.next_sample_format.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    if (CORE$lt((CORE$band(((V$50413464/*aspel.audio.next_sample_format.current*/)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),((V$50411800/*aspel.audio.SAMPLE_8_BITS*/)))) {
    {
    {
    TYPE$28 RET$VAL = CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$28 RET$VAL = (V$50413464/*aspel.audio.next_sample_format.current*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47873040/*aspel.audio.resolve_audio_format*/(TYPE$267 V$50413848/*aspel.audio.resolve_audio_format.format*/)
{
    {
    if (CORE$eq(((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m0)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(22050ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m1)),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50412568/*aspel.audio.SAMPLE_INT16*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$28 SWITCH$TEMP = (((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m2);
    if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(1ULL)))) || (SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(2ULL)))) || (SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(4ULL)))) || (SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(6ULL))))) {
    {
    }
    }
    else {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    if (CORE$eq(((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m3)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mul((CORE$div(((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m0)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1000ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(46ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47846320/*aspel.math.ceil_pow2*/)))((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m3)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50413848/*aspel.audio.resolve_audio_format.format*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$19 V$47873120/*aspel.audio.get_audio_buffer_size*/(TYPE$267 V$50413912/*aspel.audio.get_audio_buffer_size.format*/)
{
    {
    {
    TYPE$19 RET$VAL = CORE$mul((CORE$mul((CORE$div((CORE$cast_regular(TYPE$19, CORE$band(((((TYPE$265*)((V$50413912/*aspel.audio.get_audio_buffer_size.format*/)))->m1)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL))))),(CORE$cast_regular(TYPE$19, (((TYPE$265*)((V$50413912/*aspel.audio.get_audio_buffer_size.format*/)))->m2))))),((((TYPE$265*)((V$50413912/*aspel.audio.get_audio_buffer_size.format*/)))->m3)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47873200/*aspel.audio.start_audio_thread*/(TYPE$270 V$50413976/*aspel.audio.start_audio_thread.device*/)
{
    {
    TYPE$37 V$50414040/*aspel.audio.start_audio_thread.start_function*/;
    if ((((TYPE$271*)((V$50413976/*aspel.audio.start_audio_thread.device*/)))->m2)) {
    {
    {
    typedef TYPE$37 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47873360/*aspel.audio.recording*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50414040/*aspel.audio.start_audio_thread.start_function*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$37, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$37 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47873280/*aspel.audio.playback*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50414040/*aspel.audio.start_audio_thread.start_function*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$37, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$54,TYPE$37,TYPE$7))(((CORE$DELEGATE)V$15379888/*aspel.thread.create_thread*/)))(((CORE$PTR) &((((TYPE$271*)((V$50413976/*aspel.audio.start_audio_thread.device*/)))->m6))), (V$50414040/*aspel.audio.start_audio_thread.start_function*/), CORE$cast_regular(TYPE$7, (V$50413976/*aspel.audio.start_audio_thread.device*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47873280/*aspel.audio.playback*/()
{
    {
    TYPE$270 V$50414104/*aspel.audio.playback.device*/ = CORE$cast_regular(TYPE$270, ((ISOLATED$BASE.V$15413504/*aspel.thread.current_thread_argument*/)));
    TYPE$272 V$50414168/*aspel.audio.playback.context*/ = (((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m0);
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$50414168/*aspel.audio.playback.context*/)),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x74\x68\x72\x65\x61\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(23)));
    while (CORE$eq((CORE$band((CORE$cast_regular(TYPE$19, ((TYPE$16(*)(TYPE$90))(((CORE$DELEGATE)V$15379168/*aspel.thread.atomic.atomic_get*/)))(((CORE$PTR) &((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m4)))))),((V$50416728/*aspel.audio.AUDIO_DEVICE_SHUTDOWN*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$1 V$50414232/*aspel.audio.playback..buffer*/ = ((TYPE$1(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50414168/*aspel.audio.playback.context*/)))->m5)))((V$50414168/*aspel.audio.playback.context*/), (V$50414104/*aspel.audio.playback.device*/));
    {
    ((TYPE$8(*)(TYPE$270))(((CORE$DELEGATE)V$47874320/*aspel.audio.lock_audio_device*/)))((V$50414104/*aspel.audio.playback.device*/));
    if (CORE$lor((((TYPE$6(*)(TYPE$270))(((CORE$DELEGATE)V$47874480/*aspel.audio.is_audio_device_paused*/)))((V$50414104/*aspel.audio.playback.device*/))),(CORE$eq(((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m9)),((V$50416856/*aspel.audio.AUDIO_METHOD_SILENCE*/)))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, ((V$50414232/*aspel.audio.playback..buffer*/).a)), ((V$50414232/*aspel.audio.playback..buffer*/).n), ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$47872880/*aspel.audio.get_silence_value*/)))(((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m3).m1)));
    }
    }
    else {
    {
    {
    TYPE$19 SWITCH$TEMP = (((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m9);
    if ((SWITCH$TEMP == ((V$50416920/*aspel.audio.AUDIO_METHOD_CALLBACK*/)))) {
    {
    ((TYPE$8(*)(TYPE$270,TYPE$7,TYPE$19))((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m10)))((V$50414104/*aspel.audio.playback.device*/), CORE$cast_regular(TYPE$7, ((V$50414232/*aspel.audio.playback..buffer*/).a)), CORE$cast_regular(TYPE$19, ((V$50414232/*aspel.audio.playback..buffer*/).n)));
    }
    }
    else if ((SWITCH$TEMP == ((V$50416984/*aspel.audio.AUDIO_METHOD_STREAM*/)))) {
    {
    TYPE$5 V$50414296/*aspel.audio.playback.....amount*/ = CORE$cast_regular(TYPE$5, ((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m11), CORE$cast_regular(TYPE$7, ((V$50414232/*aspel.audio.playback..buffer*/).a)), CORE$cast_regular(TYPE$4, ((V$50414232/*aspel.audio.playback..buffer*/).n))));
    if (CORE$eq(((V$50414296/*aspel.audio.playback.....amount*/)),(CORE$cast_regular(TYPE$5, (V$47563272/*aspel.io.IO_ERROR*/))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50414296/*aspel.audio.playback.....amount*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, CORE$add((((V$50414232/*aspel.audio.playback..buffer*/).a)),(CORE$cast_regular(TYPE$10, (V$50414296/*aspel.audio.playback.....amount*/)))*(1))), CORE$sub((((V$50414232/*aspel.audio.playback..buffer*/).n)),((V$50414296/*aspel.audio.playback.....amount*/))), ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$47872880/*aspel.audio.get_silence_value*/)))(((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m3).m1)));
    }
    }
    else {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, ((V$50414232/*aspel.audio.playback..buffer*/).a)), ((V$50414232/*aspel.audio.playback..buffer*/).n), ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$47872880/*aspel.audio.get_silence_value*/)))(((((TYPE$271*)((V$50414104/*aspel.audio.playback.device*/)))->m3).m1)));
    }
    }
    }
    }
    }
    ((TYPE$8(*)(TYPE$270))(((CORE$DELEGATE)V$47874400/*aspel.audio.unlock_audio_device*/)))((V$50414104/*aspel.audio.playback.device*/));
    }
    ((TYPE$8(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50414168/*aspel.audio.playback.context*/)))->m6)))((V$50414168/*aspel.audio.playback.context*/), (V$50414104/*aspel.audio.playback.device*/));
    ((TYPE$8(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50414168/*aspel.audio.playback.context*/)))->m7)))((V$50414168/*aspel.audio.playback.context*/), (V$50414104/*aspel.audio.playback.device*/));
    }
    }
    }
}

TYPE$8 V$47873360/*aspel.audio.recording*/()
{
    {
    TYPE$270 V$50414360/*aspel.audio.recording.device*/ = CORE$cast_regular(TYPE$270, ((ISOLATED$BASE.V$15413504/*aspel.thread.current_thread_argument*/)));
    TYPE$272 V$50414424/*aspel.audio.recording.context*/ = (((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m0);
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$50414424/*aspel.audio.recording.context*/)),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x74\x68\x72\x65\x61\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(67)));
    TYPE$1 V$50414488/*aspel.audio.recording.buffer*/ = CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, ((TYPE$19(*)(TYPE$267))(((CORE$DELEGATE)V$47873120/*aspel.audio.get_audio_buffer_size*/)))(((CORE$PTR) &((((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m3)))))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    while (CORE$eq((CORE$band((CORE$cast_regular(TYPE$19, ((TYPE$16(*)(TYPE$90))(((CORE$DELEGATE)V$15379168/*aspel.thread.atomic.atomic_get*/)))(((CORE$PTR) &((((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m4)))))),((V$50416728/*aspel.audio.AUDIO_DEVICE_SHUTDOWN*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$10 V$50414552/*aspel.audio.recording..read_pointer*/ = ((V$50414488/*aspel.audio.recording.buffer*/).a);
    TYPE$19 V$50414616/*aspel.audio.recording..read_amount*/ = CORE$cast_regular(TYPE$19, ((V$50414488/*aspel.audio.recording.buffer*/).n));
    while (CORE$gt(((V$50414616/*aspel.audio.recording..read_amount*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$19 V$50414680/*aspel.audio.recording...read*/ = ((TYPE$19(*)(TYPE$272,TYPE$270,TYPE$10,TYPE$19))((((TYPE$273*)((V$50414424/*aspel.audio.recording.context*/)))->m8)))((V$50414424/*aspel.audio.recording.context*/), (V$50414360/*aspel.audio.recording.device*/), (V$50414552/*aspel.audio.recording..read_pointer*/), (V$50414616/*aspel.audio.recording..read_amount*/));
    if (CORE$eq(((V$50414680/*aspel.audio.recording...read*/)),((V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/)))) {
    {
    {
    break;
    }
    }
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$le(((V$50414680/*aspel.audio.recording...read*/)),((V$50414616/*aspel.audio.recording..read_amount*/))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x74\x68\x72\x65\x61\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(79)));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50414680/*aspel.audio.recording...read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50414616/*aspel.audio.recording..read_amount*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$50414680/*aspel.audio.recording...read*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50414552/*aspel.audio.recording..read_pointer*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    {
    ((TYPE$8(*)(TYPE$270))(((CORE$DELEGATE)V$47874320/*aspel.audio.lock_audio_device*/)))((V$50414360/*aspel.audio.recording.device*/));
    if (CORE$lor((((TYPE$6(*)(TYPE$270))(((CORE$DELEGATE)V$47874480/*aspel.audio.is_audio_device_paused*/)))((V$50414360/*aspel.audio.recording.device*/))),(CORE$eq(((((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m9)),((V$50416856/*aspel.audio.AUDIO_METHOD_SILENCE*/)))))) {
    {
    ((TYPE$8(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50414424/*aspel.audio.recording.context*/)))->m9)))((V$50414424/*aspel.audio.recording.context*/), (V$50414360/*aspel.audio.recording.device*/));
    }
    }
    else {
    {
    if (CORE$gt(((V$50414616/*aspel.audio.recording..read_amount*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, (V$50414552/*aspel.audio.recording..read_pointer*/)), CORE$cast_regular(TYPE$5, (V$50414616/*aspel.audio.recording..read_amount*/)), ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$47872880/*aspel.audio.get_silence_value*/)))(((((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m3).m1)));
    }
    }
    {
    TYPE$19 SWITCH$TEMP = (((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m9);
    if ((SWITCH$TEMP == ((V$50416920/*aspel.audio.AUDIO_METHOD_CALLBACK*/)))) {
    {
    ((TYPE$8(*)(TYPE$270,TYPE$7,TYPE$19))((((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m10)))((V$50414360/*aspel.audio.recording.device*/), CORE$cast_regular(TYPE$7, ((V$50414488/*aspel.audio.recording.buffer*/).a)), CORE$cast_regular(TYPE$19, ((V$50414488/*aspel.audio.recording.buffer*/).n)));
    }
    }
    else if ((SWITCH$TEMP == ((V$50416984/*aspel.audio.AUDIO_METHOD_STREAM*/)))) {
    {
    ((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((((TYPE$271*)((V$50414360/*aspel.audio.recording.device*/)))->m11), CORE$cast_regular(TYPE$7, ((V$50414488/*aspel.audio.recording.buffer*/).a)), CORE$cast_regular(TYPE$4, ((V$50414488/*aspel.audio.recording.buffer*/).n)));
    }
    }
    else {
    {
    ((TYPE$8(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50414424/*aspel.audio.recording.context*/)))->m9)))((V$50414424/*aspel.audio.recording.context*/), (V$50414360/*aspel.audio.recording.device*/));
    }
    }
    }
    }
    }
    ((TYPE$8(*)(TYPE$270))(((CORE$DELEGATE)V$47874400/*aspel.audio.unlock_audio_device*/)))((V$50414360/*aspel.audio.recording.device*/));
    }
    }
    }
    }
}

TYPE$6 V$47873440/*aspel.audio.add_audio_device*/(TYPE$272 V$50415192/*aspel.audio.add_audio_device.context*/, TYPE$1 V$50415256/*aspel.audio.add_audio_device.name*/, TYPE$7 V$50415320/*aspel.audio.add_audio_device.handle*/, TYPE$6 V$50415384/*aspel.audio.add_audio_device.is_input*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$50415320/*aspel.audio.add_audio_device.handle*/)),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x64\x65\x76\x69\x63\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(22)));
    TYPE$10 V$50415448/*aspel.audio.add_audio_device.memory*/ = CORE$cast_array_to_ptr(CORE$NEWARR((CORE$U64)(CORE$add(((CORE$U64)(36)),(((V$50415256/*aspel.audio.add_audio_device.name*/).n)))), (CORE$U64)(1)));
    if (CORE$eq(((V$50415448/*aspel.audio.add_audio_device.memory*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$280 V$50415512/*aspel.audio.add_audio_device.device*/ = CORE$cast_regular(TYPE$280, (V$50415448/*aspel.audio.add_audio_device.memory*/));
    TYPE$10 V$50415576/*aspel.audio.add_audio_device.name_copy*/ = CORE$add(((V$50415448/*aspel.audio.add_audio_device.memory*/)),(CORE$cast_regular(TYPE$10, (CORE$U64)(36)))*(1));
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50415320/*aspel.audio.add_audio_device.handle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$279*)((V$50415512/*aspel.audio.add_audio_device.device*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50415576/*aspel.audio.add_audio_device.name_copy*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$279*)((V$50415512/*aspel.audio.add_audio_device.device*/)))->m1).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50415256/*aspel.audio.add_audio_device.name*/).n));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$279*)((V$50415512/*aspel.audio.add_audio_device.device*/)))->m1).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if ((V$50415384/*aspel.audio.add_audio_device.is_input*/)) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (V$50414808/*aspel.audio.DEVICE_FLAG_INPUT*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$279*)((V$50415512/*aspel.audio.add_audio_device.device*/)))->m2).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$279*)((V$50415512/*aspel.audio.add_audio_device.device*/)))->m2).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_regular(TYPE$7, ((V$50415256/*aspel.audio.add_audio_device.name*/).a)), CORE$cast_regular(TYPE$7, (V$50415576/*aspel.audio.add_audio_device.name_copy*/)), ((V$50415256/*aspel.audio.add_audio_device.name*/).n));
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m10));
    TYPE$282 V$50415640/*aspel.audio.add_audio_device.device_list*/;
    TYPE$103 V$50415704/*aspel.audio.add_audio_device.device_count*/;
    if ((V$50415384/*aspel.audio.add_audio_device.is_input*/)) {
    {
    {
    typedef TYPE$282 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$PTR) &((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m11))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50415640/*aspel.audio.add_audio_device.device_list*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$282, TEMP$VAL0);
    }
    {
    typedef TYPE$103 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$PTR) &((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m12))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50415704/*aspel.audio.add_audio_device.device_count*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$103, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$282 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$PTR) &((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m13))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50415640/*aspel.audio.add_audio_device.device_list*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$282, TEMP$VAL0);
    }
    {
    typedef TYPE$103 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$PTR) &((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m14))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50415704/*aspel.audio.add_audio_device.device_count*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$103, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$280*)((V$50415640/*aspel.audio.add_audio_device.device_list*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$279*)((V$50415512/*aspel.audio.add_audio_device.device*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50415512/*aspel.audio.add_audio_device.device*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$280*)((V$50415640/*aspel.audio.add_audio_device.device_list*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$50415704/*aspel.audio.add_audio_device.device_count*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    if (CORE$gt(((*(TYPE$19*)((V$50415704/*aspel.audio.add_audio_device.device_count*/)))),((V$50419160/*aspel.audio.MAX_DEVICE_COUNT*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m10));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m10));
    return RET$VAL;
    }
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$273*)((V$50415192/*aspel.audio.add_audio_device.context*/)))->m10));
    }
}

TYPE$8 V$47873520/*aspel.audio.free_audio_device_list*/(TYPE$272 V$50415768/*aspel.audio.free_audio_device_list.context*/, TYPE$280 V$50415832/*aspel.audio.free_audio_device_list.head*/)
{
    {
    TYPE$280 V$50415896/*aspel.audio.free_audio_device_list.current*/ = (V$50415832/*aspel.audio.free_audio_device_list.head*/);
    while (CORE$ne(((V$50415896/*aspel.audio.free_audio_device_list.current*/)),(CORE$null_pointer))) {
    {
    TYPE$280 V$50415960/*aspel.audio.free_audio_device_list..next*/ = (((TYPE$279*)((V$50415896/*aspel.audio.free_audio_device_list.current*/)))->m3);
    ((TYPE$8(*)(TYPE$272,TYPE$7))((((TYPE$273*)((V$50415768/*aspel.audio.free_audio_device_list.context*/)))->m2)))((V$50415768/*aspel.audio.free_audio_device_list.context*/), (((TYPE$279*)((V$50415896/*aspel.audio.free_audio_device_list.current*/)))->m0));
    CORE$DEL((void*)(((V$50415896/*aspel.audio.free_audio_device_list.current*/))));    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50415960/*aspel.audio.free_audio_device_list..next*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50415896/*aspel.audio.free_audio_device_list.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47873600/*aspel.audio.free_audio_devices*/(TYPE$272 V$50416024/*aspel.audio.free_audio_devices.context*/)
{
    {
    ((TYPE$8(*)(TYPE$272,TYPE$280))(((CORE$DELEGATE)V$47873520/*aspel.audio.free_audio_device_list*/)))((V$50416024/*aspel.audio.free_audio_devices.context*/), (((TYPE$273*)((V$50416024/*aspel.audio.free_audio_devices.context*/)))->m11));
    ((TYPE$8(*)(TYPE$272,TYPE$280))(((CORE$DELEGATE)V$47873520/*aspel.audio.free_audio_device_list*/)))((V$50416024/*aspel.audio.free_audio_devices.context*/), (((TYPE$273*)((V$50416024/*aspel.audio.free_audio_devices.context*/)))->m13));
    }
}

TYPE$280 V$47873680/*aspel.audio.get_default_audio_device*/(TYPE$272 V$50416088/*aspel.audio.get_default_audio_device.context*/, TYPE$6 V$50416152/*aspel.audio.get_default_audio_device.is_input*/)
{
    {
    if ((V$50416152/*aspel.audio.get_default_audio_device.is_input*/)) {
    {
    if ((!((((TYPE$273*)((V$50416088/*aspel.audio.get_default_audio_device.context*/)))->m17)))) {
    {
    {
    TYPE$280 RET$VAL = CORE$cast_regular(TYPE$280, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    TYPE$280 RET$VAL = ((CORE$PTR) &((((TYPE$273*)((V$50416088/*aspel.audio.get_default_audio_device.context*/)))->m15)));
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    if ((!((((TYPE$273*)((V$50416088/*aspel.audio.get_default_audio_device.context*/)))->m18)))) {
    {
    {
    TYPE$280 RET$VAL = CORE$cast_regular(TYPE$280, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    TYPE$280 RET$VAL = ((CORE$PTR) &((((TYPE$273*)((V$50416088/*aspel.audio.get_default_audio_device.context*/)))->m16)));
    return RET$VAL;
    }
    }
    }
    }
    }
    }
}

TYPE$19 V$47873760/*aspel.audio.get_audio_device_count*/(TYPE$272 V$50416216/*aspel.audio.get_audio_device_count.context*/, TYPE$6 V$50416280/*aspel.audio.get_audio_device_count.is_input*/)
{
    {
    if ((V$50416280/*aspel.audio.get_audio_device_count.is_input*/)) {
    {
    {
    TYPE$19 RET$VAL = (((TYPE$273*)((V$50416216/*aspel.audio.get_audio_device_count.context*/)))->m12);
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    TYPE$19 RET$VAL = (((TYPE$273*)((V$50416216/*aspel.audio.get_audio_device_count.context*/)))->m14);
    return RET$VAL;
    }
    }
    }
    }
}

TYPE$280 V$47873840/*aspel.audio.get_audio_device_list*/(TYPE$272 V$50416344/*aspel.audio.get_audio_device_list.context*/, TYPE$6 V$50416408/*aspel.audio.get_audio_device_list.is_input*/)
{
    {
    if ((V$50416408/*aspel.audio.get_audio_device_list.is_input*/)) {
    {
    {
    TYPE$280 RET$VAL = (((TYPE$273*)((V$50416344/*aspel.audio.get_audio_device_list.context*/)))->m11);
    return RET$VAL;
    }
    }
    }
    else {
    {
    {
    TYPE$280 RET$VAL = (((TYPE$273*)((V$50416344/*aspel.audio.get_audio_device_list.context*/)))->m13);
    return RET$VAL;
    }
    }
    }
    }
}

TYPE$280 V$47873920/*aspel.audio.find_audio_device*/(TYPE$272 V$50416472/*aspel.audio.find_audio_device.context*/, TYPE$1 V$50416536/*aspel.audio.find_audio_device.name*/, TYPE$6 V$50416600/*aspel.audio.find_audio_device.is_input*/)
{
    {
    TYPE$280 V$50416664/*aspel.audio.find_audio_device.device*/;
    if ((V$50416600/*aspel.audio.find_audio_device.is_input*/)) {
    {
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$273*)((V$50416472/*aspel.audio.find_audio_device.context*/)))->m11));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50416664/*aspel.audio.find_audio_device.device*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$273*)((V$50416472/*aspel.audio.find_audio_device.context*/)))->m13));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50416664/*aspel.audio.find_audio_device.device*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    }
    }
    while (CORE$ne(((V$50416664/*aspel.audio.find_audio_device.device*/)),(CORE$null_pointer))) {
    {
    if (((TYPE$6(*)(TYPE$1,TYPE$1))(((CORE$DELEGATE)V$51735416/*aspel.compare*/)))((((TYPE$279*)((V$50416664/*aspel.audio.find_audio_device.device*/)))->m1), (V$50416536/*aspel.audio.find_audio_device.name*/))) {
    {
    {
    TYPE$280 RET$VAL = (V$50416664/*aspel.audio.find_audio_device.device*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$279*)((V$50416664/*aspel.audio.find_audio_device.device*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50416664/*aspel.audio.find_audio_device.device*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$280 RET$VAL = (V$50416664/*aspel.audio.find_audio_device.device*/);
    return RET$VAL;
    }
    }
}

TYPE$270 V$47874000/*aspel.audio.open_audio_device*/(TYPE$272 V$50417944/*aspel.audio.open_audio_device.context*/, TYPE$280 V$50418008/*aspel.audio.open_audio_device.device_info*/, TYPE$267 V$50418072/*aspel.audio.open_audio_device.desired_format*/, TYPE$267 V$50418136/*aspel.audio.open_audio_device.obtained_format*/)
{
    {
    if (CORE$eq(((V$50418008/*aspel.audio.open_audio_device.device_info*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$270 RET$VAL = CORE$cast_regular(TYPE$270, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$50418200/*aspel.audio.open_audio_device.flags*/ = CORE$cast_regular(TYPE$19, ((TYPE$16(*)(TYPE$90))(((CORE$DELEGATE)V$15379168/*aspel.thread.atomic.atomic_get*/)))(((CORE$PTR) &((((TYPE$279*)((V$50418008/*aspel.audio.open_audio_device.device_info*/)))->m2)))));
    TYPE$19 V$50418264/*aspel.audio.open_audio_device.open_flags*/ = CORE$bor(((V$50418200/*aspel.audio.open_audio_device.flags*/)),((V$50414744/*aspel.audio.DEVICE_FLAG_OPEN*/)));
    TYPE$19 V$50418328/*aspel.audio.open_audio_device.closed_flags*/ = CORE$band(((V$50418200/*aspel.audio.open_audio_device.flags*/)),((~((V$50414744/*aspel.audio.DEVICE_FLAG_OPEN*/)))));
    if ((!(((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))(((CORE$PTR) &((((TYPE$279*)((V$50418008/*aspel.audio.open_audio_device.device_info*/)))->m2))), CORE$cast_regular(TYPE$16, (V$50418264/*aspel.audio.open_audio_device.open_flags*/)), CORE$cast_regular(TYPE$16, (V$50418328/*aspel.audio.open_audio_device.closed_flags*/)))))) {
    {
    {
    TYPE$270 RET$VAL = CORE$cast_regular(TYPE$270, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$270 V$50418392/*aspel.audio.open_audio_device.device*/ = (CORE$PTR)(CORE$NEW(88));
    if (CORE$eq(((V$50418392/*aspel.audio.open_audio_device.device*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$270 RET$VAL = CORE$cast_regular(TYPE$270, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$272 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50417944/*aspel.audio.open_audio_device.context*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$272, TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$279*)((V$50418008/*aspel.audio.open_audio_device.device_info*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_to_bool(CORE$band(((V$50418200/*aspel.audio.open_audio_device.flags*/)),((V$50414808/*aspel.audio.DEVICE_FLAG_INPUT*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m2));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$265 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$265*)((V$50418072/*aspel.audio.open_audio_device.desired_format*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m3));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$265, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (V$50416792/*aspel.audio.AUDIO_DEVICE_PAUSED*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m4).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$90 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$PTR) &((((TYPE$279*)((V$50418008/*aspel.audio.open_audio_device.device_info*/)))->m2))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$90, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$15413312/*aspel.thread.INVALID_THREAD*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_pointer);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    typedef TYPE$66 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$66(*)())(((CORE$DELEGATE)V$15377648/*aspel.thread.mutex.create_mutex*/)))());
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m8));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$66, TEMP$VAL0);
    }
    if (CORE$eq(((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m8)),(CORE$null_pointer))) {
    {
    {
    TYPE$270 RET$VAL = CORE$cast_regular(TYPE$270, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50416856/*aspel.audio.AUDIO_METHOD_SILENCE*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$276 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_delegate);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m10));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$276, TEMP$VAL0);
    }
    if ((!(((TYPE$6(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50417944/*aspel.audio.open_audio_device.context*/)))->m3)))((V$50417944/*aspel.audio.open_audio_device.context*/), (V$50418392/*aspel.audio.open_audio_device.device*/))))) {
    {
    ((TYPE$8(*)(TYPE$270))(((CORE$DELEGATE)V$47874080/*aspel.audio.close_audio_device*/)))((V$50418392/*aspel.audio.open_audio_device.device*/));
    {
    TYPE$270 RET$VAL = CORE$cast_regular(TYPE$270, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((V$50418136/*aspel.audio.open_audio_device.obtained_format*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$265 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$271*)((V$50418392/*aspel.audio.open_audio_device.device*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$265*)((V$50418136/*aspel.audio.open_audio_device.obtained_format*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$265, TEMP$VAL0);
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$270))(((CORE$DELEGATE)V$47873200/*aspel.audio.start_audio_thread*/)))((V$50418392/*aspel.audio.open_audio_device.device*/))))) {
    {
    ((TYPE$8(*)(TYPE$270))(((CORE$DELEGATE)V$47874080/*aspel.audio.close_audio_device*/)))((V$50418392/*aspel.audio.open_audio_device.device*/));
    {
    TYPE$270 RET$VAL = CORE$cast_regular(TYPE$270, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$270 RET$VAL = (V$50418392/*aspel.audio.open_audio_device.device*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47874080/*aspel.audio.close_audio_device*/(TYPE$270 V$50418456/*aspel.audio.close_audio_device.device*/)
{
    {
    if (CORE$ne(((V$50418456/*aspel.audio.close_audio_device.device*/)),(CORE$null_pointer))) {
    {
    TYPE$272 V$50418520/*aspel.audio.close_audio_device..context*/ = (((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m0);
    CORE$ASSERT(((CORE$BOOL)(CORE$ne(((V$50418520/*aspel.audio.close_audio_device..context*/)),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x64\x65\x76\x69\x63\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(215)));
    ((TYPE$19(*)(TYPE$90,TYPE$19))(((CORE$DELEGATE)V$15379648/*aspel.thread.atomic.atomic_or*/)))(((CORE$PTR) &((((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m4))), (V$50416728/*aspel.audio.AUDIO_DEVICE_SHUTDOWN*/));
    if (CORE$ne(((((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m6)),((V$15413312/*aspel.thread.INVALID_THREAD*/)))) {
    {
    ((TYPE$8(*)(TYPE$5))(((CORE$DELEGATE)V$15379968/*aspel.thread.wait_thread*/)))((((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m6));
    }
    }
    ((TYPE$8(*)(TYPE$272,TYPE$270))((((TYPE$273*)((V$50418520/*aspel.audio.close_audio_device..context*/)))->m4)))((V$50418520/*aspel.audio.close_audio_device..context*/), (V$50418456/*aspel.audio.close_audio_device.device*/));
    ((TYPE$19(*)(TYPE$90,TYPE$19))(((CORE$DELEGATE)V$15379568/*aspel.thread.atomic.atomic_and*/)))((((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m5), (~((V$50414744/*aspel.audio.DEVICE_FLAG_OPEN*/))));
    if (CORE$ne(((((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m8)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377728/*aspel.thread.mutex.destroy_mutex*/)))((((TYPE$271*)((V$50418456/*aspel.audio.close_audio_device.device*/)))->m8));
    }
    }
    CORE$DEL((void*)(((V$50418456/*aspel.audio.close_audio_device.device*/))));    }
    }
    }
}

TYPE$8 V$47874160/*aspel.audio.set_audio_callback*/(TYPE$270 V$50418584/*aspel.audio.set_audio_callback.device*/, TYPE$276 V$50418648/*aspel.audio.set_audio_callback.callback*/)
{
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((((TYPE$271*)((V$50418584/*aspel.audio.set_audio_callback.device*/)))->m8));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50416920/*aspel.audio.AUDIO_METHOD_CALLBACK*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418584/*aspel.audio.set_audio_callback.device*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$276 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50418648/*aspel.audio.set_audio_callback.callback*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418584/*aspel.audio.set_audio_callback.device*/)))->m10));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$276, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$271*)((V$50418584/*aspel.audio.set_audio_callback.device*/)))->m8));
    }
}

TYPE$8 V$47874240/*aspel.audio.set_audio_stream*/(TYPE$270 V$50418712/*aspel.audio.set_audio_stream.device*/, TYPE$153 V$50418776/*aspel.audio.set_audio_stream.stream*/)
{
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((((TYPE$271*)((V$50418712/*aspel.audio.set_audio_stream.device*/)))->m8));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50416984/*aspel.audio.AUDIO_METHOD_STREAM*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418712/*aspel.audio.set_audio_stream.device*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$153 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50418776/*aspel.audio.set_audio_stream.stream*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50418712/*aspel.audio.set_audio_stream.device*/)))->m11));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$153, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$271*)((V$50418712/*aspel.audio.set_audio_stream.device*/)))->m8));
    }
}

TYPE$8 V$47874320/*aspel.audio.lock_audio_device*/(TYPE$270 V$50418840/*aspel.audio.lock_audio_device.device*/)
{
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((((TYPE$271*)((V$50418840/*aspel.audio.lock_audio_device.device*/)))->m8));
    }
}

TYPE$8 V$47874400/*aspel.audio.unlock_audio_device*/(TYPE$270 V$50418904/*aspel.audio.unlock_audio_device.device*/)
{
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((((TYPE$271*)((V$50418904/*aspel.audio.unlock_audio_device.device*/)))->m8));
    }
}

TYPE$6 V$47874480/*aspel.audio.is_audio_device_paused*/(TYPE$270 V$50418968/*aspel.audio.is_audio_device_paused.device*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((CORE$band((CORE$cast_regular(TYPE$19, ((TYPE$16(*)(TYPE$90))(((CORE$DELEGATE)V$15379168/*aspel.thread.atomic.atomic_get*/)))(((CORE$PTR) &((((TYPE$271*)((V$50418968/*aspel.audio.is_audio_device_paused.device*/)))->m4)))))),((V$50416792/*aspel.audio.AUDIO_DEVICE_PAUSED*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47874560/*aspel.audio.pause_audio_device*/(TYPE$270 V$50419032/*aspel.audio.pause_audio_device.device*/, TYPE$6 V$50419096/*aspel.audio.pause_audio_device.paused*/)
{
    {
    if ((V$50419096/*aspel.audio.pause_audio_device.paused*/)) {
    {
    ((TYPE$19(*)(TYPE$90,TYPE$19))(((CORE$DELEGATE)V$15379648/*aspel.thread.atomic.atomic_or*/)))(((CORE$PTR) &((((TYPE$271*)((V$50419032/*aspel.audio.pause_audio_device.device*/)))->m4))), (V$50416792/*aspel.audio.AUDIO_DEVICE_PAUSED*/));
    }
    }
    else {
    {
    ((TYPE$19(*)(TYPE$90,TYPE$19))(((CORE$DELEGATE)V$15379568/*aspel.thread.atomic.atomic_and*/)))(((CORE$PTR) &((((TYPE$271*)((V$50419032/*aspel.audio.pause_audio_device.device*/)))->m4))), (~((V$50416792/*aspel.audio.AUDIO_DEVICE_PAUSED*/))));
    }
    }
    }
}

TYPE$8 V$47874640/*aspel.audio.uninit_stub*/(TYPE$272 V$50420632/*aspel.audio.uninit_stub.context*/)
{
    {
    }
}

TYPE$8 V$47874720/*aspel.audio.detect_devices_stub*/(TYPE$272 V$50420696/*aspel.audio.detect_devices_stub.context*/)
{
    {
    }
}

TYPE$6 V$47874800/*aspel.audio.open_device_stub*/(TYPE$272 V$50420760/*aspel.audio.open_device_stub.context*/, TYPE$270 V$50420824/*aspel.audio.open_device_stub.device*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47874880/*aspel.audio.close_device_stub*/(TYPE$272 V$50420888/*aspel.audio.close_device_stub.context*/, TYPE$270 V$50420952/*aspel.audio.close_device_stub.device*/)
{
    {
    }
}

TYPE$1 V$47874960/*aspel.audio.get_buffer_stub*/(TYPE$272 V$50421016/*aspel.audio.get_buffer_stub.context*/, TYPE$270 V$50421080/*aspel.audio.get_buffer_stub.device*/)
{
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47875040/*aspel.audio.play_stub*/(TYPE$272 V$50421144/*aspel.audio.play_stub.context*/, TYPE$270 V$50421208/*aspel.audio.play_stub.device*/)
{
    {
    }
}

TYPE$8 V$47875120/*aspel.audio.wait_stub*/(TYPE$272 V$50421272/*aspel.audio.wait_stub.context*/, TYPE$270 V$50421336/*aspel.audio.wait_stub.device*/)
{
    {
    }
}

TYPE$19 V$47875200/*aspel.audio.input_stub*/(TYPE$272 V$50421400/*aspel.audio.input_stub.context*/, TYPE$270 V$50421464/*aspel.audio.input_stub.device*/, TYPE$10 V$50421528/*aspel.audio.input_stub.target*/, TYPE$19 V$50421592/*aspel.audio.input_stub.desired_amount*/)
{
    {
    {
    TYPE$19 RET$VAL = (V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47875280/*aspel.audio.flush_input_stub*/(TYPE$272 V$50421656/*aspel.audio.flush_input_stub.context*/, TYPE$270 V$50421720/*aspel.audio.flush_input_stub.device*/)
{
    {
    }
}

TYPE$6 V$47875360/*aspel.audio.fill_stubs*/(TYPE$272 V$50421784/*aspel.audio.fill_stubs.context*/)
{
    {
    {
    typedef TYPE$285 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47874640/*aspel.audio.uninit_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$285, TEMP$VAL0);
    }
    {
    typedef TYPE$285 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47874720/*aspel.audio.detect_devices_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$285, TEMP$VAL0);
    }
    {
    typedef TYPE$290 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47874800/*aspel.audio.open_device_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$290, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47874880/*aspel.audio.close_device_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$274 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47874960/*aspel.audio.get_buffer_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$274, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47875040/*aspel.audio.play_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47875120/*aspel.audio.wait_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$278 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47875200/*aspel.audio.input_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m8));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$278, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47875280/*aspel.audio.flush_input_stub*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$66 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$66(*)())(((CORE$DELEGATE)V$15377648/*aspel.thread.mutex.create_mutex*/)))());
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m10));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$66, TEMP$VAL0);
    }
    if (CORE$eq(((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m10)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$280, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m11));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m12));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$280 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$280, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m13));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$280, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m14));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m17));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m18));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_pointer);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50421784/*aspel.audio.fill_stubs.context*/)))->m19));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47875440/*aspel.audio.create_audio_context*/(TYPE$272 V$50421848/*aspel.audio.create_audio_context.context*/, TYPE$19 V$50421912/*aspel.audio.create_audio_context.backend_index*/)
{
    {
    if (CORE$ge(((V$50421912/*aspel.audio.create_audio_context.backend_index*/)),(CORE$cast_regular(TYPE$19, ((V$50422040/*aspel.audio.AUDIO_BACKENDS*/).n))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$272))(((CORE$DELEGATE)V$47875360/*aspel.audio.fill_stubs*/)))((V$50421848/*aspel.audio.create_audio_context.context*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$272))((((TYPE$298*)(CORE$ABC(TYPE$297, ((V$50422040/*aspel.audio.AUDIO_BACKENDS*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50421912/*aspel.audio.create_audio_context.backend_index*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(81))))->m1)))((V$50421848/*aspel.audio.create_audio_context.context*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$272))((((TYPE$273*)((V$50421848/*aspel.audio.create_audio_context.context*/)))->m1)))((V$50421848/*aspel.audio.create_audio_context.context*/));
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47875520/*aspel.audio.destroy_audio_context*/(TYPE$272 V$50421976/*aspel.audio.destroy_audio_context.context*/)
{
    {
    ((TYPE$8(*)(TYPE$272))(((CORE$DELEGATE)V$47873600/*aspel.audio.free_audio_devices*/)))((V$50421976/*aspel.audio.destroy_audio_context.context*/));
    ((TYPE$8(*)(TYPE$272))((((TYPE$273*)((V$50421976/*aspel.audio.destroy_audio_context.context*/)))->m0)))((V$50421976/*aspel.audio.destroy_audio_context.context*/));
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, (V$50421976/*aspel.audio.destroy_audio_context.context*/)), (CORE$U64)(200), CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL)));
    }
}

TYPE$19 V$47875600/*aspel.audio.get_default_backend_index*/()
{
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$19 V$47875680/*aspel.audio.get_audio_backend_count*/()
{
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, ((V$50422040/*aspel.audio.AUDIO_BACKENDS*/).n));
    return RET$VAL;
    }
    }
}

TYPE$1 V$47875760/*aspel.audio.get_audio_backend_name*/(TYPE$19 V$50422360/*aspel.audio.get_audio_backend_name.index*/)
{
    {
    if (CORE$ge(((V$50422360/*aspel.audio.get_audio_backend_name.index*/)),(CORE$cast_regular(TYPE$19, ((V$50422040/*aspel.audio.AUDIO_BACKENDS*/).n))))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$1 RET$VAL = (((TYPE$298*)(CORE$ABC(TYPE$297, ((V$50422040/*aspel.audio.AUDIO_BACKENDS*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50422360/*aspel.audio.get_audio_backend_name.index*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x61\x75\x64\x69\x6F\x5F\x62\x61\x63\x6B\x65\x6E\x64\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(32))))->m0);
    return RET$VAL;
    }
    }
}

TYPE$19 V$47875840/*aspel.audio.get_audio_backend_index*/(TYPE$1 V$50422424/*aspel.audio.get_audio_backend_index.name*/)
{
    {
    {
    TYPE$296 FOREACH$ARRAY = (V$50422040/*aspel.audio.AUDIO_BACKENDS*/);
    CORE$U64 V$50422616/*aspel.audio.get_audio_backend_index..index*/ = (CORE$U64) 0xFFFFFFFFFFFFFFFFULL;
    while (++V$50422616/*aspel.audio.get_audio_backend_index..index*/ < FOREACH$ARRAY.n) {
    TYPE$297 V$50422552/*aspel.audio.get_audio_backend_index..backend*/ = ((TYPE$297*) FOREACH$ARRAY.a)[V$50422616/*aspel.audio.get_audio_backend_index..index*/];
    {
    if (((TYPE$6(*)(TYPE$1,TYPE$1))(((CORE$DELEGATE)V$51735416/*aspel.compare*/)))((((TYPE$298*)((V$50422552/*aspel.audio.get_audio_backend_index..backend*/)))->m0), (V$50422424/*aspel.audio.get_audio_backend_index.name*/))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (V$50422616/*aspel.audio.get_audio_backend_index..index*/));
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    {
    TYPE$19 RET$VAL = (V$50422296/*aspel.audio.AUDIO_BACKEND_INVALID*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15394688/*aspel.net.socket_invalidate*/(TYPE$303 V$47567752/*aspel.net.socket_invalidate.socket*/)
{
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, ((ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47567752/*aspel.net.socket_invalidate.socket*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47567752/*aspel.net.socket_invalidate.socket*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$6 V$15394768/*aspel.net.socket_is_valid*/(TYPE$303 V$47567816/*aspel.net.socket_is_valid.socket*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47567816/*aspel.net.socket_is_valid.socket*/)))->m0))),(((ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$15394848/*aspel.net.socket_open*/(TYPE$303 V$47567880/*aspel.net.socket_open.result*/, TYPE$1 V$47567944/*aspel.net.socket_open.host*/, TYPE$1 V$47568008/*aspel.net.socket_open.service*/)
{
    {
    if (CORE$gt((CORE$cast_regular(TYPE$19, ((V$47567944/*aspel.net.socket_open.host*/).n))),((V$47567624/*aspel.net.MAX_HOST_LENGTH*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$gt((CORE$cast_regular(TYPE$19, ((V$47568008/*aspel.net.socket_open.service*/).n))),((V$47567688/*aspel.net.MAX_SERVICE_LENGTH*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$307 V$47568072/*aspel.net.socket_open.hints*/;
    {
    { (V$47568072/*aspel.net.socket_open.hints*/.m0) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m1) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m2) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m3) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m4) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m5) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m6) = (0); }
    { (V$47568072/*aspel.net.socket_open.hints*/.m7) = (0); }
}
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$54882968/*aspel.internal.win32.AF_INET*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47568072/*aspel.net.socket_open.hints*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$54884760/*aspel.internal.win32.SOCK_STREAM*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47568072/*aspel.net.socket_open.hints*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    TYPE$10 V$47568136/*aspel.net.socket_open.null_terminated_service*/ = CORE$cast_array_to_ptr(CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$47568008/*aspel.net.socket_open.service*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(1)));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_array_to_ptr((V$47568008/*aspel.net.socket_open.service*/)), CORE$cast_regular(TYPE$7, (V$47568136/*aspel.net.socket_open.null_terminated_service*/)), ((V$47568008/*aspel.net.socket_open.service*/).n));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$47568136/*aspel.net.socket_open.null_terminated_service*/)))[(CORE$U64)(((V$47568008/*aspel.net.socket_open.service*/).n))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    if (CORE$ne((CORE$cast_array_to_ptr((V$47567944/*aspel.net.socket_open.host*/))),(CORE$null_pointer))) {
    {
    TYPE$10 V$47568200/*aspel.net.socket_open..null_terminated_host*/ = CORE$cast_array_to_ptr(CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$cast_regular(TYPE$4, ((V$47567944/*aspel.net.socket_open.host*/).n))),((CORE$S64)(1ULL))))), (CORE$U64)(1)));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_array_to_ptr((V$47567944/*aspel.net.socket_open.host*/)), CORE$cast_regular(TYPE$7, (V$47568200/*aspel.net.socket_open..null_terminated_host*/)), ((V$47567944/*aspel.net.socket_open.host*/).n));
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$47568200/*aspel.net.socket_open..null_terminated_host*/)))[(CORE$U64)(((V$47567944/*aspel.net.socket_open.host*/).n))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    TYPE$19 V$47568264/*aspel.net.socket_open..address_list*/;
    { (V$47568264/*aspel.net.socket_open..address_list*/) = (0); }
    if (CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51736696/*aspel.internal.win32.getaddrinfo*/)))(CORE$cast_regular(TYPE$19, (V$47568200/*aspel.net.socket_open..null_terminated_host*/)), CORE$cast_regular(TYPE$19, (V$47568136/*aspel.net.socket_open.null_terminated_service*/)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47568072/*aspel.net.socket_open.hints*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47568264/*aspel.net.socket_open..address_list*/)))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$47568328/*aspel.net.socket_open..file_descriptor*/;
    TYPE$308 V$47568392/*aspel.net.socket_open..address*/ = CORE$cast_regular(TYPE$308, (V$47568264/*aspel.net.socket_open..address_list*/));
    while (CORE$ne(((V$47568392/*aspel.net.socket_open..address*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(CORE$STDCALL*)(TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$51736776/*aspel.internal.win32.socket*/)))((((TYPE$307*)((V$47568392/*aspel.net.socket_open..address*/)))->m1), (((TYPE$307*)((V$47568392/*aspel.net.socket_open..address*/)))->m2), (((TYPE$307*)((V$47568392/*aspel.net.socket_open..address*/)))->m3)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47568328/*aspel.net.socket_open..file_descriptor*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    if (CORE$eq(((V$47568328/*aspel.net.socket_open..file_descriptor*/)),(((ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/))))) {
    {
    {
    continue;
    }
    }
    }
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$51736856/*aspel.internal.win32.connect*/)))((V$47568328/*aspel.net.socket_open..file_descriptor*/), (((TYPE$307*)((V$47568392/*aspel.net.socket_open..address*/)))->m6), CORE$cast_regular(TYPE$16, (((TYPE$307*)((V$47568392/*aspel.net.socket_open..address*/)))->m4)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    break;
    }
    }
    }
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51736936/*aspel.internal.win32.closesocket*/)))((V$47568328/*aspel.net.socket_open..file_descriptor*/));
    {
    typedef TYPE$308 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$308, (((TYPE$307*)((V$47568392/*aspel.net.socket_open..address*/)))->m7)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47568392/*aspel.net.socket_open..address*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$308, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((V$47568392/*aspel.net.socket_open..address*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51737016/*aspel.internal.win32.freeaddrinfo*/)))((V$47568264/*aspel.net.socket_open..address_list*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$47568328/*aspel.net.socket_open..file_descriptor*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47567880/*aspel.net.socket_open.result*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47567880/*aspel.net.socket_open.result*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51737016/*aspel.internal.win32.freeaddrinfo*/)))((V$47568264/*aspel.net.socket_open..address_list*/));
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$54885656/*aspel.internal.win32.AI_PASSIVE*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47568072/*aspel.net.socket_open.hints*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    TYPE$19 V$47568456/*aspel.net.socket_open..address_list*/;
    { (V$47568456/*aspel.net.socket_open..address_list*/) = (0); }
    if (CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51736696/*aspel.internal.win32.getaddrinfo*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (V$47568136/*aspel.net.socket_open.null_terminated_service*/)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47568072/*aspel.net.socket_open.hints*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47568456/*aspel.net.socket_open..address_list*/)))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$308 V$47568520/*aspel.net.socket_open..address*/ = CORE$cast_regular(TYPE$308, (V$47568456/*aspel.net.socket_open..address_list*/));
    TYPE$19 V$47568584/*aspel.net.socket_open..file_descriptor*/ = ((TYPE$19(CORE$STDCALL*)(TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$51736776/*aspel.internal.win32.socket*/)))((((TYPE$307*)((V$47568520/*aspel.net.socket_open..address*/)))->m1), (((TYPE$307*)((V$47568520/*aspel.net.socket_open..address*/)))->m2), (((TYPE$307*)((V$47568520/*aspel.net.socket_open..address*/)))->m3));
    if (CORE$eq(((V$47568584/*aspel.net.socket_open..file_descriptor*/)),(((ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51737016/*aspel.internal.win32.freeaddrinfo*/)))((V$47568456/*aspel.net.socket_open..address_list*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$51737096/*aspel.internal.win32.bind*/)))((V$47568584/*aspel.net.socket_open..file_descriptor*/), (((TYPE$307*)((V$47568520/*aspel.net.socket_open..address*/)))->m6), CORE$cast_regular(TYPE$16, (((TYPE$307*)((V$47568520/*aspel.net.socket_open..address*/)))->m4)))),(((ISOLATED$BASE.V$54887512/*aspel.internal.win32.SOCKET_ERROR*/))))) {
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51736936/*aspel.internal.win32.closesocket*/)))((V$47568584/*aspel.net.socket_open..file_descriptor*/));
    {
    TYPE$6 RET$VAL = CORE$false;
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51737016/*aspel.internal.win32.freeaddrinfo*/)))((V$47568456/*aspel.net.socket_open..address_list*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$51737176/*aspel.internal.win32.listen*/)))((V$47568584/*aspel.net.socket_open..file_descriptor*/), CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL)))),(((ISOLATED$BASE.V$54887512/*aspel.internal.win32.SOCKET_ERROR*/))))) {
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51736936/*aspel.internal.win32.closesocket*/)))((V$47568584/*aspel.net.socket_open..file_descriptor*/));
    {
    TYPE$6 RET$VAL = CORE$false;
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51737016/*aspel.internal.win32.freeaddrinfo*/)))((V$47568456/*aspel.net.socket_open..address_list*/));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$47568584/*aspel.net.socket_open..file_descriptor*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47567880/*aspel.net.socket_open.result*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47567176/*aspel.net.SOCKET_PASSIVE*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47567880/*aspel.net.socket_open.result*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51737016/*aspel.internal.win32.freeaddrinfo*/)))((V$47568456/*aspel.net.socket_open..address_list*/));
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$15394928/*aspel.net.socket_close*/(TYPE$303 V$47568648/*aspel.net.socket_close.socket*/)
{
    {
    if (CORE$ne((CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47568648/*aspel.net.socket_close.socket*/)))->m0))),(((ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/))))) {
    {
    ((TYPE$16(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51736936/*aspel.internal.win32.closesocket*/)))(CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47568648/*aspel.net.socket_close.socket*/)))->m0)));
    }
    }
    }
}

TYPE$6 V$15395008/*aspel.net.socket_accept*/(TYPE$303 V$47568712/*aspel.net.socket_accept.passive*/, TYPE$303 V$47568776/*aspel.net.socket_accept.remote*/)
{
    {
    if (CORE$eq((CORE$band(((((TYPE$302*)((V$47568712/*aspel.net.socket_accept.passive*/)))->m1)),((V$47567176/*aspel.net.SOCKET_PASSIVE*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$317 V$47568840/*aspel.net.socket_accept.socket_address*/;
    TYPE$16 V$47568904/*aspel.net.socket_accept.socket_address_length*/ = CORE$cast_regular(TYPE$16, (CORE$U64)(16));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((~((V$47567240/*aspel.net.SOCKET_READY*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47568712/*aspel.net.socket_accept.passive*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) & CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47568776/*aspel.net.socket_accept.remote*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51737256/*aspel.internal.win32.accept*/)))(CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47568712/*aspel.net.socket_accept.passive*/)))->m0)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47568840/*aspel.net.socket_accept.socket_address*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47568904/*aspel.net.socket_accept.socket_address_length*/)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47568776/*aspel.net.socket_accept.remote*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47568776/*aspel.net.socket_accept.remote*/)))->m0))),(((ISOLATED$BASE.V$54887448/*aspel.internal.win32.INVALID_SOCKET*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15395088/*aspel.net.socket_send*/(TYPE$303 V$47568968/*aspel.net.socket_send.socket*/, TYPE$7 V$47569032/*aspel.net.socket_send.data*/, TYPE$19 V$47569096/*aspel.net.socket_send.length*/)
{
    {
    if (CORE$ne((CORE$band(((((TYPE$302*)((V$47568968/*aspel.net.socket_send.socket*/)))->m1)),((V$47567176/*aspel.net.SOCKET_PASSIVE*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$51737416/*aspel.internal.win32.send*/)))(CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47568968/*aspel.net.socket_send.socket*/)))->m0)), CORE$cast_regular(TYPE$19, (V$47569032/*aspel.net.socket_send.data*/)), CORE$cast_regular(TYPE$16, (V$47569096/*aspel.net.socket_send.length*/)), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)))),(CORE$cast_regular(TYPE$16, (V$47569096/*aspel.net.socket_send.length*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15395168/*aspel.net.socket_send*/(TYPE$303 V$47569160/*aspel.net.socket_send.socket*/, TYPE$1 V$47569224/*aspel.net.socket_send.data*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$303,TYPE$7,TYPE$19))(((CORE$DELEGATE)V$15395088/*aspel.net.socket_send*/)))((V$47569160/*aspel.net.socket_send.socket*/), CORE$cast_regular(TYPE$7, ((V$47569224/*aspel.net.socket_send.data*/).a)), CORE$cast_regular(TYPE$19, ((V$47569224/*aspel.net.socket_send.data*/).n)));
    return RET$VAL;
    }
    }
}

TYPE$16 V$15395248/*aspel.net.socket_receive*/(TYPE$303 V$47569288/*aspel.net.socket_receive.socket*/, TYPE$7 V$47569352/*aspel.net.socket_receive.data*/, TYPE$19 V$47569416/*aspel.net.socket_receive.length*/)
{
    {
    if (CORE$ne((CORE$band(((((TYPE$302*)((V$47569288/*aspel.net.socket_receive.socket*/)))->m1)),((V$47567176/*aspel.net.SOCKET_PASSIVE*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((~((V$47567240/*aspel.net.SOCKET_READY*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47569288/*aspel.net.socket_receive.socket*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) & CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$16 V$47569480/*aspel.net.socket_receive.amount*/ = ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$51737336/*aspel.internal.win32.recv*/)))(CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47569288/*aspel.net.socket_receive.socket*/)))->m0)), CORE$cast_regular(TYPE$19, (V$47569352/*aspel.net.socket_receive.data*/)), CORE$cast_regular(TYPE$16, (V$47569416/*aspel.net.socket_receive.length*/)), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    if (CORE$lt(((V$47569480/*aspel.net.socket_receive.amount*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$16 RET$VAL = (V$47569480/*aspel.net.socket_receive.amount*/);
    return RET$VAL;
    }
    }
}

TYPE$1 V$15395328/*aspel.net.socket_receive*/(TYPE$303 V$47569544/*aspel.net.socket_receive.socket*/, TYPE$1 V$47569608/*aspel.net.socket_receive.buffer*/)
{
    {
    TYPE$16 V$47569672/*aspel.net.socket_receive.length*/ = ((TYPE$16(*)(TYPE$303,TYPE$7,TYPE$19))(((CORE$DELEGATE)V$15395248/*aspel.net.socket_receive*/)))((V$47569544/*aspel.net.socket_receive.socket*/), CORE$cast_regular(TYPE$7, ((V$47569608/*aspel.net.socket_receive.buffer*/).a)), CORE$cast_regular(TYPE$19, ((V$47569608/*aspel.net.socket_receive.buffer*/).n)));
    if (CORE$lt(((V$47569672/*aspel.net.socket_receive.length*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$47569672/*aspel.net.socket_receive.length*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47569608/*aspel.net.socket_receive.buffer*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$1 RET$VAL = (V$47569608/*aspel.net.socket_receive.buffer*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$15395408/*aspel.net.add_socket_to_set*/(TYPE$328 V$47569928/*aspel.net.add_socket_to_set.set*/, TYPE$303 V$47569992/*aspel.net.add_socket_to_set.socket*/)
{
    {
    if (CORE$ne(((((TYPE$326*)((V$47569928/*aspel.net.add_socket_to_set.set*/)))->m0)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47569992/*aspel.net.add_socket_to_set.socket*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((((TYPE$326*)((V$47569928/*aspel.net.add_socket_to_set.set*/)))->m0)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$326*)((V$47569928/*aspel.net.add_socket_to_set.set*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47569992/*aspel.net.add_socket_to_set.socket*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47569992/*aspel.net.add_socket_to_set.socket*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$326*)((V$47569928/*aspel.net.add_socket_to_set.set*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$326*)((V$47569928/*aspel.net.add_socket_to_set.set*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$8 V$15395488/*aspel.net.remove_socket_from_set*/(TYPE$328 V$47570056/*aspel.net.remove_socket_from_set.set*/, TYPE$303 V$47570120/*aspel.net.remove_socket_from_set.socket*/)
{
    {
    if (CORE$eq(((((TYPE$326*)((V$47570056/*aspel.net.remove_socket_from_set.set*/)))->m0)),((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))) {
    {
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$302*)((((TYPE$326*)((V$47570056/*aspel.net.remove_socket_from_set.set*/)))->m0)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$326*)((V$47570056/*aspel.net.remove_socket_from_set.set*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((((TYPE$302*)((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))->m2)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$302*)((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((((TYPE$302*)((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))->m2)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((((TYPE$302*)((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))->m3)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$302*)((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((((TYPE$302*)((V$47570120/*aspel.net.remove_socket_from_set.socket*/)))->m3)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$326*)((V$47570056/*aspel.net.remove_socket_from_set.set*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$6 V$15395568/*aspel.net.sockets_ready*/(TYPE$328 V$47570184/*aspel.net.sockets_ready.set*/, TYPE$172 V$47570248/*aspel.net.sockets_ready.timeout*/)
{
    {
    TYPE$330 V$47570312/*aspel.net.sockets_ready.fds*/;
    ((TYPE$8(*)(TYPE$333))(((CORE$DELEGATE)V$51737816/*aspel.internal.win32.FD_ZERO*/)))(((CORE$PTR) &((V$47570312/*aspel.net.sockets_ready.fds*/))));
    TYPE$303 V$47570376/*aspel.net.sockets_ready.current*/ = (((TYPE$326*)((V$47570184/*aspel.net.sockets_ready.set*/)))->m0);
    while (CORE$ne(((V$47570376/*aspel.net.sockets_ready.current*/)),(CORE$null_pointer))) {
    {
    ((TYPE$8(*)(TYPE$19,TYPE$333))(((CORE$DELEGATE)V$51737736/*aspel.internal.win32.FD_SET*/)))(CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47570376/*aspel.net.sockets_ready.current*/)))->m0)), ((CORE$PTR) &((V$47570312/*aspel.net.sockets_ready.fds*/))));
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$302*)((V$47570376/*aspel.net.sockets_ready.current*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47570376/*aspel.net.sockets_ready.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    }
    }
    TYPE$331 V$47570440/*aspel.net.sockets_ready.tv*/ = ([&]()->TYPE$331{
    TYPE$331 TEMP$RESULT;
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (V$47570248/*aspel.net.sockets_ready.timeout*/));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, CORE$mul((CORE$sub(((V$47570248/*aspel.net.sockets_ready.timeout*/)),(CORE$cast_regular(TYPE$172, CORE$cast_regular(TYPE$16, (V$47570248/*aspel.net.sockets_ready.timeout*/)))))),(CORE$cast_regular(TYPE$172, (CORE$F64)(1000000.00000)))));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    return TEMP$RESULT;
}());
    TYPE$16 V$47570504/*aspel.net.sockets_ready.result*/ = ((TYPE$16(CORE$STDCALL*)(TYPE$16,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51737496/*aspel.internal.win32.select*/)))(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47570312/*aspel.net.sockets_ready.fds*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$47570440/*aspel.net.sockets_ready.tv*/)))));
    if (CORE$gt(((V$47570504/*aspel.net.sockets_ready.result*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$326*)((V$47570184/*aspel.net.sockets_ready.set*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47570376/*aspel.net.sockets_ready.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    while (CORE$ne(((V$47570376/*aspel.net.sockets_ready.current*/)),(CORE$null_pointer))) {
    {
    if (CORE$ne((((TYPE$16(*)(TYPE$19,TYPE$333))(((CORE$DELEGATE)V$51737896/*aspel.internal.win32.FD_ISSET*/)))(CORE$cast_regular(TYPE$19, (((TYPE$302*)((V$47570376/*aspel.net.sockets_ready.current*/)))->m0)), ((CORE$PTR) &((V$47570312/*aspel.net.sockets_ready.fds*/))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47567240/*aspel.net.SOCKET_READY*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$302*)((V$47570376/*aspel.net.sockets_ready.current*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$303 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$302*)((V$47570376/*aspel.net.sockets_ready.current*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47570376/*aspel.net.sockets_ready.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$303, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    if (CORE$eq(((V$47570504/*aspel.net.sockets_ready.result*/)),(((ISOLATED$BASE.V$54887512/*aspel.internal.win32.SOCKET_ERROR*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$15395648/*aspel.net.initialize_network_subsystem*/()
{
    {
    TYPE$1 V$47570568/*aspel.net.initialize_network_subsystem.dont_care*/ = CORE$PUSHARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(400ULL))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$16(CORE$STDCALL*)(TYPE$28,TYPE$19))(((CORE$DELEGATE)V$51736376/*aspel.internal.win32.WSAStartup*/)))(CORE$cast_regular(TYPE$28, (CORE$S64)(514ULL)), CORE$cast_regular(TYPE$19, ((V$47570568/*aspel.net.initialize_network_subsystem.dont_care*/).a)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$15395728/*aspel.net.uninitialize_network_subsystem*/()
{
    {
    ((TYPE$16(CORE$STDCALL*)())(((CORE$DELEGATE)V$51736456/*aspel.internal.win32.WSACleanup*/)))();
    }
}

TYPE$51 V$15396128/*aspel.math.to_radians*/(TYPE$51 V$47572488/*aspel.math.to_radians.angle_deg*/)
{
    {
    {
    TYPE$51 RET$VAL = CORE$mul((CORE$div(((V$47572488/*aspel.math.to_radians.angle_deg*/)),((CORE$F64)(180.00000)))),(((ISOLATED$BASE.V$47573448/*aspel.math.PI*/))));
    return RET$VAL;
    }
    }
}

TYPE$51 V$15396208/*aspel.math.to_degrees*/(TYPE$51 V$47572552/*aspel.math.to_degrees.angle_rad*/)
{
    {
    {
    TYPE$51 RET$VAL = CORE$div((CORE$mul(((V$47572552/*aspel.math.to_degrees.angle_rad*/)),((CORE$F64)(180.00000)))),(((ISOLATED$BASE.V$47573448/*aspel.math.PI*/))));
    return RET$VAL;
    }
    }
}

TYPE$4 V$47844480/*aspel.math.min*/(TYPE$4 V$47572616/*aspel.math.min.a*/, TYPE$4 V$47572680/*aspel.math.min.b*/)
{
    {
    if (CORE$le(((V$47572616/*aspel.math.min.a*/)),((V$47572680/*aspel.math.min.b*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47572616/*aspel.math.min.a*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$47572680/*aspel.math.min.b*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47844560/*aspel.math.min*/(TYPE$5 V$47572744/*aspel.math.min.a*/, TYPE$5 V$47572808/*aspel.math.min.b*/)
{
    {
    if (CORE$le(((V$47572744/*aspel.math.min.a*/)),((V$47572808/*aspel.math.min.b*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$47572744/*aspel.math.min.a*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$47572808/*aspel.math.min.b*/);
    return RET$VAL;
    }
    }
}

TYPE$51 V$47844640/*aspel.math.min*/(TYPE$51 V$47572872/*aspel.math.min.a*/, TYPE$51 V$47572936/*aspel.math.min.b*/)
{
    {
    if (CORE$le(((V$47572872/*aspel.math.min.a*/)),((V$47572936/*aspel.math.min.b*/)))) {
    {
    {
    TYPE$51 RET$VAL = (V$47572872/*aspel.math.min.a*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$51 RET$VAL = (V$47572936/*aspel.math.min.b*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$47844720/*aspel.math.max*/(TYPE$4 V$47573000/*aspel.math.max.a*/, TYPE$4 V$47573064/*aspel.math.max.b*/)
{
    {
    if (CORE$ge(((V$47573000/*aspel.math.max.a*/)),((V$47573064/*aspel.math.max.b*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47573000/*aspel.math.max.a*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$47573064/*aspel.math.max.b*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47844800/*aspel.math.max*/(TYPE$5 V$47573128/*aspel.math.max.a*/, TYPE$5 V$47573192/*aspel.math.max.b*/)
{
    {
    if (CORE$ge(((V$47573128/*aspel.math.max.a*/)),((V$47573192/*aspel.math.max.b*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$47573128/*aspel.math.max.a*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$47573192/*aspel.math.max.b*/);
    return RET$VAL;
    }
    }
}

TYPE$51 V$47844880/*aspel.math.max*/(TYPE$51 V$47573256/*aspel.math.max.a*/, TYPE$51 V$47573320/*aspel.math.max.b*/)
{
    {
    if (CORE$ge(((V$47573256/*aspel.math.max.a*/)),((V$47573320/*aspel.math.max.b*/)))) {
    {
    {
    TYPE$51 RET$VAL = (V$47573256/*aspel.math.max.a*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$51 RET$VAL = (V$47573320/*aspel.math.max.b*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47845440/*aspel.math.is_nan*/(TYPE$51 V$47574280/*aspel.math.is_nan.v*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne(((V$47574280/*aspel.math.is_nan.v*/)),((V$47574280/*aspel.math.is_nan.v*/)));
    return RET$VAL;
    }
    }
}

TYPE$5 V$47845520/*aspel.math.float_to_bits*/(TYPE$51 V$47574344/*aspel.math.float_to_bits.value*/)
{
    {
    {
    TYPE$5 RET$VAL = (*(TYPE$5*)(CORE$cast_regular(TYPE$54, ((CORE$PTR) &((V$47574344/*aspel.math.float_to_bits.value*/))))));
    return RET$VAL;
    }
    }
}

TYPE$51 V$47845600/*aspel.math.bits_to_float*/(TYPE$5 V$47574408/*aspel.math.bits_to_float.bits*/)
{
    {
    {
    TYPE$51 RET$VAL = (*(TYPE$51*)(CORE$cast_regular(TYPE$143, ((CORE$PTR) &((V$47574408/*aspel.math.bits_to_float.bits*/))))));
    return RET$VAL;
    }
    }
}

TYPE$4 V$47846000/*aspel.math.clamp*/(TYPE$4 V$47574472/*aspel.math.clamp.value*/, TYPE$4 V$47574536/*aspel.math.clamp.min*/, TYPE$4 V$47574600/*aspel.math.clamp.max*/)
{
    {
    if (CORE$lt(((V$47574472/*aspel.math.clamp.value*/)),((V$47574536/*aspel.math.clamp.min*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47574536/*aspel.math.clamp.min*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$47574472/*aspel.math.clamp.value*/)),((V$47574600/*aspel.math.clamp.max*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47574600/*aspel.math.clamp.max*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$47574472/*aspel.math.clamp.value*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47846080/*aspel.math.clamp*/(TYPE$5 V$47574664/*aspel.math.clamp.value*/, TYPE$5 V$47574728/*aspel.math.clamp.min*/, TYPE$5 V$47574792/*aspel.math.clamp.max*/)
{
    {
    if (CORE$lt(((V$47574664/*aspel.math.clamp.value*/)),((V$47574728/*aspel.math.clamp.min*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$47574728/*aspel.math.clamp.min*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$47574664/*aspel.math.clamp.value*/)),((V$47574792/*aspel.math.clamp.max*/)))) {
    {
    {
    TYPE$5 RET$VAL = (V$47574792/*aspel.math.clamp.max*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$47574664/*aspel.math.clamp.value*/);
    return RET$VAL;
    }
    }
}

TYPE$51 V$47846160/*aspel.math.clamp*/(TYPE$51 V$47574856/*aspel.math.clamp.value*/, TYPE$51 V$47574920/*aspel.math.clamp.min*/, TYPE$51 V$47574984/*aspel.math.clamp.max*/)
{
    {
    if (CORE$lt(((V$47574856/*aspel.math.clamp.value*/)),((V$47574920/*aspel.math.clamp.min*/)))) {
    {
    {
    TYPE$51 RET$VAL = (V$47574920/*aspel.math.clamp.min*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$47574856/*aspel.math.clamp.value*/)),((V$47574984/*aspel.math.clamp.max*/)))) {
    {
    {
    TYPE$51 RET$VAL = (V$47574984/*aspel.math.clamp.max*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$51 RET$VAL = (V$47574856/*aspel.math.clamp.value*/);
    return RET$VAL;
    }
    }
}

TYPE$19 V$47846240/*aspel.math.choose*/(TYPE$19 V$47575048/*aspel.math.choose.n*/, TYPE$19 V$47575112/*aspel.math.choose.k*/, TYPE$19 V$47575176/*aspel.math.choose.mod*/)
{
    {
    if (CORE$lt(((V$47575048/*aspel.math.choose.n*/)),((V$47575112/*aspel.math.choose.k*/)))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$le(((V$47575176/*aspel.math.choose.mod*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$lor((CORE$eq(((V$47575112/*aspel.math.choose.k*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))),(CORE$eq(((V$47575112/*aspel.math.choose.k*/)),((V$47575048/*aspel.math.choose.n*/)))))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    TYPE$103 V$47575240/*aspel.math.choose.sieve*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add((CORE$shr(((V$47575048/*aspel.math.choose.n*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(5ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)))))), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$19 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$47575240/*aspel.math.choose.sieve*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    TYPE$5 V$47575304/*aspel.math.choose.coefficient*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    TYPE$5 V$47575368/*aspel.math.choose.prime*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL));
    while (CORE$le(((V$47575368/*aspel.math.choose.prime*/)),(CORE$cast_regular(TYPE$5, (V$47575048/*aspel.math.choose.n*/))))) {
    {
    if (CORE$eq((CORE$band((((TYPE$19*)((V$47575240/*aspel.math.choose.sieve*/)))[(CORE$U64)(CORE$shr(((V$47575368/*aspel.math.choose.prime*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(5ULL)))))]),(CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$cast_regular(TYPE$4, CORE$band(((V$47575368/*aspel.math.choose.prime*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(31ULL))))))))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$5 V$47575432/*aspel.math.choose...i*/ = CORE$mul(((V$47575368/*aspel.math.choose.prime*/)),((V$47575368/*aspel.math.choose.prime*/)));
    while (CORE$le(((V$47575432/*aspel.math.choose...i*/)),(CORE$cast_regular(TYPE$5, (V$47575048/*aspel.math.choose.n*/))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, CORE$shl(((CORE$S64)(1ULL)),(CORE$cast_regular(TYPE$4, CORE$band(((V$47575432/*aspel.math.choose...i*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(31ULL)))))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$47575240/*aspel.math.choose.sieve*/)))[(CORE$U64)(CORE$shr(((V$47575432/*aspel.math.choose...i*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(5ULL)))))]);
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47575368/*aspel.math.choose.prime*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575432/*aspel.math.choose...i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    TYPE$5 V$47575496/*aspel.math.choose...power*/ = (V$47575368/*aspel.math.choose.prime*/);
    while (CORE$le(((V$47575496/*aspel.math.choose...power*/)),(CORE$cast_regular(TYPE$5, (V$47575048/*aspel.math.choose.n*/))))) {
    {
    TYPE$5 V$47575560/*aspel.math.choose....count*/ = CORE$sub((CORE$sub((CORE$div((CORE$cast_regular(TYPE$5, (V$47575048/*aspel.math.choose.n*/))),((V$47575496/*aspel.math.choose...power*/)))),(CORE$div((CORE$cast_regular(TYPE$5, (V$47575112/*aspel.math.choose.k*/))),((V$47575496/*aspel.math.choose...power*/)))))),(CORE$div((CORE$cast_regular(TYPE$5, CORE$sub(((V$47575048/*aspel.math.choose.n*/)),((V$47575112/*aspel.math.choose.k*/))))),((V$47575496/*aspel.math.choose...power*/)))));
    {
    TYPE$4 V$47575624/*aspel.math.choose.....i*/ = (TYPE$4)((CORE$S64)(1ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, (V$47575560/*aspel.math.choose....count*/)));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47575624/*aspel.math.choose.....i*/ -= FOREACH$STEP;
    while ((V$47575624/*aspel.math.choose.....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47575368/*aspel.math.choose.prime*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575304/*aspel.math.choose.coefficient*/));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$47575176/*aspel.math.choose.mod*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575304/*aspel.math.choose.coefficient*/));
    *TEMP$PTR0 = (*TEMP$PTR0) % CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47575368/*aspel.math.choose.prime*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575496/*aspel.math.choose...power*/));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575368/*aspel.math.choose.prime*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$19 RET$VAL = CORE$cast_regular(TYPE$19, (V$47575304/*aspel.math.choose.coefficient*/));
    CORE$DEL((void*)(((V$47575240/*aspel.math.choose.sieve*/))));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$47575240/*aspel.math.choose.sieve*/))));    }
}

TYPE$19 V$47846320/*aspel.math.ceil_pow2*/(TYPE$19 V$47575688/*aspel.math.ceil_pow2.x*/)
{
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$shr(((V$47575688/*aspel.math.ceil_pow2.x*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$shr(((V$47575688/*aspel.math.ceil_pow2.x*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(2ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$shr(((V$47575688/*aspel.math.ceil_pow2.x*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(4ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$shr(((V$47575688/*aspel.math.ceil_pow2.x*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$shr(((V$47575688/*aspel.math.ceil_pow2.x*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47575688/*aspel.math.ceil_pow2.x*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$47575688/*aspel.math.ceil_pow2.x*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47846560/*aspel.math.delete_big_integer*/(TYPE$352 V$47576072/*aspel.math.delete_big_integer.big*/)
{
    {
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$173*)((V$47576072/*aspel.math.delete_big_integer.big*/)))->m1))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$173*)((V$47576072/*aspel.math.delete_big_integer.big*/)))->m1)).a));    }
    }
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576072/*aspel.math.delete_big_integer.big*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
}

TYPE$6 V$47846640/*aspel.math.set_value*/(TYPE$352 V$47576136/*aspel.math.set_value.big*/, TYPE$4 V$47576200/*aspel.math.set_value.value*/)
{
    {
    if (CORE$eq(((V$47576200/*aspel.math.set_value.value*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576136/*aspel.math.set_value.big*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576136/*aspel.math.set_value.big*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576136/*aspel.math.set_value.big*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    else {
    {
    TYPE$184 V$47576264/*aspel.math.set_value..magnitude*/ = CORE$NEWARRINIT((CORE$U64)(((ISOLATED$BASE.V$47575752/*aspel.math.DEFAULT_INITIAL_LENGTH*/))), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$19 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$47576264/*aspel.math.set_value..magnitude*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$16 V$47576328/*aspel.math.set_value..sign*/;
    if (CORE$lt(((V$47576200/*aspel.math.set_value.value*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47576328/*aspel.math.set_value..sign*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((V$47576200/*aspel.math.set_value.value*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47576200/*aspel.math.set_value.value*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47576328/*aspel.math.set_value..sign*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47576200/*aspel.math.set_value.value*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47576264/*aspel.math.set_value..magnitude*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(49)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, CORE$shr(((V$47576200/*aspel.math.set_value.value*/)),((CORE$S64)(32ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47576264/*aspel.math.set_value..magnitude*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(50)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$5 V$47576392/*aspel.math.set_value..length*/;
    if (CORE$ne((CORE$ABC(TYPE$19, ((V$47576264/*aspel.math.set_value..magnitude*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(53))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47576392/*aspel.math.set_value..length*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47576392/*aspel.math.set_value..length*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47576328/*aspel.math.set_value..sign*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576136/*aspel.math.set_value.big*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47576392/*aspel.math.set_value..length*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576136/*aspel.math.set_value.big*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47576264/*aspel.math.set_value..magnitude*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576136/*aspel.math.set_value.big*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$173 V$47846720/*aspel.math.value_of*/(TYPE$4 V$47576456/*aspel.math.value_of.value*/)
{
    {
    TYPE$173 V$47576520/*aspel.math.value_of.result*/;
    {
    { (V$47576520/*aspel.math.value_of.result*/.m0) = (0); }
    { (V$47576520/*aspel.math.value_of.result*/.m1).a = (0); }
{ (V$47576520/*aspel.math.value_of.result*/.m1).n = (0); }
    { (V$47576520/*aspel.math.value_of.result*/.m2) = (0); }
}
    ((TYPE$6(*)(TYPE$352,TYPE$4))(((CORE$DELEGATE)V$47846640/*aspel.math.set_value*/)))(((CORE$PTR) &((V$47576520/*aspel.math.value_of.result*/))), (V$47576456/*aspel.math.value_of.value*/));
    {
    TYPE$173 RET$VAL = (V$47576520/*aspel.math.value_of.result*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47846800/*aspel.math.copy*/(TYPE$352 V$47576584/*aspel.math.copy.dest*/, TYPE$352 V$47576648/*aspel.math.copy.src*/)
{
    {
    if (CORE$eq(((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$lt((((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m1).n)),((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m2)))) {
    {
    TYPE$184 V$47576712/*aspel.math.copy..new_magnitude*/ = CORE$NEWARRINIT((CORE$U64)((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m2)), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$19 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$47576712/*aspel.math.copy..new_magnitude*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$352))(((CORE$DELEGATE)V$47846560/*aspel.math.delete_big_integer*/)))((V$47576584/*aspel.math.copy.dest*/));
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47576712/*aspel.math.copy..new_magnitude*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$4 V$47576776/*aspel.math.copy..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m2)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47576776/*aspel.math.copy..i*/ -= FOREACH$STEP;
    while ((V$47576776/*aspel.math.copy..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$19, ((((TYPE$173*)((V$47576648/*aspel.math.copy.src*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47576776/*aspel.math.copy..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(94)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((((TYPE$173*)((V$47576584/*aspel.math.copy.dest*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47576776/*aspel.math.copy..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(94)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47846880/*aspel.math.negate*/(TYPE$352 V$47576840/*aspel.math.negate.dest*/, TYPE$352 V$47576904/*aspel.math.negate.src*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$352,TYPE$352))(((CORE$DELEGATE)V$47846800/*aspel.math.copy*/)))((V$47576840/*aspel.math.negate.dest*/), (V$47576904/*aspel.math.negate.src*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((((TYPE$173*)((V$47576904/*aspel.math.negate.src*/)))->m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47576840/*aspel.math.negate.dest*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$5 V$47846960/*aspel.math.normalize*/(TYPE$184 V$47576968/*aspel.math.normalize.magnitude*/, TYPE$5 V$47577032/*aspel.math.normalize.length*/)
{
    {
    TYPE$5 V$47577096/*aspel.math.normalize.number_zeroes*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$47577096/*aspel.math.normalize.number_zeroes*/)),((V$47577032/*aspel.math.normalize.length*/)))),(CORE$eq((CORE$ABC(TYPE$19, ((V$47576968/*aspel.math.normalize.magnitude*/)), (CORE$U64)(CORE$sub((CORE$sub(((V$47577032/*aspel.math.normalize.length*/)),((V$47577096/*aspel.math.normalize.number_zeroes*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(110))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47577096/*aspel.math.normalize.number_zeroes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$5 RET$VAL = CORE$sub(((V$47577032/*aspel.math.normalize.length*/)),((V$47577096/*aspel.math.normalize.number_zeroes*/)));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47847040/*aspel.math.compare_arrays*/(TYPE$184 V$47577160/*aspel.math.compare_arrays.a*/, TYPE$5 V$47577224/*aspel.math.compare_arrays.x*/, TYPE$184 V$47577288/*aspel.math.compare_arrays.b*/, TYPE$5 V$47577352/*aspel.math.compare_arrays.y*/)
{
    {
    if (CORE$lt(((V$47577224/*aspel.math.compare_arrays.x*/)),((V$47577352/*aspel.math.compare_arrays.y*/)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((V$47577224/*aspel.math.compare_arrays.x*/)),((V$47577352/*aspel.math.compare_arrays.y*/)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 V$47577416/*aspel.math.compare_arrays..i*/ = (TYPE$4)((CORE$S64)(1ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, (V$47577224/*aspel.math.compare_arrays.x*/)));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47577416/*aspel.math.compare_arrays..i*/ -= FOREACH$STEP;
    while ((V$47577416/*aspel.math.compare_arrays..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    if (CORE$lt((CORE$ABC(TYPE$19, ((V$47577160/*aspel.math.compare_arrays.a*/)), (CORE$U64)(CORE$sub(((V$47577224/*aspel.math.compare_arrays.x*/)),(CORE$cast_regular(TYPE$5, (V$47577416/*aspel.math.compare_arrays..i*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(122))),(CORE$ABC(TYPE$19, ((V$47577288/*aspel.math.compare_arrays.b*/)), (CORE$U64)(CORE$sub(((V$47577224/*aspel.math.compare_arrays.x*/)),(CORE$cast_regular(TYPE$5, (V$47577416/*aspel.math.compare_arrays..i*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(122))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt((CORE$ABC(TYPE$19, ((V$47577160/*aspel.math.compare_arrays.a*/)), (CORE$U64)(CORE$sub(((V$47577224/*aspel.math.compare_arrays.x*/)),(CORE$cast_regular(TYPE$5, (V$47577416/*aspel.math.compare_arrays..i*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(123))),(CORE$ABC(TYPE$19, ((V$47577288/*aspel.math.compare_arrays.b*/)), (CORE$U64)(CORE$sub(((V$47577224/*aspel.math.compare_arrays.x*/)),(CORE$cast_regular(TYPE$5, (V$47577416/*aspel.math.compare_arrays..i*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(123))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47847120/*aspel.math.compare*/(TYPE$352 V$47577480/*aspel.math.compare.a*/, TYPE$352 V$47577544/*aspel.math.compare.b*/)
{
    {
    if (CORE$lt(((((TYPE$173*)((V$47577480/*aspel.math.compare.a*/)))->m0)),((((TYPE$173*)((V$47577544/*aspel.math.compare.b*/)))->m0)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((((TYPE$173*)((V$47577480/*aspel.math.compare.a*/)))->m0)),((((TYPE$173*)((V$47577544/*aspel.math.compare.b*/)))->m0)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$173*)((V$47577480/*aspel.math.compare.a*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$mul(((((TYPE$173*)((V$47577480/*aspel.math.compare.a*/)))->m0)),(((TYPE$16(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5))(((CORE$DELEGATE)V$47847040/*aspel.math.compare_arrays*/)))((((TYPE$173*)((V$47577480/*aspel.math.compare.a*/)))->m1), (((TYPE$173*)((V$47577480/*aspel.math.compare.a*/)))->m2), (((TYPE$173*)((V$47577544/*aspel.math.compare.b*/)))->m1), (((TYPE$173*)((V$47577544/*aspel.math.compare.b*/)))->m2))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47847200/*aspel.math.add_arrays*/(TYPE$184 V$47577608/*aspel.math.add_arrays.a*/, TYPE$5 V$47577672/*aspel.math.add_arrays.x*/, TYPE$184 V$47577736/*aspel.math.add_arrays.b*/, TYPE$5 V$47577800/*aspel.math.add_arrays.y*/, TYPE$184 V$47577864/*aspel.math.add_arrays.target*/, TYPE$360 V$47577928/*aspel.math.add_arrays.out_result*/, TYPE$54 V$47577992/*aspel.math.add_arrays.out_length*/)
{
    {
    if (CORE$lt(((V$47577672/*aspel.math.add_arrays.x*/)),((V$47577800/*aspel.math.add_arrays.y*/)))) {
    {
    TYPE$5 V$47578056/*aspel.math.add_arrays..temp*/ = (V$47577672/*aspel.math.add_arrays.x*/);
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47577800/*aspel.math.add_arrays.y*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47577672/*aspel.math.add_arrays.x*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47578056/*aspel.math.add_arrays..temp*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47577800/*aspel.math.add_arrays.y*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    TYPE$184 V$47578120/*aspel.math.add_arrays..temp2*/ = (V$47577608/*aspel.math.add_arrays.a*/);
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47577736/*aspel.math.add_arrays.b*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47577608/*aspel.math.add_arrays.a*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47578120/*aspel.math.add_arrays..temp2*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47577736/*aspel.math.add_arrays.b*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    TYPE$5 V$47578184/*aspel.math.add_arrays.result_length*/ = (V$47577672/*aspel.math.add_arrays.x*/);
    TYPE$184 V$47578248/*aspel.math.add_arrays.result*/;
    TYPE$6 V$47578312/*aspel.math.add_arrays.delete_target*/;
    if (CORE$ge(((V$47578184/*aspel.math.add_arrays.result_length*/)),(((V$47577864/*aspel.math.add_arrays.target*/).n)))) {
    {
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARRINIT((CORE$U64)(CORE$add(((V$47578184/*aspel.math.add_arrays.result_length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$19 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578248/*aspel.math.add_arrays.result*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((V$47578248/*aspel.math.add_arrays.result*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578312/*aspel.math.add_arrays.delete_target*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47577864/*aspel.math.add_arrays.target*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578248/*aspel.math.add_arrays.result*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578312/*aspel.math.add_arrays.delete_target*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    TYPE$5 V$47578376/*aspel.math.add_arrays.carry*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$47578440/*aspel.math.add_arrays.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$47578440/*aspel.math.add_arrays.i*/)),((V$47577672/*aspel.math.add_arrays.x*/)))),(CORE$lt(((V$47578440/*aspel.math.add_arrays.i*/)),((V$47577800/*aspel.math.add_arrays.y*/)))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47577608/*aspel.math.add_arrays.a*/)), (CORE$U64)((V$47578440/*aspel.math.add_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(173)))),(CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47577736/*aspel.math.add_arrays.b*/)), (CORE$U64)((V$47578440/*aspel.math.add_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(173))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578376/*aspel.math.add_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47578376/*aspel.math.add_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578248/*aspel.math.add_arrays.result*/)), (CORE$U64)((V$47578440/*aspel.math.add_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(174)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578376/*aspel.math.add_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578440/*aspel.math.add_arrays.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    while (CORE$lt(((V$47578440/*aspel.math.add_arrays.i*/)),((V$47577672/*aspel.math.add_arrays.x*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47577608/*aspel.math.add_arrays.a*/)), (CORE$U64)((V$47578440/*aspel.math.add_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(182))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578376/*aspel.math.add_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47578376/*aspel.math.add_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578248/*aspel.math.add_arrays.result*/)), (CORE$U64)((V$47578440/*aspel.math.add_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(183)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578376/*aspel.math.add_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578440/*aspel.math.add_arrays.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$47578376/*aspel.math.add_arrays.carry*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578184/*aspel.math.add_arrays.result_length*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47578376/*aspel.math.add_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578248/*aspel.math.add_arrays.result*/)), (CORE$U64)(CORE$sub(((V$47578184/*aspel.math.add_arrays.result_length*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(192)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if ((V$47578312/*aspel.math.add_arrays.delete_target*/)) {
    {
    CORE$DEL((void*)(((V$47577864/*aspel.math.add_arrays.target*/)).a));    }
    }
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47578248/*aspel.math.add_arrays.result*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$184*)((V$47577928/*aspel.math.add_arrays.out_result*/))));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47578184/*aspel.math.add_arrays.result_length*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$47577992/*aspel.math.add_arrays.out_length*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$5 V$47847280/*aspel.math.subtract_arrays*/(TYPE$184 V$47578504/*aspel.math.subtract_arrays.a*/, TYPE$5 V$47578568/*aspel.math.subtract_arrays.x*/, TYPE$184 V$47578632/*aspel.math.subtract_arrays.b*/, TYPE$5 V$47578696/*aspel.math.subtract_arrays.y*/, TYPE$184 V$47578760/*aspel.math.subtract_arrays.result*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ge(((V$47578568/*aspel.math.subtract_arrays.x*/)),((V$47578696/*aspel.math.subtract_arrays.y*/))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(206)));
    TYPE$4 V$47578824/*aspel.math.subtract_arrays.carry*/ = (CORE$S64)(0ULL);
    TYPE$5 V$47578888/*aspel.math.subtract_arrays.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$47578888/*aspel.math.subtract_arrays.i*/)),((V$47578568/*aspel.math.subtract_arrays.x*/)))),(CORE$lt(((V$47578888/*aspel.math.subtract_arrays.i*/)),((V$47578696/*aspel.math.subtract_arrays.y*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$cast_regular(TYPE$4, CORE$ABC(TYPE$19, ((V$47578504/*aspel.math.subtract_arrays.a*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(214)))),(CORE$cast_regular(TYPE$4, CORE$ABC(TYPE$19, ((V$47578632/*aspel.math.subtract_arrays.b*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(214))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578824/*aspel.math.subtract_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$ge(((V$47578824/*aspel.math.subtract_arrays.carry*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47578824/*aspel.math.subtract_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578760/*aspel.math.subtract_arrays.result*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(217)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578824/*aspel.math.subtract_arrays.carry*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL))),(CORE$cast_regular(TYPE$19, (-((V$47578824/*aspel.math.subtract_arrays.carry*/)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578760/*aspel.math.subtract_arrays.result*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(222)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578824/*aspel.math.subtract_arrays.carry*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578888/*aspel.math.subtract_arrays.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    while (CORE$lt(((V$47578888/*aspel.math.subtract_arrays.i*/)),((V$47578568/*aspel.math.subtract_arrays.x*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, CORE$ABC(TYPE$19, ((V$47578504/*aspel.math.subtract_arrays.a*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(231))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578824/*aspel.math.subtract_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$ge(((V$47578824/*aspel.math.subtract_arrays.carry*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47578824/*aspel.math.subtract_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578760/*aspel.math.subtract_arrays.result*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(234)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578824/*aspel.math.subtract_arrays.carry*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL))),(CORE$cast_regular(TYPE$19, (-((V$47578824/*aspel.math.subtract_arrays.carry*/)))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47578760/*aspel.math.subtract_arrays.result*/)), (CORE$U64)((V$47578888/*aspel.math.subtract_arrays.i*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(239)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578824/*aspel.math.subtract_arrays.carry*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47578888/*aspel.math.subtract_arrays.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((V$47578824/*aspel.math.subtract_arrays.carry*/)),((CORE$S64)(0ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(245)));
    {
    TYPE$5 RET$VAL = ((TYPE$5(*)(TYPE$184,TYPE$5))(((CORE$DELEGATE)V$47846960/*aspel.math.normalize*/)))((V$47578760/*aspel.math.subtract_arrays.result*/), (V$47578568/*aspel.math.subtract_arrays.x*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47847360/*aspel.math.multiply_arrays*/(TYPE$184 V$47578952/*aspel.math.multiply_arrays.a*/, TYPE$5 V$47579016/*aspel.math.multiply_arrays.x*/, TYPE$184 V$47579080/*aspel.math.multiply_arrays.b*/, TYPE$5 V$47579144/*aspel.math.multiply_arrays.y*/, TYPE$360 V$47579208/*aspel.math.multiply_arrays.out_result*/, TYPE$54 V$47579272/*aspel.math.multiply_arrays.out_length*/)
{
    {
    TYPE$184 V$47579336/*aspel.math.multiply_arrays.result*/ = CORE$NEWARRINIT((CORE$U64)(CORE$add(((V$47579016/*aspel.math.multiply_arrays.x*/)),((V$47579144/*aspel.math.multiply_arrays.y*/)))), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$19 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$47579336/*aspel.math.multiply_arrays.result*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$5 V$47579400/*aspel.math.multiply_arrays.carry*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    {
    TYPE$4 V$47579464/*aspel.math.multiply_arrays..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((V$47579016/*aspel.math.multiply_arrays.x*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47579464/*aspel.math.multiply_arrays..i*/ -= FOREACH$STEP;
    while ((V$47579464/*aspel.math.multiply_arrays..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mul((CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47578952/*aspel.math.multiply_arrays.a*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47579464/*aspel.math.multiply_arrays..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(261)))),(CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47579080/*aspel.math.multiply_arrays.b*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(261))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47579400/*aspel.math.multiply_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47579400/*aspel.math.multiply_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47579336/*aspel.math.multiply_arrays.result*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47579464/*aspel.math.multiply_arrays..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(262)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47579400/*aspel.math.multiply_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47579400/*aspel.math.multiply_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47579336/*aspel.math.multiply_arrays.result*/)), (CORE$U64)((V$47579016/*aspel.math.multiply_arrays.x*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(265)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$4 V$47579528/*aspel.math.multiply_arrays..j*/ = (TYPE$4)((CORE$S64)(1ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((V$47579144/*aspel.math.multiply_arrays.y*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47579528/*aspel.math.multiply_arrays..j*/ -= FOREACH$STEP;
    while ((V$47579528/*aspel.math.multiply_arrays..j*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47579400/*aspel.math.multiply_arrays.carry*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$4 V$47579592/*aspel.math.multiply_arrays...i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((V$47579016/*aspel.math.multiply_arrays.x*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47579592/*aspel.math.multiply_arrays...i*/ -= FOREACH$STEP;
    while ((V$47579592/*aspel.math.multiply_arrays...i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$mul((CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47578952/*aspel.math.multiply_arrays.a*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47579592/*aspel.math.multiply_arrays...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(273)))),(CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47579080/*aspel.math.multiply_arrays.b*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47579528/*aspel.math.multiply_arrays..j*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(273)))))),(CORE$cast_regular(TYPE$5, CORE$ABC(TYPE$19, ((V$47579336/*aspel.math.multiply_arrays.result*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$47579592/*aspel.math.multiply_arrays...i*/)),((V$47579528/*aspel.math.multiply_arrays..j*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(273))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47579400/*aspel.math.multiply_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47579400/*aspel.math.multiply_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47579336/*aspel.math.multiply_arrays.result*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$47579592/*aspel.math.multiply_arrays...i*/)),((V$47579528/*aspel.math.multiply_arrays..j*/))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(274)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(32ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47579400/*aspel.math.multiply_arrays.carry*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$47579400/*aspel.math.multiply_arrays.carry*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$19, ((V$47579336/*aspel.math.multiply_arrays.result*/)), (CORE$U64)(CORE$add((CORE$cast_regular(TYPE$5, (V$47579528/*aspel.math.multiply_arrays..j*/))),((V$47579016/*aspel.math.multiply_arrays.x*/)))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x69\x67\x5F\x69\x6E\x74\x65\x67\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(277)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$184 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47579336/*aspel.math.multiply_arrays.result*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$184*)((V$47579208/*aspel.math.multiply_arrays.out_result*/))));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$184,TYPE$5))(((CORE$DELEGATE)V$47846960/*aspel.math.normalize*/)))((V$47579336/*aspel.math.multiply_arrays.result*/), CORE$add(((V$47579016/*aspel.math.multiply_arrays.x*/)),((V$47579144/*aspel.math.multiply_arrays.y*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$5*)((V$47579272/*aspel.math.multiply_arrays.out_length*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47847440/*aspel.math.add*/(TYPE$352 V$47579656/*aspel.math.add.left*/, TYPE$352 V$47579720/*aspel.math.add.right*/)
{
    {
    if (CORE$eq(((((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$352,TYPE$352))(((CORE$DELEGATE)V$47846800/*aspel.math.copy*/)))((V$47579656/*aspel.math.add.left*/), (V$47579720/*aspel.math.add.right*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m0)),((((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m0)))) {
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$184,TYPE$360,TYPE$54))(((CORE$DELEGATE)V$47847200/*aspel.math.add_arrays*/)))((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m1), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m2), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1), ((CORE$PTR) &((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1))), ((CORE$PTR) &((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2))));
    return RET$VAL;
    }
    }
    }
    TYPE$16 V$47579784/*aspel.math.add.cmp*/ = ((TYPE$16(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5))(((CORE$DELEGATE)V$47847040/*aspel.math.compare_arrays*/)))((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m1), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m2));
    if (CORE$eq(((V$47579784/*aspel.math.add.cmp*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$lt(((V$47579784/*aspel.math.add.cmp*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$184))(((CORE$DELEGATE)V$47847280/*aspel.math.subtract_arrays*/)))((((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m1), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m2), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$184))(((CORE$DELEGATE)V$47847280/*aspel.math.subtract_arrays*/)))((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m1), (((TYPE$173*)((V$47579720/*aspel.math.add.right*/)))->m2), (((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579656/*aspel.math.add.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47847520/*aspel.math.subtract*/(TYPE$352 V$47579848/*aspel.math.subtract.left*/, TYPE$352 V$47579912/*aspel.math.subtract.right*/)
{
    {
    if (CORE$eq(((((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$352,TYPE$352))(((CORE$DELEGATE)V$47846880/*aspel.math.negate*/)))((V$47579848/*aspel.math.subtract.left*/), (V$47579912/*aspel.math.subtract.right*/));
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m0)),((((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m0)))) {
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$184,TYPE$360,TYPE$54))(((CORE$DELEGATE)V$47847200/*aspel.math.add_arrays*/)))((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m1), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m2), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1), ((CORE$PTR) &((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1))), ((CORE$PTR) &((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2))));
    return RET$VAL;
    }
    }
    }
    TYPE$16 V$47579976/*aspel.math.subtract.cmp*/ = ((TYPE$16(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5))(((CORE$DELEGATE)V$47847040/*aspel.math.compare_arrays*/)))((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m1), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m2));
    if (CORE$eq(((V$47579976/*aspel.math.subtract.cmp*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$lt(((V$47579976/*aspel.math.subtract.cmp*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$184))(((CORE$DELEGATE)V$47847280/*aspel.math.subtract_arrays*/)))((((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m1), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m2), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((-((((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$184))(((CORE$DELEGATE)V$47847280/*aspel.math.subtract_arrays*/)))((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m1), (((TYPE$173*)((V$47579912/*aspel.math.subtract.right*/)))->m2), (((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47579848/*aspel.math.subtract.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47847600/*aspel.math.multiply*/(TYPE$352 V$47580040/*aspel.math.multiply.left*/, TYPE$352 V$47580104/*aspel.math.multiply.right*/)
{
    {
    if (CORE$eq(((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((((TYPE$173*)((V$47580104/*aspel.math.multiply.right*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    TYPE$184 V$47580168/*aspel.math.multiply.to_delete*/ = (((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m1);
    if ((!(((TYPE$6(*)(TYPE$184,TYPE$5,TYPE$184,TYPE$5,TYPE$360,TYPE$54))(((CORE$DELEGATE)V$47847360/*aspel.math.multiply_arrays*/)))((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m1), (((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m2), (((TYPE$173*)((V$47580104/*aspel.math.multiply.right*/)))->m1), (((TYPE$173*)((V$47580104/*aspel.math.multiply.right*/)))->m2), ((CORE$PTR) &((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m1))), ((CORE$PTR) &((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m2))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    CORE$DEL((void*)(((V$47580168/*aspel.math.multiply.to_delete*/)).a));    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$173*)((V$47580104/*aspel.math.multiply.right*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$173*)((V$47580040/*aspel.math.multiply.left*/)))->m0));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47847680/*aspel.math.bezier*/(TYPE$364 V$47580232/*aspel.math.bezier.points*/, TYPE$364 V$47580296/*aspel.math.bezier.result*/, TYPE$51 V$47580360/*aspel.math.bezier.t*/)
{
    {
    if (CORE$lor((CORE$eq((CORE$cast_array_to_ptr((V$47580232/*aspel.math.bezier.points*/))),(CORE$null_pointer))),(CORE$eq((CORE$cast_regular(TYPE$4, ((V$47580232/*aspel.math.bezier.points*/).n))),((CORE$S64)(0ULL)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((CORE$cast_array_to_ptr((V$47580296/*aspel.math.bezier.result*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((CORE$cast_regular(TYPE$4, CORE$mod((((V$47580232/*aspel.math.bezier.points*/).n)),(((V$47580296/*aspel.math.bezier.result*/).n))))),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$47580424/*aspel.math.bezier.n*/ = CORE$cast_regular(TYPE$19, CORE$sub((CORE$cast_regular(TYPE$4, CORE$div((((V$47580232/*aspel.math.bezier.points*/).n)),(((V$47580296/*aspel.math.bezier.result*/).n))))),((CORE$S64)(1ULL))));
    if (CORE$lt(((V$47580360/*aspel.math.bezier.t*/)),(CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47580360/*aspel.math.bezier.t*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47580360/*aspel.math.bezier.t*/)),(CORE$cast_regular(TYPE$51, (CORE$S64)(1ULL))))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47580360/*aspel.math.bezier.t*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$47580488/*aspel.math.bezier..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub((CORE$cast_regular(TYPE$4, ((V$47580296/*aspel.math.bezier.result*/).n))),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47580488/*aspel.math.bezier..i*/ -= FOREACH$STEP;
    while ((V$47580488/*aspel.math.bezier..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$51, ((V$47580296/*aspel.math.bezier.result*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47580488/*aspel.math.bezier..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x65\x7A\x69\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(15)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    }
    TYPE$19 V$47580552/*aspel.math.bezier.i*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    TYPE$143 V$47580616/*aspel.math.bezier.next*/ = ((V$47580232/*aspel.math.bezier.points*/).a);
    while (CORE$le(((V$47580552/*aspel.math.bezier.i*/)),((V$47580424/*aspel.math.bezier.n*/)))) {
    {
    TYPE$51 V$47580680/*aspel.math.bezier..coef*/ = CORE$mul((CORE$mul((CORE$cast_regular(TYPE$51, ((TYPE$19(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47846240/*aspel.math.choose*/)))((V$47580424/*aspel.math.bezier.n*/), (V$47580552/*aspel.math.bezier.i*/), CORE$cast_regular(TYPE$19, (CORE$S64)(4294967295ULL))))),(((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47844400/*aspel.math.pow*/)))(CORE$sub((CORE$cast_regular(TYPE$51, (CORE$S64)(1ULL))),((V$47580360/*aspel.math.bezier.t*/))), CORE$cast_regular(TYPE$51, CORE$sub(((V$47580424/*aspel.math.bezier.n*/)),((V$47580552/*aspel.math.bezier.i*/)))))))),(((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47844400/*aspel.math.pow*/)))((V$47580360/*aspel.math.bezier.t*/), CORE$cast_regular(TYPE$51, (V$47580552/*aspel.math.bezier.i*/)))));
    {
    TYPE$4 V$47580744/*aspel.math.bezier...i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$sub((CORE$cast_regular(TYPE$4, ((V$47580296/*aspel.math.bezier.result*/).n))),((CORE$S64)(1ULL))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47580744/*aspel.math.bezier...i*/ -= FOREACH$STEP;
    while ((V$47580744/*aspel.math.bezier...i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mul((((TYPE$51*)((V$47580616/*aspel.math.bezier.next*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$47580744/*aspel.math.bezier...i*/)))]),((V$47580680/*aspel.math.bezier..coef*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$51, ((V$47580296/*aspel.math.bezier.result*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47580744/*aspel.math.bezier...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6D\x61\x74\x68\\\x62\x65\x7A\x69\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(23)));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    }
    {
    typedef TYPE$143 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$143, ((V$47580296/*aspel.math.bezier.result*/).n))*(8));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47580616/*aspel.math.bezier.next*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$143, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47580552/*aspel.math.bezier.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$4 V$47848080/*aspel.math.abs*/(TYPE$4 V$47580808/*aspel.math.abs.a*/)
{
    {
    if (CORE$lt(((V$47580808/*aspel.math.abs.a*/)),((CORE$S64)(0ULL)))) {
    {
    {
    TYPE$4 RET$VAL = (-((V$47580808/*aspel.math.abs.a*/)));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$47580808/*aspel.math.abs.a*/);
    return RET$VAL;
    }
    }
}

TYPE$51 V$47848160/*aspel.math.abs*/(TYPE$51 V$47580872/*aspel.math.abs.a*/)
{
    {
    if (CORE$lt(((V$47580872/*aspel.math.abs.a*/)),(CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$51 RET$VAL = (-((V$47580872/*aspel.math.abs.a*/)));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$51 RET$VAL = (V$47580872/*aspel.math.abs.a*/);
    return RET$VAL;
    }
    }
}

TYPE$1 V$47848240/*aspel.log.get_priority_string*/(TYPE$19 V$47580936/*aspel.log.get_priority_string.priority*/)
{
    {
    {
    TYPE$19 SWITCH$TEMP = (V$47580936/*aspel.log.get_priority_string.priority*/);
    if ((SWITCH$TEMP == ((V$47581704/*aspel.log.VERBOSE*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78378_OFF],(CORE$U64) SHARED$STR_2D78378_LEN);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581768/*aspel.log.DEBUG*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D783D8_OFF],(CORE$U64) SHARED$STR_2D783D8_LEN);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581832/*aspel.log.INFO*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78438_OFF],(CORE$U64) SHARED$STR_2D78438_LEN);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581896/*aspel.log.WARNING*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78498_OFF],(CORE$U64) SHARED$STR_2D78498_LEN);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581960/*aspel.log.ERROR*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D784F8_OFF],(CORE$U64) SHARED$STR_2D784F8_LEN);
    return RET$VAL;
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47582024/*aspel.log.CRITICAL*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78558_OFF],(CORE$U64) SHARED$STR_2D78558_LEN);
    return RET$VAL;
    }
    }
    }
    else {}
    }
    {
    TYPE$1 RET$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78598_OFF],(CORE$U64) SHARED$STR_2D78598_LEN);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47848320/*aspel.log.set_priority_color*/(TYPE$19 V$47581000/*aspel.log.set_priority_color.priority*/)
{
    {
    TYPE$28 V$47581064/*aspel.log.set_priority_color.color*/;
    {
    TYPE$19 SWITCH$TEMP = (V$47581000/*aspel.log.set_priority_color.priority*/);
    if ((SWITCH$TEMP == ((V$47581704/*aspel.log.VERBOSE*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$bor(((V$54896664/*aspel.internal.win32.FOREGROUND_RED*/)),((V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/)))),((V$54896536/*aspel.internal.win32.FOREGROUND_BLUE*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47581064/*aspel.log.set_priority_color.color*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581768/*aspel.log.DEBUG*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor(((V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/)),((V$54896536/*aspel.internal.win32.FOREGROUND_BLUE*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47581064/*aspel.log.set_priority_color.color*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581832/*aspel.log.INFO*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47581064/*aspel.log.set_priority_color.color*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581896/*aspel.log.WARNING*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor(((V$54896664/*aspel.internal.win32.FOREGROUND_RED*/)),((V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47581064/*aspel.log.set_priority_color.color*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47581960/*aspel.log.ERROR*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor((CORE$bor(((V$54896664/*aspel.internal.win32.FOREGROUND_RED*/)),((V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/)))),((V$54896728/*aspel.internal.win32.FOREGROUND_INTENSITY*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47581064/*aspel.log.set_priority_color.color*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47582024/*aspel.log.CRITICAL*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor(((V$54896664/*aspel.internal.win32.FOREGROUND_RED*/)),((V$54896728/*aspel.internal.win32.FOREGROUND_INTENSITY*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47581064/*aspel.log.set_priority_color.color*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else {}
    }
    TYPE$19 V$47581128/*aspel.log.set_priority_color.error_handle*/ = CORE$cast_regular(TYPE$19, (*(TYPE$5*)(CORE$cast_regular(TYPE$54, CORE$add(((V$46979424/*aspel.io.standard_error*/)),(CORE$cast_regular(TYPE$153, (CORE$S64)(1ULL)))*(48))))));
    ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$28))(((CORE$DELEGATE)V$51742696/*aspel.internal.win32.SetConsoleTextAttribute*/)))((V$47581128/*aspel.log.set_priority_color.error_handle*/), (V$47581064/*aspel.log.set_priority_color.color*/));
    }
}

TYPE$8 V$47848400/*aspel.log.set_regular_color*/()
{
    {
    TYPE$19 V$47581192/*aspel.log.set_regular_color.error_handle*/ = CORE$cast_regular(TYPE$19, (*(TYPE$5*)(CORE$cast_regular(TYPE$54, CORE$add(((V$46979424/*aspel.io.standard_error*/)),(CORE$cast_regular(TYPE$153, (CORE$S64)(1ULL)))*(48))))));
    ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$28))(((CORE$DELEGATE)V$51742696/*aspel.internal.win32.SetConsoleTextAttribute*/)))((V$47581192/*aspel.log.set_regular_color.error_handle*/), CORE$bor((CORE$bor(((V$54896664/*aspel.internal.win32.FOREGROUND_RED*/)),((V$54896600/*aspel.internal.win32.FOREGROUND_GREEN*/)))),((V$54896536/*aspel.internal.win32.FOREGROUND_BLUE*/))));
    }
}

TYPE$8 V$47848480/*aspel.log.default_logger*/(TYPE$1 V$47581256/*aspel.log.default_logger.source*/, TYPE$19 V$47581320/*aspel.log.default_logger.priority*/, TYPE$168 V$47581384/*aspel.log.default_logger.format_provider*/, TYPE$1 V$47581448/*aspel.log.default_logger.message*/, TYPE$34 V$47581512/*aspel.log.default_logger.format_args*/)
{
    {
    TYPE$1 V$47581576/*aspel.log.default_logger.priority_string*/ = ((TYPE$1(*)(TYPE$19))(((CORE$DELEGATE)V$47848240/*aspel.log.get_priority_string*/)))((V$47581320/*aspel.log.default_logger.priority*/));
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47848320/*aspel.log.set_priority_color*/)))((V$47581320/*aspel.log.default_logger.priority*/));
    ([&]()->TYPE$4{
    TYPE$153 TEMP$ARG0 = (V$46979424/*aspel.io.standard_error*/);
    TYPE$168 TEMP$ARG1 = ((CORE$DELEGATE)V$15383088/*aspel.text.standard_format_provider*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78CF8_OFF],(CORE$U64) SHARED$STR_2D78CF8_LEN);
    TYPE$35 VARARGS$VALUES[2];
    VARARGS$VALUES[0] = CORE$PACK(1, (CORE$PTR)&((V$47581256/*aspel.log.default_logger.source*/)));
    VARARGS$VALUES[1] = CORE$PACK(1, (CORE$PTR)&((V$47581576/*aspel.log.default_logger.priority_string*/)));
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 2);
    return ((TYPE$4(*)(TYPE$153,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383568/*aspel.text.format*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848400/*aspel.log.set_regular_color*/)))();
    ((TYPE$4(*)(TYPE$153,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383568/*aspel.text.format*/)))((V$46979424/*aspel.io.standard_error*/), (V$47581384/*aspel.log.default_logger.format_provider*/), (V$47581448/*aspel.log.default_logger.message*/), (V$47581512/*aspel.log.default_logger.format_args*/));
    ([&]()->TYPE$4{
    TYPE$153 TEMP$ARG0 = (V$46979424/*aspel.io.standard_error*/);
    TYPE$168 TEMP$ARG1 = ((CORE$DELEGATE)V$15383088/*aspel.text.standard_format_provider*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D78F38_OFF],(CORE$U64) SHARED$STR_2D78F38_LEN);
    TYPE$35 VARARGS$VALUES[0];
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 0);
    return ((TYPE$4(*)(TYPE$153,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$15383568/*aspel.text.format*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    }
}

TYPE$19 V$47848560/*aspel.log.get_priority_threshold*/(TYPE$1 V$47582472/*aspel.log.get_priority_threshold.source*/)
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848800/*aspel.log.lock_logger*/)))();
    TYPE$369 V$47582536/*aspel.log.get_priority_threshold.current*/ = (V$47582344/*aspel.log.source_list*/);
    while (CORE$ne(((V$47582536/*aspel.log.get_priority_threshold.current*/)),(CORE$null_pointer))) {
    {
    if (((TYPE$6(*)(TYPE$1,TYPE$1))(((CORE$DELEGATE)V$51735416/*aspel.compare*/)))((V$47582472/*aspel.log.get_priority_threshold.source*/), (((TYPE$368*)((V$47582536/*aspel.log.get_priority_threshold.current*/)))->m0))) {
    {
    {
    TYPE$19 RET$VAL = (((TYPE$368*)((V$47582536/*aspel.log.get_priority_threshold.current*/)))->m1);
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$369 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$368*)((V$47582536/*aspel.log.get_priority_threshold.current*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47582536/*aspel.log.get_priority_threshold.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$369, TEMP$VAL0);
    }
    }
    }
    if (((TYPE$6(*)(TYPE$1,TYPE$1))(((CORE$DELEGATE)V$51735416/*aspel.compare*/)))((V$47582472/*aspel.log.get_priority_threshold.source*/), (V$47582856/*aspel.log.APP*/))) {
    {
    {
    TYPE$19 RET$VAL = (V$47581832/*aspel.log.INFO*/);
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    return RET$VAL;
    }
    }
    }
    {
    TYPE$19 RET$VAL = (V$47581960/*aspel.log.ERROR*/);
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    return RET$VAL;
    }
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    }
}

TYPE$8 V$47848640/*aspel.log.set_priority_threshold*/(TYPE$1 V$47582600/*aspel.log.set_priority_threshold.source*/, TYPE$19 V$47582664/*aspel.log.set_priority_threshold.threshold*/)
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848800/*aspel.log.lock_logger*/)))();
    TYPE$369 V$47582728/*aspel.log.set_priority_threshold.current*/ = (V$47582344/*aspel.log.source_list*/);
    while (CORE$ne(((V$47582728/*aspel.log.set_priority_threshold.current*/)),(CORE$null_pointer))) {
    {
    if (((TYPE$6(*)(TYPE$1,TYPE$1))(((CORE$DELEGATE)V$51735416/*aspel.compare*/)))((V$47582600/*aspel.log.set_priority_threshold.source*/), (((TYPE$368*)((V$47582728/*aspel.log.set_priority_threshold.current*/)))->m0))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47582664/*aspel.log.set_priority_threshold.threshold*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$368*)((V$47582728/*aspel.log.set_priority_threshold.current*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    return;
    }
    }
    }
    {
    typedef TYPE$369 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$368*)((V$47582728/*aspel.log.set_priority_threshold.current*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47582728/*aspel.log.set_priority_threshold.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$369, TEMP$VAL0);
    }
    }
    }
    TYPE$369 V$47582792/*aspel.log.set_priority_threshold.new_source*/ = (CORE$PTR)(CORE$NEW(28));
    if (CORE$eq(((V$47582792/*aspel.log.set_priority_threshold.new_source*/)),(CORE$null_pointer))) {
    {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    return;
    }
    }
    }
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47582600/*aspel.log.set_priority_threshold.source*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$368*)((V$47582792/*aspel.log.set_priority_threshold.new_source*/)))->m0));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47582664/*aspel.log.set_priority_threshold.threshold*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$368*)((V$47582792/*aspel.log.set_priority_threshold.new_source*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$369 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47582344/*aspel.log.source_list*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$368*)((V$47582792/*aspel.log.set_priority_threshold.new_source*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$369, TEMP$VAL0);
    }
    {
    typedef TYPE$369 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47582792/*aspel.log.set_priority_threshold.new_source*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47582344/*aspel.log.source_list*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$369, TEMP$VAL0);
    }
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    }
}

TYPE$66 V$47848720/*aspel.log.create_the_lock*/()
{
    {
    TYPE$66 V$47583112/*aspel.log.create_the_lock.lock*/ = ((TYPE$66(*)())(((CORE$DELEGATE)V$15377648/*aspel.thread.mutex.create_mutex*/)))();
    if (CORE$eq(((V$47583112/*aspel.log.create_the_lock.lock*/)),(CORE$null_pointer))) {
    {
    }
    }
    {
    TYPE$66 RET$VAL = (V$47583112/*aspel.log.create_the_lock.lock*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47848800/*aspel.log.lock_logger*/()
{
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377888/*aspel.thread.mutex.lock_mutex*/)))((V$47583048/*aspel.log.the_lock*/));
    }
}

TYPE$8 V$47848880/*aspel.log.unlock_logger*/()
{
    {
    ((TYPE$8(*)(TYPE$66))(((CORE$DELEGATE)V$15377968/*aspel.thread.mutex.unlock_mutex*/)))((V$47583048/*aspel.log.the_lock*/));
    }
}

TYPE$8 V$47848960/*aspel.log.do_report*/(TYPE$1 V$47583304/*aspel.log.do_report.source*/, TYPE$19 V$47583368/*aspel.log.do_report.priority*/, TYPE$168 V$47583432/*aspel.log.do_report.format_provider*/, TYPE$1 V$47583496/*aspel.log.do_report.message*/, TYPE$34 V$47583560/*aspel.log.do_report.format_args*/)
{
    {
    if (CORE$gt(((V$47583368/*aspel.log.do_report.priority*/)),((V$47582024/*aspel.log.CRITICAL*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47582024/*aspel.log.CRITICAL*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47583368/*aspel.log.do_report.priority*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848800/*aspel.log.lock_logger*/)))();
    TYPE$19 V$47583624/*aspel.log.do_report.threshold*/ = ((TYPE$19(*)(TYPE$1))(((CORE$DELEGATE)V$47848560/*aspel.log.get_priority_threshold*/)))((V$47583304/*aspel.log.do_report.source*/));
    if (CORE$lt(((V$47583368/*aspel.log.do_report.priority*/)),((V$47583624/*aspel.log.do_report.threshold*/)))) {
    {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    return;
    }
    }
    }
    ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$168,TYPE$1,TYPE$34))((V$47583240/*aspel.log.log*/)))((V$47583304/*aspel.log.do_report.source*/), (V$47583368/*aspel.log.do_report.priority*/), (V$47583432/*aspel.log.do_report.format_provider*/), (V$47583496/*aspel.log.do_report.message*/), (V$47583560/*aspel.log.do_report.format_args*/));
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47848880/*aspel.log.unlock_logger*/)))();
    }
}

TYPE$8 V$47849040/*aspel.log.report*/(TYPE$1 V$47583688/*aspel.log.report.source*/, TYPE$19 V$47583752/*aspel.log.report.priority*/, TYPE$168 V$47583816/*aspel.log.report.format_provider*/, TYPE$1 V$47583880/*aspel.log.report.message*/, TYPE$34 V$47583944/*aspel.log.report.format_args*/)
{
    {
    ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47848960/*aspel.log.do_report*/)))((V$47583688/*aspel.log.report.source*/), (V$47583752/*aspel.log.report.priority*/), (V$47583816/*aspel.log.report.format_provider*/), (V$47583880/*aspel.log.report.message*/), (V$47583944/*aspel.log.report.format_args*/));
    }
}

TYPE$8 V$47849120/*aspel.log.report*/(TYPE$1 V$47584008/*aspel.log.report.source*/, TYPE$19 V$47584072/*aspel.log.report.priority*/, TYPE$1 V$47584136/*aspel.log.report.message*/, TYPE$34 V$47584200/*aspel.log.report.format_args*/)
{
    {
    ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47848960/*aspel.log.do_report*/)))((V$47584008/*aspel.log.report.source*/), (V$47584072/*aspel.log.report.priority*/), ((CORE$DELEGATE)V$15383088/*aspel.text.standard_format_provider*/), (V$47584136/*aspel.log.report.message*/), (V$47584200/*aspel.log.report.format_args*/));
    }
}

TYPE$8 V$47849200/*aspel.log.report*/(TYPE$19 V$47584264/*aspel.log.report.priority*/, TYPE$1 V$47584328/*aspel.log.report.message*/, TYPE$34 V$47584392/*aspel.log.report.format_args*/)
{
    {
    ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$168,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47848960/*aspel.log.do_report*/)))((V$47582856/*aspel.log.APP*/), (V$47584264/*aspel.log.report.priority*/), ((CORE$DELEGATE)V$15383088/*aspel.text.standard_format_provider*/), (V$47584328/*aspel.log.report.message*/), (V$47584392/*aspel.log.report.format_args*/));
    }
}

TYPE$376 V$47849280/*aspel.cml.ui.turtle.turtle_create_context*/()
{
    {
    TYPE$376 V$47585224/*aspel.cml.ui.turtle.turtle_create_context.context*/ = (CORE$PTR)(CORE$NEWINIT(20, [&] (void* data) {
    typedef TYPE$372 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { ((((*val).m1)).a) = (0); }
{ ((((*val).m1)).n) = (0); }
}
}));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$372*)((V$47585224/*aspel.cml.ui.turtle.turtle_create_context.context*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$373 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(64ULL))), (CORE$U64)(37), [] (void* data) {
    typedef TYPE$374 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
    { (((*val).m5)) = (0); }
}
}));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$372*)((V$47585224/*aspel.cml.ui.turtle.turtle_create_context.context*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$ne((CORE$cast_array_to_ptr((((TYPE$372*)((V$47585224/*aspel.cml.ui.turtle.turtle_create_context.context*/)))->m1))),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x74\x75\x72\x74\x6C\x65\\\x74\x75\x72\x74\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(40)));
    {
    TYPE$376 RET$VAL = (V$47585224/*aspel.cml.ui.turtle.turtle_create_context.context*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47849360/*aspel.cml.ui.turtle.turtle_delete_context*/(TYPE$376 V$47585288/*aspel.cml.ui.turtle.turtle_delete_context.context*/)
{
    {
    CORE$DEL((void*)(((((TYPE$372*)((V$47585288/*aspel.cml.ui.turtle.turtle_delete_context.context*/)))->m1)).a));    CORE$DEL((void*)(((V$47585288/*aspel.cml.ui.turtle.turtle_delete_context.context*/))));    }
}

TYPE$8 V$47849440/*aspel.cml.ui.turtle.turtle_render_call*/(TYPE$376 V$47585352/*aspel.cml.ui.turtle.turtle_render_call.context*/, TYPE$379 V$47585416/*aspel.cml.ui.turtle.turtle_render_call.call*/)
{
    {
    TYPE$373 V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/ = (((TYPE$372*)((V$47585352/*aspel.cml.ui.turtle.turtle_render_call.context*/)))->m1);
    if (CORE$ge(((((TYPE$372*)((V$47585352/*aspel.cml.ui.turtle.turtle_render_call.context*/)))->m0)),(CORE$cast_regular(TYPE$19, ((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/).n))))) {
    {
    TYPE$373 V$47585544/*aspel.cml.ui.turtle.turtle_render_call..bigger_array*/ = CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$mul((CORE$cast_regular(TYPE$4, ((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/).n))),((CORE$S64)(2ULL))))), (CORE$U64)(37), [] (void* data) {
    typedef TYPE$374 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
    { (((*val).m5)) = (0); }
}
});
    CORE$ASSERT(((CORE$BOOL)(CORE$ne((CORE$cast_array_to_ptr((V$47585544/*aspel.cml.ui.turtle.turtle_render_call..bigger_array*/))),(CORE$null_pointer)))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x74\x75\x72\x74\x6C\x65\\\x74\x75\x72\x74\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(57)));
    ((TYPE$7(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$15376048/*aspel.memory.memcopy*/)))(CORE$cast_array_to_ptr((V$47585544/*aspel.cml.ui.turtle.turtle_render_call..bigger_array*/)), CORE$cast_array_to_ptr((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/)), CORE$mul((((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/).n)),((CORE$U64)(37))));
    CORE$DEL((void*)(((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/)).a));    {
    typedef TYPE$373 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585544/*aspel.cml.ui.turtle.turtle_render_call..bigger_array*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$372*)((V$47585352/*aspel.cml.ui.turtle.turtle_render_call.context*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$373 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585544/*aspel.cml.ui.turtle.turtle_render_call..bigger_array*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$374 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$374*)((V$47585416/*aspel.cml.ui.turtle.turtle_render_call.call*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$374, ((V$47585480/*aspel.cml.ui.turtle.turtle_render_call.current_array*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$372*)((V$47585352/*aspel.cml.ui.turtle.turtle_render_call.context*/)))->m0))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x74\x75\x72\x74\x6C\x65\\\x74\x75\x72\x74\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(66)));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$374, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$372*)((V$47585352/*aspel.cml.ui.turtle.turtle_render_call.context*/)))->m0));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47849520/*aspel.cml.ui.turtle.render_call_line*/(TYPE$376 V$47585608/*aspel.cml.ui.turtle.render_call_line.context*/, TYPE$51 V$47585672/*aspel.cml.ui.turtle.render_call_line.x0*/, TYPE$51 V$47585736/*aspel.cml.ui.turtle.render_call_line.y0*/, TYPE$51 V$47585800/*aspel.cml.ui.turtle.render_call_line.x1*/, TYPE$51 V$47585864/*aspel.cml.ui.turtle.render_call_line.y1*/, TYPE$19 V$47585928/*aspel.cml.ui.turtle.render_call_line.color*/)
{
    {
    TYPE$374 V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/;
    {
    { (V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/.m0) = (0); }
    { (V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/.m1) = (0); }
    { (V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/.m2) = (0); }
    { (V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/.m3) = (0); }
    { (V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/.m4) = (0); }
    { (V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/.m5) = (0); }
}
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$47585096/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_LINE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585672/*aspel.cml.ui.turtle.render_call_line.x0*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585736/*aspel.cml.ui.turtle.render_call_line.y0*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585800/*aspel.cml.ui.turtle.render_call_line.x1*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585864/*aspel.cml.ui.turtle.render_call_line.y1*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47585928/*aspel.cml.ui.turtle.render_call_line.color*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$376,TYPE$379))(((CORE$DELEGATE)V$47849440/*aspel.cml.ui.turtle.turtle_render_call*/)))((V$47585608/*aspel.cml.ui.turtle.render_call_line.context*/), ((CORE$PTR) &((V$47585992/*aspel.cml.ui.turtle.render_call_line.call*/))));
    }
}

TYPE$8 V$47849600/*aspel.cml.ui.turtle.render_call_fill*/(TYPE$376 V$47586056/*aspel.cml.ui.turtle.render_call_fill.context*/, TYPE$51 V$47586120/*aspel.cml.ui.turtle.render_call_fill.x*/, TYPE$51 V$47586184/*aspel.cml.ui.turtle.render_call_fill.y*/, TYPE$19 V$47586248/*aspel.cml.ui.turtle.render_call_fill.color*/)
{
    {
    TYPE$374 V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/;
    {
    { (V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/.m0) = (0); }
    { (V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/.m1) = (0); }
    { (V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/.m2) = (0); }
    { (V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/.m3) = (0); }
    { (V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/.m4) = (0); }
    { (V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/.m5) = (0); }
}
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$47585160/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_FILL*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47586120/*aspel.cml.ui.turtle.render_call_fill.x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47586184/*aspel.cml.ui.turtle.render_call_fill.y*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47586248/*aspel.cml.ui.turtle.render_call_fill.color*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$376,TYPE$379))(((CORE$DELEGATE)V$47849440/*aspel.cml.ui.turtle.turtle_render_call*/)))((V$47586056/*aspel.cml.ui.turtle.render_call_fill.context*/), ((CORE$PTR) &((V$47586312/*aspel.cml.ui.turtle.render_call_fill.call*/))));
    }
}

TYPE$384 V$47849680/*aspel.cml.ui.turtle.turtle_create*/(TYPE$376 V$47586824/*aspel.cml.ui.turtle.turtle_create.context*/)
{
    {
    TYPE$384 V$47586888/*aspel.cml.ui.turtle.turtle_create.turt*/ = (CORE$PTR)(CORE$NEWINIT(36, [&] (void* data) {
    typedef TYPE$382 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
    { (((*val).m5)) = (0); }
}
}));
    ((TYPE$8(*)(TYPE$384))(((CORE$DELEGATE)V$47850480/*aspel.cml.ui.turtle.turtle_init_defaults*/)))((V$47586888/*aspel.cml.ui.turtle.turtle_create.turt*/));
    {
    TYPE$384 RET$VAL = (V$47586888/*aspel.cml.ui.turtle.turtle_create.turt*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47849760/*aspel.cml.ui.turtle.turtle_delete*/(TYPE$376 V$47586952/*aspel.cml.ui.turtle.turtle_delete.context*/, TYPE$384 V$47587016/*aspel.cml.ui.turtle.turtle_delete.turt*/)
{
    {
    CORE$DEL((void*)(((V$47587016/*aspel.cml.ui.turtle.turtle_delete.turt*/))));    }
}

TYPE$8 V$47849840/*aspel.cml.ui.turtle.turtle_forward*/(TYPE$376 V$47587080/*aspel.cml.ui.turtle.turtle_forward.context*/, TYPE$384 V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/, TYPE$51 V$47587208/*aspel.cml.ui.turtle.turtle_forward.length*/)
{
    {
    TYPE$51 V$47587272/*aspel.cml.ui.turtle.turtle_forward.ox*/ = (((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m0);
    TYPE$51 V$47587336/*aspel.cml.ui.turtle.turtle_forward.oy*/ = (((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m1);
    TYPE$51 V$47587400/*aspel.cml.ui.turtle.turtle_forward.rad*/ = ((TYPE$51(*)(TYPE$51))(((CORE$DELEGATE)V$15396128/*aspel.math.to_radians*/)))((((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m2));
    TYPE$51 V$47587464/*aspel.cml.ui.turtle.turtle_forward.dx*/ = CORE$mul(((-((V$47587208/*aspel.cml.ui.turtle.turtle_forward.length*/)))),(((TYPE$51(*)(TYPE$51))(((CORE$DELEGATE)V$47844080/*aspel.math.sin*/)))((V$47587400/*aspel.cml.ui.turtle.turtle_forward.rad*/))));
    TYPE$51 V$47587528/*aspel.cml.ui.turtle.turtle_forward.dy*/ = CORE$mul(((V$47587208/*aspel.cml.ui.turtle.turtle_forward.length*/)),(((TYPE$51(*)(TYPE$51))(((CORE$DELEGATE)V$47845920/*aspel.math.cos*/)))((V$47587400/*aspel.cml.ui.turtle.turtle_forward.rad*/))));
    TYPE$51 V$47587592/*aspel.cml.ui.turtle.turtle_forward.nx*/ = CORE$add(((V$47587272/*aspel.cml.ui.turtle.turtle_forward.ox*/)),((V$47587464/*aspel.cml.ui.turtle.turtle_forward.dx*/)));
    TYPE$51 V$47587656/*aspel.cml.ui.turtle.turtle_forward.ny*/ = CORE$add(((V$47587336/*aspel.cml.ui.turtle.turtle_forward.oy*/)),((V$47587528/*aspel.cml.ui.turtle.turtle_forward.dy*/)));
    ((TYPE$8(*)(TYPE$143,TYPE$143))(((CORE$DELEGATE)V$47850560/*aspel.cml.ui.turtle.turtle_correct_location*/)))(((CORE$PTR) &((V$47587592/*aspel.cml.ui.turtle.turtle_forward.nx*/))), ((CORE$PTR) &((V$47587656/*aspel.cml.ui.turtle.turtle_forward.ny*/))));
    if ((((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m3)) {
    {
    ((TYPE$8(*)(TYPE$376,TYPE$51,TYPE$51,TYPE$51,TYPE$51,TYPE$19))(((CORE$DELEGATE)V$47849520/*aspel.cml.ui.turtle.render_call_line*/)))((V$47587080/*aspel.cml.ui.turtle.turtle_forward.context*/), (V$47587272/*aspel.cml.ui.turtle.turtle_forward.ox*/), (V$47587336/*aspel.cml.ui.turtle.turtle_forward.oy*/), (V$47587592/*aspel.cml.ui.turtle.turtle_forward.nx*/), (V$47587656/*aspel.cml.ui.turtle.turtle_forward.ny*/), (((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m4));
    }
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47587592/*aspel.cml.ui.turtle.turtle_forward.nx*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47587656/*aspel.cml.ui.turtle.turtle_forward.ny*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47587144/*aspel.cml.ui.turtle.turtle_forward.turt*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47849920/*aspel.cml.ui.turtle.turtle_backward*/(TYPE$376 V$47587720/*aspel.cml.ui.turtle.turtle_backward.context*/, TYPE$384 V$47587784/*aspel.cml.ui.turtle.turtle_backward.turt*/, TYPE$51 V$47587848/*aspel.cml.ui.turtle.turtle_backward.length*/)
{
    {
    ((TYPE$8(*)(TYPE$376,TYPE$384,TYPE$51))(((CORE$DELEGATE)V$47849840/*aspel.cml.ui.turtle.turtle_forward*/)))((V$47587720/*aspel.cml.ui.turtle.turtle_backward.context*/), (V$47587784/*aspel.cml.ui.turtle.turtle_backward.turt*/), (-((V$47587848/*aspel.cml.ui.turtle.turtle_backward.length*/))));
    }
}

TYPE$8 V$47850000/*aspel.cml.ui.turtle.turtle_left*/(TYPE$376 V$47587912/*aspel.cml.ui.turtle.turtle_left.context*/, TYPE$384 V$47587976/*aspel.cml.ui.turtle.turtle_left.turt*/, TYPE$51 V$47588040/*aspel.cml.ui.turtle.turtle_left.angle_deg*/)
{
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47845280/*aspel.math.fmod*/)))((V$47588040/*aspel.cml.ui.turtle.turtle_left.angle_deg*/), (CORE$F64)(360.00000)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47588040/*aspel.cml.ui.turtle.turtle_left.angle_deg*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47588040/*aspel.cml.ui.turtle.turtle_left.angle_deg*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47587976/*aspel.cml.ui.turtle.turtle_left.turt*/)))->m2));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$143))(((CORE$DELEGATE)V$47850640/*aspel.cml.ui.turtle.turtle_correct_angle*/)))(((CORE$PTR) &((((TYPE$382*)((V$47587976/*aspel.cml.ui.turtle.turtle_left.turt*/)))->m2))));
    }
}

TYPE$8 V$47850080/*aspel.cml.ui.turtle.turtle_right*/(TYPE$376 V$47588104/*aspel.cml.ui.turtle.turtle_right.context*/, TYPE$384 V$47588168/*aspel.cml.ui.turtle.turtle_right.turt*/, TYPE$51 V$47588232/*aspel.cml.ui.turtle.turtle_right.angle_def*/)
{
    {
    ((TYPE$8(*)(TYPE$376,TYPE$384,TYPE$51))(((CORE$DELEGATE)V$47850000/*aspel.cml.ui.turtle.turtle_left*/)))((V$47588104/*aspel.cml.ui.turtle.turtle_right.context*/), (V$47588168/*aspel.cml.ui.turtle.turtle_right.turt*/), (-((V$47588232/*aspel.cml.ui.turtle.turtle_right.angle_def*/))));
    }
}

TYPE$8 V$47850160/*aspel.cml.ui.turtle.turtle_set_pen_color*/(TYPE$376 V$47588296/*aspel.cml.ui.turtle.turtle_set_pen_color.context*/, TYPE$384 V$47588360/*aspel.cml.ui.turtle.turtle_set_pen_color.turt*/, TYPE$2 V$47588424/*aspel.cml.ui.turtle.turtle_set_pen_color.r*/, TYPE$2 V$47588488/*aspel.cml.ui.turtle.turtle_set_pen_color.g*/, TYPE$2 V$47588552/*aspel.cml.ui.turtle.turtle_set_pen_color.b*/)
{
    {
    TYPE$19 V$47588616/*aspel.cml.ui.turtle.turtle_set_pen_color.color*/ = CORE$bor((CORE$bor((CORE$shl((CORE$cast_regular(TYPE$19, (V$47588424/*aspel.cml.ui.turtle.turtle_set_pen_color.r*/))),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))))),(CORE$shl((CORE$cast_regular(TYPE$19, (V$47588488/*aspel.cml.ui.turtle.turtle_set_pen_color.g*/))),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL))))))),(CORE$shl((CORE$cast_regular(TYPE$19, (V$47588552/*aspel.cml.ui.turtle.turtle_set_pen_color.b*/))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47588616/*aspel.cml.ui.turtle.turtle_set_pen_color.color*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47588360/*aspel.cml.ui.turtle.turtle_set_pen_color.turt*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47850240/*aspel.cml.ui.turtle.turtle_set_fill_color*/(TYPE$376 V$47588680/*aspel.cml.ui.turtle.turtle_set_fill_color.context*/, TYPE$384 V$47588744/*aspel.cml.ui.turtle.turtle_set_fill_color.turt*/, TYPE$2 V$47588808/*aspel.cml.ui.turtle.turtle_set_fill_color.r*/, TYPE$2 V$47588872/*aspel.cml.ui.turtle.turtle_set_fill_color.g*/, TYPE$2 V$47588936/*aspel.cml.ui.turtle.turtle_set_fill_color.b*/)
{
    {
    TYPE$19 V$47589000/*aspel.cml.ui.turtle.turtle_set_fill_color.color*/ = CORE$bor((CORE$bor((CORE$shl((CORE$cast_regular(TYPE$19, (V$47588808/*aspel.cml.ui.turtle.turtle_set_fill_color.r*/))),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))))),(CORE$shl((CORE$cast_regular(TYPE$19, (V$47588872/*aspel.cml.ui.turtle.turtle_set_fill_color.g*/))),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL))))))),(CORE$shl((CORE$cast_regular(TYPE$19, (V$47588936/*aspel.cml.ui.turtle.turtle_set_fill_color.b*/))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47589000/*aspel.cml.ui.turtle.turtle_set_fill_color.color*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47588744/*aspel.cml.ui.turtle.turtle_set_fill_color.turt*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47850320/*aspel.cml.ui.turtle.turtle_pen_up*/(TYPE$376 V$47589064/*aspel.cml.ui.turtle.turtle_pen_up.context*/, TYPE$384 V$47589128/*aspel.cml.ui.turtle.turtle_pen_up.turt*/)
{
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589128/*aspel.cml.ui.turtle.turtle_pen_up.turt*/)))->m3));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$8 V$47850400/*aspel.cml.ui.turtle.turtle_pen_down*/(TYPE$376 V$47589192/*aspel.cml.ui.turtle.turtle_pen_down.context*/, TYPE$384 V$47589256/*aspel.cml.ui.turtle.turtle_pen_down.turt*/)
{
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589256/*aspel.cml.ui.turtle.turtle_pen_down.turt*/)))->m3));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$8 V$47850480/*aspel.cml.ui.turtle.turtle_init_defaults*/(TYPE$384 V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)
{
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$51, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)))->m3));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$382*)((V$47589320/*aspel.cml.ui.turtle.turtle_init_defaults.turt*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47850560/*aspel.cml.ui.turtle.turtle_correct_location*/(TYPE$143 V$47589384/*aspel.cml.ui.turtle.turtle_correct_location.x*/, TYPE$143 V$47589448/*aspel.cml.ui.turtle.turtle_correct_location.y*/)
{
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47845280/*aspel.math.fmod*/)))((*(TYPE$51*)((V$47589384/*aspel.cml.ui.turtle.turtle_correct_location.x*/))), (CORE$F64)(0.00100)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$51*)((V$47589384/*aspel.cml.ui.turtle.turtle_correct_location.x*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47845280/*aspel.math.fmod*/)))((*(TYPE$51*)((V$47589448/*aspel.cml.ui.turtle.turtle_correct_location.y*/))), (CORE$F64)(0.00100)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$51*)((V$47589448/*aspel.cml.ui.turtle.turtle_correct_location.y*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47850640/*aspel.cml.ui.turtle.turtle_correct_angle*/(TYPE$143 V$47589512/*aspel.cml.ui.turtle.turtle_correct_angle.angle*/)
{
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47845280/*aspel.math.fmod*/)))((*(TYPE$51*)((V$47589512/*aspel.cml.ui.turtle.turtle_correct_angle.angle*/))), (CORE$F64)(360.00000)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$51*)((V$47589512/*aspel.cml.ui.turtle.turtle_correct_angle.angle*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51(*)(TYPE$51,TYPE$51))(((CORE$DELEGATE)V$47845280/*aspel.math.fmod*/)))((*(TYPE$51*)((V$47589512/*aspel.cml.ui.turtle.turtle_correct_angle.angle*/))), (CORE$F64)(0.00100)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$51*)((V$47589512/*aspel.cml.ui.turtle.turtle_correct_angle.angle*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
}

TYPE$373 V$47850720/*aspel.cml.ui.turtle.turtle_get_render_list*/(TYPE$376 V$47589576/*aspel.cml.ui.turtle.turtle_get_render_list.context*/)
{
    {
    TYPE$373 V$47589640/*aspel.cml.ui.turtle.turtle_get_render_list.render_list*/;
    { (V$47589640/*aspel.cml.ui.turtle.turtle_get_render_list.render_list*/).a = (0); }
{ (V$47589640/*aspel.cml.ui.turtle.turtle_get_render_list.render_list*/).n = (0); }
    {
    typedef TYPE$379 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_array_to_ptr((((TYPE$372*)((V$47589576/*aspel.cml.ui.turtle.turtle_get_render_list.context*/)))->m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47589640/*aspel.cml.ui.turtle.turtle_get_render_list.render_list*/).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$379, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (((TYPE$372*)((V$47589576/*aspel.cml.ui.turtle.turtle_get_render_list.context*/)))->m0)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$47589640/*aspel.cml.ui.turtle.turtle_get_render_list.render_list*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$373 RET$VAL = (V$47589640/*aspel.cml.ui.turtle.turtle_get_render_list.render_list*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47850800/*aspel.cml.ui.turtle.turtle_render*/(TYPE$376 V$47589704/*aspel.cml.ui.turtle.turtle_render.context*/, TYPE$7 V$47589768/*aspel.cml.ui.turtle.turtle_render.renderer*/)
{
    {
    TYPE$16 V$47589832/*aspel.cml.ui.turtle.turtle_render.context_width*/;
    { (V$47589832/*aspel.cml.ui.turtle.turtle_render.context_width*/) = (0); }
    TYPE$16 V$47589896/*aspel.cml.ui.turtle.turtle_render.context_height*/;
    { (V$47589896/*aspel.cml.ui.turtle.turtle_render.context_height*/) = (0); }
    ((TYPE$8(*)(TYPE$7,TYPE$86,TYPE$86))(((CORE$DELEGATE)V$47860320/*aspel.cml.video.render_get_context_size*/)))((V$47589768/*aspel.cml.ui.turtle.turtle_render.renderer*/), ((CORE$PTR) &((V$47589832/*aspel.cml.ui.turtle.turtle_render.context_width*/))), ((CORE$PTR) &((V$47589896/*aspel.cml.ui.turtle.turtle_render.context_height*/))));
    TYPE$373 V$47589960/*aspel.cml.ui.turtle.turtle_render.render_list*/;
    { (V$47589960/*aspel.cml.ui.turtle.turtle_render.render_list*/).a = (0); }
{ (V$47589960/*aspel.cml.ui.turtle.turtle_render.render_list*/).n = (0); }
    {
    typedef TYPE$373 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$373(*)(TYPE$376))(((CORE$DELEGATE)V$47850720/*aspel.cml.ui.turtle.turtle_get_render_list*/)))((V$47589704/*aspel.cml.ui.turtle.turtle_render.context*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47589960/*aspel.cml.ui.turtle.turtle_render.render_list*/));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    TYPE$4 V$47590024/*aspel.cml.ui.turtle.turtle_render.i*/ = (CORE$S64)(0ULL);
    while (CORE$lt(((V$47590024/*aspel.cml.ui.turtle.turtle_render.i*/)),(CORE$cast_regular(TYPE$4, ((V$47589960/*aspel.cml.ui.turtle.turtle_render.render_list*/).n))))) {
    {
    TYPE$379 V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/ = ((CORE$PTR) &(CORE$ABC(TYPE$374, ((V$47589960/*aspel.cml.ui.turtle.turtle_render.render_list*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47590024/*aspel.cml.ui.turtle.turtle_render.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x74\x75\x72\x74\x6C\x65\\\x74\x75\x72\x74\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(234))));
    TYPE$16 V$47590152/*aspel.cml.ui.turtle.turtle_render..round_x0*/ = CORE$add((CORE$cast_regular(TYPE$16, CORE$add(((((TYPE$374*)((V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/)))->m1)),((CORE$F64)(0.50000))))),(CORE$div(((V$47589832/*aspel.cml.ui.turtle.turtle_render.context_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL))))));
    TYPE$16 V$47590216/*aspel.cml.ui.turtle.turtle_render..round_y0*/ = CORE$add(((-(CORE$cast_regular(TYPE$16, CORE$add(((((TYPE$374*)((V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/)))->m2)),((CORE$F64)(0.50000))))))),(CORE$div(((V$47589896/*aspel.cml.ui.turtle.turtle_render.context_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL))))));
    TYPE$16 V$47590280/*aspel.cml.ui.turtle.turtle_render..round_x1*/ = CORE$add((CORE$cast_regular(TYPE$16, CORE$add(((((TYPE$374*)((V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/)))->m3)),((CORE$F64)(0.50000))))),(CORE$div(((V$47589832/*aspel.cml.ui.turtle.turtle_render.context_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL))))));
    TYPE$16 V$47590344/*aspel.cml.ui.turtle.turtle_render..round_y1*/ = CORE$add(((-(CORE$cast_regular(TYPE$16, CORE$add(((((TYPE$374*)((V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/)))->m4)),((CORE$F64)(0.50000))))))),(CORE$div(((V$47589896/*aspel.cml.ui.turtle.turtle_render.context_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL))))));
    TYPE$19 V$47590408/*aspel.cml.ui.turtle.turtle_render..color*/ = (((TYPE$374*)((V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/)))->m5);
    TYPE$2 V$47590472/*aspel.cml.ui.turtle.turtle_render..color_r*/ = CORE$cast_regular(TYPE$2, CORE$band((CORE$shr(((V$47590408/*aspel.cml.ui.turtle.turtle_render..color*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(255ULL)))));
    TYPE$2 V$47590536/*aspel.cml.ui.turtle.turtle_render..color_g*/ = CORE$cast_regular(TYPE$2, CORE$band((CORE$shr(((V$47590408/*aspel.cml.ui.turtle.turtle_render..color*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(255ULL)))));
    TYPE$2 V$47590600/*aspel.cml.ui.turtle.turtle_render..color_b*/ = CORE$cast_regular(TYPE$2, CORE$band((CORE$shr(((V$47590408/*aspel.cml.ui.turtle.turtle_render..color*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))),(CORE$cast_regular(TYPE$19, (CORE$S64)(255ULL)))));
    ((TYPE$8(*)(TYPE$7,TYPE$2,TYPE$2,TYPE$2,TYPE$2))(((CORE$DELEGATE)V$47860240/*aspel.cml.video.render_set_color*/)))((V$47589768/*aspel.cml.ui.turtle.turtle_render.renderer*/), (V$47590472/*aspel.cml.ui.turtle.turtle_render..color_r*/), (V$47590536/*aspel.cml.ui.turtle.turtle_render..color_g*/), (V$47590600/*aspel.cml.ui.turtle.turtle_render..color_b*/), CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL)));
    {
    TYPE$2 SWITCH$TEMP = (((TYPE$374*)((V$47590088/*aspel.cml.ui.turtle.turtle_render..call*/)))->m0);
    if ((SWITCH$TEMP == (((ISOLATED$BASE.V$47585096/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_LINE*/))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47859280/*aspel.cml.video.render_draw_line*/)))((V$47589768/*aspel.cml.ui.turtle.turtle_render.renderer*/), (V$47590152/*aspel.cml.ui.turtle.turtle_render..round_x0*/), (V$47590216/*aspel.cml.ui.turtle.turtle_render..round_y0*/), (V$47590280/*aspel.cml.ui.turtle.turtle_render..round_x1*/), (V$47590344/*aspel.cml.ui.turtle.turtle_render..round_y1*/));
    }
    }
    else if ((SWITCH$TEMP == (((ISOLATED$BASE.V$47585160/*aspel.cml.ui.turtle.TURTLE_RENDER_CALL_KIND_FILL*/))))) {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D7C5F8_OFF],(CORE$U64) SHARED$STR_2D7C5F8_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x74\x75\x72\x74\x6C\x65\\\x74\x75\x72\x74\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(250)));
    }
    }
    else {
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D7C638_OFF],(CORE$U64) SHARED$STR_2D7C638_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x74\x75\x72\x74\x6C\x65\\\x74\x75\x72\x74\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(251)));
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47590024/*aspel.cml.ui.turtle.turtle_render.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$6 V$47850880/*aspel.cml.ui.widgets.button*/(TYPE$397 V$47590664/*aspel.cml.ui.widgets.button.ui*/, TYPE$1 V$47590728/*aspel.cml.ui.widgets.button.text*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$397,TYPE$5,TYPE$1))(((CORE$DELEGATE)V$47850960/*aspel.cml.ui.widgets.button*/)))((V$47590664/*aspel.cml.ui.widgets.button.ui*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$47590728/*aspel.cml.ui.widgets.button.text*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47850960/*aspel.cml.ui.widgets.button*/(TYPE$397 V$47590792/*aspel.cml.ui.widgets.button.ui*/, TYPE$5 V$47590856/*aspel.cml.ui.widgets.button.id*/, TYPE$1 V$47590920/*aspel.cml.ui.widgets.button.text*/)
{
    {
    TYPE$331 V$47590984/*aspel.cml.ui.widgets.button.preferred*/ = ((TYPE$331(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853120/*aspel.cml.ui.get_style_dimensions*/)))((V$47590792/*aspel.cml.ui.widgets.button.ui*/), ((ISOLATED$BASE.V$47606152/*aspel.cml.ui.STYLE_DIMENSIONS_BUTTON*/)));
    TYPE$16 V$47591048/*aspel.cml.ui.widgets.button.x*/;
    { (V$47591048/*aspel.cml.ui.widgets.button.x*/) = (0); }
    TYPE$16 V$47591112/*aspel.cml.ui.widgets.button.y*/;
    { (V$47591112/*aspel.cml.ui.widgets.button.y*/) = (0); }
    TYPE$16 V$47591176/*aspel.cml.ui.widgets.button.width*/;
    { (V$47591176/*aspel.cml.ui.widgets.button.width*/) = (0); }
    TYPE$16 V$47591240/*aspel.cml.ui.widgets.button.height*/;
    { (V$47591240/*aspel.cml.ui.widgets.button.height*/) = (0); }
    CORE$ASSERT(((CORE$BOOL)(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$86,TYPE$86,TYPE$86,TYPE$86))(((CORE$DELEGATE)V$47854000/*aspel.cml.ui.layout*/)))((V$47590792/*aspel.cml.ui.widgets.button.ui*/), ((V$47590984/*aspel.cml.ui.widgets.button.preferred*/).m0), ((V$47590984/*aspel.cml.ui.widgets.button.preferred*/).m1), ((CORE$PTR) &((V$47591048/*aspel.cml.ui.widgets.button.x*/))), ((CORE$PTR) &((V$47591112/*aspel.cml.ui.widgets.button.y*/))), ((CORE$PTR) &((V$47591176/*aspel.cml.ui.widgets.button.width*/))), ((CORE$PTR) &((V$47591240/*aspel.cml.ui.widgets.button.height*/)))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D7C9B8_OFF],(CORE$U64) SHARED$STR_2D7C9B8_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x77\x69\x64\x67\x65\x74\x73\\\x62\x75\x74\x74\x6F\x6E\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(20)));
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$397,TYPE$1,TYPE$5,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47851120/*aspel.cml.ui.widgets.button*/)))((V$47590792/*aspel.cml.ui.widgets.button.ui*/), (V$47590920/*aspel.cml.ui.widgets.button.text*/), (V$47590856/*aspel.cml.ui.widgets.button.id*/), (V$47591048/*aspel.cml.ui.widgets.button.x*/), (V$47591112/*aspel.cml.ui.widgets.button.y*/), (V$47591176/*aspel.cml.ui.widgets.button.width*/), (V$47591240/*aspel.cml.ui.widgets.button.height*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851040/*aspel.cml.ui.widgets.button*/(TYPE$397 V$47591304/*aspel.cml.ui.widgets.button.ui*/, TYPE$1 V$47591368/*aspel.cml.ui.widgets.button.text*/, TYPE$16 V$47591432/*aspel.cml.ui.widgets.button.x*/, TYPE$16 V$47591496/*aspel.cml.ui.widgets.button.y*/, TYPE$16 V$47591560/*aspel.cml.ui.widgets.button.width*/, TYPE$16 V$47591624/*aspel.cml.ui.widgets.button.height*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$397,TYPE$1,TYPE$5,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47851120/*aspel.cml.ui.widgets.button*/)))((V$47591304/*aspel.cml.ui.widgets.button.ui*/), (V$47591368/*aspel.cml.ui.widgets.button.text*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$47591432/*aspel.cml.ui.widgets.button.x*/), (V$47591496/*aspel.cml.ui.widgets.button.y*/), (V$47591560/*aspel.cml.ui.widgets.button.width*/), (V$47591624/*aspel.cml.ui.widgets.button.height*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851120/*aspel.cml.ui.widgets.button*/(TYPE$397 V$47591688/*aspel.cml.ui.widgets.button.ui*/, TYPE$1 V$47591752/*aspel.cml.ui.widgets.button.text*/, TYPE$5 V$47591816/*aspel.cml.ui.widgets.button.id*/, TYPE$16 V$47591880/*aspel.cml.ui.widgets.button.x*/, TYPE$16 V$47591944/*aspel.cml.ui.widgets.button.y*/, TYPE$16 V$47592008/*aspel.cml.ui.widgets.button.width*/, TYPE$16 V$47592072/*aspel.cml.ui.widgets.button.height*/)
{
    {
    TYPE$191 V$47592136/*aspel.cml.ui.widgets.button.widget*/ = ([&]()->TYPE$191{
    TYPE$191 TEMP$RESULT;
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$5, ((V$47591752/*aspel.cml.ui.widgets.button.text*/).a));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = (V$47591816/*aspel.cml.ui.widgets.button.id*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    TYPE$6 V$47592200/*aspel.cml.ui.widgets.button.focus*/ = ((TYPE$6(*)(TYPE$397,TYPE$191))(((CORE$DELEGATE)V$47854480/*aspel.cml.ui.has_focus*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), (V$47592136/*aspel.cml.ui.widgets.button.widget*/));
    TYPE$6 V$47592264/*aspel.cml.ui.widgets.button.hover*/ = ((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47851200/*aspel.cml.ui.widgets.is_mouse_over*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), (V$47591880/*aspel.cml.ui.widgets.button.x*/), (V$47591944/*aspel.cml.ui.widgets.button.y*/), (V$47592008/*aspel.cml.ui.widgets.button.width*/), (V$47592072/*aspel.cml.ui.widgets.button.height*/));
    TYPE$6 V$47592328/*aspel.cml.ui.widgets.button.press*/ = (((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m11);
    TYPE$6 V$47592392/*aspel.cml.ui.widgets.button.click*/ = CORE$land((CORE$land(((V$47592200/*aspel.cml.ui.widgets.button.focus*/)),((V$47592264/*aspel.cml.ui.widgets.button.hover*/)))),((!((V$47592328/*aspel.cml.ui.widgets.button.press*/)))));
    if ((V$47592200/*aspel.cml.ui.widgets.button.focus*/)) {
    {
    if ((!((V$47592328/*aspel.cml.ui.widgets.button.press*/)))) {
    {
    ((TYPE$8(*)(TYPE$397))(((CORE$DELEGATE)V$47854720/*aspel.cml.ui.clear_focus*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/));
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47592200/*aspel.cml.ui.widgets.button.focus*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    ((TYPE$8(*)(TYPE$397))(((CORE$DELEGATE)V$47854640/*aspel.cml.ui.retain_focus*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/));
    }
    }
    }
    }
    if ((V$47592264/*aspel.cml.ui.widgets.button.hover*/)) {
    {
    ((TYPE$8(*)(TYPE$397,TYPE$191))(((CORE$DELEGATE)V$47854320/*aspel.cml.ui.set_hot*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), (V$47592136/*aspel.cml.ui.widgets.button.widget*/));
    if (CORE$land(((V$47592328/*aspel.cml.ui.widgets.button.press*/)),((!((V$47592200/*aspel.cml.ui.widgets.button.focus*/)))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$6(*)(TYPE$397,TYPE$191))(((CORE$DELEGATE)V$47854560/*aspel.cml.ui.require_focus*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), (V$47592136/*aspel.cml.ui.widgets.button.widget*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47592200/*aspel.cml.ui.widgets.button.focus*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    ((TYPE$8(*)(TYPE$397))(((CORE$DELEGATE)V$47854400/*aspel.cml.ui.clear_hot*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/));
    }
    }
    TYPE$407 V$47592456/*aspel.cml.ui.widgets.button.color*/ = ((TYPE$407(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853280/*aspel.cml.ui.get_style_color*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), ((ISOLATED$BASE.V$47606536/*aspel.cml.ui.STYLE_COLOR_BUTTON*/)));
    TYPE$407 V$47592520/*aspel.cml.ui.widgets.button.hot_color*/ = ((TYPE$407(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853280/*aspel.cml.ui.get_style_color*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), ((ISOLATED$BASE.V$47606600/*aspel.cml.ui.STYLE_COLOR_BUTTON_HOT*/)));
    TYPE$407 V$47592584/*aspel.cml.ui.widgets.button.focus_color*/ = ((TYPE$407(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853280/*aspel.cml.ui.get_style_color*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), ((ISOLATED$BASE.V$47606664/*aspel.cml.ui.STYLE_COLOR_BUTTON_FOCUS*/)));
    TYPE$407 V$47592648/*aspel.cml.ui.widgets.button.border_color*/ = ((TYPE$407(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853280/*aspel.cml.ui.get_style_color*/)))((V$47591688/*aspel.cml.ui.widgets.button.ui*/), ((ISOLATED$BASE.V$47606472/*aspel.cml.ui.STYLE_COLOR_BORDER*/)));
    if ((V$47592200/*aspel.cml.ui.widgets.button.focus*/)) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$407))(((CORE$DELEGATE)V$47860160/*aspel.cml.video.render_set_color*/)))((((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m0), (V$47592584/*aspel.cml.ui.widgets.button.focus_color*/));
    }
    }
    else {
    {
    if ((V$47592264/*aspel.cml.ui.widgets.button.hover*/)) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$407))(((CORE$DELEGATE)V$47860160/*aspel.cml.video.render_set_color*/)))((((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m0), (V$47592520/*aspel.cml.ui.widgets.button.hot_color*/));
    }
    }
    else {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$407))(((CORE$DELEGATE)V$47860160/*aspel.cml.video.render_set_color*/)))((((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m0), (V$47592456/*aspel.cml.ui.widgets.button.color*/));
    }
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47859600/*aspel.cml.video.render_fill_rect*/)))((((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m0), (V$47591880/*aspel.cml.ui.widgets.button.x*/), (V$47591944/*aspel.cml.ui.widgets.button.y*/), (V$47592008/*aspel.cml.ui.widgets.button.width*/), (V$47592072/*aspel.cml.ui.widgets.button.height*/));
    ((TYPE$8(*)(TYPE$7,TYPE$407))(((CORE$DELEGATE)V$47860160/*aspel.cml.video.render_set_color*/)))((((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m0), (V$47592648/*aspel.cml.ui.widgets.button.border_color*/));
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47859440/*aspel.cml.video.render_draw_rect*/)))((((TYPE$398*)((V$47591688/*aspel.cml.ui.widgets.button.ui*/)))->m0), (V$47591880/*aspel.cml.ui.widgets.button.x*/), (V$47591944/*aspel.cml.ui.widgets.button.y*/), (V$47592008/*aspel.cml.ui.widgets.button.width*/), (V$47592072/*aspel.cml.ui.widgets.button.height*/));
    {
    TYPE$6 RET$VAL = (V$47592392/*aspel.cml.ui.widgets.button.click*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851200/*aspel.cml.ui.widgets.is_mouse_over*/(TYPE$397 V$47592712/*aspel.cml.ui.widgets.is_mouse_over.ui*/, TYPE$16 V$47592776/*aspel.cml.ui.widgets.is_mouse_over.x*/, TYPE$16 V$47592840/*aspel.cml.ui.widgets.is_mouse_over.y*/, TYPE$16 V$47592904/*aspel.cml.ui.widgets.is_mouse_over.width*/, TYPE$16 V$47592968/*aspel.cml.ui.widgets.is_mouse_over.height*/)
{
    {
    if ((!((((TYPE$398*)((V$47592712/*aspel.cml.ui.widgets.is_mouse_over.ui*/)))->m8)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$land((CORE$land((CORE$land((CORE$ge(((((TYPE$398*)((V$47592712/*aspel.cml.ui.widgets.is_mouse_over.ui*/)))->m9)),((V$47592776/*aspel.cml.ui.widgets.is_mouse_over.x*/)))),(CORE$lt(((((TYPE$398*)((V$47592712/*aspel.cml.ui.widgets.is_mouse_over.ui*/)))->m9)),(CORE$add(((V$47592776/*aspel.cml.ui.widgets.is_mouse_over.x*/)),((V$47592904/*aspel.cml.ui.widgets.is_mouse_over.width*/)))))))),(CORE$ge(((((TYPE$398*)((V$47592712/*aspel.cml.ui.widgets.is_mouse_over.ui*/)))->m10)),((V$47592840/*aspel.cml.ui.widgets.is_mouse_over.y*/)))))),(CORE$lt(((((TYPE$398*)((V$47592712/*aspel.cml.ui.widgets.is_mouse_over.ui*/)))->m10)),(CORE$add(((V$47592840/*aspel.cml.ui.widgets.is_mouse_over.y*/)),((V$47592968/*aspel.cml.ui.widgets.is_mouse_over.height*/)))))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851280/*aspel.cml.ui.layouts.push_horizontal_layout*/(TYPE$397 V$47593096/*aspel.cml.ui.layouts.push_horizontal_layout.ui*/)
{
    {
    TYPE$7 V$47593160/*aspel.cml.ui.layouts.push_horizontal_layout._stack_frame*/ = ((TYPE$7(*)(TYPE$397,TYPE$412))(((CORE$DELEGATE)V$47853840/*aspel.cml.ui.push_layout*/)))((V$47593096/*aspel.cml.ui.layouts.push_horizontal_layout.ui*/), ((ISOLATED$BASE.V$47593032/*aspel.cml.ui.layouts.HORIZONTAL_LAYOUT*/)));
    if (CORE$eq(((V$47593160/*aspel.cml.ui.layouts.push_horizontal_layout._stack_frame*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$419 V$47593224/*aspel.cml.ui.layouts.push_horizontal_layout.stack_frame*/ = CORE$cast_regular(TYPE$419, (V$47593160/*aspel.cml.ui.layouts.push_horizontal_layout._stack_frame*/));
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851360/*aspel.cml.ui.layouts.horizontal_layout_begin*/(TYPE$397 V$47594056/*aspel.cml.ui.layouts.horizontal_layout_begin.ui*/, TYPE$7 V$47594120/*aspel.cml.ui.layouts.horizontal_layout_begin._stack_frame*/)
{
    {
    TYPE$419 V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/ = CORE$cast_regular(TYPE$419, (V$47594120/*aspel.cml.ui.layouts.horizontal_layout_begin._stack_frame*/));
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$86,TYPE$86,TYPE$86,TYPE$86))(((CORE$DELEGATE)V$47854080/*aspel.cml.ui.layout_available*/)))((V$47594056/*aspel.cml.ui.layouts.horizontal_layout_begin.ui*/), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), ((CORE$PTR) &((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m0))), ((CORE$PTR) &((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m1))), ((CORE$PTR) &((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m2))), ((CORE$PTR) &((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m3))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$420 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$420(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853200/*aspel.cml.ui.get_style_margins*/)))((V$47594056/*aspel.cml.ui.layouts.horizontal_layout_begin.ui*/), ((ISOLATED$BASE.V$47606216/*aspel.cml.ui.STYLE_MARGINS*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m8));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$420, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853040/*aspel.cml.ui.get_style_size*/)))((V$47594056/*aspel.cml.ui.layouts.horizontal_layout_begin.ui*/), ((ISOLATED$BASE.V$47606024/*aspel.cml.ui.STYLE_SIZE_PADDING_VERTICAL*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853040/*aspel.cml.ui.get_style_size*/)))((V$47594056/*aspel.cml.ui.layouts.horizontal_layout_begin.ui*/), ((ISOLATED$BASE.V$47606088/*aspel.cml.ui.STYLE_SIZE_PADDING_HORIZONTAL*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47594184/*aspel.cml.ui.layouts.horizontal_layout_begin.stack_frame*/)))->m10));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851440/*aspel.cml.ui.layouts.horizontal_layout_end*/(TYPE$397 V$47594248/*aspel.cml.ui.layouts.horizontal_layout_end.ui*/, TYPE$7 V$47594312/*aspel.cml.ui.layouts.horizontal_layout_end._stack_frame*/)
{
    {
    TYPE$419 V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/ = CORE$cast_regular(TYPE$419, (V$47594312/*aspel.cml.ui.layouts.horizontal_layout_end._stack_frame*/));
    TYPE$16 V$47594440/*aspel.cml.ui.layouts.horizontal_layout_end.width*/ = CORE$add((CORE$add(((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m4)),(((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m8).m1)));
    TYPE$16 V$47594504/*aspel.cml.ui.layouts.horizontal_layout_end.height*/ = CORE$add((CORE$add(((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m5)),(((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m8).m3)));
    if (CORE$gt(((V$47594440/*aspel.cml.ui.layouts.horizontal_layout_end.width*/)),((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m2)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47594440/*aspel.cml.ui.layouts.horizontal_layout_end.width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47594504/*aspel.cml.ui.layouts.horizontal_layout_end.height*/)),((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m3)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47594504/*aspel.cml.ui.layouts.horizontal_layout_end.height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47854160/*aspel.cml.ui.layout_post*/)))((V$47594248/*aspel.cml.ui.layouts.horizontal_layout_end.ui*/), (((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m0), (((TYPE$416*)((V$47594376/*aspel.cml.ui.layouts.horizontal_layout_end.stack_frame*/)))->m1), (V$47594440/*aspel.cml.ui.layouts.horizontal_layout_end.width*/), (V$47594504/*aspel.cml.ui.layouts.horizontal_layout_end.height*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851520/*aspel.cml.ui.layouts.horizontal_layout*/(TYPE$397 V$47594568/*aspel.cml.ui.layouts.horizontal_layout.ui*/, TYPE$7 V$47594632/*aspel.cml.ui.layouts.horizontal_layout._stack_frame*/, TYPE$16 V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/, TYPE$16 V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/, TYPE$86 V$47594824/*aspel.cml.ui.layouts.horizontal_layout.x*/, TYPE$86 V$47594888/*aspel.cml.ui.layouts.horizontal_layout.y*/, TYPE$86 V$47594952/*aspel.cml.ui.layouts.horizontal_layout.width*/, TYPE$86 V$47595016/*aspel.cml.ui.layouts.horizontal_layout.height*/)
{
    {
    TYPE$419 V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/ = CORE$cast_regular(TYPE$419, (V$47594632/*aspel.cml.ui.layouts.horizontal_layout._stack_frame*/));
    TYPE$16 V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m2)),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m1)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6)));
    TYPE$16 V$47595208/*aspel.cml.ui.layouts.horizontal_layout.max_widget_height*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m3)),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m3)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m7)));
    if (CORE$lt(((V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47595208/*aspel.cml.ui.layouts.horizontal_layout.max_widget_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595208/*aspel.cml.ui.layouts.horizontal_layout.max_widget_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/)),((V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m5)),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m9))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m2)),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m1)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m3)),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m3)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m7))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595208/*aspel.cml.ui.layouts.horizontal_layout.max_widget_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/)),((V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47595144/*aspel.cml.ui.layouts.horizontal_layout.max_widget_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/)),((V$47595208/*aspel.cml.ui.layouts.horizontal_layout.max_widget_height*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47595208/*aspel.cml.ui.layouts.horizontal_layout.max_widget_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47594952/*aspel.cml.ui.layouts.horizontal_layout.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47595016/*aspel.cml.ui.layouts.horizontal_layout.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m0)),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m0)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47594824/*aspel.cml.ui.layouts.horizontal_layout.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m1)),(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m8).m2)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m7))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47594888/*aspel.cml.ui.layouts.horizontal_layout.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$gt((CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6)),((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m4)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6)),((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m7)),((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/)))),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m5)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m7)),((V$47594760/*aspel.cml.ui.layouts.horizontal_layout.preferred_height*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$47594696/*aspel.cml.ui.layouts.horizontal_layout.preferred_width*/)),((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m10))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47595080/*aspel.cml.ui.layouts.horizontal_layout.stack_frame*/)))->m6));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851600/*aspel.cml.ui.layouts.horizontal_layout_available*/(TYPE$397 V$47595272/*aspel.cml.ui.layouts.horizontal_layout_available.ui*/, TYPE$7 V$47595336/*aspel.cml.ui.layouts.horizontal_layout_available._stack_frame*/, TYPE$16 V$47595400/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_width*/, TYPE$16 V$47595464/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_height*/, TYPE$86 V$47595528/*aspel.cml.ui.layouts.horizontal_layout_available.x*/, TYPE$86 V$47595592/*aspel.cml.ui.layouts.horizontal_layout_available.y*/, TYPE$86 V$47595656/*aspel.cml.ui.layouts.horizontal_layout_available.width*/, TYPE$86 V$47595720/*aspel.cml.ui.layouts.horizontal_layout_available.height*/)
{
    {
    TYPE$419 V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/ = CORE$cast_regular(TYPE$419, (V$47595336/*aspel.cml.ui.layouts.horizontal_layout_available._stack_frame*/));
    TYPE$16 V$47595848/*aspel.cml.ui.layouts.horizontal_layout_available.offset_x*/ = (((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m6);
    TYPE$16 V$47595912/*aspel.cml.ui.layouts.horizontal_layout_available.offset_y*/ = (((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m7);
    TYPE$16 V$47595976/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_width*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m2)),(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m8).m1)))),((V$47595848/*aspel.cml.ui.layouts.horizontal_layout_available.offset_x*/)));
    TYPE$16 V$47596040/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_height*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m3)),(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m8).m3)))),((V$47595912/*aspel.cml.ui.layouts.horizontal_layout_available.offset_y*/)));
    if (CORE$lt(((V$47595976/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595976/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47596040/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47596040/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47595400/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47595976/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595400/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47595400/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_width*/)),((V$47595976/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_width*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47595976/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595400/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47595464/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47596040/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595464/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47595464/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_height*/)),((V$47596040/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_height*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47596040/*aspel.cml.ui.layouts.horizontal_layout_available.max_widget_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47595464/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47595400/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47595656/*aspel.cml.ui.layouts.horizontal_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47595464/*aspel.cml.ui.layouts.horizontal_layout_available.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47595720/*aspel.cml.ui.layouts.horizontal_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m0)),(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m8).m0)))),((V$47595848/*aspel.cml.ui.layouts.horizontal_layout_available.offset_x*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47595528/*aspel.cml.ui.layouts.horizontal_layout_available.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m1)),(((((TYPE$416*)((V$47595784/*aspel.cml.ui.layouts.horizontal_layout_available.stack_frame*/)))->m8).m2)))),((V$47595912/*aspel.cml.ui.layouts.horizontal_layout_available.offset_y*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47595592/*aspel.cml.ui.layouts.horizontal_layout_available.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851680/*aspel.cml.ui.layouts.horizontal_layout_post*/(TYPE$397 V$47596104/*aspel.cml.ui.layouts.horizontal_layout_post.ui*/, TYPE$7 V$47596168/*aspel.cml.ui.layouts.horizontal_layout_post._stack_frame*/, TYPE$16 V$47596232/*aspel.cml.ui.layouts.horizontal_layout_post.x*/, TYPE$16 V$47596296/*aspel.cml.ui.layouts.horizontal_layout_post.y*/, TYPE$16 V$47596360/*aspel.cml.ui.layouts.horizontal_layout_post.width*/, TYPE$16 V$47596424/*aspel.cml.ui.layouts.horizontal_layout_post.height*/)
{
    {
    TYPE$419 V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/ = CORE$cast_regular(TYPE$419, (V$47596168/*aspel.cml.ui.layouts.horizontal_layout_post._stack_frame*/));
    TYPE$16 V$47596552/*aspel.cml.ui.layouts.horizontal_layout_post.offset_x*/ = CORE$sub((CORE$sub(((V$47596232/*aspel.cml.ui.layouts.horizontal_layout_post.x*/)),((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m0)))),(((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m8).m0)));
    TYPE$16 V$47596616/*aspel.cml.ui.layouts.horizontal_layout_post.offset_y*/ = CORE$sub((CORE$sub(((V$47596296/*aspel.cml.ui.layouts.horizontal_layout_post.y*/)),((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m1)))),(((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m8).m2)));
    if (CORE$gt((CORE$add(((V$47596552/*aspel.cml.ui.layouts.horizontal_layout_post.offset_x*/)),((V$47596360/*aspel.cml.ui.layouts.horizontal_layout_post.width*/)))),((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m4)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$47596552/*aspel.cml.ui.layouts.horizontal_layout_post.offset_x*/)),((V$47596360/*aspel.cml.ui.layouts.horizontal_layout_post.width*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((CORE$add(((V$47596616/*aspel.cml.ui.layouts.horizontal_layout_post.offset_y*/)),((V$47596424/*aspel.cml.ui.layouts.horizontal_layout_post.height*/)))),((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m5)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$47596616/*aspel.cml.ui.layouts.horizontal_layout_post.offset_y*/)),((V$47596424/*aspel.cml.ui.layouts.horizontal_layout_post.height*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((V$47596552/*aspel.cml.ui.layouts.horizontal_layout_post.offset_x*/)),((V$47596360/*aspel.cml.ui.layouts.horizontal_layout_post.width*/)))),((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m10))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47596488/*aspel.cml.ui.layouts.horizontal_layout_post.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851760/*aspel.cml.ui.layouts.push_vertical_layout*/(TYPE$397 V$47596744/*aspel.cml.ui.layouts.push_vertical_layout.ui*/)
{
    {
    TYPE$7 V$47596808/*aspel.cml.ui.layouts.push_vertical_layout._stack_frame*/ = ((TYPE$7(*)(TYPE$397,TYPE$412))(((CORE$DELEGATE)V$47853840/*aspel.cml.ui.push_layout*/)))((V$47596744/*aspel.cml.ui.layouts.push_vertical_layout.ui*/), ((ISOLATED$BASE.V$47596680/*aspel.cml.ui.layouts.VERTICAL_LAYOUT*/)));
    if (CORE$eq(((V$47596808/*aspel.cml.ui.layouts.push_vertical_layout._stack_frame*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$423 V$47596872/*aspel.cml.ui.layouts.push_vertical_layout.stack_frame*/ = CORE$cast_regular(TYPE$423, (V$47596808/*aspel.cml.ui.layouts.push_vertical_layout._stack_frame*/));
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851840/*aspel.cml.ui.layouts.vertical_layout_begin*/(TYPE$397 V$47597704/*aspel.cml.ui.layouts.vertical_layout_begin.ui*/, TYPE$7 V$47597768/*aspel.cml.ui.layouts.vertical_layout_begin._stack_frame*/)
{
    {
    TYPE$423 V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/ = CORE$cast_regular(TYPE$423, (V$47597768/*aspel.cml.ui.layouts.vertical_layout_begin._stack_frame*/));
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$86,TYPE$86,TYPE$86,TYPE$86))(((CORE$DELEGATE)V$47854080/*aspel.cml.ui.layout_available*/)))((V$47597704/*aspel.cml.ui.layouts.vertical_layout_begin.ui*/), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), ((CORE$PTR) &((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m0))), ((CORE$PTR) &((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m1))), ((CORE$PTR) &((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m2))), ((CORE$PTR) &((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m3))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$420 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$420(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853200/*aspel.cml.ui.get_style_margins*/)))((V$47597704/*aspel.cml.ui.layouts.vertical_layout_begin.ui*/), ((ISOLATED$BASE.V$47606216/*aspel.cml.ui.STYLE_MARGINS*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m8));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$420, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853040/*aspel.cml.ui.get_style_size*/)))((V$47597704/*aspel.cml.ui.layouts.vertical_layout_begin.ui*/), ((ISOLATED$BASE.V$47606024/*aspel.cml.ui.STYLE_SIZE_PADDING_VERTICAL*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853040/*aspel.cml.ui.get_style_size*/)))((V$47597704/*aspel.cml.ui.layouts.vertical_layout_begin.ui*/), ((ISOLATED$BASE.V$47606088/*aspel.cml.ui.STYLE_SIZE_PADDING_HORIZONTAL*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47597832/*aspel.cml.ui.layouts.vertical_layout_begin.stack_frame*/)))->m10));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47851920/*aspel.cml.ui.layouts.vertical_layout_end*/(TYPE$397 V$47597896/*aspel.cml.ui.layouts.vertical_layout_end.ui*/, TYPE$7 V$47597960/*aspel.cml.ui.layouts.vertical_layout_end._stack_frame*/)
{
    {
    TYPE$423 V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/ = CORE$cast_regular(TYPE$423, (V$47597960/*aspel.cml.ui.layouts.vertical_layout_end._stack_frame*/));
    TYPE$16 V$47598088/*aspel.cml.ui.layouts.vertical_layout_end.width*/ = CORE$add((CORE$add(((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m4)),(((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m8).m1)));
    TYPE$16 V$47598152/*aspel.cml.ui.layouts.vertical_layout_end.height*/ = CORE$add((CORE$add(((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m5)),(((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m8).m3)));
    if (CORE$gt(((V$47598088/*aspel.cml.ui.layouts.vertical_layout_end.width*/)),((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m2)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598088/*aspel.cml.ui.layouts.vertical_layout_end.width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47598152/*aspel.cml.ui.layouts.vertical_layout_end.height*/)),((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m3)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598152/*aspel.cml.ui.layouts.vertical_layout_end.height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47854160/*aspel.cml.ui.layout_post*/)))((V$47597896/*aspel.cml.ui.layouts.vertical_layout_end.ui*/), (((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m0), (((TYPE$416*)((V$47598024/*aspel.cml.ui.layouts.vertical_layout_end.stack_frame*/)))->m1), (V$47598088/*aspel.cml.ui.layouts.vertical_layout_end.width*/), (V$47598152/*aspel.cml.ui.layouts.vertical_layout_end.height*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852000/*aspel.cml.ui.layouts.vertical_layout*/(TYPE$397 V$47598216/*aspel.cml.ui.layouts.vertical_layout.ui*/, TYPE$7 V$47598280/*aspel.cml.ui.layouts.vertical_layout._stack_frame*/, TYPE$16 V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/, TYPE$16 V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/, TYPE$86 V$47598472/*aspel.cml.ui.layouts.vertical_layout.x*/, TYPE$86 V$47598536/*aspel.cml.ui.layouts.vertical_layout.y*/, TYPE$86 V$47598600/*aspel.cml.ui.layouts.vertical_layout.width*/, TYPE$86 V$47598664/*aspel.cml.ui.layouts.vertical_layout.height*/)
{
    {
    TYPE$423 V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/ = CORE$cast_regular(TYPE$423, (V$47598280/*aspel.cml.ui.layouts.vertical_layout._stack_frame*/));
    TYPE$16 V$47598792/*aspel.cml.ui.layouts.vertical_layout.max_widget_width*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m2)),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m1)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m6)));
    TYPE$16 V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m3)),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m3)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7)));
    if (CORE$lt(((V$47598792/*aspel.cml.ui.layouts.vertical_layout.max_widget_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598792/*aspel.cml.ui.layouts.vertical_layout.max_widget_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/)),((V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m4)),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m10))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m2)),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m1)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m6))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598792/*aspel.cml.ui.layouts.vertical_layout.max_widget_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m3)),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m3)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/)),((V$47598792/*aspel.cml.ui.layouts.vertical_layout.max_widget_width*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47598792/*aspel.cml.ui.layouts.vertical_layout.max_widget_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/)),((V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47598856/*aspel.cml.ui.layouts.vertical_layout.max_widget_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47598600/*aspel.cml.ui.layouts.vertical_layout.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47598664/*aspel.cml.ui.layouts.vertical_layout.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m0)),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m0)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m6))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47598472/*aspel.cml.ui.layouts.vertical_layout.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m1)),(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m8).m2)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47598536/*aspel.cml.ui.layouts.vertical_layout.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$gt((CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m6)),((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m4)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m6)),((V$47598344/*aspel.cml.ui.layouts.vertical_layout.preferred_width*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7)),((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/)))),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m5)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7)),((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$47598408/*aspel.cml.ui.layouts.vertical_layout.preferred_height*/)),((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m9))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47598728/*aspel.cml.ui.layouts.vertical_layout.stack_frame*/)))->m7));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852080/*aspel.cml.ui.layouts.vertical_layout_available*/(TYPE$397 V$47598920/*aspel.cml.ui.layouts.vertical_layout_available.ui*/, TYPE$7 V$47598984/*aspel.cml.ui.layouts.vertical_layout_available._stack_frame*/, TYPE$16 V$47599048/*aspel.cml.ui.layouts.vertical_layout_available.preferred_width*/, TYPE$16 V$47599112/*aspel.cml.ui.layouts.vertical_layout_available.preferred_height*/, TYPE$86 V$47599176/*aspel.cml.ui.layouts.vertical_layout_available.x*/, TYPE$86 V$47599240/*aspel.cml.ui.layouts.vertical_layout_available.y*/, TYPE$86 V$47599304/*aspel.cml.ui.layouts.vertical_layout_available.width*/, TYPE$86 V$47599368/*aspel.cml.ui.layouts.vertical_layout_available.height*/)
{
    {
    TYPE$423 V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/ = CORE$cast_regular(TYPE$423, (V$47598984/*aspel.cml.ui.layouts.vertical_layout_available._stack_frame*/));
    TYPE$16 V$47599496/*aspel.cml.ui.layouts.vertical_layout_available.offset_x*/ = (((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m6);
    TYPE$16 V$47599560/*aspel.cml.ui.layouts.vertical_layout_available.offset_y*/ = (((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m7);
    TYPE$16 V$47599624/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_width*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m2)),(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m8).m0)))),(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m8).m1)))),((V$47599496/*aspel.cml.ui.layouts.vertical_layout_available.offset_x*/)));
    TYPE$16 V$47599688/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_height*/ = CORE$sub((CORE$sub((CORE$sub(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m3)),(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m8).m2)))),(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m8).m3)))),((V$47599560/*aspel.cml.ui.layouts.vertical_layout_available.offset_y*/)));
    if (CORE$lt(((V$47599624/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47599624/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47599688/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47599688/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47599048/*aspel.cml.ui.layouts.vertical_layout_available.preferred_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47599624/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47599048/*aspel.cml.ui.layouts.vertical_layout_available.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47599048/*aspel.cml.ui.layouts.vertical_layout_available.preferred_width*/)),((V$47599624/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_width*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47599624/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47599048/*aspel.cml.ui.layouts.vertical_layout_available.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47599112/*aspel.cml.ui.layouts.vertical_layout_available.preferred_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47599688/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47599112/*aspel.cml.ui.layouts.vertical_layout_available.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47599112/*aspel.cml.ui.layouts.vertical_layout_available.preferred_height*/)),((V$47599688/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_height*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47599688/*aspel.cml.ui.layouts.vertical_layout_available.max_widget_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47599112/*aspel.cml.ui.layouts.vertical_layout_available.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47599048/*aspel.cml.ui.layouts.vertical_layout_available.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47599304/*aspel.cml.ui.layouts.vertical_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47599112/*aspel.cml.ui.layouts.vertical_layout_available.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47599368/*aspel.cml.ui.layouts.vertical_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m0)),(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m8).m0)))),((V$47599496/*aspel.cml.ui.layouts.vertical_layout_available.offset_x*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47599176/*aspel.cml.ui.layouts.vertical_layout_available.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m1)),(((((TYPE$416*)((V$47599432/*aspel.cml.ui.layouts.vertical_layout_available.stack_frame*/)))->m8).m2)))),((V$47599560/*aspel.cml.ui.layouts.vertical_layout_available.offset_y*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47599240/*aspel.cml.ui.layouts.vertical_layout_available.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852160/*aspel.cml.ui.layouts.vertical_layout_post*/(TYPE$397 V$47599752/*aspel.cml.ui.layouts.vertical_layout_post.ui*/, TYPE$7 V$47599816/*aspel.cml.ui.layouts.vertical_layout_post._stack_frame*/, TYPE$16 V$47599880/*aspel.cml.ui.layouts.vertical_layout_post.x*/, TYPE$16 V$47599944/*aspel.cml.ui.layouts.vertical_layout_post.y*/, TYPE$16 V$47600008/*aspel.cml.ui.layouts.vertical_layout_post.width*/, TYPE$16 V$47600072/*aspel.cml.ui.layouts.vertical_layout_post.height*/)
{
    {
    TYPE$423 V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/ = CORE$cast_regular(TYPE$423, (V$47599816/*aspel.cml.ui.layouts.vertical_layout_post._stack_frame*/));
    TYPE$16 V$47600200/*aspel.cml.ui.layouts.vertical_layout_post.offset_x*/ = CORE$sub((CORE$sub(((V$47599880/*aspel.cml.ui.layouts.vertical_layout_post.x*/)),((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m0)))),(((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m8).m0)));
    TYPE$16 V$47600264/*aspel.cml.ui.layouts.vertical_layout_post.offset_y*/ = CORE$sub((CORE$sub(((V$47599944/*aspel.cml.ui.layouts.vertical_layout_post.y*/)),((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m1)))),(((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m8).m2)));
    if (CORE$gt((CORE$add(((V$47600200/*aspel.cml.ui.layouts.vertical_layout_post.offset_x*/)),((V$47600008/*aspel.cml.ui.layouts.vertical_layout_post.width*/)))),((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m4)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$47600200/*aspel.cml.ui.layouts.vertical_layout_post.offset_x*/)),((V$47600008/*aspel.cml.ui.layouts.vertical_layout_post.width*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((CORE$add(((V$47600264/*aspel.cml.ui.layouts.vertical_layout_post.offset_y*/)),((V$47600072/*aspel.cml.ui.layouts.vertical_layout_post.height*/)))),((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m5)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$47600264/*aspel.cml.ui.layouts.vertical_layout_post.offset_y*/)),((V$47600072/*aspel.cml.ui.layouts.vertical_layout_post.height*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((CORE$add(((V$47600264/*aspel.cml.ui.layouts.vertical_layout_post.offset_y*/)),((V$47600072/*aspel.cml.ui.layouts.vertical_layout_post.height*/)))),((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m9))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$416*)((V$47600136/*aspel.cml.ui.layouts.vertical_layout_post.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852240/*aspel.cml.ui.layouts.push_pane_layout*/(TYPE$397 V$47600520/*aspel.cml.ui.layouts.push_pane_layout.ui*/, TYPE$16 V$47600584/*aspel.cml.ui.layouts.push_pane_layout.preferred_width*/, TYPE$16 V$47600648/*aspel.cml.ui.layouts.push_pane_layout.preferred_height*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$lor((CORE$lor((CORE$ge(((V$47600584/*aspel.cml.ui.layouts.push_pane_layout.preferred_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$eq(((V$47600584/*aspel.cml.ui.layouts.push_pane_layout.preferred_width*/)),(((ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/))))))),(CORE$eq(((V$47600584/*aspel.cml.ui.layouts.push_pane_layout.preferred_width*/)),(((ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/)))))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D81998_OFF],(CORE$U64) SHARED$STR_2D81998_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x73\\\x70\x61\x6E\x65\x5F\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(13)));
    CORE$ASSERT(((CORE$BOOL)(CORE$lor((CORE$lor((CORE$ge(((V$47600648/*aspel.cml.ui.layouts.push_pane_layout.preferred_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$eq(((V$47600648/*aspel.cml.ui.layouts.push_pane_layout.preferred_height*/)),(((ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/))))))),(CORE$eq(((V$47600648/*aspel.cml.ui.layouts.push_pane_layout.preferred_height*/)),(((ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/)))))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D81A78_OFF],(CORE$U64) SHARED$STR_2D81A78_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x73\\\x70\x61\x6E\x65\x5F\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(14)));
    TYPE$7 V$47600712/*aspel.cml.ui.layouts.push_pane_layout._stack_frame*/ = ((TYPE$7(*)(TYPE$397,TYPE$412))(((CORE$DELEGATE)V$47853840/*aspel.cml.ui.push_layout*/)))((V$47600520/*aspel.cml.ui.layouts.push_pane_layout.ui*/), ((ISOLATED$BASE.V$47600328/*aspel.cml.ui.layouts.PANE_LAYOUT*/)));
    if (CORE$eq(((V$47600712/*aspel.cml.ui.layouts.push_pane_layout._stack_frame*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$426 V$47600776/*aspel.cml.ui.layouts.push_pane_layout.stack_frame*/ = CORE$cast_regular(TYPE$426, (V$47600712/*aspel.cml.ui.layouts.push_pane_layout._stack_frame*/));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47600584/*aspel.cml.ui.layouts.push_pane_layout.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47600776/*aspel.cml.ui.layouts.push_pane_layout.stack_frame*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47600648/*aspel.cml.ui.layouts.push_pane_layout.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47600776/*aspel.cml.ui.layouts.push_pane_layout.stack_frame*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852320/*aspel.cml.ui.layouts.pane_layout_begin*/(TYPE$397 V$47601480/*aspel.cml.ui.layouts.pane_layout_begin.ui*/, TYPE$7 V$47601544/*aspel.cml.ui.layouts.pane_layout_begin._stack_frame*/)
{
    {
    TYPE$426 V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/ = CORE$cast_regular(TYPE$426, (V$47601544/*aspel.cml.ui.layouts.pane_layout_begin._stack_frame*/));
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$86,TYPE$86,TYPE$86,TYPE$86))(((CORE$DELEGATE)V$47854080/*aspel.cml.ui.layout_available*/)))((V$47601480/*aspel.cml.ui.layouts.pane_layout_begin.ui*/), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), ((CORE$PTR) &((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m0))), ((CORE$PTR) &((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m1))), ((CORE$PTR) &((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m2))), ((CORE$PTR) &((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m3))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$420 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$420(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853200/*aspel.cml.ui.get_style_margins*/)))((V$47601480/*aspel.cml.ui.layouts.pane_layout_begin.ui*/), ((ISOLATED$BASE.V$47606280/*aspel.cml.ui.STYLE_MARGINS_PANE*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47601608/*aspel.cml.ui.layouts.pane_layout_begin.stack_frame*/)))->m8));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$420, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852400/*aspel.cml.ui.layouts.pane_layout_end*/(TYPE$397 V$47601672/*aspel.cml.ui.layouts.pane_layout_end.ui*/, TYPE$7 V$47601736/*aspel.cml.ui.layouts.pane_layout_end._stack_frame*/)
{
    {
    TYPE$426 V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/ = CORE$cast_regular(TYPE$426, (V$47601736/*aspel.cml.ui.layouts.pane_layout_end._stack_frame*/));
    TYPE$16 V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/ = (((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m4);
    if (CORE$eq(((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m4)),(((ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m4)),(((ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m6));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/)),((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m2)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    TYPE$16 V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/ = (((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m5);
    if (CORE$eq(((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m5)),(((ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m5)),(((ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m7));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/)),((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m3)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47854160/*aspel.cml.ui.layout_post*/)))((V$47601672/*aspel.cml.ui.layouts.pane_layout_end.ui*/), (((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m0), (((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m1), (V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/), (V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$407 V$47601992/*aspel.cml.ui.layouts.pane_layout_end.border_color*/ = ((TYPE$407(*)(TYPE$397,TYPE$401))(((CORE$DELEGATE)V$47853280/*aspel.cml.ui.get_style_color*/)))((V$47601672/*aspel.cml.ui.layouts.pane_layout_end.ui*/), ((ISOLATED$BASE.V$47606472/*aspel.cml.ui.STYLE_COLOR_BORDER*/)));
    ((TYPE$8(*)(TYPE$7,TYPE$407))(((CORE$DELEGATE)V$47860160/*aspel.cml.video.render_set_color*/)))((((TYPE$398*)((V$47601672/*aspel.cml.ui.layouts.pane_layout_end.ui*/)))->m0), (V$47601992/*aspel.cml.ui.layouts.pane_layout_end.border_color*/));
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47859440/*aspel.cml.video.render_draw_rect*/)))((((TYPE$398*)((V$47601672/*aspel.cml.ui.layouts.pane_layout_end.ui*/)))->m0), CORE$add(((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m0)),(CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)))), CORE$add(((((TYPE$424*)((V$47601800/*aspel.cml.ui.layouts.pane_layout_end.stack_frame*/)))->m1)),(CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)))), CORE$sub(((V$47601864/*aspel.cml.ui.layouts.pane_layout_end.width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL)))), CORE$sub(((V$47601928/*aspel.cml.ui.layouts.pane_layout_end.height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(2ULL)))));
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852480/*aspel.cml.ui.layouts.pane_layout*/(TYPE$397 V$47602056/*aspel.cml.ui.layouts.pane_layout.ui*/, TYPE$7 V$47602120/*aspel.cml.ui.layouts.pane_layout._stack_frame*/, TYPE$16 V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/, TYPE$16 V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/, TYPE$86 V$47602312/*aspel.cml.ui.layouts.pane_layout.x*/, TYPE$86 V$47602376/*aspel.cml.ui.layouts.pane_layout.y*/, TYPE$86 V$47602440/*aspel.cml.ui.layouts.pane_layout.width*/, TYPE$86 V$47602504/*aspel.cml.ui.layouts.pane_layout.height*/)
{
    {
    TYPE$426 V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/ = CORE$cast_regular(TYPE$426, (V$47602120/*aspel.cml.ui.layouts.pane_layout._stack_frame*/));
    TYPE$16 V$47602632/*aspel.cml.ui.layouts.pane_layout.margin_vertical*/ = CORE$sub((((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m8).m2)),(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m8).m3)));
    TYPE$16 V$47602696/*aspel.cml.ui.layouts.pane_layout.margin_horizontal*/ = CORE$add((((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m8).m0)),(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m8).m1)));
    if (CORE$ge(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m4)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m4)),((V$47602696/*aspel.cml.ui.layouts.pane_layout.margin_horizontal*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m4)),(((ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m2)),((V$47602696/*aspel.cml.ui.layouts.pane_layout.margin_horizontal*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m4)),(((ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/)),(CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m2)),((V$47602696/*aspel.cml.ui.layouts.pane_layout.margin_horizontal*/)))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m2)),((V$47602696/*aspel.cml.ui.layouts.pane_layout.margin_horizontal*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m5)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m5)),((V$47602632/*aspel.cml.ui.layouts.pane_layout.margin_vertical*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m5)),(((ISOLATED$BASE.V$47600456/*aspel.cml.ui.layouts.PANE_EXPAND*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m3)),((V$47602632/*aspel.cml.ui.layouts.pane_layout.margin_vertical*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m5)),(((ISOLATED$BASE.V$47600392/*aspel.cml.ui.layouts.PANE_FIT*/))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/)),(CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m3)),((V$47602632/*aspel.cml.ui.layouts.pane_layout.margin_vertical*/)))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m3)),((V$47602632/*aspel.cml.ui.layouts.pane_layout.margin_vertical*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m0)),(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m8).m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47602312/*aspel.cml.ui.layouts.pane_layout.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m1)),(((((TYPE$424*)((V$47602568/*aspel.cml.ui.layouts.pane_layout.stack_frame*/)))->m8).m2))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47602376/*aspel.cml.ui.layouts.pane_layout.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47602184/*aspel.cml.ui.layouts.pane_layout.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47602440/*aspel.cml.ui.layouts.pane_layout.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47602248/*aspel.cml.ui.layouts.pane_layout.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47602504/*aspel.cml.ui.layouts.pane_layout.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852560/*aspel.cml.ui.layouts.pane_layout_available*/(TYPE$397 V$47602760/*aspel.cml.ui.layouts.pane_layout_available.ui*/, TYPE$7 V$47602824/*aspel.cml.ui.layouts.pane_layout_available._stack_frame*/, TYPE$16 V$47602888/*aspel.cml.ui.layouts.pane_layout_available.preferred_width*/, TYPE$16 V$47602952/*aspel.cml.ui.layouts.pane_layout_available.preferred_height*/, TYPE$86 V$47603016/*aspel.cml.ui.layouts.pane_layout_available.x*/, TYPE$86 V$47603080/*aspel.cml.ui.layouts.pane_layout_available.y*/, TYPE$86 V$47603144/*aspel.cml.ui.layouts.pane_layout_available.width*/, TYPE$86 V$47603208/*aspel.cml.ui.layouts.pane_layout_available.height*/)
{
    {
    TYPE$426 V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/ = CORE$cast_regular(TYPE$426, (V$47602824/*aspel.cml.ui.layouts.pane_layout_available._stack_frame*/));
    TYPE$16 V$47603336/*aspel.cml.ui.layouts.pane_layout_available.margin_vertical*/ = CORE$sub((((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m8).m2)),(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m8).m3)));
    TYPE$16 V$47603400/*aspel.cml.ui.layouts.pane_layout_available.margin_horizontal*/ = CORE$add((((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m8).m0)),(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m8).m1)));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m0)),(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m8).m0))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603016/*aspel.cml.ui.layouts.pane_layout_available.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m1)),(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m8).m2))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603080/*aspel.cml.ui.layouts.pane_layout_available.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ge(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m4)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    if (CORE$gt(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m4)),((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m2)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m2)),((V$47603400/*aspel.cml.ui.layouts.pane_layout_available.margin_horizontal*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603144/*aspel.cml.ui.layouts.pane_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m4)),((V$47603400/*aspel.cml.ui.layouts.pane_layout_available.margin_horizontal*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603144/*aspel.cml.ui.layouts.pane_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m2)),((V$47603400/*aspel.cml.ui.layouts.pane_layout_available.margin_horizontal*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603144/*aspel.cml.ui.layouts.pane_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$ge(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m5)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    if (CORE$gt(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m5)),((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m3)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m3)),((V$47603336/*aspel.cml.ui.layouts.pane_layout_available.margin_vertical*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603208/*aspel.cml.ui.layouts.pane_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m5)),((V$47603336/*aspel.cml.ui.layouts.pane_layout_available.margin_vertical*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603208/*aspel.cml.ui.layouts.pane_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$424*)((V$47603272/*aspel.cml.ui.layouts.pane_layout_available.stack_frame*/)))->m3)),((V$47603336/*aspel.cml.ui.layouts.pane_layout_available.margin_vertical*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47603208/*aspel.cml.ui.layouts.pane_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852640/*aspel.cml.ui.layouts.pane_layout_post*/(TYPE$397 V$47603464/*aspel.cml.ui.layouts.pane_layout_post.ui*/, TYPE$7 V$47603528/*aspel.cml.ui.layouts.pane_layout_post._stack_frame*/, TYPE$16 V$47603592/*aspel.cml.ui.layouts.pane_layout_post.x*/, TYPE$16 V$47603656/*aspel.cml.ui.layouts.pane_layout_post.y*/, TYPE$16 V$47603720/*aspel.cml.ui.layouts.pane_layout_post.width*/, TYPE$16 V$47603784/*aspel.cml.ui.layouts.pane_layout_post.height*/)
{
    {
    TYPE$426 V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/ = CORE$cast_regular(TYPE$426, (V$47603528/*aspel.cml.ui.layouts.pane_layout_post._stack_frame*/));
    TYPE$16 V$47603912/*aspel.cml.ui.layouts.pane_layout_post.right*/ = CORE$add((CORE$add((CORE$sub(((V$47603592/*aspel.cml.ui.layouts.pane_layout_post.x*/)),((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m0)))),((V$47603720/*aspel.cml.ui.layouts.pane_layout_post.width*/)))),(((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m8).m1)));
    TYPE$16 V$47603976/*aspel.cml.ui.layouts.pane_layout_post.bottom*/ = CORE$add((CORE$add((CORE$sub(((V$47603656/*aspel.cml.ui.layouts.pane_layout_post.y*/)),((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m1)))),((V$47603784/*aspel.cml.ui.layouts.pane_layout_post.height*/)))),(((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m8).m3)));
    if (CORE$gt(((V$47603912/*aspel.cml.ui.layouts.pane_layout_post.right*/)),((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m6)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47603912/*aspel.cml.ui.layouts.pane_layout_post.right*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47603976/*aspel.cml.ui.layouts.pane_layout_post.bottom*/)),((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m7)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47603976/*aspel.cml.ui.layouts.pane_layout_post.bottom*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$424*)((V$47603848/*aspel.cml.ui.layouts.pane_layout_post.stack_frame*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852720/*aspel.cml.ui.layouts.root_layout*/(TYPE$397 V$47604104/*aspel.cml.ui.layouts.root_layout.ui*/, TYPE$7 V$47604168/*aspel.cml.ui.layouts.root_layout._stack_frame*/, TYPE$16 V$47604232/*aspel.cml.ui.layouts.root_layout.preferred_width*/, TYPE$16 V$47604296/*aspel.cml.ui.layouts.root_layout.preferred_height*/, TYPE$86 V$47604360/*aspel.cml.ui.layouts.root_layout.x*/, TYPE$86 V$47604424/*aspel.cml.ui.layouts.root_layout.y*/, TYPE$86 V$47604488/*aspel.cml.ui.layouts.root_layout.width*/, TYPE$86 V$47604552/*aspel.cml.ui.layouts.root_layout.height*/)
{
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604360/*aspel.cml.ui.layouts.root_layout.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604424/*aspel.cml.ui.layouts.root_layout.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$gt(((V$47604232/*aspel.cml.ui.layouts.root_layout.preferred_width*/)),((((TYPE$398*)((V$47604104/*aspel.cml.ui.layouts.root_layout.ui*/)))->m3)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$398*)((V$47604104/*aspel.cml.ui.layouts.root_layout.ui*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604488/*aspel.cml.ui.layouts.root_layout.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47604232/*aspel.cml.ui.layouts.root_layout.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604488/*aspel.cml.ui.layouts.root_layout.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$47604296/*aspel.cml.ui.layouts.root_layout.preferred_height*/)),((((TYPE$398*)((V$47604104/*aspel.cml.ui.layouts.root_layout.ui*/)))->m4)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$398*)((V$47604104/*aspel.cml.ui.layouts.root_layout.ui*/)))->m4));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604552/*aspel.cml.ui.layouts.root_layout.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47604296/*aspel.cml.ui.layouts.root_layout.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604552/*aspel.cml.ui.layouts.root_layout.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852800/*aspel.cml.ui.layouts.root_layout_available*/(TYPE$397 V$47604616/*aspel.cml.ui.layouts.root_layout_available.ui*/, TYPE$7 V$47604680/*aspel.cml.ui.layouts.root_layout_available._stack_frame*/, TYPE$16 V$47604744/*aspel.cml.ui.layouts.root_layout_available.preferred_width*/, TYPE$16 V$47604808/*aspel.cml.ui.layouts.root_layout_available.preferred_height*/, TYPE$86 V$47604872/*aspel.cml.ui.layouts.root_layout_available.x*/, TYPE$86 V$47604936/*aspel.cml.ui.layouts.root_layout_available.y*/, TYPE$86 V$47605000/*aspel.cml.ui.layouts.root_layout_available.width*/, TYPE$86 V$47605064/*aspel.cml.ui.layouts.root_layout_available.height*/)
{
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604872/*aspel.cml.ui.layouts.root_layout_available.x*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47604936/*aspel.cml.ui.layouts.root_layout_available.y*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$lor((CORE$lt(((V$47604744/*aspel.cml.ui.layouts.root_layout_available.preferred_width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$gt(((V$47604744/*aspel.cml.ui.layouts.root_layout_available.preferred_width*/)),((((TYPE$398*)((V$47604616/*aspel.cml.ui.layouts.root_layout_available.ui*/)))->m3)))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$398*)((V$47604616/*aspel.cml.ui.layouts.root_layout_available.ui*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47605000/*aspel.cml.ui.layouts.root_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47604744/*aspel.cml.ui.layouts.root_layout_available.preferred_width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47605000/*aspel.cml.ui.layouts.root_layout_available.width*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$lor((CORE$lt(((V$47604808/*aspel.cml.ui.layouts.root_layout_available.preferred_height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$gt(((V$47604808/*aspel.cml.ui.layouts.root_layout_available.preferred_height*/)),((((TYPE$398*)((V$47604616/*aspel.cml.ui.layouts.root_layout_available.ui*/)))->m4)))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$398*)((V$47604616/*aspel.cml.ui.layouts.root_layout_available.ui*/)))->m4));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47605064/*aspel.cml.ui.layouts.root_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47604808/*aspel.cml.ui.layouts.root_layout_available.preferred_height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47605064/*aspel.cml.ui.layouts.root_layout_available.height*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47852880/*aspel.cml.ui.layouts.root_layout_post*/(TYPE$397 V$47605128/*aspel.cml.ui.layouts.root_layout_post.ui*/, TYPE$7 V$47605192/*aspel.cml.ui.layouts.root_layout_post._stack_frame*/, TYPE$16 V$47605256/*aspel.cml.ui.layouts.root_layout_post.x*/, TYPE$16 V$47605320/*aspel.cml.ui.layouts.root_layout_post.y*/, TYPE$16 V$47605384/*aspel.cml.ui.layouts.root_layout_post.width*/, TYPE$16 V$47605448/*aspel.cml.ui.layouts.root_layout_post.height*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$401 V$47852960/*aspel.cml.ui.create_style_attribute*/(TYPE$169 V$47605832/*aspel.cml.ui.create_style_attribute.data_type*/, TYPE$5 V$47605896/*aspel.cml.ui.create_style_attribute.data_size*/)
{
    {
    TYPE$401 V$47605960/*aspel.cml.ui.create_style_attribute.attribute*/ = ([&]()->TYPE$401{
    TYPE$401 TEMP$RESULT;
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = ((ISOLATED$BASE.V$47605768/*aspel.cml.ui.style_array_size*/));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    { typedef TYPE$169 TEMP$TYPE;
      auto TEMP$VAL = (V$47605832/*aspel.cml.ui.create_style_attribute.data_type*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$169, TEMP$VAL); }
    { typedef TYPE$5 TEMP$TYPE;
      auto TEMP$VAL = (V$47605896/*aspel.cml.ui.create_style_attribute.data_size*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$5, TEMP$VAL); }
    return TEMP$RESULT;
}());
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47605896/*aspel.cml.ui.create_style_attribute.data_size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((ISOLATED$BASE.V$47605768/*aspel.cml.ui.style_array_size*/)));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$401 RET$VAL = (V$47605960/*aspel.cml.ui.create_style_attribute.attribute*/);
    return RET$VAL;
    }
    }
}

TYPE$16 V$47853040/*aspel.cml.ui.get_style_size*/(TYPE$397 V$47606728/*aspel.cml.ui.get_style_size.ui*/, TYPE$401 V$47606792/*aspel.cml.ui.get_style_size.attribute*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47606792/*aspel.cml.ui.get_style_size.attribute*/).m1)),(((CORE$TYPEID)(16)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(40)));
    TYPE$86 V$47606856/*aspel.cml.ui.get_style_size.source*/ = CORE$cast_regular(TYPE$86, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47606728/*aspel.cml.ui.get_style_size.ui*/)))->m16)), (CORE$U64)(((V$47606792/*aspel.cml.ui.get_style_size.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(41)))));
    {
    TYPE$16 RET$VAL = (*(TYPE$16*)((V$47606856/*aspel.cml.ui.get_style_size.source*/)));
    return RET$VAL;
    }
    }
}

TYPE$331 V$47853120/*aspel.cml.ui.get_style_dimensions*/(TYPE$397 V$47606920/*aspel.cml.ui.get_style_dimensions.ui*/, TYPE$401 V$47606984/*aspel.cml.ui.get_style_dimensions.attribute*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47606984/*aspel.cml.ui.get_style_dimensions.attribute*/).m1)),(((CORE$TYPEID)(331)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(47)));
    TYPE$428 V$47607048/*aspel.cml.ui.get_style_dimensions.source*/ = CORE$cast_regular(TYPE$428, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47606920/*aspel.cml.ui.get_style_dimensions.ui*/)))->m16)), (CORE$U64)(((V$47606984/*aspel.cml.ui.get_style_dimensions.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(48)))));
    {
    TYPE$331 RET$VAL = (*(TYPE$331*)((V$47607048/*aspel.cml.ui.get_style_dimensions.source*/)));
    return RET$VAL;
    }
    }
}

TYPE$420 V$47853200/*aspel.cml.ui.get_style_margins*/(TYPE$397 V$47607112/*aspel.cml.ui.get_style_margins.ui*/, TYPE$401 V$47607176/*aspel.cml.ui.get_style_margins.attribute*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47607176/*aspel.cml.ui.get_style_margins.attribute*/).m1)),(((CORE$TYPEID)(420)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(54)));
    TYPE$429 V$47607240/*aspel.cml.ui.get_style_margins.source*/ = CORE$cast_regular(TYPE$429, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47607112/*aspel.cml.ui.get_style_margins.ui*/)))->m16)), (CORE$U64)(((V$47607176/*aspel.cml.ui.get_style_margins.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(55)))));
    {
    TYPE$420 RET$VAL = (*(TYPE$420*)((V$47607240/*aspel.cml.ui.get_style_margins.source*/)));
    return RET$VAL;
    }
    }
}

TYPE$407 V$47853280/*aspel.cml.ui.get_style_color*/(TYPE$397 V$47607304/*aspel.cml.ui.get_style_color.ui*/, TYPE$401 V$47607368/*aspel.cml.ui.get_style_color.attribute*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47607368/*aspel.cml.ui.get_style_color.attribute*/).m1)),(((CORE$TYPEID)(407)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(61)));
    TYPE$430 V$47607432/*aspel.cml.ui.get_style_color.source*/ = CORE$cast_regular(TYPE$430, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47607304/*aspel.cml.ui.get_style_color.ui*/)))->m16)), (CORE$U64)(((V$47607368/*aspel.cml.ui.get_style_color.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(62)))));
    {
    TYPE$407 RET$VAL = (*(TYPE$407*)((V$47607432/*aspel.cml.ui.get_style_color.source*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47853360/*aspel.cml.ui.set_style*/(TYPE$397 V$47607496/*aspel.cml.ui.set_style.ui*/, TYPE$401 V$47607560/*aspel.cml.ui.set_style.attribute*/, TYPE$16 V$47607624/*aspel.cml.ui.set_style.value*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47607560/*aspel.cml.ui.set_style.attribute*/).m1)),(((CORE$TYPEID)(16)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(69)));
    TYPE$86 V$47607688/*aspel.cml.ui.set_style.destination*/ = CORE$cast_regular(TYPE$86, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47607496/*aspel.cml.ui.set_style.ui*/)))->m16)), (CORE$U64)(((V$47607560/*aspel.cml.ui.set_style.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(70)))));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47607624/*aspel.cml.ui.set_style.value*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$16*)((V$47607688/*aspel.cml.ui.set_style.destination*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47853440/*aspel.cml.ui.set_style*/(TYPE$397 V$47607752/*aspel.cml.ui.set_style.ui*/, TYPE$401 V$47607816/*aspel.cml.ui.set_style.attribute*/, TYPE$331 V$47607880/*aspel.cml.ui.set_style.value*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47607816/*aspel.cml.ui.set_style.attribute*/).m1)),(((CORE$TYPEID)(331)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(77)));
    TYPE$428 V$47607944/*aspel.cml.ui.set_style.destination*/ = CORE$cast_regular(TYPE$428, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47607752/*aspel.cml.ui.set_style.ui*/)))->m16)), (CORE$U64)(((V$47607816/*aspel.cml.ui.set_style.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(78)))));
    {
    typedef TYPE$331 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47607880/*aspel.cml.ui.set_style.value*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$331*)((V$47607944/*aspel.cml.ui.set_style.destination*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$331, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47853520/*aspel.cml.ui.set_style*/(TYPE$397 V$47608008/*aspel.cml.ui.set_style.ui*/, TYPE$401 V$47608072/*aspel.cml.ui.set_style.attribute*/, TYPE$420 V$47608136/*aspel.cml.ui.set_style.value*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47608072/*aspel.cml.ui.set_style.attribute*/).m1)),(((CORE$TYPEID)(420)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(85)));
    TYPE$429 V$47608200/*aspel.cml.ui.set_style.destination*/ = CORE$cast_regular(TYPE$429, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47608008/*aspel.cml.ui.set_style.ui*/)))->m16)), (CORE$U64)(((V$47608072/*aspel.cml.ui.set_style.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(86)))));
    {
    typedef TYPE$420 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47608136/*aspel.cml.ui.set_style.value*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$420*)((V$47608200/*aspel.cml.ui.set_style.destination*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$420, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47853600/*aspel.cml.ui.set_style*/(TYPE$397 V$47608264/*aspel.cml.ui.set_style.ui*/, TYPE$401 V$47608328/*aspel.cml.ui.set_style.attribute*/, TYPE$407 V$47608392/*aspel.cml.ui.set_style.value*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((((V$47608328/*aspel.cml.ui.set_style.attribute*/).m1)),(((CORE$TYPEID)(407)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(93)));
    TYPE$430 V$47608456/*aspel.cml.ui.set_style.destination*/ = CORE$cast_regular(TYPE$430, ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47608264/*aspel.cml.ui.set_style.ui*/)))->m16)), (CORE$U64)(((V$47608328/*aspel.cml.ui.set_style.attribute*/).m0)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x73\x74\x79\x6C\x65\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(94)))));
    {
    typedef TYPE$407 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47608392/*aspel.cml.ui.set_style.value*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$407*)((V$47608456/*aspel.cml.ui.set_style.destination*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$407, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47853680/*aspel.cml.ui.load_default_style*/(TYPE$397 V$47608520/*aspel.cml.ui.load_default_style.ui*/)
{
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47608520/*aspel.cml.ui.load_default_style.ui*/)))->m18));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$16))(((CORE$DELEGATE)V$47853360/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606024/*aspel.cml.ui.STYLE_SIZE_PADDING_VERTICAL*/)), CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL)));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$16))(((CORE$DELEGATE)V$47853360/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606088/*aspel.cml.ui.STYLE_SIZE_PADDING_HORIZONTAL*/)), CORE$cast_regular(TYPE$16, (CORE$S64)(6ULL)));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$331))(((CORE$DELEGATE)V$47853440/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606152/*aspel.cml.ui.STYLE_DIMENSIONS_BUTTON*/)), ([&]()->TYPE$331{
    TYPE$331 TEMP$RESULT;
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(73ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(21ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$420))(((CORE$DELEGATE)V$47853520/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606216/*aspel.cml.ui.STYLE_MARGINS*/)), ([&]()->TYPE$420{
    TYPE$420 TEMP$RESULT;
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$420))(((CORE$DELEGATE)V$47853520/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606280/*aspel.cml.ui.STYLE_MARGINS_PANE*/)), ([&]()->TYPE$420{
    TYPE$420 TEMP$RESULT;
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(5ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$407))(((CORE$DELEGATE)V$47853600/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606344/*aspel.cml.ui.STYLE_COLOR_TEXT*/)), ([&]()->TYPE$407{
    TYPE$407 TEMP$RESULT;
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$407))(((CORE$DELEGATE)V$47853600/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606408/*aspel.cml.ui.STYLE_COLOR_TEXT_FOCUS*/)), ([&]()->TYPE$407{
    TYPE$407 TEMP$RESULT;
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$407))(((CORE$DELEGATE)V$47853600/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606472/*aspel.cml.ui.STYLE_COLOR_BORDER*/)), ([&]()->TYPE$407{
    TYPE$407 TEMP$RESULT;
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$407))(((CORE$DELEGATE)V$47853600/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606536/*aspel.cml.ui.STYLE_COLOR_BUTTON*/)), ([&]()->TYPE$407{
    TYPE$407 TEMP$RESULT;
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$407))(((CORE$DELEGATE)V$47853600/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606600/*aspel.cml.ui.STYLE_COLOR_BUTTON_HOT*/)), ([&]()->TYPE$407{
    TYPE$407 TEMP$RESULT;
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(229ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(229ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(229ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    ((TYPE$8(*)(TYPE$397,TYPE$401,TYPE$407))(((CORE$DELEGATE)V$47853600/*aspel.cml.ui.set_style*/)))((V$47608520/*aspel.cml.ui.load_default_style.ui*/), ((ISOLATED$BASE.V$47606664/*aspel.cml.ui.STYLE_COLOR_BUTTON_FOCUS*/)), ([&]()->TYPE$407{
    TYPE$407 TEMP$RESULT;
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(232ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(17ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(35ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    { typedef TYPE$2 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$2, (CORE$S64)(255ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$2, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    }
}

TYPE$6 V$47853760/*aspel.cml.ui.allocate_layout_stack_space*/(TYPE$397 V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/, TYPE$5 V$47609608/*aspel.cml.ui.allocate_layout_stack_space.stack_frame_size*/)
{
    {
    TYPE$5 V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/ = ((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m14).n);
    if (CORE$lor((CORE$eq((CORE$cast_array_to_ptr((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m14))),(CORE$null_pointer))),(CORE$eq((CORE$cast_regular(TYPE$4, (V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/))),((CORE$S64)(0ULL)))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(64ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    while (CORE$gt((CORE$add(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m15)),((V$47609608/*aspel.cml.ui.allocate_layout_stack_space.stack_frame_size*/)))),((V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/)),(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m14).n)))) {
    {
    TYPE$1 V$47609736/*aspel.cml.ui.allocate_layout_stack_space..new_stack_frame_array*/ = CORE$NEWARRINIT((CORE$U64)((V$47609672/*aspel.cml.ui.allocate_layout_stack_space.new_stack_frame_array_size*/)), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$47609736/*aspel.cml.ui.allocate_layout_stack_space..new_stack_frame_array*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 V$47609800/*aspel.cml.ui.allocate_layout_stack_space...i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m15)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47609800/*aspel.cml.ui.allocate_layout_stack_space...i*/ -= FOREACH$STEP;
    while ((V$47609800/*aspel.cml.ui.allocate_layout_stack_space...i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m14)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47609800/*aspel.cml.ui.allocate_layout_stack_space...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(46)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$2, ((V$47609736/*aspel.cml.ui.allocate_layout_stack_space..new_stack_frame_array*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47609800/*aspel.cml.ui.allocate_layout_stack_space...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(46)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    CORE$DEL((void*)(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m14)).a));    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47609736/*aspel.cml.ui.allocate_layout_stack_space..new_stack_frame_array*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m14));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    TYPE$5 V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/ = ((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m12).n);
    if (CORE$lor((CORE$eq((CORE$cast_array_to_ptr((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m12))),(CORE$null_pointer))),(CORE$eq((CORE$cast_regular(TYPE$4, (V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/))),((CORE$S64)(0ULL)))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(8ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    while (CORE$ge(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m15)),((V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/)),(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m12).n)))) {
    {
    TYPE$437 V$47609928/*aspel.cml.ui.allocate_layout_stack_space..new_stack_array*/ = CORE$NEWARRINIT((CORE$U64)((V$47609864/*aspel.cml.ui.allocate_layout_stack_space.new_stack_size*/)), (CORE$U64)(56), [] (void* data) {
    typedef TYPE$435 type;
    type* val = (type*) data;
    {
    {
    { (((((*val).m0)).m0)) = (0); }
    { (((((*val).m0)).m1)) = (0); }
    { (((((*val).m0)).m2)) = (0); }
    { (((((*val).m0)).m3)) = (0); }
    { (((((*val).m0)).m4)) = (0); }
    { (((((*val).m0)).m5)) = (0); }
}
    { (((*val).m1)) = (0); }
}
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$47609928/*aspel.cml.ui.allocate_layout_stack_space..new_stack_array*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 V$47609992/*aspel.cml.ui.allocate_layout_stack_space...i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$47609992/*aspel.cml.ui.allocate_layout_stack_space...i*/ -= FOREACH$STEP;
    while ((V$47609992/*aspel.cml.ui.allocate_layout_stack_space...i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$435 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m12)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47609992/*aspel.cml.ui.allocate_layout_stack_space...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(66)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$435, ((V$47609928/*aspel.cml.ui.allocate_layout_stack_space..new_stack_array*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$47609992/*aspel.cml.ui.allocate_layout_stack_space...i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(66)));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$435, TEMP$VAL0);
    }
    }
    }
    }
    CORE$DEL((void*)(((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m12)).a));    {
    typedef TYPE$437 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47609928/*aspel.cml.ui.allocate_layout_stack_space..new_stack_array*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47609544/*aspel.cml.ui.allocate_layout_stack_space.ui*/)))->m12));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$7 V$47853840/*aspel.cml.ui.push_layout*/(TYPE$397 V$47610056/*aspel.cml.ui.push_layout.ui*/, TYPE$412 V$47610120/*aspel.cml.ui.push_layout.layout*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$5))(((CORE$DELEGATE)V$47853760/*aspel.cml.ui.allocate_layout_stack_space*/)))((V$47610056/*aspel.cml.ui.push_layout.ui*/), ((V$47610120/*aspel.cml.ui.push_layout.layout*/).m5))))) {
    {
    {
    TYPE$7 RET$VAL = CORE$null_pointer;
    return RET$VAL;
    }
    }
    }
    TYPE$438 V$47610184/*aspel.cml.ui.push_layout.layout_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47610056/*aspel.cml.ui.push_layout.ui*/)))->m12)), (CORE$U64)((((TYPE$398*)((V$47610056/*aspel.cml.ui.push_layout.ui*/)))->m13)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(80))));
    {
    typedef TYPE$412 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47610120/*aspel.cml.ui.push_layout.layout*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$435*)((V$47610184/*aspel.cml.ui.push_layout.layout_frame*/)))->m0));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$412, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$398*)((V$47610056/*aspel.cml.ui.push_layout.ui*/)))->m15));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$435*)((V$47610184/*aspel.cml.ui.push_layout.layout_frame*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    TYPE$10 V$47610248/*aspel.cml.ui.push_layout.stack_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47610056/*aspel.cml.ui.push_layout.ui*/)))->m14)), (CORE$U64)((((TYPE$435*)((V$47610184/*aspel.cml.ui.push_layout.layout_frame*/)))->m1)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(84))));
    if (CORE$ne((((V$47610120/*aspel.cml.ui.push_layout.layout*/).m0)),(CORE$null_delegate))) {
    {
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$7))(((V$47610120/*aspel.cml.ui.push_layout.layout*/).m0)))((V$47610056/*aspel.cml.ui.push_layout.ui*/), CORE$cast_regular(TYPE$7, (V$47610248/*aspel.cml.ui.push_layout.stack_frame*/)))))) {
    {
    {
    TYPE$7 RET$VAL = CORE$null_pointer;
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47610056/*aspel.cml.ui.push_layout.ui*/)))->m13));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$47610120/*aspel.cml.ui.push_layout.layout*/).m5));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47610056/*aspel.cml.ui.push_layout.ui*/)))->m15));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, (V$47610248/*aspel.cml.ui.push_layout.stack_frame*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47853920/*aspel.cml.ui.pop_layout*/(TYPE$397 V$47610312/*aspel.cml.ui.pop_layout.ui*/)
{
    {
    TYPE$438 V$47610376/*aspel.cml.ui.pop_layout.layout_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m12)), (CORE$U64)(CORE$sub(((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(98))));
    TYPE$10 V$47610440/*aspel.cml.ui.pop_layout.stack_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m14)), (CORE$U64)((((TYPE$435*)((V$47610376/*aspel.cml.ui.pop_layout.layout_frame*/)))->m1)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(99))));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m13));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m12)), (CORE$U64)((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m13)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(102)).m1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47610312/*aspel.cml.ui.pop_layout.ui*/)))->m15));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$ne((((((TYPE$435*)((V$47610376/*aspel.cml.ui.pop_layout.layout_frame*/)))->m0).m1)),(CORE$null_delegate))) {
    {
    if ((!(((TYPE$6(*)(TYPE$397,TYPE$7))(((((TYPE$435*)((V$47610376/*aspel.cml.ui.pop_layout.layout_frame*/)))->m0).m1)))((V$47610312/*aspel.cml.ui.pop_layout.ui*/), CORE$cast_regular(TYPE$7, (V$47610440/*aspel.cml.ui.pop_layout.stack_frame*/)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47854000/*aspel.cml.ui.layout*/(TYPE$397 V$47610504/*aspel.cml.ui.layout.ui*/, TYPE$16 V$47610568/*aspel.cml.ui.layout.preferred_width*/, TYPE$16 V$47610632/*aspel.cml.ui.layout.preferred_height*/, TYPE$86 V$47610696/*aspel.cml.ui.layout.x*/, TYPE$86 V$47610760/*aspel.cml.ui.layout.y*/, TYPE$86 V$47610824/*aspel.cml.ui.layout.width*/, TYPE$86 V$47610888/*aspel.cml.ui.layout.height*/)
{
    {
    TYPE$438 V$47610952/*aspel.cml.ui.layout.layout_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47610504/*aspel.cml.ui.layout.ui*/)))->m12)), (CORE$U64)(CORE$sub(((((TYPE$398*)((V$47610504/*aspel.cml.ui.layout.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(115))));
    TYPE$10 V$47611016/*aspel.cml.ui.layout.stack_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47610504/*aspel.cml.ui.layout.ui*/)))->m14)), (CORE$U64)((((TYPE$435*)((V$47610952/*aspel.cml.ui.layout.layout_frame*/)))->m1)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(116))));
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$397,TYPE$7,TYPE$16,TYPE$16,TYPE$86,TYPE$86,TYPE$86,TYPE$86))(((((TYPE$435*)((V$47610952/*aspel.cml.ui.layout.layout_frame*/)))->m0).m2)))((V$47610504/*aspel.cml.ui.layout.ui*/), CORE$cast_regular(TYPE$7, (V$47611016/*aspel.cml.ui.layout.stack_frame*/)), (V$47610568/*aspel.cml.ui.layout.preferred_width*/), (V$47610632/*aspel.cml.ui.layout.preferred_height*/), (V$47610696/*aspel.cml.ui.layout.x*/), (V$47610760/*aspel.cml.ui.layout.y*/), (V$47610824/*aspel.cml.ui.layout.width*/), (V$47610888/*aspel.cml.ui.layout.height*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47854080/*aspel.cml.ui.layout_available*/(TYPE$397 V$47611080/*aspel.cml.ui.layout_available.ui*/, TYPE$16 V$47611144/*aspel.cml.ui.layout_available.preferred_width*/, TYPE$16 V$47611208/*aspel.cml.ui.layout_available.preferred_height*/, TYPE$86 V$47611272/*aspel.cml.ui.layout_available.x*/, TYPE$86 V$47611336/*aspel.cml.ui.layout_available.y*/, TYPE$86 V$47611400/*aspel.cml.ui.layout_available.width*/, TYPE$86 V$47611464/*aspel.cml.ui.layout_available.height*/)
{
    {
    TYPE$438 V$47611528/*aspel.cml.ui.layout_available.layout_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47611080/*aspel.cml.ui.layout_available.ui*/)))->m12)), (CORE$U64)(CORE$sub(((((TYPE$398*)((V$47611080/*aspel.cml.ui.layout_available.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(126))));
    TYPE$10 V$47611592/*aspel.cml.ui.layout_available.stack_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47611080/*aspel.cml.ui.layout_available.ui*/)))->m14)), (CORE$U64)((((TYPE$435*)((V$47611528/*aspel.cml.ui.layout_available.layout_frame*/)))->m1)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(127))));
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$397,TYPE$7,TYPE$16,TYPE$16,TYPE$86,TYPE$86,TYPE$86,TYPE$86))(((((TYPE$435*)((V$47611528/*aspel.cml.ui.layout_available.layout_frame*/)))->m0).m3)))((V$47611080/*aspel.cml.ui.layout_available.ui*/), CORE$cast_regular(TYPE$7, (V$47611592/*aspel.cml.ui.layout_available.stack_frame*/)), (V$47611144/*aspel.cml.ui.layout_available.preferred_width*/), (V$47611208/*aspel.cml.ui.layout_available.preferred_height*/), (V$47611272/*aspel.cml.ui.layout_available.x*/), (V$47611336/*aspel.cml.ui.layout_available.y*/), (V$47611400/*aspel.cml.ui.layout_available.width*/), (V$47611464/*aspel.cml.ui.layout_available.height*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47854160/*aspel.cml.ui.layout_post*/(TYPE$397 V$47611656/*aspel.cml.ui.layout_post.ui*/, TYPE$16 V$47611720/*aspel.cml.ui.layout_post.x*/, TYPE$16 V$47611784/*aspel.cml.ui.layout_post.y*/, TYPE$16 V$47611848/*aspel.cml.ui.layout_post.width*/, TYPE$16 V$47611912/*aspel.cml.ui.layout_post.height*/)
{
    {
    TYPE$438 V$47611976/*aspel.cml.ui.layout_post.layout_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$435, ((((TYPE$398*)((V$47611656/*aspel.cml.ui.layout_post.ui*/)))->m12)), (CORE$U64)(CORE$sub(((((TYPE$398*)((V$47611656/*aspel.cml.ui.layout_post.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(135))));
    TYPE$10 V$47612040/*aspel.cml.ui.layout_post.stack_frame*/ = ((CORE$PTR) &(CORE$ABC(TYPE$2, ((((TYPE$398*)((V$47611656/*aspel.cml.ui.layout_post.ui*/)))->m14)), (CORE$U64)((((TYPE$435*)((V$47611976/*aspel.cml.ui.layout_post.layout_frame*/)))->m1)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x6C\x61\x79\x6F\x75\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(136))));
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$397,TYPE$7,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((((TYPE$435*)((V$47611976/*aspel.cml.ui.layout_post.layout_frame*/)))->m0).m4)))((V$47611656/*aspel.cml.ui.layout_post.ui*/), CORE$cast_regular(TYPE$7, (V$47612040/*aspel.cml.ui.layout_post.stack_frame*/)), (V$47611720/*aspel.cml.ui.layout_post.x*/), (V$47611784/*aspel.cml.ui.layout_post.y*/), (V$47611848/*aspel.cml.ui.layout_post.width*/), (V$47611912/*aspel.cml.ui.layout_post.height*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47854240/*aspel.cml.ui.is_hot*/(TYPE$397 V$47612360/*aspel.cml.ui.is_hot.ui*/, TYPE$191 V$47612424/*aspel.cml.ui.is_hot.widget*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$land((CORE$eq((((((TYPE$398*)((V$47612360/*aspel.cml.ui.is_hot.ui*/)))->m5).m0)),(((V$47612424/*aspel.cml.ui.is_hot.widget*/).m0)))),(CORE$eq((((((TYPE$398*)((V$47612360/*aspel.cml.ui.is_hot.ui*/)))->m5).m1)),(((V$47612424/*aspel.cml.ui.is_hot.widget*/).m1)))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47854320/*aspel.cml.ui.set_hot*/(TYPE$397 V$47612488/*aspel.cml.ui.set_hot.ui*/, TYPE$191 V$47612552/*aspel.cml.ui.set_hot.widget*/)
{
    {
    {
    typedef TYPE$191 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47612552/*aspel.cml.ui.set_hot.widget*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47612488/*aspel.cml.ui.set_hot.ui*/)))->m5));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$191, TEMP$VAL0);
    }
    }
}

TYPE$8 V$47854400/*aspel.cml.ui.clear_hot*/(TYPE$397 V$47612616/*aspel.cml.ui.clear_hot.ui*/)
{
    {
    {
    typedef TYPE$191 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$47612104/*aspel.cml.ui.WIDGET_NONE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47612616/*aspel.cml.ui.clear_hot.ui*/)))->m5));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$191, TEMP$VAL0);
    }
    }
}

TYPE$6 V$47854480/*aspel.cml.ui.has_focus*/(TYPE$397 V$47612680/*aspel.cml.ui.has_focus.ui*/, TYPE$191 V$47612744/*aspel.cml.ui.has_focus.widget*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$land((CORE$eq((((((TYPE$398*)((V$47612680/*aspel.cml.ui.has_focus.ui*/)))->m6).m0)),(((V$47612744/*aspel.cml.ui.has_focus.widget*/).m0)))),(CORE$eq((((((TYPE$398*)((V$47612680/*aspel.cml.ui.has_focus.ui*/)))->m6).m1)),(((V$47612744/*aspel.cml.ui.has_focus.widget*/).m1)))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47854560/*aspel.cml.ui.require_focus*/(TYPE$397 V$47612808/*aspel.cml.ui.require_focus.ui*/, TYPE$191 V$47612872/*aspel.cml.ui.require_focus.widget*/)
{
    {
    if (CORE$ne((((((TYPE$398*)((V$47612808/*aspel.cml.ui.require_focus.ui*/)))->m6).m0)),((((ISOLATED$BASE.V$47612104/*aspel.cml.ui.WIDGET_NONE*/)).m0)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((((TYPE$398*)((V$47612808/*aspel.cml.ui.require_focus.ui*/)))->m6).m1)),((((ISOLATED$BASE.V$47612104/*aspel.cml.ui.WIDGET_NONE*/)).m1)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47612808/*aspel.cml.ui.require_focus.ui*/)))->m7));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$191 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$47612872/*aspel.cml.ui.require_focus.widget*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47612808/*aspel.cml.ui.require_focus.ui*/)))->m6));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$191, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47854640/*aspel.cml.ui.retain_focus*/(TYPE$397 V$47612936/*aspel.cml.ui.retain_focus.ui*/)
{
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47612936/*aspel.cml.ui.retain_focus.ui*/)))->m7));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$8 V$47854720/*aspel.cml.ui.clear_focus*/(TYPE$397 V$47613000/*aspel.cml.ui.clear_focus.ui*/)
{
    {
    {
    typedef TYPE$191 TEMP$TYPE0;
    auto TEMP$VAL0 = (((ISOLATED$BASE.V$47612104/*aspel.cml.ui.WIDGET_NONE*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47613000/*aspel.cml.ui.clear_focus.ui*/)))->m6));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$191, TEMP$VAL0);
    }
    }
}

TYPE$6 V$47854800/*aspel.cml.ui.initialize_ui*/(TYPE$397 V$47614344/*aspel.cml.ui.initialize_ui.ui*/)
{
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARRINIT((CORE$U64)(((ISOLATED$BASE.V$47605768/*aspel.cml.ui.style_array_size*/))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47614344/*aspel.cml.ui.initialize_ui.ui*/)))->m16));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    if (CORE$eq((CORE$cast_array_to_ptr((((TYPE$398*)((V$47614344/*aspel.cml.ui.initialize_ui.ui*/)))->m16))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$397))(((CORE$DELEGATE)V$47853680/*aspel.cml.ui.load_default_style*/)))((V$47614344/*aspel.cml.ui.initialize_ui.ui*/));
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47854880/*aspel.cml.ui.begin_frame*/(TYPE$397 V$47614408/*aspel.cml.ui.begin_frame.ui*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((((TYPE$398*)((V$47614408/*aspel.cml.ui.begin_frame.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x75\x69\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(47)));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((((TYPE$398*)((V$47614408/*aspel.cml.ui.begin_frame.ui*/)))->m15)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x75\x69\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(48)));
    CORE$ASSERT(((CORE$BOOL)(CORE$ne((((TYPE$7(*)(TYPE$397,TYPE$412))(((CORE$DELEGATE)V$47853840/*aspel.cml.ui.push_layout*/)))((V$47614408/*aspel.cml.ui.begin_frame.ui*/), ((ISOLATED$BASE.V$47604040/*aspel.cml.ui.layouts.ROOT_LAYOUT*/)))),(CORE$null_pointer)))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D87058_OFF],(CORE$U64) SHARED$STR_2D87058_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x75\x69\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(50)));
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$398*)((V$47614408/*aspel.cml.ui.begin_frame.ui*/)))->m7));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
}

TYPE$8 V$47854960/*aspel.cml.ui.end_frame*/(TYPE$397 V$47614472/*aspel.cml.ui.end_frame.ui*/)
{
    {
    if ((!((((TYPE$398*)((V$47614472/*aspel.cml.ui.end_frame.ui*/)))->m7)))) {
    {
    ((TYPE$8(*)(TYPE$397))(((CORE$DELEGATE)V$47854720/*aspel.cml.ui.clear_focus*/)))((V$47614472/*aspel.cml.ui.end_frame.ui*/));
    }
    }
    CORE$ASSERT(((CORE$BOOL)(((TYPE$6(*)(TYPE$397))(((CORE$DELEGATE)V$47853920/*aspel.cml.ui.pop_layout*/)))((V$47614472/*aspel.cml.ui.end_frame.ui*/)))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D871D8_OFF],(CORE$U64) SHARED$STR_2D871D8_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x75\x69\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(60)));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((((TYPE$398*)((V$47614472/*aspel.cml.ui.end_frame.ui*/)))->m13)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x75\x69\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(62)));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((((TYPE$398*)((V$47614472/*aspel.cml.ui.end_frame.ui*/)))->m15)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x75\x69\\\x75\x69\x5F\x63\x6F\x6E\x74\x65\x78\x74\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(63)));
    }
}

TYPE$6 V$47855040/*aspel.cml.event.poll_event*/(TYPE$447 V$50349720/*aspel.cml.event.poll_event.event*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47855360/*aspel.cml.event.SDL_PollEvent*/)))(CORE$cast_regular(TYPE$19, (V$50349720/*aspel.cml.event.poll_event.event*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47855120/*aspel.cml.event.wait_event*/(TYPE$447 V$50349784/*aspel.cml.event.wait_event.event*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47855440/*aspel.cml.event.SDL_WaitEvent*/)))(CORE$cast_regular(TYPE$19, (V$50349784/*aspel.cml.event.wait_event.event*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47855200/*aspel.cml.event.wait_event_timeout*/(TYPE$447 V$50349848/*aspel.cml.event.wait_event_timeout.event*/, TYPE$16 V$50349912/*aspel.cml.event.wait_event_timeout.timeout*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47855520/*aspel.cml.event.SDL_WaitEventTimeout*/)))(CORE$cast_regular(TYPE$19, (V$50349848/*aspel.cml.event.wait_event_timeout.event*/)), (V$50349912/*aspel.cml.event.wait_event_timeout.timeout*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47855280/*aspel.cml.event.push_event*/(TYPE$447 V$50349976/*aspel.cml.event.push_event.event*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47855600/*aspel.cml.event.SDL_PushEvent*/)))(CORE$cast_regular(TYPE$19, (V$50349976/*aspel.cml.event.push_event.event*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$454 V$47855680/*aspel.cml.video.image.create_image*/(TYPE$16 V$50350680/*aspel.cml.video.image.create_image.width*/, TYPE$16 V$50350744/*aspel.cml.video.image.create_image.height*/, TYPE$16 V$50350808/*aspel.cml.video.image.create_image.components*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$land((CORE$ge(((V$50350808/*aspel.cml.video.image.create_image.components*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL))))),(CORE$le(((V$50350808/*aspel.cml.video.image.create_image.components*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL)))))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D8A418_OFF],(CORE$U64) SHARED$STR_2D8A418_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x69\x6D\x61\x67\x65\\\x69\x6D\x61\x67\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(53)));
    CORE$ASSERT(((CORE$BOOL)(CORE$ge(((V$50350680/*aspel.cml.video.image.create_image.width*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D8A478_OFF],(CORE$U64) SHARED$STR_2D8A478_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x69\x6D\x61\x67\x65\\\x69\x6D\x61\x67\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(54)));
    CORE$ASSERT(((CORE$BOOL)(CORE$ge(((V$50350744/*aspel.cml.video.image.create_image.height*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D8A4D8_OFF],(CORE$U64) SHARED$STR_2D8A4D8_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x69\x6D\x61\x67\x65\\\x69\x6D\x61\x67\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(55)));
    TYPE$454 V$50350872/*aspel.cml.video.image.create_image.image*/ = (CORE$PTR)(CORE$NEWINIT(24, [&] (void* data) {
    typedef TYPE$452 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
}
}));
    if (CORE$eq(((V$50350872/*aspel.cml.video.image.create_image.image*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$454 RET$VAL = CORE$cast_regular(TYPE$454, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_array_to_ptr(CORE$NEWARR((CORE$U64)(CORE$cast_regular(TYPE$5, CORE$mul((CORE$mul((CORE$cast_regular(TYPE$4, (V$50350680/*aspel.cml.video.image.create_image.width*/))),(CORE$cast_regular(TYPE$4, (V$50350744/*aspel.cml.video.image.create_image.height*/))))),(CORE$cast_regular(TYPE$4, (V$50350808/*aspel.cml.video.image.create_image.components*/)))))), (CORE$U64)(1))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50350872/*aspel.cml.video.image.create_image.image*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    if (CORE$eq(((((TYPE$452*)((V$50350872/*aspel.cml.video.image.create_image.image*/)))->m4)),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((V$50350872/*aspel.cml.video.image.create_image.image*/))));    {
    TYPE$454 RET$VAL = CORE$cast_regular(TYPE$454, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50350680/*aspel.cml.video.image.create_image.width*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50350872/*aspel.cml.video.image.create_image.image*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50350744/*aspel.cml.video.image.create_image.height*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50350872/*aspel.cml.video.image.create_image.image*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50350808/*aspel.cml.video.image.create_image.components*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50350872/*aspel.cml.video.image.create_image.image*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50350872/*aspel.cml.video.image.create_image.image*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    TYPE$454 RET$VAL = (V$50350872/*aspel.cml.video.image.create_image.image*/);
    return RET$VAL;
    }
    }
}

TYPE$454 V$47855760/*aspel.cml.video.image.read_image*/(TYPE$153 V$50350936/*aspel.cml.video.image.read_image.stream*/, TYPE$16 V$50351000/*aspel.cml.video.image.read_image.required_components*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$land((CORE$ge(((V$50351000/*aspel.cml.video.image.read_image.required_components*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$le(((V$50351000/*aspel.cml.video.image.read_image.required_components*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(4ULL)))))))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_2D8A7F8_OFF],(CORE$U64) SHARED$STR_2D8A7F8_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x69\x6D\x61\x67\x65\\\x69\x6D\x61\x67\x65\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(108)));
    TYPE$454 V$50351064/*aspel.cml.video.image.read_image.image*/ = (CORE$PTR)(CORE$NEWINIT(24, [&] (void* data) {
    typedef TYPE$452 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
}
}));
    if (CORE$eq(((V$50351064/*aspel.cml.video.image.read_image.image*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$454 RET$VAL = CORE$cast_regular(TYPE$454, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$10(*)(TYPE$153,TYPE$86,TYPE$86,TYPE$86,TYPE$16))(((CORE$DELEGATE)V$47856000/*aspel.cml.video.image.aspel_cml_video_image_read*/)))((V$50350936/*aspel.cml.video.image.read_image.stream*/), ((CORE$PTR) &((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m0))), ((CORE$PTR) &((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m1))), ((CORE$PTR) &((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m3))), (V$50351000/*aspel.cml.video.image.read_image.required_components*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    if (CORE$eq(((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m4)),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((V$50351064/*aspel.cml.video.image.read_image.image*/))));    {
    TYPE$454 RET$VAL = CORE$cast_regular(TYPE$454, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((V$50351000/*aspel.cml.video.image.read_image.required_components*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50351000/*aspel.cml.video.image.read_image.required_components*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$452*)((V$50351064/*aspel.cml.video.image.read_image.image*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$454 RET$VAL = (V$50351064/*aspel.cml.video.image.read_image.image*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47855840/*aspel.cml.video.image.read_image_info*/(TYPE$153 V$50351128/*aspel.cml.video.image.read_image_info.stream*/, TYPE$458 V$50351192/*aspel.cml.video.image.read_image_info.info*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153,TYPE$86,TYPE$86,TYPE$86))(((CORE$DELEGATE)V$47856080/*aspel.cml.video.image.aspel_cml_video_image_read_info*/)))((V$50351128/*aspel.cml.video.image.read_image_info.stream*/), ((CORE$PTR) &((((TYPE$451*)((V$50351192/*aspel.cml.video.image.read_image_info.info*/)))->m0))), ((CORE$PTR) &((((TYPE$451*)((V$50351192/*aspel.cml.video.image.read_image_info.info*/)))->m1))), ((CORE$PTR) &((((TYPE$451*)((V$50351192/*aspel.cml.video.image.read_image_info.info*/)))->m2))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47855920/*aspel.cml.video.image.destroy_image*/(TYPE$454 V$50351256/*aspel.cml.video.image.destroy_image.image*/)
{
    {
    if (CORE$ne(((V$50351256/*aspel.cml.video.image.destroy_image.image*/)),(CORE$null_pointer))) {
    {
    if (CORE$ne(((((TYPE$452*)((V$50351256/*aspel.cml.video.image.destroy_image.image*/)))->m4)),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$452*)((V$50351256/*aspel.cml.video.image.destroy_image.image*/)))->m4))));    }
    }
    CORE$DEL((void*)(((V$50351256/*aspel.cml.video.image.destroy_image.image*/))));    }
    }
    }
}

TYPE$16 V$47856160/*aspel.cml.video.font.glyph_data_comparator*/(TYPE$7 V$50352152/*aspel.cml.video.font.glyph_data_comparator.va*/, TYPE$7 V$50352216/*aspel.cml.video.font.glyph_data_comparator.vb*/)
{
    {
    TYPE$470 V$50352280/*aspel.cml.video.font.glyph_data_comparator.a*/ = CORE$cast_regular(TYPE$470, (V$50352152/*aspel.cml.video.font.glyph_data_comparator.va*/));
    TYPE$470 V$50352344/*aspel.cml.video.font.glyph_data_comparator.b*/ = CORE$cast_regular(TYPE$470, (V$50352216/*aspel.cml.video.font.glyph_data_comparator.vb*/));
    if (CORE$lt(((((TYPE$466*)((V$50352280/*aspel.cml.video.font.glyph_data_comparator.a*/)))->m1)),((((TYPE$466*)((V$50352344/*aspel.cml.video.font.glyph_data_comparator.b*/)))->m1)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((((TYPE$466*)((V$50352280/*aspel.cml.video.font.glyph_data_comparator.a*/)))->m1)),((((TYPE$466*)((V$50352344/*aspel.cml.video.font.glyph_data_comparator.b*/)))->m1)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    if (CORE$lt(((((TYPE$466*)((V$50352280/*aspel.cml.video.font.glyph_data_comparator.a*/)))->m0)),((((TYPE$466*)((V$50352344/*aspel.cml.video.font.glyph_data_comparator.b*/)))->m0)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    if (CORE$gt(((((TYPE$466*)((V$50352280/*aspel.cml.video.font.glyph_data_comparator.a*/)))->m0)),((((TYPE$466*)((V$50352344/*aspel.cml.video.font.glyph_data_comparator.b*/)))->m0)))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47856240/*aspel.cml.video.font.get_font_offset*/(TYPE$10 V$50353560/*aspel.cml.video.font.get_font_offset.truetype*/, TYPE$16 V$50353624/*aspel.cml.video.font.get_font_offset.index*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47857360/*aspel.cml.video.font.stbtt_get_font_offset_for_index*/)))(CORE$cast_regular(TYPE$19, (V$50353560/*aspel.cml.video.font.get_font_offset.truetype*/)), (V$50353624/*aspel.cml.video.font.get_font_offset.index*/));
    return RET$VAL;
    }
    }
}

TYPE$474 V$47856320/*aspel.cml.video.font.create_font*/(TYPE$10 V$50353688/*aspel.cml.video.font.create_font.truetype*/, TYPE$16 V$50353752/*aspel.cml.video.font.create_font.offset*/)
{
    {
    TYPE$474 V$50353816/*aspel.cml.video.font.create_font.font*/ = (CORE$PTR)(CORE$NEW(156));
    if (CORE$eq(((V$50353816/*aspel.cml.video.font.create_font.font*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$474 RET$VAL = CORE$cast_regular(TYPE$474, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47857440/*aspel.cml.video.font.stbtt_init_font*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50353816/*aspel.cml.video.font.create_font.font*/)))->m0)))), CORE$cast_regular(TYPE$19, (V$50353688/*aspel.cml.video.font.create_font.truetype*/)), (V$50353752/*aspel.cml.video.font.create_font.offset*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    CORE$DEL((void*)(((V$50353816/*aspel.cml.video.font.create_font.font*/))));    {
    TYPE$474 RET$VAL = CORE$cast_regular(TYPE$474, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$463 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50353816/*aspel.cml.video.font.create_font.font*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$465 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50353816/*aspel.cml.video.font.create_font.font*/)))->m2));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50353816/*aspel.cml.video.font.create_font.font*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50353816/*aspel.cml.video.font.create_font.font*/)))->m4));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    TYPE$474 RET$VAL = (V$50353816/*aspel.cml.video.font.create_font.font*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47856400/*aspel.cml.video.font.destroy_font*/(TYPE$474 V$50353880/*aspel.cml.video.font.destroy_font.font*/)
{
    {
    if (CORE$eq(((V$50353880/*aspel.cml.video.font.destroy_font.font*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    TYPE$6 V$50353944/*aspel.cml.video.font.destroy_font.success*/ = CORE$true;
    if ((((TYPE$461*)((V$50353880/*aspel.cml.video.font.destroy_font.font*/)))->m4)) {
    {
    if ((!(((TYPE$6(*)(TYPE$474))(((CORE$DELEGATE)V$47856960/*aspel.cml.video.font.end_glyph_atlas*/)))((V$50353880/*aspel.cml.video.font.destroy_font.font*/))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50353944/*aspel.cml.video.font.destroy_font.success*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    }
    }
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$461*)((V$50353880/*aspel.cml.video.font.destroy_font.font*/)))->m1))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$461*)((V$50353880/*aspel.cml.video.font.destroy_font.font*/)))->m1)).a));    }
    }
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$461*)((V$50353880/*aspel.cml.video.font.destroy_font.font*/)))->m2))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((((TYPE$461*)((V$50353880/*aspel.cml.video.font.destroy_font.font*/)))->m2)).a));    }
    }
    CORE$DEL((void*)(((V$50353880/*aspel.cml.video.font.destroy_font.font*/))));    {
    TYPE$6 RET$VAL = (V$50353944/*aspel.cml.video.font.destroy_font.success*/);
    return RET$VAL;
    }
    }
}

TYPE$16 V$47856480/*aspel.cml.video.font.get_glyph_index*/(TYPE$474 V$50354008/*aspel.cml.video.font.get_glyph_index.font*/, TYPE$19 V$50354072/*aspel.cml.video.font.get_glyph_index.codepoint*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47857520/*aspel.cml.video.font.stbtt_find_glyph_index*/)))(CORE$cast_regular(TYPE$19, (V$50354008/*aspel.cml.video.font.get_glyph_index.font*/)), CORE$cast_regular(TYPE$16, (V$50354072/*aspel.cml.video.font.get_glyph_index.codepoint*/)));
    return RET$VAL;
    }
    }
}

TYPE$172 V$47856560/*aspel.cml.video.font.compute_scale*/(TYPE$474 V$50354136/*aspel.cml.video.font.compute_scale.font*/, TYPE$172 V$50354200/*aspel.cml.video.font.compute_scale.pixels*/)
{
    {
    {
    TYPE$172 RET$VAL = ((TYPE$172(*)(TYPE$19,TYPE$172))(((CORE$DELEGATE)V$47857600/*aspel.cml.video.font.stbtt_scale_for_pixel_height*/)))(CORE$cast_regular(TYPE$19, (V$50354136/*aspel.cml.video.font.compute_scale.font*/)), (V$50354200/*aspel.cml.video.font.compute_scale.pixels*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47856640/*aspel.cml.video.font.get_vertical_metrics*/(TYPE$474 V$50354264/*aspel.cml.video.font.get_vertical_metrics.font*/, TYPE$86 V$50354328/*aspel.cml.video.font.get_vertical_metrics.ascent*/, TYPE$86 V$50354392/*aspel.cml.video.font.get_vertical_metrics.descent*/, TYPE$86 V$50354456/*aspel.cml.video.font.get_vertical_metrics.line_gap*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47857680/*aspel.cml.video.font.stbtt_get_font_v_metrics*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50354264/*aspel.cml.video.font.get_vertical_metrics.font*/)))->m0)))), CORE$cast_regular(TYPE$19, (V$50354328/*aspel.cml.video.font.get_vertical_metrics.ascent*/)), CORE$cast_regular(TYPE$19, (V$50354392/*aspel.cml.video.font.get_vertical_metrics.descent*/)), CORE$cast_regular(TYPE$19, (V$50354456/*aspel.cml.video.font.get_vertical_metrics.line_gap*/)));
    }
}

TYPE$8 V$47856720/*aspel.cml.video.font.get_horizontal_metrics*/(TYPE$474 V$50354520/*aspel.cml.video.font.get_horizontal_metrics.font*/, TYPE$16 V$50354584/*aspel.cml.video.font.get_horizontal_metrics.glyph_index*/, TYPE$86 V$50354648/*aspel.cml.video.font.get_horizontal_metrics.advance_width*/, TYPE$86 V$50354712/*aspel.cml.video.font.get_horizontal_metrics.left_offset*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$16,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47857760/*aspel.cml.video.font.stbtt_get_glyph_h_metrics*/)))(CORE$cast_regular(TYPE$19, (V$50354520/*aspel.cml.video.font.get_horizontal_metrics.font*/)), (V$50354584/*aspel.cml.video.font.get_horizontal_metrics.glyph_index*/), CORE$cast_regular(TYPE$19, (V$50354648/*aspel.cml.video.font.get_horizontal_metrics.advance_width*/)), CORE$cast_regular(TYPE$19, (V$50354712/*aspel.cml.video.font.get_horizontal_metrics.left_offset*/)));
    }
}

TYPE$16 V$47856800/*aspel.cml.video.font.get_kern_advance*/(TYPE$474 V$50354776/*aspel.cml.video.font.get_kern_advance.font*/, TYPE$16 V$50354840/*aspel.cml.video.font.get_kern_advance.glyph1*/, TYPE$16 V$50354904/*aspel.cml.video.font.get_kern_advance.glyph2*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47857840/*aspel.cml.video.font.stbtt_get_glyph_kern_advance*/)))(CORE$cast_regular(TYPE$19, (V$50354776/*aspel.cml.video.font.get_kern_advance.font*/)), (V$50354840/*aspel.cml.video.font.get_kern_advance.glyph1*/), (V$50354904/*aspel.cml.video.font.get_kern_advance.glyph2*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47856880/*aspel.cml.video.font.begin_glyph_atlas*/(TYPE$474 V$50354968/*aspel.cml.video.font.begin_glyph_atlas.font*/, TYPE$467 V$50355032/*aspel.cml.video.font.begin_glyph_atlas.atlas*/, TYPE$16 V$50355096/*aspel.cml.video.font.begin_glyph_atlas.padding*/)
{
    {
    if ((((TYPE$461*)((V$50354968/*aspel.cml.video.font.begin_glyph_atlas.font*/)))->m4)) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$16,TYPE$16,TYPE$16,TYPE$16,TYPE$19))(((CORE$DELEGATE)V$47857920/*aspel.cml.video.font.stbtt_pack_begin*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50354968/*aspel.cml.video.font.begin_glyph_atlas.font*/)))->m6)))), CORE$cast_regular(TYPE$19, ((V$50355032/*aspel.cml.video.font.begin_glyph_atlas.atlas*/).m0)), ((V$50355032/*aspel.cml.video.font.begin_glyph_atlas.atlas*/).m1), ((V$50355032/*aspel.cml.video.font.begin_glyph_atlas.atlas*/).m2), ((V$50355032/*aspel.cml.video.font.begin_glyph_atlas.atlas*/).m3), (V$50355096/*aspel.cml.video.font.begin_glyph_atlas.padding*/), CORE$cast_regular(TYPE$19, CORE$null_pointer))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50354968/*aspel.cml.video.font.begin_glyph_atlas.font*/)))->m4));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$467 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50355032/*aspel.cml.video.font.begin_glyph_atlas.atlas*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50354968/*aspel.cml.video.font.begin_glyph_atlas.font*/)))->m5));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$467, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47856960/*aspel.cml.video.font.end_glyph_atlas*/(TYPE$474 V$50355160/*aspel.cml.video.font.end_glyph_atlas.font*/)
{
    {
    if ((!((((TYPE$461*)((V$50355160/*aspel.cml.video.font.end_glyph_atlas.font*/)))->m4)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47858000/*aspel.cml.video.font.stbtt_pack_end*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50355160/*aspel.cml.video.font.end_glyph_atlas.font*/)))->m6)))));
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$469))(((CORE$DELEGATE)V$47882160/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_regular(TYPE$7, ((((TYPE$461*)((V$50355160/*aspel.cml.video.font.end_glyph_atlas.font*/)))->m2).a)), (CORE$U64)(40), CORE$cast_regular(TYPE$5, (((TYPE$461*)((V$50355160/*aspel.cml.video.font.end_glyph_atlas.font*/)))->m3)), ((CORE$DELEGATE)V$47856160/*aspel.cml.video.font.glyph_data_comparator*/));
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50355160/*aspel.cml.video.font.end_glyph_atlas.font*/)))->m4));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47857040/*aspel.cml.video.font.set_glyph_oversampling*/(TYPE$474 V$50355224/*aspel.cml.video.font.set_glyph_oversampling.font*/, TYPE$19 V$50355288/*aspel.cml.video.font.set_glyph_oversampling.horizontal_oversample*/, TYPE$19 V$50355352/*aspel.cml.video.font.set_glyph_oversampling.vertical_oversample*/)
{
    {
    if ((!((((TYPE$461*)((V$50355224/*aspel.cml.video.font.set_glyph_oversampling.font*/)))->m4)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47858080/*aspel.cml.video.font.stbtt_pack_set_oversampling*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50355224/*aspel.cml.video.font.set_glyph_oversampling.font*/)))->m6)))), (V$50355288/*aspel.cml.video.font.set_glyph_oversampling.horizontal_oversample*/), (V$50355352/*aspel.cml.video.font.set_glyph_oversampling.vertical_oversample*/));
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47857120/*aspel.cml.video.font.allocate_glyphs*/(TYPE$474 V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/, TYPE$19 V$50355480/*aspel.cml.video.font.allocate_glyphs.count*/, TYPE$494 V$50355544/*aspel.cml.video.font.allocate_glyphs.packed_quads_array*/, TYPE$495 V$50355608/*aspel.cml.video.font.allocate_glyphs.glyphs_array*/)
{
    {
    TYPE$5 V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/ = ((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1).n);
    if (CORE$eq((CORE$cast_regular(TYPE$4, (V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/))),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(64ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    while (CORE$gt((CORE$add(((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m3)),((V$50355480/*aspel.cml.video.font.allocate_glyphs.count*/)))),(CORE$cast_regular(TYPE$19, (V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/)),(((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1).n)))) {
    {
    TYPE$463 V$50355736/*aspel.cml.video.font.allocate_glyphs..new_packed_quads*/ = CORE$NEWARR((CORE$U64)((V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/)), (CORE$U64)(28));
    if (CORE$eq((CORE$cast_array_to_ptr((V$50355736/*aspel.cml.video.font.allocate_glyphs..new_packed_quads*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1))),(CORE$null_pointer))) {
    {
    {
    TYPE$4 V$50355800/*aspel.cml.video.font.allocate_glyphs....i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m3)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50355800/*aspel.cml.video.font.allocate_glyphs....i*/ -= FOREACH$STEP;
    while ((V$50355800/*aspel.cml.video.font.allocate_glyphs....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$464 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$464, ((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50355800/*aspel.cml.video.font.allocate_glyphs....i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(195)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$464, ((V$50355736/*aspel.cml.video.font.allocate_glyphs..new_packed_quads*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50355800/*aspel.cml.video.font.allocate_glyphs....i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(195)));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$464, TEMP$VAL0);
    }
    }
    }
    }
    CORE$DEL((void*)(((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1)).a));    }
    }
    {
    typedef TYPE$463 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50355736/*aspel.cml.video.font.allocate_glyphs..new_packed_quads*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    TYPE$465 V$50355864/*aspel.cml.video.font.allocate_glyphs..new_glyphs*/ = CORE$NEWARR((CORE$U64)((V$50355672/*aspel.cml.video.font.allocate_glyphs.new_size*/)), (CORE$U64)(40));
    if (CORE$eq((CORE$cast_array_to_ptr((V$50355864/*aspel.cml.video.font.allocate_glyphs..new_glyphs*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m2))),(CORE$null_pointer))) {
    {
    {
    TYPE$4 V$50355928/*aspel.cml.video.font.allocate_glyphs....i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m3)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50355928/*aspel.cml.video.font.allocate_glyphs....i*/ -= FOREACH$STEP;
    while ((V$50355928/*aspel.cml.video.font.allocate_glyphs....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$466 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$466, ((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m2)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50355928/*aspel.cml.video.font.allocate_glyphs....i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(207)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$466, ((V$50355864/*aspel.cml.video.font.allocate_glyphs..new_glyphs*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50355928/*aspel.cml.video.font.allocate_glyphs....i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(207)));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$466, TEMP$VAL0);
    }
    }
    }
    }
    CORE$DEL((void*)(((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m2)).a));    }
    }
    {
    typedef TYPE$465 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50355864/*aspel.cml.video.font.allocate_glyphs..new_glyphs*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m2));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$496 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m1).a)),(CORE$cast_regular(TYPE$496, (((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m3)))*(28)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((*(TYPE$463*)((V$50355544/*aspel.cml.video.font.allocate_glyphs.packed_quads_array*/))).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$496, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$50355480/*aspel.cml.video.font.allocate_glyphs.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((*(TYPE$463*)((V$50355544/*aspel.cml.video.font.allocate_glyphs.packed_quads_array*/))).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$470 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((((((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m2).a)),(CORE$cast_regular(TYPE$470, (((TYPE$461*)((V$50355416/*aspel.cml.video.font.allocate_glyphs.font*/)))->m3)))*(40)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((*(TYPE$465*)((V$50355608/*aspel.cml.video.font.allocate_glyphs.glyphs_array*/))).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$470, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (V$50355480/*aspel.cml.video.font.allocate_glyphs.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((*(TYPE$465*)((V$50355608/*aspel.cml.video.font.allocate_glyphs.glyphs_array*/))).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$16 V$47857200/*aspel.cml.video.font.pack_glyph_range*/(TYPE$474 V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/, TYPE$172 V$50356056/*aspel.cml.video.font.pack_glyph_range.size*/, TYPE$19 V$50356120/*aspel.cml.video.font.pack_glyph_range.first_codepoint*/, TYPE$16 V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/)
{
    {
    TYPE$463 V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/;
    { (V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/).a = (0); }
{ (V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/).n = (0); }
    TYPE$465 V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/;
    { (V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/).a = (0); }
{ (V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/).n = (0); }
    if ((!(((TYPE$6(*)(TYPE$474,TYPE$19,TYPE$494,TYPE$495))(((CORE$DELEGATE)V$47857120/*aspel.cml.video.font.allocate_glyphs*/)))((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/), CORE$cast_regular(TYPE$19, (V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/)), ((CORE$PTR) &((V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/))), ((CORE$PTR) &((V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/))))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    TYPE$498 V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/;
    {
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m0) = (0); }
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m1) = (0); }
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m2) = (0); }
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m3) = (0); }
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m4) = (0); }
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m5) = (0); }
    { (V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/.m6) = (0); }
}
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (V$50356120/*aspel.cml.video.font.pack_glyph_range.first_codepoint*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50356056/*aspel.cml.video.font.pack_glyph_range.size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, ((V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/).a)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$4 V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub(((V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/ -= FOREACH$STEP;
    while ((V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$464, ((V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(238)).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$464, ((V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(239)).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$464, ((V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(240)).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$464, ((V$50356248/*aspel.cml.video.font.pack_glyph_range.chardata*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(241)).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50356056/*aspel.cml.video.font.pack_glyph_range.size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$466, ((V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(243)).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$474,TYPE$19))(((CORE$DELEGATE)V$47856480/*aspel.cml.video.font.get_glyph_index*/)))((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/), CORE$add(((V$50356120/*aspel.cml.video.font.pack_glyph_range.first_codepoint*/)),(CORE$cast_regular(TYPE$19, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$466, ((V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(244)).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m3)),(CORE$cast_regular(TYPE$19, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$466, ((V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(245)).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$467 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m5));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((CORE$ABC(TYPE$466, ((V$50356312/*aspel.cml.video.font.pack_glyph_range.glyphs*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356440/*aspel.cml.video.font.pack_glyph_range..i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(246)).m3));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$467, TEMP$VAL0);
    }
    }
    }
    }
    TYPE$499 V$50356504/*aspel.cml.video.font.pack_glyph_range.rects*/ = CORE$NEWARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, (V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/))), (CORE$U64)(24), [] (void* data) {
    typedef TYPE$500 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
    { (((*val).m5)) = (0); }
}
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$50356504/*aspel.cml.video.font.pack_glyph_range.rects*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    TYPE$462 V$50356568/*aspel.cml.video.font.pack_glyph_range.font_info*/ = (((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m0);
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m6).m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50356568/*aspel.cml.video.font.pack_glyph_range.font_info*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$16,TYPE$19))(((CORE$DELEGATE)V$47858160/*aspel.cml.video.font.stbtt_pack_font_ranges_gather_rects*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m6)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50356568/*aspel.cml.video.font.pack_glyph_range.font_info*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/)))), CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)), CORE$cast_regular(TYPE$19, ((V$50356504/*aspel.cml.video.font.pack_glyph_range.rects*/).a))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47858240/*aspel.cml.video.font.stbtt_pack_font_ranges_pack_rects*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m6)))), CORE$cast_regular(TYPE$19, ((V$50356504/*aspel.cml.video.font.pack_glyph_range.rects*/).a)), (V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/));
    if (CORE$eq((((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$16,TYPE$19))(((CORE$DELEGATE)V$47858320/*aspel.cml.video.font.stbtt_pack_font_ranges_render_into_rects*/)))(CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m6)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50356568/*aspel.cml.video.font.pack_glyph_range.font_info*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50356376/*aspel.cml.video.font.pack_glyph_range.pack_range*/)))), CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)), CORE$cast_regular(TYPE$19, ((V$50356504/*aspel.cml.video.font.pack_glyph_range.rects*/).a)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL))));
    return RET$VAL;
    }
    }
    }
    CORE$DEL((void*)(((V$50356504/*aspel.cml.video.font.pack_glyph_range.rects*/)).a));    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$461*)((V$50355992/*aspel.cml.video.font.pack_glyph_range.font*/)))->m3));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$16 RET$VAL = (V$50356184/*aspel.cml.video.font.pack_glyph_range.codepoint_count*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47857280/*aspel.cml.video.font.next_qlyph*/(TYPE$474 V$50356632/*aspel.cml.video.font.next_qlyph.font*/, TYPE$16 V$50356696/*aspel.cml.video.font.next_qlyph.glyph_index*/, TYPE$172 V$50356760/*aspel.cml.video.font.next_qlyph.size*/, TYPE$506 V$50356824/*aspel.cml.video.font.next_qlyph.current_x*/, TYPE$506 V$50356888/*aspel.cml.video.font.next_qlyph.current_y*/, TYPE$6 V$50356952/*aspel.cml.video.font.next_qlyph.align*/, TYPE$507 V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)
{
    {
    TYPE$466 V$50357080/*aspel.cml.video.font.next_qlyph.search*/ = ([&]()->TYPE$466{
    TYPE$466 TEMP$RESULT;
    { typedef TYPE$172 TEMP$TYPE;
      auto TEMP$VAL = (V$50356760/*aspel.cml.video.font.next_qlyph.size*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$172, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = (V$50356696/*aspel.cml.video.font.next_qlyph.glyph_index*/);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$19 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$19, TEMP$VAL); }
    { typedef TYPE$467 TEMP$TYPE;
      auto TEMP$VAL = ([&]()->TYPE$467{
    TYPE$467 TEMP$RESULT;
    { typedef TYPE$10 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$10, CORE$null_pointer);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$10, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    { typedef TYPE$7 TEMP$TYPE;
      auto TEMP$VAL = CORE$null_pointer;
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m4);
      *TEMP$PTR = CORE$cast_regular(TYPE$7, TEMP$VAL); }
    return TEMP$RESULT;
}());
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_type_pun(TYPE$467, TEMP$VAL); }
    return TEMP$RESULT;
}());
    TYPE$5 V$50357144/*aspel.cml.video.font.next_qlyph.index*/ = ((TYPE$5(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$7,TYPE$469))(((CORE$DELEGATE)V$47883840/*aspel.algorithm.order.find_lower_bound*/)))(CORE$cast_regular(TYPE$7, ((((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m2).a)), (CORE$U64)(40), CORE$cast_regular(TYPE$5, (((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m3)), CORE$cast_regular(TYPE$7, ((CORE$PTR) &((V$50357080/*aspel.cml.video.font.next_qlyph.search*/)))), ((CORE$DELEGATE)V$47856160/*aspel.cml.video.font.glyph_data_comparator*/));
    TYPE$6 V$50357208/*aspel.cml.video.font.next_qlyph.found_glyph*/ = CORE$false;
    if (CORE$lt(((V$50357144/*aspel.cml.video.font.next_qlyph.index*/)),(CORE$cast_regular(TYPE$5, (((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m3))))) {
    {
    if (CORE$eq(((CORE$ABC(TYPE$466, ((((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m2)), (CORE$U64)((V$50357144/*aspel.cml.video.font.next_qlyph.index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(277)).m1)),(((V$50357080/*aspel.cml.video.font.next_qlyph.search*/).m1)))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50357208/*aspel.cml.video.font.next_qlyph.found_glyph*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    if (CORE$gt(((V$50357144/*aspel.cml.video.font.next_qlyph.index*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))) {
    {
    if (CORE$eq(((CORE$ABC(TYPE$466, ((((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m2)), (CORE$U64)(CORE$sub(((V$50357144/*aspel.cml.video.font.next_qlyph.index*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(283)).m1)),(((V$50357080/*aspel.cml.video.font.next_qlyph.search*/).m1)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50357144/*aspel.cml.video.font.next_qlyph.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50357208/*aspel.cml.video.font.next_qlyph.found_glyph*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
    if ((!((V$50357208/*aspel.cml.video.font.next_qlyph.found_glyph*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$470 V$50357272/*aspel.cml.video.font.next_qlyph.glyph_data*/ = ((CORE$PTR) &(CORE$ABC(TYPE$466, ((((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m2)), (CORE$U64)((V$50357144/*aspel.cml.video.font.next_qlyph.index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(294))));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$466*)((V$50357272/*aspel.cml.video.font.next_qlyph.glyph_data*/)))->m1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$466*)((V$50357272/*aspel.cml.video.font.next_qlyph.glyph_data*/)))->m0));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$467 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$466*)((V$50357272/*aspel.cml.video.font.next_qlyph.glyph_data*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m2));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$467, TEMP$VAL0);
    }
    TYPE$496 V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/ = ((CORE$PTR) &(CORE$ABC(TYPE$464, ((((TYPE$461*)((V$50356632/*aspel.cml.video.font.next_qlyph.font*/)))->m1)), (CORE$U64)(CORE$cast_regular(TYPE$5, (((TYPE$466*)((V$50357272/*aspel.cml.video.font.next_qlyph.glyph_data*/)))->m2))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x66\x6F\x6E\x74\\\x66\x6F\x6E\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(299))));
    TYPE$172 V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/ = CORE$div(((V$50356760/*aspel.cml.video.font.next_qlyph.size*/)),((((TYPE$466*)((V$50357272/*aspel.cml.video.font.next_qlyph.glyph_data*/)))->m0)));
    if ((V$50356952/*aspel.cml.video.font.next_qlyph.align*/)) {
    {
    TYPE$172 V$50357464/*aspel.cml.video.font.next_qlyph..x*/ = CORE$cast_regular(TYPE$172, ((TYPE$51(*)(TYPE$51))(((CORE$DELEGATE)V$47845360/*aspel.math.floor*/)))(CORE$cast_regular(TYPE$51, CORE$add((CORE$add(((*(TYPE$172*)((V$50356824/*aspel.cml.video.font.next_qlyph.current_x*/)))),(CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m4)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/)))))),(CORE$cast_regular(TYPE$172, (CORE$F64)(0.50000)))))));
    TYPE$172 V$50357528/*aspel.cml.video.font.next_qlyph..y*/ = CORE$cast_regular(TYPE$172, ((TYPE$51(*)(TYPE$51))(((CORE$DELEGATE)V$47845360/*aspel.math.floor*/)))(CORE$cast_regular(TYPE$51, CORE$add((CORE$add(((*(TYPE$172*)((V$50356888/*aspel.cml.video.font.next_qlyph.current_y*/)))),(CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m5)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/)))))),(CORE$cast_regular(TYPE$172, (CORE$F64)(0.50000)))))));
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50357464/*aspel.cml.video.font.next_qlyph..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50357528/*aspel.cml.video.font.next_qlyph..y*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50357464/*aspel.cml.video.font.next_qlyph..x*/)),(CORE$mul((CORE$sub(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m7)),((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m4)))),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50357528/*aspel.cml.video.font.next_qlyph..y*/)),(CORE$mul((CORE$sub(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m8)),((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m5)))),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m8));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((*(TYPE$172*)((V$50356824/*aspel.cml.video.font.next_qlyph.current_x*/)))),(CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m4)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((*(TYPE$172*)((V$50356888/*aspel.cml.video.font.next_qlyph.current_y*/)))),(CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m5)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((*(TYPE$172*)((V$50356824/*aspel.cml.video.font.next_qlyph.current_x*/)))),(CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m7)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((*(TYPE$172*)((V$50356888/*aspel.cml.video.font.next_qlyph.current_y*/)))),(CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m8)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m8));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m0)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m2)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$16, (((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m3)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$471*)((V$50357016/*aspel.cml.video.font.next_qlyph.glyph*/)))->m10));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mul(((((TYPE$464*)((V$50357336/*aspel.cml.video.font.next_qlyph.packed_quad*/)))->m6)),((V$50357400/*aspel.cml.video.font.next_qlyph.desired_scale*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$172*)((V$50356824/*aspel.cml.video.font.next_qlyph.current_x*/))));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$7 V$47858400/*aspel.cml.video.create_texture*/(TYPE$7 V$50361048/*aspel.cml.video.create_texture.renderer*/, TYPE$16 V$50361112/*aspel.cml.video.create_texture.access*/, TYPE$16 V$50361176/*aspel.cml.video.create_texture.w*/, TYPE$16 V$50361240/*aspel.cml.video.create_texture.h*/)
{
    {
    TYPE$19 V$50361304/*aspel.cml.video.create_texture.format*/ = CORE$cast_regular(TYPE$19, CORE$bor((CORE$bor((CORE$bor((CORE$bor((CORE$bor((CORE$shl(((CORE$S64)(1ULL)),((CORE$S64)(28ULL)))),(CORE$shl(((CORE$S64)(6ULL)),((CORE$S64)(24ULL)))))),(CORE$shl(((CORE$S64)(4ULL)),((CORE$S64)(20ULL)))))),(CORE$shl(((CORE$S64)(6ULL)),((CORE$S64)(16ULL)))))),(CORE$shl(((CORE$S64)(32ULL)),((CORE$S64)(8ULL)))))),(CORE$shl(((CORE$S64)(4ULL)),((CORE$S64)(0ULL))))));
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$7(*)(TYPE$19,TYPE$19,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47858640/*aspel.cml.video.SDL_CreateTexture*/)))(CORE$cast_regular(TYPE$19, (V$50361048/*aspel.cml.video.create_texture.renderer*/)), (V$50361304/*aspel.cml.video.create_texture.format*/), (V$50361112/*aspel.cml.video.create_texture.access*/), (V$50361176/*aspel.cml.video.create_texture.w*/), (V$50361240/*aspel.cml.video.create_texture.h*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47858480/*aspel.cml.video.delete_texture*/(TYPE$7 V$50361368/*aspel.cml.video.delete_texture.texture*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47858720/*aspel.cml.video.SDL_DestroyTexture*/)))(CORE$cast_regular(TYPE$19, (V$50361368/*aspel.cml.video.delete_texture.texture*/)));
    }
}

TYPE$16 V$47858560/*aspel.cml.video.update_texture*/(TYPE$7 V$50361432/*aspel.cml.video.update_texture.texture*/, TYPE$7 V$50361496/*aspel.cml.video.update_texture.pixels*/, TYPE$16 V$50361560/*aspel.cml.video.update_texture.pitch*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47858800/*aspel.cml.video.SDL_UpdateTexture*/)))(CORE$cast_regular(TYPE$19, (V$50361432/*aspel.cml.video.update_texture.texture*/)), CORE$cast_regular(TYPE$19, CORE$null_pointer), CORE$cast_regular(TYPE$19, (V$50361496/*aspel.cml.video.update_texture.pixels*/)), (V$50361560/*aspel.cml.video.update_texture.pitch*/));
    return RET$VAL;
    }
    }
}

TYPE$7 V$47858880/*aspel.cml.video.create_renderer*/(TYPE$7 V$50363224/*aspel.cml.video.create_renderer.win*/)
{
    {
    TYPE$19 V$50363288/*aspel.cml.video.create_renderer.RENDERER_FLAGS*/ = CORE$cast_regular(TYPE$19, CORE$bor(((CORE$S64)(2ULL)),((CORE$S64)(4ULL))));
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)(TYPE$19,TYPE$16,TYPE$19))(((CORE$DELEGATE)V$47860480/*aspel.cml.video.SDL_CreateRenderer*/)))(CORE$cast_regular(TYPE$19, (V$50363224/*aspel.cml.video.create_renderer.win*/)), CORE$cast_regular(TYPE$16, (-((CORE$S64)(1ULL)))), (V$50363288/*aspel.cml.video.create_renderer.RENDERER_FLAGS*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47858960/*aspel.cml.video.delete_renderer*/(TYPE$7 V$50363352/*aspel.cml.video.delete_renderer.renderer*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47860560/*aspel.cml.video.SDL_DestroyRenderer*/)))(CORE$cast_regular(TYPE$19, (V$50363352/*aspel.cml.video.delete_renderer.renderer*/)));
    }
}

TYPE$8 V$47859040/*aspel.cml.video.render_clear*/(TYPE$7 V$50363416/*aspel.cml.video.render_clear.renderer*/)
{
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47860720/*aspel.cml.video.SDL_RenderClear*/)))(CORE$cast_regular(TYPE$19, (V$50363416/*aspel.cml.video.render_clear.renderer*/)));
    }
}

TYPE$8 V$47859120/*aspel.cml.video.render_draw_point*/(TYPE$7 V$50363480/*aspel.cml.video.render_draw_point.renderer*/, TYPE$16 V$50363544/*aspel.cml.video.render_draw_point.x*/, TYPE$16 V$50363608/*aspel.cml.video.render_draw_point.y*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47860800/*aspel.cml.video.SDL_RenderDrawPoint*/)))(CORE$cast_regular(TYPE$19, (V$50363480/*aspel.cml.video.render_draw_point.renderer*/)), (V$50363544/*aspel.cml.video.render_draw_point.x*/), (V$50363608/*aspel.cml.video.render_draw_point.y*/));
    }
}

TYPE$8 V$47859200/*aspel.cml.video.render_draw_points*/(TYPE$7 V$50363672/*aspel.cml.video.render_draw_points.renderer*/, TYPE$519 V$50363736/*aspel.cml.video.render_draw_points.points*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ge((CORE$cast_regular(TYPE$4, ((V$50363736/*aspel.cml.video.render_draw_points.points*/).n))),((CORE$S64)(1ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x72\x65\x6E\x64\x65\x72\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(75)));
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47860880/*aspel.cml.video.SDL_RenderDrawPoints*/)))(CORE$cast_regular(TYPE$19, (V$50363672/*aspel.cml.video.render_draw_points.renderer*/)), CORE$cast_regular(TYPE$19, ((V$50363736/*aspel.cml.video.render_draw_points.points*/).a)), CORE$cast_regular(TYPE$16, ((V$50363736/*aspel.cml.video.render_draw_points.points*/).n)));
    }
}

TYPE$8 V$47859280/*aspel.cml.video.render_draw_line*/(TYPE$7 V$50363800/*aspel.cml.video.render_draw_line.renderer*/, TYPE$16 V$50363864/*aspel.cml.video.render_draw_line.x0*/, TYPE$16 V$50363928/*aspel.cml.video.render_draw_line.y0*/, TYPE$16 V$50363992/*aspel.cml.video.render_draw_line.x1*/, TYPE$16 V$50364056/*aspel.cml.video.render_draw_line.y1*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$16,TYPE$16,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47860960/*aspel.cml.video.SDL_RenderDrawLine*/)))(CORE$cast_regular(TYPE$19, (V$50363800/*aspel.cml.video.render_draw_line.renderer*/)), (V$50363864/*aspel.cml.video.render_draw_line.x0*/), (V$50363928/*aspel.cml.video.render_draw_line.y0*/), (V$50363992/*aspel.cml.video.render_draw_line.x1*/), (V$50364056/*aspel.cml.video.render_draw_line.y1*/));
    }
}

TYPE$8 V$47859360/*aspel.cml.video.render_draw_lines*/(TYPE$7 V$50364120/*aspel.cml.video.render_draw_lines.renderer*/, TYPE$519 V$50364184/*aspel.cml.video.render_draw_lines.points*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ge((CORE$cast_regular(TYPE$4, ((V$50364184/*aspel.cml.video.render_draw_lines.points*/).n))),((CORE$S64)(2ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x72\x65\x6E\x64\x65\x72\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(86)));
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47861040/*aspel.cml.video.SDL_RenderDrawLines*/)))(CORE$cast_regular(TYPE$19, (V$50364120/*aspel.cml.video.render_draw_lines.renderer*/)), CORE$cast_regular(TYPE$19, ((V$50364184/*aspel.cml.video.render_draw_lines.points*/).a)), CORE$cast_regular(TYPE$16, ((V$50364184/*aspel.cml.video.render_draw_lines.points*/).n)));
    }
}

TYPE$8 V$47859440/*aspel.cml.video.render_draw_rect*/(TYPE$7 V$50364248/*aspel.cml.video.render_draw_rect.renderer*/, TYPE$16 V$50364312/*aspel.cml.video.render_draw_rect.x*/, TYPE$16 V$50364376/*aspel.cml.video.render_draw_rect.y*/, TYPE$16 V$50364440/*aspel.cml.video.render_draw_rect.w*/, TYPE$16 V$50364504/*aspel.cml.video.render_draw_rect.h*/)
{
    {
    TYPE$420 V$50364568/*aspel.cml.video.render_draw_rect.rect*/;
    {
    { (V$50364568/*aspel.cml.video.render_draw_rect.rect*/.m0) = (0); }
    { (V$50364568/*aspel.cml.video.render_draw_rect.rect*/.m1) = (0); }
    { (V$50364568/*aspel.cml.video.render_draw_rect.rect*/.m2) = (0); }
    { (V$50364568/*aspel.cml.video.render_draw_rect.rect*/.m3) = (0); }
}
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364312/*aspel.cml.video.render_draw_rect.x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50364568/*aspel.cml.video.render_draw_rect.rect*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364376/*aspel.cml.video.render_draw_rect.y*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50364568/*aspel.cml.video.render_draw_rect.rect*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364440/*aspel.cml.video.render_draw_rect.w*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50364568/*aspel.cml.video.render_draw_rect.rect*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364504/*aspel.cml.video.render_draw_rect.h*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50364568/*aspel.cml.video.render_draw_rect.rect*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861120/*aspel.cml.video.SDL_RenderDrawRect*/)))(CORE$cast_regular(TYPE$19, (V$50364248/*aspel.cml.video.render_draw_rect.renderer*/)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50364568/*aspel.cml.video.render_draw_rect.rect*/)))));
    }
}

TYPE$8 V$47859520/*aspel.cml.video.render_draw_rects*/(TYPE$7 V$50364632/*aspel.cml.video.render_draw_rects.renderer*/, TYPE$525 V$50364696/*aspel.cml.video.render_draw_rects.rects*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ge((CORE$cast_regular(TYPE$4, ((V$50364696/*aspel.cml.video.render_draw_rects.rects*/).n))),((CORE$S64)(1ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x72\x65\x6E\x64\x65\x72\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(102)));
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47861200/*aspel.cml.video.SDL_RenderDrawRects*/)))(CORE$cast_regular(TYPE$19, (V$50364632/*aspel.cml.video.render_draw_rects.renderer*/)), CORE$cast_regular(TYPE$19, ((V$50364696/*aspel.cml.video.render_draw_rects.rects*/).a)), CORE$cast_regular(TYPE$16, ((V$50364696/*aspel.cml.video.render_draw_rects.rects*/).n)));
    }
}

TYPE$8 V$47859600/*aspel.cml.video.render_fill_rect*/(TYPE$7 V$50364760/*aspel.cml.video.render_fill_rect.renderer*/, TYPE$16 V$50364824/*aspel.cml.video.render_fill_rect.x*/, TYPE$16 V$50364888/*aspel.cml.video.render_fill_rect.y*/, TYPE$16 V$50364952/*aspel.cml.video.render_fill_rect.w*/, TYPE$16 V$50365016/*aspel.cml.video.render_fill_rect.h*/)
{
    {
    TYPE$420 V$50365080/*aspel.cml.video.render_fill_rect.rect*/;
    {
    { (V$50365080/*aspel.cml.video.render_fill_rect.rect*/.m0) = (0); }
    { (V$50365080/*aspel.cml.video.render_fill_rect.rect*/.m1) = (0); }
    { (V$50365080/*aspel.cml.video.render_fill_rect.rect*/.m2) = (0); }
    { (V$50365080/*aspel.cml.video.render_fill_rect.rect*/.m3) = (0); }
}
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364824/*aspel.cml.video.render_fill_rect.x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365080/*aspel.cml.video.render_fill_rect.rect*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364888/*aspel.cml.video.render_fill_rect.y*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365080/*aspel.cml.video.render_fill_rect.rect*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50364952/*aspel.cml.video.render_fill_rect.w*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365080/*aspel.cml.video.render_fill_rect.rect*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50365016/*aspel.cml.video.render_fill_rect.h*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365080/*aspel.cml.video.render_fill_rect.rect*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861280/*aspel.cml.video.SDL_RenderFillRect*/)))(CORE$cast_regular(TYPE$19, (V$50364760/*aspel.cml.video.render_fill_rect.renderer*/)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50365080/*aspel.cml.video.render_fill_rect.rect*/)))));
    }
}

TYPE$8 V$47859680/*aspel.cml.video.render_fill_rects*/(TYPE$7 V$50365144/*aspel.cml.video.render_fill_rects.renderer*/, TYPE$525 V$50365208/*aspel.cml.video.render_fill_rects.rects*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$ge((CORE$cast_regular(TYPE$4, ((V$50365208/*aspel.cml.video.render_fill_rects.rects*/).n))),((CORE$S64)(1ULL))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x63\x6D\x6C\\\x76\x69\x64\x65\x6F\\\x72\x65\x6E\x64\x65\x72\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(118)));
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47861360/*aspel.cml.video.SDL_RenderFillRects*/)))(CORE$cast_regular(TYPE$19, (V$50365144/*aspel.cml.video.render_fill_rects.renderer*/)), CORE$cast_regular(TYPE$19, ((V$50365208/*aspel.cml.video.render_fill_rects.rects*/).a)), CORE$cast_regular(TYPE$16, ((V$50365208/*aspel.cml.video.render_fill_rects.rects*/).n)));
    }
}

TYPE$8 V$47859760/*aspel.cml.video.render_copy_texture*/(TYPE$7 V$50365272/*aspel.cml.video.render_copy_texture.renderer*/, TYPE$7 V$50365336/*aspel.cml.video.render_copy_texture.texture*/, TYPE$523 V$50365400/*aspel.cml.video.render_copy_texture.src_rect*/, TYPE$523 V$50365464/*aspel.cml.video.render_copy_texture.dest_rect*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861440/*aspel.cml.video.SDL_RenderCopy*/)))(CORE$cast_regular(TYPE$19, (V$50365272/*aspel.cml.video.render_copy_texture.renderer*/)), CORE$cast_regular(TYPE$19, (V$50365336/*aspel.cml.video.render_copy_texture.texture*/)), CORE$cast_regular(TYPE$19, (V$50365400/*aspel.cml.video.render_copy_texture.src_rect*/)), CORE$cast_regular(TYPE$19, (V$50365464/*aspel.cml.video.render_copy_texture.dest_rect*/)));
    }
}

TYPE$8 V$47859840/*aspel.cml.video.render_get_scissor_rect*/(TYPE$7 V$50365528/*aspel.cml.video.render_get_scissor_rect.renderer*/, TYPE$523 V$50365592/*aspel.cml.video.render_get_scissor_rect.scissor_rect*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861600/*aspel.cml.video.SDL_RenderSetClipRect*/)))(CORE$cast_regular(TYPE$19, (V$50365528/*aspel.cml.video.render_get_scissor_rect.renderer*/)), CORE$cast_regular(TYPE$19, (V$50365592/*aspel.cml.video.render_get_scissor_rect.scissor_rect*/)));
    }
}

TYPE$8 V$47859920/*aspel.cml.video.render_set_scissor_rect*/(TYPE$7 V$50365656/*aspel.cml.video.render_set_scissor_rect.renderer*/, TYPE$16 V$50365720/*aspel.cml.video.render_set_scissor_rect.x*/, TYPE$16 V$50365784/*aspel.cml.video.render_set_scissor_rect.y*/, TYPE$16 V$50365848/*aspel.cml.video.render_set_scissor_rect.w*/, TYPE$16 V$50365912/*aspel.cml.video.render_set_scissor_rect.h*/)
{
    {
    TYPE$420 V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/;
    {
    { (V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/.m0) = (0); }
    { (V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/.m1) = (0); }
    { (V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/.m2) = (0); }
    { (V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/.m3) = (0); }
}
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50365720/*aspel.cml.video.render_set_scissor_rect.x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50365784/*aspel.cml.video.render_set_scissor_rect.y*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50365848/*aspel.cml.video.render_set_scissor_rect.w*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50365912/*aspel.cml.video.render_set_scissor_rect.h*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861520/*aspel.cml.video.SDL_RenderGetClipRect*/)))(CORE$cast_regular(TYPE$19, (V$50365656/*aspel.cml.video.render_set_scissor_rect.renderer*/)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50365976/*aspel.cml.video.render_set_scissor_rect.rect*/)))));
    }
}

TYPE$8 V$47860000/*aspel.cml.video.render_get_color*/(TYPE$7 V$50366040/*aspel.cml.video.render_get_color.renderer*/, TYPE$430 V$50366104/*aspel.cml.video.render_get_color.color*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861680/*aspel.cml.video.SDL_GetRenderDrawColor*/)))(CORE$cast_regular(TYPE$19, (V$50366040/*aspel.cml.video.render_get_color.renderer*/)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$407*)((V$50366104/*aspel.cml.video.render_get_color.color*/)))->m0)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$407*)((V$50366104/*aspel.cml.video.render_get_color.color*/)))->m1)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$407*)((V$50366104/*aspel.cml.video.render_get_color.color*/)))->m2)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$407*)((V$50366104/*aspel.cml.video.render_get_color.color*/)))->m3)))));
    }
}

TYPE$8 V$47860080/*aspel.cml.video.render_get_color*/(TYPE$7 V$50366168/*aspel.cml.video.render_get_color.renderer*/, TYPE$10 V$50366232/*aspel.cml.video.render_get_color.r*/, TYPE$10 V$50366296/*aspel.cml.video.render_get_color.g*/, TYPE$10 V$50366360/*aspel.cml.video.render_get_color.b*/, TYPE$10 V$50366424/*aspel.cml.video.render_get_color.a*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861680/*aspel.cml.video.SDL_GetRenderDrawColor*/)))(CORE$cast_regular(TYPE$19, (V$50366168/*aspel.cml.video.render_get_color.renderer*/)), CORE$cast_regular(TYPE$19, (V$50366232/*aspel.cml.video.render_get_color.r*/)), CORE$cast_regular(TYPE$19, (V$50366296/*aspel.cml.video.render_get_color.g*/)), CORE$cast_regular(TYPE$19, (V$50366360/*aspel.cml.video.render_get_color.b*/)), CORE$cast_regular(TYPE$19, (V$50366424/*aspel.cml.video.render_get_color.a*/)));
    }
}

TYPE$8 V$47860160/*aspel.cml.video.render_set_color*/(TYPE$7 V$50366488/*aspel.cml.video.render_set_color.renderer*/, TYPE$407 V$50366552/*aspel.cml.video.render_set_color.color*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$2,TYPE$2,TYPE$2,TYPE$2))(((CORE$DELEGATE)V$47861760/*aspel.cml.video.SDL_SetRenderDrawColor*/)))(CORE$cast_regular(TYPE$19, (V$50366488/*aspel.cml.video.render_set_color.renderer*/)), ((V$50366552/*aspel.cml.video.render_set_color.color*/).m0), ((V$50366552/*aspel.cml.video.render_set_color.color*/).m1), ((V$50366552/*aspel.cml.video.render_set_color.color*/).m2), ((V$50366552/*aspel.cml.video.render_set_color.color*/).m3));
    }
}

TYPE$8 V$47860240/*aspel.cml.video.render_set_color*/(TYPE$7 V$50366616/*aspel.cml.video.render_set_color.renderer*/, TYPE$2 V$50366680/*aspel.cml.video.render_set_color.r*/, TYPE$2 V$50366744/*aspel.cml.video.render_set_color.g*/, TYPE$2 V$50366808/*aspel.cml.video.render_set_color.b*/, TYPE$2 V$50366872/*aspel.cml.video.render_set_color.a*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$2,TYPE$2,TYPE$2,TYPE$2))(((CORE$DELEGATE)V$47861760/*aspel.cml.video.SDL_SetRenderDrawColor*/)))(CORE$cast_regular(TYPE$19, (V$50366616/*aspel.cml.video.render_set_color.renderer*/)), (V$50366680/*aspel.cml.video.render_set_color.r*/), (V$50366744/*aspel.cml.video.render_set_color.g*/), (V$50366808/*aspel.cml.video.render_set_color.b*/), (V$50366872/*aspel.cml.video.render_set_color.a*/));
    }
}

TYPE$8 V$47860320/*aspel.cml.video.render_get_context_size*/(TYPE$7 V$50366936/*aspel.cml.video.render_get_context_size.renderer*/, TYPE$86 V$50367000/*aspel.cml.video.render_get_context_size.w*/, TYPE$86 V$50367064/*aspel.cml.video.render_get_context_size.h*/)
{
    {
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47861840/*aspel.cml.video.SDL_GetRendererOutputSize*/)))(CORE$cast_regular(TYPE$19, (V$50366936/*aspel.cml.video.render_get_context_size.renderer*/)), CORE$cast_regular(TYPE$19, (V$50367000/*aspel.cml.video.render_get_context_size.w*/)), CORE$cast_regular(TYPE$19, (V$50367064/*aspel.cml.video.render_get_context_size.h*/)));
    }
}

TYPE$8 V$47860400/*aspel.cml.video.render_swap_window*/(TYPE$7 V$50367128/*aspel.cml.video.render_swap_window.renderer*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47860640/*aspel.cml.video.SDL_RenderPresent*/)))(CORE$cast_regular(TYPE$19, (V$50367128/*aspel.cml.video.render_swap_window.renderer*/)));
    }
}

TYPE$7 V$47861920/*aspel.cml.video.create_window*/(TYPE$19 V$50367704/*aspel.cml.video.create_window.flags*/)
{
    {
    TYPE$19 V$50367768/*aspel.cml.video.create_window.WINDOW_HIDDEN*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50367768/*aspel.cml.video.create_window.WINDOW_HIDDEN*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50367704/*aspel.cml.video.create_window.flags*/));
    *TEMP$PTR0 = (*TEMP$PTR0) | CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)(TYPE$19,TYPE$16,TYPE$16,TYPE$16,TYPE$16,TYPE$19))(((CORE$DELEGATE)V$47863360/*aspel.cml.video.SDL_CreateWindow*/)))(CORE$cast_regular(TYPE$19, CORE$null_pointer), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)), (V$50367704/*aspel.cml.video.create_window.flags*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47862000/*aspel.cml.video.delete_window*/(TYPE$7 V$50367832/*aspel.cml.video.delete_window.win*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47863440/*aspel.cml.video.SDL_DestroyWindow*/)))(CORE$cast_regular(TYPE$19, (V$50367832/*aspel.cml.video.delete_window.win*/)));
    }
}

TYPE$8 V$47862080/*aspel.cml.video.get_window_size*/(TYPE$7 V$50368216/*aspel.cml.video.get_window_size.win*/, TYPE$86 V$50368280/*aspel.cml.video.get_window_size.width*/, TYPE$86 V$50368344/*aspel.cml.video.get_window_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47863520/*aspel.cml.video.SDL_GetWindowSize*/)))(CORE$cast_regular(TYPE$19, (V$50368216/*aspel.cml.video.get_window_size.win*/)), CORE$cast_regular(TYPE$19, (V$50368280/*aspel.cml.video.get_window_size.width*/)), CORE$cast_regular(TYPE$19, (V$50368344/*aspel.cml.video.get_window_size.height*/)));
    }
}

TYPE$8 V$47862160/*aspel.cml.video.get_window_maximum_size*/(TYPE$7 V$50368408/*aspel.cml.video.get_window_maximum_size.win*/, TYPE$86 V$50368472/*aspel.cml.video.get_window_maximum_size.width*/, TYPE$86 V$50368536/*aspel.cml.video.get_window_maximum_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47863600/*aspel.cml.video.SDL_GetWindowMaximumSize*/)))(CORE$cast_regular(TYPE$19, (V$50368408/*aspel.cml.video.get_window_maximum_size.win*/)), CORE$cast_regular(TYPE$19, (V$50368472/*aspel.cml.video.get_window_maximum_size.width*/)), CORE$cast_regular(TYPE$19, (V$50368536/*aspel.cml.video.get_window_maximum_size.height*/)));
    }
}

TYPE$8 V$47862240/*aspel.cml.video.get_window_minimum_size*/(TYPE$7 V$50368600/*aspel.cml.video.get_window_minimum_size.win*/, TYPE$86 V$50368664/*aspel.cml.video.get_window_minimum_size.width*/, TYPE$86 V$50368728/*aspel.cml.video.get_window_minimum_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47863680/*aspel.cml.video.SDL_GetWindowMinimumSize*/)))(CORE$cast_regular(TYPE$19, (V$50368600/*aspel.cml.video.get_window_minimum_size.win*/)), CORE$cast_regular(TYPE$19, (V$50368664/*aspel.cml.video.get_window_minimum_size.width*/)), CORE$cast_regular(TYPE$19, (V$50368728/*aspel.cml.video.get_window_minimum_size.height*/)));
    }
}

TYPE$8 V$47862320/*aspel.cml.video.get_window_position*/(TYPE$7 V$50368792/*aspel.cml.video.get_window_position.win*/, TYPE$86 V$50368856/*aspel.cml.video.get_window_position.x*/, TYPE$86 V$50368920/*aspel.cml.video.get_window_position.y*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47863760/*aspel.cml.video.SDL_GetWindowPosition*/)))(CORE$cast_regular(TYPE$19, (V$50368792/*aspel.cml.video.get_window_position.win*/)), CORE$cast_regular(TYPE$19, (V$50368856/*aspel.cml.video.get_window_position.x*/)), CORE$cast_regular(TYPE$19, (V$50368920/*aspel.cml.video.get_window_position.y*/)));
    }
}

TYPE$10 V$47862400/*aspel.cml.video.get_window_title*/(TYPE$7 V$50368984/*aspel.cml.video.get_window_title.win*/)
{
    {
    {
    TYPE$10 RET$VAL = CORE$cast_regular(TYPE$10, ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47863840/*aspel.cml.video.SDL_GetWindowTitle*/)))(CORE$cast_regular(TYPE$19, (V$50368984/*aspel.cml.video.get_window_title.win*/))));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47862480/*aspel.cml.video.get_window_grab*/(TYPE$7 V$50369048/*aspel.cml.video.get_window_grab.win*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$19))(((CORE$DELEGATE)V$47863920/*aspel.cml.video.SDL_GetWindowGrab*/)))(CORE$cast_regular(TYPE$19, (V$50369048/*aspel.cml.video.get_window_grab.win*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47862560/*aspel.cml.video.set_window_size*/(TYPE$7 V$50369112/*aspel.cml.video.set_window_size.win*/, TYPE$16 V$50369176/*aspel.cml.video.set_window_size.width*/, TYPE$16 V$50369240/*aspel.cml.video.set_window_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47864000/*aspel.cml.video.SDL_SetWindowSize*/)))(CORE$cast_regular(TYPE$19, (V$50369112/*aspel.cml.video.set_window_size.win*/)), (V$50369176/*aspel.cml.video.set_window_size.width*/), (V$50369240/*aspel.cml.video.set_window_size.height*/));
    }
}

TYPE$8 V$47862640/*aspel.cml.video.set_window_maximum_size*/(TYPE$7 V$50369304/*aspel.cml.video.set_window_maximum_size.win*/, TYPE$16 V$50369368/*aspel.cml.video.set_window_maximum_size.width*/, TYPE$16 V$50369432/*aspel.cml.video.set_window_maximum_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47864080/*aspel.cml.video.SDL_SetWindowMaximumSize*/)))(CORE$cast_regular(TYPE$19, (V$50369304/*aspel.cml.video.set_window_maximum_size.win*/)), (V$50369368/*aspel.cml.video.set_window_maximum_size.width*/), (V$50369432/*aspel.cml.video.set_window_maximum_size.height*/));
    }
}

TYPE$8 V$47862720/*aspel.cml.video.set_window_minimum_size*/(TYPE$7 V$50369496/*aspel.cml.video.set_window_minimum_size.win*/, TYPE$16 V$50369560/*aspel.cml.video.set_window_minimum_size.width*/, TYPE$16 V$50369624/*aspel.cml.video.set_window_minimum_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47864160/*aspel.cml.video.SDL_SetWindowMinimumSize*/)))(CORE$cast_regular(TYPE$19, (V$50369496/*aspel.cml.video.set_window_minimum_size.win*/)), (V$50369560/*aspel.cml.video.set_window_minimum_size.width*/), (V$50369624/*aspel.cml.video.set_window_minimum_size.height*/));
    }
}

TYPE$8 V$47862800/*aspel.cml.video.set_window_fullscreen*/(TYPE$7 V$50369688/*aspel.cml.video.set_window_fullscreen.win*/, TYPE$19 V$50369752/*aspel.cml.video.set_window_fullscreen.flags*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47864240/*aspel.cml.video.SDL_SetWindowFullscreen*/)))(CORE$cast_regular(TYPE$19, (V$50369688/*aspel.cml.video.set_window_fullscreen.win*/)), (V$50369752/*aspel.cml.video.set_window_fullscreen.flags*/));
    }
}

TYPE$8 V$47862880/*aspel.cml.video.set_window_position*/(TYPE$7 V$50369816/*aspel.cml.video.set_window_position.win*/, TYPE$16 V$50369880/*aspel.cml.video.set_window_position.x*/, TYPE$16 V$50369944/*aspel.cml.video.set_window_position.y*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47864320/*aspel.cml.video.SDL_SetWindowPosition*/)))(CORE$cast_regular(TYPE$19, (V$50369816/*aspel.cml.video.set_window_position.win*/)), (V$50369880/*aspel.cml.video.set_window_position.x*/), (V$50369944/*aspel.cml.video.set_window_position.y*/));
    }
}

TYPE$8 V$47862960/*aspel.cml.video.set_window_title*/(TYPE$7 V$50370008/*aspel.cml.video.set_window_title.win*/, TYPE$1 V$50370072/*aspel.cml.video.set_window_title.title*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47864400/*aspel.cml.video.SDL_SetWindowTitle*/)))(CORE$cast_regular(TYPE$19, (V$50370008/*aspel.cml.video.set_window_title.win*/)), CORE$cast_regular(TYPE$19, ((V$50370072/*aspel.cml.video.set_window_title.title*/).a)));
    }
}

TYPE$8 V$47863040/*aspel.cml.video.set_window_bordered*/(TYPE$7 V$50370136/*aspel.cml.video.set_window_bordered.win*/, TYPE$6 V$50370200/*aspel.cml.video.set_window_bordered.is_bordered*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$6))(((CORE$DELEGATE)V$47864480/*aspel.cml.video.SDL_SetWindowBordered*/)))(CORE$cast_regular(TYPE$19, (V$50370136/*aspel.cml.video.set_window_bordered.win*/)), (V$50370200/*aspel.cml.video.set_window_bordered.is_bordered*/));
    }
}

TYPE$8 V$47863120/*aspel.cml.video.set_window_grab*/(TYPE$7 V$50370264/*aspel.cml.video.set_window_grab.win*/, TYPE$6 V$50370328/*aspel.cml.video.set_window_grab.grabbed*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$6))(((CORE$DELEGATE)V$47864560/*aspel.cml.video.SDL_SetWindowGrab*/)))(CORE$cast_regular(TYPE$19, (V$50370264/*aspel.cml.video.set_window_grab.win*/)), (V$50370328/*aspel.cml.video.set_window_grab.grabbed*/));
    }
}

TYPE$8 V$47863200/*aspel.cml.video.show_window*/(TYPE$7 V$50370392/*aspel.cml.video.show_window.win*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47864640/*aspel.cml.video.SDL_ShowWindow*/)))(CORE$cast_regular(TYPE$19, (V$50370392/*aspel.cml.video.show_window.win*/)));
    }
}

TYPE$8 V$47863280/*aspel.cml.video.hide_window*/(TYPE$7 V$50370456/*aspel.cml.video.hide_window.win*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47864720/*aspel.cml.video.SDL_HideWindow*/)))(CORE$cast_regular(TYPE$19, (V$50370456/*aspel.cml.video.hide_window.win*/)));
    }
}

TYPE$6 V$47864800/*aspel.cml.video.set_window_hit_test*/(TYPE$7 V$50371288/*aspel.cml.video.set_window_hit_test.win*/, TYPE$547 V$50371352/*aspel.cml.video.set_window_hit_test.callback*/, TYPE$7 V$50371416/*aspel.cml.video.set_window_hit_test.callback_data*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$16 V$47864880/*aspel.cml.video.gl_get_attribute*/(TYPE$19 V$50373144/*aspel.cml.video.gl_get_attribute.attr*/, TYPE$86 V$50373208/*aspel.cml.video.gl_get_attribute.value*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47866400/*aspel.cml.video.SDL_GL_GetAttribute*/)))((V$50373144/*aspel.cml.video.gl_get_attribute.attr*/), CORE$cast_regular(TYPE$19, (V$50373208/*aspel.cml.video.gl_get_attribute.value*/)));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47864960/*aspel.cml.video.gl_set_attribute*/(TYPE$19 V$50373272/*aspel.cml.video.gl_set_attribute.attr*/, TYPE$16 V$50373336/*aspel.cml.video.gl_set_attribute.value*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$16))(((CORE$DELEGATE)V$47866480/*aspel.cml.video.SDL_GL_SetAttribute*/)))((V$50373272/*aspel.cml.video.gl_set_attribute.attr*/), (V$50373336/*aspel.cml.video.gl_set_attribute.value*/));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47865040/*aspel.cml.video.gl_reset_attributes*/()
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47866560/*aspel.cml.video.SDL_GL_ResetAttributes*/)))();
    }
}

TYPE$7 V$47865120/*aspel.cml.video.create_gl_context*/(TYPE$7 V$50373464/*aspel.cml.video.create_gl_context.win*/)
{
    {
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47865760/*aspel.cml.video.SDL_GL_CreateContext*/)))(CORE$cast_regular(TYPE$19, (V$50373464/*aspel.cml.video.create_gl_context.win*/))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47865200/*aspel.cml.video.delete_gl_context*/(TYPE$7 V$50373528/*aspel.cml.video.delete_gl_context.gl*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47865840/*aspel.cml.video.SDL_GL_DeleteContext*/)))(CORE$cast_regular(TYPE$19, (V$50373528/*aspel.cml.video.delete_gl_context.gl*/)));
    }
}

TYPE$6 V$47865280/*aspel.cml.video.gl_make_current*/(TYPE$7 V$50373848/*aspel.cml.video.gl_make_current.win*/, TYPE$7 V$50373912/*aspel.cml.video.gl_make_current.gl*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47865920/*aspel.cml.video.SDL_GL_MakeCurrent*/)))(CORE$cast_regular(TYPE$19, (V$50373848/*aspel.cml.video.gl_make_current.win*/)), CORE$cast_regular(TYPE$19, (V$50373912/*aspel.cml.video.gl_make_current.gl*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$7 V$47865360/*aspel.cml.video.gl_get_current_context*/()
{
    {
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)())(((CORE$DELEGATE)V$47866000/*aspel.cml.video.SDL_GL_GetCurrentContext*/)))());
    return RET$VAL;
    }
    }
}

TYPE$7 V$47865440/*aspel.cml.video.gl_get_current_window*/()
{
    {
    {
    TYPE$7 RET$VAL = CORE$cast_regular(TYPE$7, ((TYPE$19(*)())(((CORE$DELEGATE)V$47866080/*aspel.cml.video.SDL_GL_GetCurrentWindow*/)))());
    return RET$VAL;
    }
    }
}

TYPE$6 V$47865520/*aspel.cml.video.gl_set_vsync_mode*/(TYPE$16 V$50373976/*aspel.cml.video.gl_set_vsync_mode.mode*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$ne((((TYPE$16(*)(TYPE$16))(((CORE$DELEGATE)V$47866160/*aspel.cml.video.SDL_GL_SetSwapInterval*/)))((V$50373976/*aspel.cml.video.gl_set_vsync_mode.mode*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47865600/*aspel.cml.video.gl_swap_window*/(TYPE$7 V$50374040/*aspel.cml.video.gl_swap_window.win*/)
{
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$47866240/*aspel.cml.video.SDL_GL_SwapWindow*/)))(CORE$cast_regular(TYPE$19, (V$50374040/*aspel.cml.video.gl_swap_window.win*/)));
    }
}

TYPE$8 V$47865680/*aspel.cml.video.gl_get_drawable_size*/(TYPE$7 V$50374104/*aspel.cml.video.gl_get_drawable_size.win*/, TYPE$86 V$50374168/*aspel.cml.video.gl_get_drawable_size.width*/, TYPE$86 V$50374232/*aspel.cml.video.gl_get_drawable_size.height*/)
{
    {
    ((TYPE$8(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47866320/*aspel.cml.video.SDL_GL_GetDrawableSize*/)))(CORE$cast_regular(TYPE$19, (V$50374104/*aspel.cml.video.gl_get_drawable_size.win*/)), CORE$cast_regular(TYPE$19, (V$50374168/*aspel.cml.video.gl_get_drawable_size.width*/)), CORE$cast_regular(TYPE$19, (V$50374232/*aspel.cml.video.gl_get_drawable_size.height*/)));
    }
}

TYPE$6 V$47866640/*aspel.cml.initialize_cml_subsystems*/(TYPE$19 V$50374488/*aspel.cml.initialize_cml_subsystems.subsystem_mask*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$eq((((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47866880/*aspel.cml.SDL_Init*/)))((V$50374488/*aspel.cml.initialize_cml_subsystems.subsystem_mask*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47866720/*aspel.cml.uninitialize_cml_subsystems*/()
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47866960/*aspel.cml.SDL_Quit*/)))();
    }
}

TYPE$19 V$47866800/*aspel.cml.get_initialized_cml_subsystems*/()
{
    {
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47867040/*aspel.cml.SDL_WasInit*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47867120/*aspel.audio.directsound.directsound_backend_init*/(TYPE$272 V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)
{
    {
    if ((!(((TYPE$6(*)(TYPE$90,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$15379088/*aspel.thread.atomic.atomic_compare_and_swap*/)))(((CORE$PTR) &((V$50374616/*aspel.audio.directsound.directsound_context_exists*/))), CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL)), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$272 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50374680/*aspel.audio.directsound.the_directsound_context*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$272, TEMP$VAL0);
    }
    if ((!(((TYPE$6(*)())(((CORE$DELEGATE)V$47870640/*aspel.audio.directsound.initialize_directsound*/)))()))) {
    {
    {
    typedef TYPE$272 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$272, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50374680/*aspel.audio.directsound.the_directsound_context*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$272, TEMP$VAL0);
    }
    ((TYPE$16(*)(TYPE$90,TYPE$16))(((CORE$DELEGATE)V$15379248/*aspel.thread.atomic.atomic_set*/)))(((CORE$PTR) &((V$50374616/*aspel.audio.directsound.directsound_context_exists*/))), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m17));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m18));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$279 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$279{
    TYPE$279 TEMP$RESULT;
    { typedef TYPE$7 TEMP$TYPE;
      auto TEMP$VAL = CORE$null_pointer;
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$7, TEMP$VAL); }
    { typedef TYPE$1 TEMP$TYPE;
      auto TEMP$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306A430_OFF],(CORE$U64) SHARED$STR_306A430_LEN);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = (TEMP$VAL); }
    { typedef TYPE$88 TEMP$TYPE;
      auto TEMP$VAL = ([&]()->TYPE$88{
    TYPE$88 TEMP$RESULT;
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    return TEMP$RESULT;
}());
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_type_pun(TYPE$88, TEMP$VAL); }
    { typedef TYPE$280 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$280, CORE$null_pointer);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$280, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m15));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$279, TEMP$VAL0);
    }
    {
    typedef TYPE$279 TEMP$TYPE0;
    auto TEMP$VAL0 = (([&]()->TYPE$279{
    TYPE$279 TEMP$RESULT;
    { typedef TYPE$7 TEMP$TYPE;
      auto TEMP$VAL = CORE$null_pointer;
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$7, TEMP$VAL); }
    { typedef TYPE$1 TEMP$TYPE;
      auto TEMP$VAL = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306A4B0_OFF],(CORE$U64) SHARED$STR_306A4B0_LEN);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m1);
      *TEMP$PTR = (TEMP$VAL); }
    { typedef TYPE$88 TEMP$TYPE;
      auto TEMP$VAL = ([&]()->TYPE$88{
    TYPE$88 TEMP$RESULT;
    { typedef TYPE$16 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m0);
      *TEMP$PTR = CORE$cast_regular(TYPE$16, TEMP$VAL); }
    return TEMP$RESULT;
}());
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m2);
      *TEMP$PTR = CORE$cast_type_pun(TYPE$88, TEMP$VAL); }
    { typedef TYPE$280 TEMP$TYPE;
      auto TEMP$VAL = CORE$cast_regular(TYPE$280, CORE$null_pointer);
      TEMP$TYPE* TEMP$PTR = (TEMP$TYPE*)&(TEMP$RESULT.m3);
      *TEMP$PTR = CORE$cast_regular(TYPE$280, TEMP$VAL); }
    return TEMP$RESULT;
}()));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m16));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$279, TEMP$VAL0);
    }
    {
    typedef TYPE$285 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47867200/*aspel.audio.directsound.directsound_backend_uninit*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$285, TEMP$VAL0);
    }
    {
    typedef TYPE$285 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47870960/*aspel.audio.directsound.directsound_detect_devices*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$285, TEMP$VAL0);
    }
    {
    typedef TYPE$284 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871040/*aspel.audio.directsound.directsound_free_device_handle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$284, TEMP$VAL0);
    }
    {
    typedef TYPE$290 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871120/*aspel.audio.directsound.directsound_open_device*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$290, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871200/*aspel.audio.directsound.directsound_close_device*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$274 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871280/*aspel.audio.directsound.directsound_get_buffer*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$274, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871360/*aspel.audio.directsound.directsound_play*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871440/*aspel.audio.directsound.directsound_wait*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    typedef TYPE$278 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871520/*aspel.audio.directsound.directsound_input*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m8));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$278, TEMP$VAL0);
    }
    {
    typedef TYPE$277 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871600/*aspel.audio.directsound.directsound_flush_input*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$273*)((V$50374744/*aspel.audio.directsound.directsound_backend_init.context*/)))->m9));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$277, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47867200/*aspel.audio.directsound.directsound_backend_uninit*/(TYPE$272 V$50374808/*aspel.audio.directsound.directsound_backend_uninit.context*/)
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47870720/*aspel.audio.directsound.uninitialize_directsound*/)))();
    {
    typedef TYPE$272 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$272, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50374680/*aspel.audio.directsound.the_directsound_context*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$272, TEMP$VAL0);
    }
    ((TYPE$16(*)(TYPE$90,TYPE$16))(((CORE$DELEGATE)V$15379248/*aspel.thread.atomic.atomic_set*/)))(((CORE$PTR) &((V$50374616/*aspel.audio.directsound.directsound_context_exists*/))), CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL)));
    }
}

TYPE$16 V$47867280/*aspel.audio.directsound.IUnknown_QueryInterface*/(TYPE$19 V$50380696/*aspel.audio.directsound.IUnknown_QueryInterface._this*/, TYPE$19 V$50380760/*aspel.audio.directsound.IUnknown_QueryInterface.riid*/, TYPE$566 V$50380824/*aspel.audio.directsound.IUnknown_QueryInterface.ppvObject*/)
{
    {
    TYPE$565 V$50380952/*aspel.audio.directsound.IUnknown_QueryInterface.method*/ = (*(TYPE$565*)(CORE$cast_regular(TYPE$567, ((CORE$PTR) &((((TYPE$563*)(CORE$cast_regular(TYPE$569, (((TYPE$564*)(CORE$cast_regular(TYPE$570, (V$50380696/*aspel.audio.directsound.IUnknown_QueryInterface._this*/))))->m0))))->m0))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$566))((V$50380952/*aspel.audio.directsound.IUnknown_QueryInterface.method*/)))((V$50380696/*aspel.audio.directsound.IUnknown_QueryInterface._this*/), (V$50380760/*aspel.audio.directsound.IUnknown_QueryInterface.riid*/), (V$50380824/*aspel.audio.directsound.IUnknown_QueryInterface.ppvObject*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$47867360/*aspel.audio.directsound.IUnknown_AddRef*/(TYPE$19 V$50381016/*aspel.audio.directsound.IUnknown_AddRef._this*/)
{
    {
    TYPE$229 V$50381144/*aspel.audio.directsound.IUnknown_AddRef.method*/ = (*(TYPE$229*)(CORE$cast_regular(TYPE$571, ((CORE$PTR) &((((TYPE$563*)(CORE$cast_regular(TYPE$569, (((TYPE$564*)(CORE$cast_regular(TYPE$570, (V$50381016/*aspel.audio.directsound.IUnknown_AddRef._this*/))))->m0))))->m1))))));
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$19))((V$50381144/*aspel.audio.directsound.IUnknown_AddRef.method*/)))((V$50381016/*aspel.audio.directsound.IUnknown_AddRef._this*/));
    return RET$VAL;
    }
    }
}

TYPE$19 V$47867440/*aspel.audio.directsound.IUnknown_Release*/(TYPE$19 V$50381208/*aspel.audio.directsound.IUnknown_Release._this*/)
{
    {
    TYPE$229 V$50381336/*aspel.audio.directsound.IUnknown_Release.method*/ = (*(TYPE$229*)(CORE$cast_regular(TYPE$572, ((CORE$PTR) &((((TYPE$563*)(CORE$cast_regular(TYPE$569, (((TYPE$564*)(CORE$cast_regular(TYPE$570, (V$50381208/*aspel.audio.directsound.IUnknown_Release._this*/))))->m0))))->m2))))));
    {
    TYPE$19 RET$VAL = ((TYPE$19(*)(TYPE$19))((V$50381336/*aspel.audio.directsound.IUnknown_Release.method*/)))((V$50381208/*aspel.audio.directsound.IUnknown_Release._this*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47867520/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer*/(TYPE$19 V$50383512/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer._this*/, TYPE$19 V$50383576/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.pcDSBufferDesc*/, TYPE$19 V$50383640/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.ppDSBuffer*/, TYPE$19 V$50383704/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.pUnkOuter*/)
{
    {
    TYPE$575 V$50383832/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.method*/ = (*(TYPE$575*)(CORE$cast_regular(TYPE$576, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50383512/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer._this*/))))->m0))))->m1))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50383832/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.method*/)))((V$50383512/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer._this*/), (V$50383576/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.pcDSBufferDesc*/), (V$50383640/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.ppDSBuffer*/), (V$50383704/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer.pUnkOuter*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47867600/*aspel.audio.directsound.IDirectSound_GetCaps*/(TYPE$19 V$50383896/*aspel.audio.directsound.IDirectSound_GetCaps._this*/, TYPE$19 V$50383960/*aspel.audio.directsound.IDirectSound_GetCaps.pDSCaps*/)
{
    {
    TYPE$579 V$50384088/*aspel.audio.directsound.IDirectSound_GetCaps.method*/ = (*(TYPE$579*)(CORE$cast_regular(TYPE$580, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50383896/*aspel.audio.directsound.IDirectSound_GetCaps._this*/))))->m0))))->m2))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50384088/*aspel.audio.directsound.IDirectSound_GetCaps.method*/)))((V$50383896/*aspel.audio.directsound.IDirectSound_GetCaps._this*/), (V$50383960/*aspel.audio.directsound.IDirectSound_GetCaps.pDSCaps*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47867680/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer*/(TYPE$19 V$50384152/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer._this*/, TYPE$19 V$50384216/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer.pDSBufferOriginal*/, TYPE$19 V$50384280/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer.ppDSBufferDuplicate*/)
{
    {
    TYPE$581 V$50384408/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer.method*/ = (*(TYPE$581*)(CORE$cast_regular(TYPE$582, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50384152/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer._this*/))))->m0))))->m3))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))((V$50384408/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer.method*/)))((V$50384152/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer._this*/), (V$50384216/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer.pDSBufferOriginal*/), (V$50384280/*aspel.audio.directsound.IDirectSound_DuplicateSoundBuffer.ppDSBufferDuplicate*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47867760/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel*/(TYPE$19 V$50384472/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel._this*/, TYPE$19 V$50384536/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel.hwnd*/, TYPE$19 V$50384600/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel.dwLevel*/)
{
    {
    TYPE$583 V$50384728/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel.method*/ = (*(TYPE$583*)(CORE$cast_regular(TYPE$584, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50384472/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel._this*/))))->m0))))->m4))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))((V$50384728/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel.method*/)))((V$50384472/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel._this*/), (V$50384536/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel.hwnd*/), (V$50384600/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel.dwLevel*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47867840/*aspel.audio.directsound.IDirectSound_Compact*/(TYPE$19 V$50384792/*aspel.audio.directsound.IDirectSound_Compact._this*/)
{
    {
    TYPE$585 V$50384920/*aspel.audio.directsound.IDirectSound_Compact.method*/ = (*(TYPE$585*)(CORE$cast_regular(TYPE$586, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50384792/*aspel.audio.directsound.IDirectSound_Compact._this*/))))->m0))))->m5))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19))((V$50384920/*aspel.audio.directsound.IDirectSound_Compact.method*/)))((V$50384792/*aspel.audio.directsound.IDirectSound_Compact._this*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47867920/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig*/(TYPE$19 V$50384984/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig._this*/, TYPE$19 V$50385048/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig.pdwSpeakerConfig*/)
{
    {
    TYPE$587 V$50385176/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig.method*/ = (*(TYPE$587*)(CORE$cast_regular(TYPE$588, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50384984/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig._this*/))))->m0))))->m6))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50385176/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig.method*/)))((V$50384984/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig._this*/), (V$50385048/*aspel.audio.directsound.IDirectSound_GetSpeakerConfig.pdwSpeakerConfig*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868000/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig*/(TYPE$19 V$50385240/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig._this*/, TYPE$19 V$50385304/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig.dwSpeakerConfig*/)
{
    {
    TYPE$589 V$50385432/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig.method*/ = (*(TYPE$589*)(CORE$cast_regular(TYPE$590, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50385240/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig._this*/))))->m0))))->m7))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50385432/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig.method*/)))((V$50385240/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig._this*/), (V$50385304/*aspel.audio.directsound.IDirectSound_SetSpeakerConfig.dwSpeakerConfig*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868080/*aspel.audio.directsound.IDirectSound_Initialize*/(TYPE$19 V$50385496/*aspel.audio.directsound.IDirectSound_Initialize._this*/, TYPE$19 V$50385560/*aspel.audio.directsound.IDirectSound_Initialize.pcGuidDevice*/)
{
    {
    TYPE$591 V$50385688/*aspel.audio.directsound.IDirectSound_Initialize.method*/ = (*(TYPE$591*)(CORE$cast_regular(TYPE$592, ((CORE$PTR) &((((TYPE$573*)(CORE$cast_regular(TYPE$577, (((TYPE$574*)(CORE$cast_regular(TYPE$578, (V$50385496/*aspel.audio.directsound.IDirectSound_Initialize._this*/))))->m0))))->m8))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50385688/*aspel.audio.directsound.IDirectSound_Initialize.method*/)))((V$50385496/*aspel.audio.directsound.IDirectSound_Initialize._this*/), (V$50385560/*aspel.audio.directsound.IDirectSound_Initialize.pcGuidDevice*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868160/*aspel.audio.directsound.IDirectSound8_VerifyCertification*/(TYPE$19 V$50386264/*aspel.audio.directsound.IDirectSound8_VerifyCertification._this*/, TYPE$19 V$50386328/*aspel.audio.directsound.IDirectSound8_VerifyCertification.pdwCertified*/)
{
    {
    TYPE$595 V$50386456/*aspel.audio.directsound.IDirectSound8_VerifyCertification.method*/ = (*(TYPE$595*)(CORE$cast_regular(TYPE$596, ((CORE$PTR) &((((TYPE$593*)(CORE$cast_regular(TYPE$597, (((TYPE$594*)(CORE$cast_regular(TYPE$598, (V$50386264/*aspel.audio.directsound.IDirectSound8_VerifyCertification._this*/))))->m0))))->m1))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50386456/*aspel.audio.directsound.IDirectSound8_VerifyCertification.method*/)))((V$50386264/*aspel.audio.directsound.IDirectSound8_VerifyCertification._this*/), (V$50386328/*aspel.audio.directsound.IDirectSound8_VerifyCertification.pdwCertified*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868240/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps*/(TYPE$19 V$50388120/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps._this*/, TYPE$19 V$50388184/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps.pDSBufferCaps*/)
{
    {
    TYPE$601 V$50388312/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps.method*/ = (*(TYPE$601*)(CORE$cast_regular(TYPE$602, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50388120/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps._this*/))))->m0))))->m1))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50388312/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps.method*/)))((V$50388120/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps._this*/), (V$50388184/*aspel.audio.directsound.IDirectSoundBuffer_GetCaps.pDSBufferCaps*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868320/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition*/(TYPE$19 V$50388376/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition._this*/, TYPE$19 V$50388440/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition.pdwCurrentPlayCursor*/, TYPE$19 V$50388504/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition.pdwCurrentWriteCursor*/)
{
    {
    TYPE$605 V$50388632/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition.method*/ = (*(TYPE$605*)(CORE$cast_regular(TYPE$606, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50388376/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition._this*/))))->m0))))->m2))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))((V$50388632/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition.method*/)))((V$50388376/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition._this*/), (V$50388440/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition.pdwCurrentPlayCursor*/), (V$50388504/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition.pdwCurrentWriteCursor*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868400/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat*/(TYPE$19 V$50388696/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat._this*/, TYPE$19 V$50388760/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.pwfxFormat*/, TYPE$19 V$50388824/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.dwSizeAllocated*/, TYPE$19 V$50388888/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.pdwSizeWritten*/)
{
    {
    TYPE$607 V$50389016/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.method*/ = (*(TYPE$607*)(CORE$cast_regular(TYPE$608, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50388696/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat._this*/))))->m0))))->m3))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50389016/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.method*/)))((V$50388696/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat._this*/), (V$50388760/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.pwfxFormat*/), (V$50388824/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.dwSizeAllocated*/), (V$50388888/*aspel.audio.directsound.IDirectSoundBuffer_GetFormat.pdwSizeWritten*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868480/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume*/(TYPE$19 V$50389080/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume._this*/, TYPE$19 V$50389144/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume.plVolume*/)
{
    {
    TYPE$609 V$50389272/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume.method*/ = (*(TYPE$609*)(CORE$cast_regular(TYPE$610, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50389080/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume._this*/))))->m0))))->m4))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50389272/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume.method*/)))((V$50389080/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume._this*/), (V$50389144/*aspel.audio.directsound.IDirectSoundBuffer_GetVolume.plVolume*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868560/*aspel.audio.directsound.IDirectSoundBuffer_GetPan*/(TYPE$19 V$50389336/*aspel.audio.directsound.IDirectSoundBuffer_GetPan._this*/, TYPE$19 V$50389400/*aspel.audio.directsound.IDirectSoundBuffer_GetPan.plPan*/)
{
    {
    TYPE$609 V$50389528/*aspel.audio.directsound.IDirectSoundBuffer_GetPan.method*/ = (*(TYPE$609*)(CORE$cast_regular(TYPE$611, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50389336/*aspel.audio.directsound.IDirectSoundBuffer_GetPan._this*/))))->m0))))->m5))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50389528/*aspel.audio.directsound.IDirectSoundBuffer_GetPan.method*/)))((V$50389336/*aspel.audio.directsound.IDirectSoundBuffer_GetPan._this*/), (V$50389400/*aspel.audio.directsound.IDirectSoundBuffer_GetPan.plPan*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868640/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency*/(TYPE$19 V$50389592/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency._this*/, TYPE$19 V$50389656/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency.pdwFrequency*/)
{
    {
    TYPE$612 V$50389784/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency.method*/ = (*(TYPE$612*)(CORE$cast_regular(TYPE$613, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50389592/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency._this*/))))->m0))))->m6))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50389784/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency.method*/)))((V$50389592/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency._this*/), (V$50389656/*aspel.audio.directsound.IDirectSoundBuffer_GetFrequency.pdwFrequency*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868720/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus*/(TYPE$19 V$50389848/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus._this*/, TYPE$19 V$50389912/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus.pdwStatus*/)
{
    {
    TYPE$612 V$50390040/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus.method*/ = (*(TYPE$612*)(CORE$cast_regular(TYPE$614, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50389848/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus._this*/))))->m0))))->m7))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50390040/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus.method*/)))((V$50389848/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus._this*/), (V$50389912/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus.pdwStatus*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868800/*aspel.audio.directsound.IDirectSoundBuffer_Initialize*/(TYPE$19 V$50390104/*aspel.audio.directsound.IDirectSoundBuffer_Initialize._this*/, TYPE$19 V$50390168/*aspel.audio.directsound.IDirectSoundBuffer_Initialize.pDirectSound*/, TYPE$19 V$50390232/*aspel.audio.directsound.IDirectSoundBuffer_Initialize.pDSBufferDesc*/)
{
    {
    TYPE$615 V$50390360/*aspel.audio.directsound.IDirectSoundBuffer_Initialize.method*/ = (*(TYPE$615*)(CORE$cast_regular(TYPE$616, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50390104/*aspel.audio.directsound.IDirectSoundBuffer_Initialize._this*/))))->m0))))->m8))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))((V$50390360/*aspel.audio.directsound.IDirectSoundBuffer_Initialize.method*/)))((V$50390104/*aspel.audio.directsound.IDirectSoundBuffer_Initialize._this*/), (V$50390168/*aspel.audio.directsound.IDirectSoundBuffer_Initialize.pDirectSound*/), (V$50390232/*aspel.audio.directsound.IDirectSoundBuffer_Initialize.pDSBufferDesc*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868880/*aspel.audio.directsound.IDirectSoundBuffer_Lock*/(TYPE$19 V$50390424/*aspel.audio.directsound.IDirectSoundBuffer_Lock._this*/, TYPE$19 V$50390488/*aspel.audio.directsound.IDirectSoundBuffer_Lock.dwOffset*/, TYPE$19 V$50390552/*aspel.audio.directsound.IDirectSoundBuffer_Lock.dwBytes*/, TYPE$19 V$50390616/*aspel.audio.directsound.IDirectSoundBuffer_Lock.ppvAudioPtr1*/, TYPE$19 V$50390680/*aspel.audio.directsound.IDirectSoundBuffer_Lock.pdwAudioBytes1*/, TYPE$19 V$50390744/*aspel.audio.directsound.IDirectSoundBuffer_Lock.ppvAudioPtr2*/, TYPE$19 V$50390808/*aspel.audio.directsound.IDirectSoundBuffer_Lock.pdwAudioBytes2*/, TYPE$19 V$50390872/*aspel.audio.directsound.IDirectSoundBuffer_Lock.dwFlags*/)
{
    {
    TYPE$617 V$50391000/*aspel.audio.directsound.IDirectSoundBuffer_Lock.method*/ = (*(TYPE$617*)(CORE$cast_regular(TYPE$618, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50390424/*aspel.audio.directsound.IDirectSoundBuffer_Lock._this*/))))->m0))))->m9))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50391000/*aspel.audio.directsound.IDirectSoundBuffer_Lock.method*/)))((V$50390424/*aspel.audio.directsound.IDirectSoundBuffer_Lock._this*/), (V$50390488/*aspel.audio.directsound.IDirectSoundBuffer_Lock.dwOffset*/), (V$50390552/*aspel.audio.directsound.IDirectSoundBuffer_Lock.dwBytes*/), (V$50390616/*aspel.audio.directsound.IDirectSoundBuffer_Lock.ppvAudioPtr1*/), (V$50390680/*aspel.audio.directsound.IDirectSoundBuffer_Lock.pdwAudioBytes1*/), (V$50390744/*aspel.audio.directsound.IDirectSoundBuffer_Lock.ppvAudioPtr2*/), (V$50390808/*aspel.audio.directsound.IDirectSoundBuffer_Lock.pdwAudioBytes2*/), (V$50390872/*aspel.audio.directsound.IDirectSoundBuffer_Lock.dwFlags*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47868960/*aspel.audio.directsound.IDirectSoundBuffer_Play*/(TYPE$19 V$50391064/*aspel.audio.directsound.IDirectSoundBuffer_Play._this*/, TYPE$19 V$50391128/*aspel.audio.directsound.IDirectSoundBuffer_Play.dwReserved1*/, TYPE$19 V$50391192/*aspel.audio.directsound.IDirectSoundBuffer_Play.dwPriority*/, TYPE$19 V$50391256/*aspel.audio.directsound.IDirectSoundBuffer_Play.dwFlags*/)
{
    {
    TYPE$619 V$50391384/*aspel.audio.directsound.IDirectSoundBuffer_Play.method*/ = (*(TYPE$619*)(CORE$cast_regular(TYPE$620, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50391064/*aspel.audio.directsound.IDirectSoundBuffer_Play._this*/))))->m0))))->m10))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50391384/*aspel.audio.directsound.IDirectSoundBuffer_Play.method*/)))((V$50391064/*aspel.audio.directsound.IDirectSoundBuffer_Play._this*/), (V$50391128/*aspel.audio.directsound.IDirectSoundBuffer_Play.dwReserved1*/), (V$50391192/*aspel.audio.directsound.IDirectSoundBuffer_Play.dwPriority*/), (V$50391256/*aspel.audio.directsound.IDirectSoundBuffer_Play.dwFlags*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869040/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition*/(TYPE$19 V$50391448/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition._this*/, TYPE$19 V$50391512/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition.dwNewPosition*/)
{
    {
    TYPE$621 V$50391640/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition.method*/ = (*(TYPE$621*)(CORE$cast_regular(TYPE$622, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50391448/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition._this*/))))->m0))))->m11))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50391640/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition.method*/)))((V$50391448/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition._this*/), (V$50391512/*aspel.audio.directsound.IDirectSoundBuffer_SetCurrentPosition.dwNewPosition*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869120/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat*/(TYPE$19 V$50391704/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat._this*/, TYPE$19 V$50391768/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat.pfxFormat*/)
{
    {
    TYPE$623 V$50391896/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat.method*/ = (*(TYPE$623*)(CORE$cast_regular(TYPE$624, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50391704/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat._this*/))))->m0))))->m12))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50391896/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat.method*/)))((V$50391704/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat._this*/), (V$50391768/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat.pfxFormat*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869200/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume*/(TYPE$19 V$50391960/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume._this*/, TYPE$16 V$50392024/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume.lVolume*/)
{
    {
    TYPE$625 V$50392152/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume.method*/ = (*(TYPE$625*)(CORE$cast_regular(TYPE$626, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50391960/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume._this*/))))->m0))))->m13))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$16))((V$50392152/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume.method*/)))((V$50391960/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume._this*/), (V$50392024/*aspel.audio.directsound.IDirectSoundBuffer_SetVolume.lVolume*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869280/*aspel.audio.directsound.IDirectSoundBuffer_SetPan*/(TYPE$19 V$50392216/*aspel.audio.directsound.IDirectSoundBuffer_SetPan._this*/, TYPE$16 V$50392280/*aspel.audio.directsound.IDirectSoundBuffer_SetPan.lPan*/)
{
    {
    TYPE$625 V$50392408/*aspel.audio.directsound.IDirectSoundBuffer_SetPan.method*/ = (*(TYPE$625*)(CORE$cast_regular(TYPE$627, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50392216/*aspel.audio.directsound.IDirectSoundBuffer_SetPan._this*/))))->m0))))->m14))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$16))((V$50392408/*aspel.audio.directsound.IDirectSoundBuffer_SetPan.method*/)))((V$50392216/*aspel.audio.directsound.IDirectSoundBuffer_SetPan._this*/), (V$50392280/*aspel.audio.directsound.IDirectSoundBuffer_SetPan.lPan*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869360/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency*/(TYPE$19 V$50392472/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency._this*/, TYPE$19 V$50392536/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency.dwFrequency*/)
{
    {
    TYPE$621 V$50392664/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency.method*/ = (*(TYPE$621*)(CORE$cast_regular(TYPE$628, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50392472/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency._this*/))))->m0))))->m15))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50392664/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency.method*/)))((V$50392472/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency._this*/), (V$50392536/*aspel.audio.directsound.IDirectSoundBuffer_SetFrequency.dwFrequency*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869440/*aspel.audio.directsound.IDirectSoundBuffer_Stop*/(TYPE$19 V$50392728/*aspel.audio.directsound.IDirectSoundBuffer_Stop._this*/)
{
    {
    TYPE$629 V$50392856/*aspel.audio.directsound.IDirectSoundBuffer_Stop.method*/ = (*(TYPE$629*)(CORE$cast_regular(TYPE$630, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50392728/*aspel.audio.directsound.IDirectSoundBuffer_Stop._this*/))))->m0))))->m16))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19))((V$50392856/*aspel.audio.directsound.IDirectSoundBuffer_Stop.method*/)))((V$50392728/*aspel.audio.directsound.IDirectSoundBuffer_Stop._this*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869520/*aspel.audio.directsound.IDirectSoundBuffer_Unlock*/(TYPE$19 V$50392920/*aspel.audio.directsound.IDirectSoundBuffer_Unlock._this*/, TYPE$19 V$50392984/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.pvAudioPtr1*/, TYPE$19 V$50393048/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.dwAudioBytes1*/, TYPE$19 V$50393112/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.pvAudioPtr2*/, TYPE$19 V$50393176/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.dwAudioBytes2*/)
{
    {
    TYPE$631 V$50393304/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.method*/ = (*(TYPE$631*)(CORE$cast_regular(TYPE$632, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50392920/*aspel.audio.directsound.IDirectSoundBuffer_Unlock._this*/))))->m0))))->m17))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50393304/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.method*/)))((V$50392920/*aspel.audio.directsound.IDirectSoundBuffer_Unlock._this*/), (V$50392984/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.pvAudioPtr1*/), (V$50393048/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.dwAudioBytes1*/), (V$50393112/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.pvAudioPtr2*/), (V$50393176/*aspel.audio.directsound.IDirectSoundBuffer_Unlock.dwAudioBytes2*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869600/*aspel.audio.directsound.IDirectSoundBuffer_Restore*/(TYPE$19 V$50393368/*aspel.audio.directsound.IDirectSoundBuffer_Restore._this*/)
{
    {
    TYPE$629 V$50393496/*aspel.audio.directsound.IDirectSoundBuffer_Restore.method*/ = (*(TYPE$629*)(CORE$cast_regular(TYPE$633, ((CORE$PTR) &((((TYPE$599*)(CORE$cast_regular(TYPE$603, (((TYPE$600*)(CORE$cast_regular(TYPE$604, (V$50393368/*aspel.audio.directsound.IDirectSoundBuffer_Restore._this*/))))->m0))))->m18))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19))((V$50393496/*aspel.audio.directsound.IDirectSoundBuffer_Restore.method*/)))((V$50393368/*aspel.audio.directsound.IDirectSoundBuffer_Restore._this*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869680/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer*/(TYPE$19 V$50396184/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer._this*/, TYPE$19 V$50396248/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.pDSCBufferDesc*/, TYPE$19 V$50396312/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.ppDSCBuffer*/, TYPE$19 V$50396376/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.pUnkOuter*/)
{
    {
    TYPE$637 V$50396504/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.method*/ = (*(TYPE$637*)(CORE$cast_regular(TYPE$638, ((CORE$PTR) &((((TYPE$635*)(CORE$cast_regular(TYPE$639, (((TYPE$636*)(CORE$cast_regular(TYPE$640, (V$50396184/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer._this*/))))->m0))))->m1))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50396504/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.method*/)))((V$50396184/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer._this*/), (V$50396248/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.pDSCBufferDesc*/), (V$50396312/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.ppDSCBuffer*/), (V$50396376/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer.pUnkOuter*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869760/*aspel.audio.directsound.IDirectSoundCapture_GetCaps*/(TYPE$19 V$50396568/*aspel.audio.directsound.IDirectSoundCapture_GetCaps._this*/, TYPE$19 V$50396632/*aspel.audio.directsound.IDirectSoundCapture_GetCaps.pDSCCaps*/)
{
    {
    TYPE$641 V$50396760/*aspel.audio.directsound.IDirectSoundCapture_GetCaps.method*/ = (*(TYPE$641*)(CORE$cast_regular(TYPE$642, ((CORE$PTR) &((((TYPE$635*)(CORE$cast_regular(TYPE$639, (((TYPE$636*)(CORE$cast_regular(TYPE$640, (V$50396568/*aspel.audio.directsound.IDirectSoundCapture_GetCaps._this*/))))->m0))))->m2))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50396760/*aspel.audio.directsound.IDirectSoundCapture_GetCaps.method*/)))((V$50396568/*aspel.audio.directsound.IDirectSoundCapture_GetCaps._this*/), (V$50396632/*aspel.audio.directsound.IDirectSoundCapture_GetCaps.pDSCCaps*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869840/*aspel.audio.directsound.IDirectSoundCapture_Initialize*/(TYPE$19 V$50396824/*aspel.audio.directsound.IDirectSoundCapture_Initialize._this*/, TYPE$19 V$50396888/*aspel.audio.directsound.IDirectSoundCapture_Initialize.pGuidDevice*/)
{
    {
    TYPE$643 V$50397016/*aspel.audio.directsound.IDirectSoundCapture_Initialize.method*/ = (*(TYPE$643*)(CORE$cast_regular(TYPE$644, ((CORE$PTR) &((((TYPE$635*)(CORE$cast_regular(TYPE$639, (((TYPE$636*)(CORE$cast_regular(TYPE$640, (V$50396824/*aspel.audio.directsound.IDirectSoundCapture_Initialize._this*/))))->m0))))->m3))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50397016/*aspel.audio.directsound.IDirectSoundCapture_Initialize.method*/)))((V$50396824/*aspel.audio.directsound.IDirectSoundCapture_Initialize._this*/), (V$50396888/*aspel.audio.directsound.IDirectSoundCapture_Initialize.pGuidDevice*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47869920/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps*/(TYPE$19 V$50398296/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps._this*/, TYPE$19 V$50398360/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps.pDSCBCaps*/)
{
    {
    TYPE$647 V$50398488/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps.method*/ = (*(TYPE$647*)(CORE$cast_regular(TYPE$648, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50398296/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps._this*/))))->m0))))->m1))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50398488/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps.method*/)))((V$50398296/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps._this*/), (V$50398360/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCaps.pDSCBCaps*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870000/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition*/(TYPE$19 V$50398552/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition._this*/, TYPE$19 V$50398616/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition.pdwCapturePosition*/, TYPE$19 V$50398680/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition.pdwReadPosition*/)
{
    {
    TYPE$651 V$50398808/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition.method*/ = (*(TYPE$651*)(CORE$cast_regular(TYPE$652, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50398552/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition._this*/))))->m0))))->m2))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))((V$50398808/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition.method*/)))((V$50398552/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition._this*/), (V$50398616/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition.pdwCapturePosition*/), (V$50398680/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition.pdwReadPosition*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870080/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat*/(TYPE$19 V$50398872/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat._this*/, TYPE$19 V$50398936/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.pwfxFormat*/, TYPE$19 V$50399000/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.dwSizeAllocated*/, TYPE$19 V$50399064/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.pdwSizeWritten*/)
{
    {
    TYPE$653 V$50399192/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.method*/ = (*(TYPE$653*)(CORE$cast_regular(TYPE$654, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50398872/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat._this*/))))->m0))))->m3))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50399192/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.method*/)))((V$50398872/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat._this*/), (V$50398936/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.pwfxFormat*/), (V$50399000/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.dwSizeAllocated*/), (V$50399064/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetFormat.pdwSizeWritten*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870160/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus*/(TYPE$19 V$50399256/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus._this*/, TYPE$19 V$50399320/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus.pdwStatus*/)
{
    {
    TYPE$655 V$50399448/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus.method*/ = (*(TYPE$655*)(CORE$cast_regular(TYPE$656, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50399256/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus._this*/))))->m0))))->m4))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50399448/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus.method*/)))((V$50399256/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus._this*/), (V$50399320/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetStatus.pdwStatus*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870240/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize*/(TYPE$19 V$50399512/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize._this*/, TYPE$19 V$50399576/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize.pDirectSoundCapture*/, TYPE$19 V$50399640/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize.pDSCBufferDesc*/)
{
    {
    TYPE$657 V$50399768/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize.method*/ = (*(TYPE$657*)(CORE$cast_regular(TYPE$658, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50399512/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize._this*/))))->m0))))->m5))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))((V$50399768/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize.method*/)))((V$50399512/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize._this*/), (V$50399576/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize.pDirectSoundCapture*/), (V$50399640/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Initialize.pDSCBufferDesc*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870320/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock*/(TYPE$19 V$50399832/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock._this*/, TYPE$19 V$50399896/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.dwOffset*/, TYPE$19 V$50399960/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.dwBytes*/, TYPE$19 V$50400024/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.ppvAudioPtr1*/, TYPE$19 V$50400088/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.pdwAudioBytes1*/, TYPE$19 V$50400152/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.ppvAudioPtr2*/, TYPE$19 V$50400216/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.pdwAudioBytes2*/, TYPE$19 V$50400280/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.dwFlags*/)
{
    {
    TYPE$659 V$50400408/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.method*/ = (*(TYPE$659*)(CORE$cast_regular(TYPE$660, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50399832/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock._this*/))))->m0))))->m6))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50400408/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.method*/)))((V$50399832/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock._this*/), (V$50399896/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.dwOffset*/), (V$50399960/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.dwBytes*/), (V$50400024/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.ppvAudioPtr1*/), (V$50400088/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.pdwAudioBytes1*/), (V$50400152/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.ppvAudioPtr2*/), (V$50400216/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.pdwAudioBytes2*/), (V$50400280/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock.dwFlags*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870400/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start*/(TYPE$19 V$50400472/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start._this*/, TYPE$19 V$50400536/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start.dwFlags*/)
{
    {
    TYPE$661 V$50400664/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start.method*/ = (*(TYPE$661*)(CORE$cast_regular(TYPE$662, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50400472/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start._this*/))))->m0))))->m7))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19))((V$50400664/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start.method*/)))((V$50400472/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start._this*/), (V$50400536/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start.dwFlags*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870480/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop*/(TYPE$19 V$50400728/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop._this*/)
{
    {
    TYPE$663 V$50400856/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop.method*/ = (*(TYPE$663*)(CORE$cast_regular(TYPE$664, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50400728/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop._this*/))))->m0))))->m8))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19))((V$50400856/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop.method*/)))((V$50400728/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop._this*/));
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870560/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock*/(TYPE$19 V$50400920/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock._this*/, TYPE$19 V$50400984/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.pvAudioPtr1*/, TYPE$19 V$50401048/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.dwAudioBytes1*/, TYPE$19 V$50401112/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.pvAudioPtr2*/, TYPE$19 V$50401176/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.dwAudioBytes2*/)
{
    {
    TYPE$665 V$50401304/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.method*/ = (*(TYPE$665*)(CORE$cast_regular(TYPE$666, ((CORE$PTR) &((((TYPE$645*)(CORE$cast_regular(TYPE$649, (((TYPE$646*)(CORE$cast_regular(TYPE$650, (V$50400920/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock._this*/))))->m0))))->m9))))));
    {
    TYPE$16 RET$VAL = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))((V$50401304/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.method*/)))((V$50400920/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock._this*/), (V$50400984/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.pvAudioPtr1*/), (V$50401048/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.dwAudioBytes1*/), (V$50401112/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.pvAudioPtr2*/), (V$50401176/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock.dwAudioBytes2*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47870640/*aspel.audio.directsound.initialize_directsound*/()
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47870720/*aspel.audio.directsound.uninitialize_directsound*/)))();
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$7(*)(TYPE$1))(((CORE$DELEGATE)V$15387168/*aspel.system.load_shared_object*/)))(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306F8D0_OFF],(CORE$U64) SHARED$STR_306F8D0_LEN)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401624/*aspel.audio.directsound.dsound*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    if (CORE$eq(((V$50401624/*aspel.audio.directsound.dsound*/)),((V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$667 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$667>(((TYPE$35(*)(TYPE$7,TYPE$1,TYPE$169))(((CORE$DELEGATE)V$15387408/*aspel.system.lookup_function_address*/)))((V$50401624/*aspel.audio.directsound.dsound*/), CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306F9D0_OFF],(CORE$U64) SHARED$STR_306F9D0_LEN), ((CORE$TYPEID)(667)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401688/*aspel.audio.directsound.DirectSoundCreate8*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$667, TEMP$VAL0);
    }
    {
    typedef TYPE$668 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$668>(((TYPE$35(*)(TYPE$7,TYPE$1,TYPE$169))(((CORE$DELEGATE)V$15387408/*aspel.system.lookup_function_address*/)))((V$50401624/*aspel.audio.directsound.dsound*/), CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306FA90_OFF],(CORE$U64) SHARED$STR_306FA90_LEN), ((CORE$TYPEID)(668)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401752/*aspel.audio.directsound.DirectSoundEnumerate*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$668, TEMP$VAL0);
    }
    {
    typedef TYPE$669 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$669>(((TYPE$35(*)(TYPE$7,TYPE$1,TYPE$169))(((CORE$DELEGATE)V$15387408/*aspel.system.lookup_function_address*/)))((V$50401624/*aspel.audio.directsound.dsound*/), CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306FB50_OFF],(CORE$U64) SHARED$STR_306FB50_LEN), ((CORE$TYPEID)(669)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401816/*aspel.audio.directsound.DirectSoundCaptureCreate8*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$669, TEMP$VAL0);
    }
    {
    typedef TYPE$668 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$UNPACK<TYPE$668>(((TYPE$35(*)(TYPE$7,TYPE$1,TYPE$169))(((CORE$DELEGATE)V$15387408/*aspel.system.lookup_function_address*/)))((V$50401624/*aspel.audio.directsound.dsound*/), CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_306FC10_OFF],(CORE$U64) SHARED$STR_306FC10_LEN), ((CORE$TYPEID)(668)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401880/*aspel.audio.directsound.DirectSoundCaptureEnumerate*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$668, TEMP$VAL0);
    }
    if (CORE$lor((CORE$lor((CORE$lor((CORE$eq(((V$50401688/*aspel.audio.directsound.DirectSoundCreate8*/)),(CORE$null_delegate))),(CORE$eq(((V$50401752/*aspel.audio.directsound.DirectSoundEnumerate*/)),(CORE$null_delegate))))),(CORE$eq(((V$50401816/*aspel.audio.directsound.DirectSoundCaptureCreate8*/)),(CORE$null_delegate))))),(CORE$eq(((V$50401880/*aspel.audio.directsound.DirectSoundCaptureEnumerate*/)),(CORE$null_delegate))))) {
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$47870720/*aspel.audio.directsound.uninitialize_directsound*/)))();
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47870720/*aspel.audio.directsound.uninitialize_directsound*/()
{
    {
    {
    typedef TYPE$667 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_delegate);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401688/*aspel.audio.directsound.DirectSoundCreate8*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$667, TEMP$VAL0);
    }
    {
    typedef TYPE$668 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_delegate);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401752/*aspel.audio.directsound.DirectSoundEnumerate*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$668, TEMP$VAL0);
    }
    {
    typedef TYPE$669 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_delegate);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401816/*aspel.audio.directsound.DirectSoundCaptureCreate8*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$669, TEMP$VAL0);
    }
    {
    typedef TYPE$668 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_delegate);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401880/*aspel.audio.directsound.DirectSoundCaptureEnumerate*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$668, TEMP$VAL0);
    }
    if (CORE$ne(((V$50401624/*aspel.audio.directsound.dsound*/)),((V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/)))) {
    {
    ((TYPE$8(*)(TYPE$7))(((CORE$DELEGATE)V$15387248/*aspel.system.unload_shared_object*/)))((V$50401624/*aspel.audio.directsound.dsound*/));
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$46969952/*aspel.system.INVALID_SHARED_OBJECT*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50401624/*aspel.audio.directsound.dsound*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$1 V$47870800/*aspel.audio.directsound.find_device_name*/(TYPE$671 V$50401944/*aspel.audio.directsound.find_device_name.guid*/, TYPE$19 V$50402008/*aspel.audio.directsound.find_device_name.fallback_name*/)
{
    {
    TYPE$19 V$50402072/*aspel.audio.directsound.find_device_name.name*/ = (V$50402008/*aspel.audio.directsound.find_device_name.fallback_name*/);
    TYPE$30 V$50402136/*aspel.audio.directsound.find_device_name.name16*/;
    {
    typedef TYPE$31 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$31, (V$50402072/*aspel.audio.directsound.find_device_name.name*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50402136/*aspel.audio.directsound.find_device_name.name16*/).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$31, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50402136/*aspel.audio.directsound.find_device_name.name16*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    while (CORE$ne((((TYPE$28*)(((V$50402136/*aspel.audio.directsound.find_device_name.name16*/).a)))[(CORE$U64)(((V$50402136/*aspel.audio.directsound.find_device_name.name16*/).n))]),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50402136/*aspel.audio.directsound.find_device_name.name16*/).n));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    TYPE$5 V$50402200/*aspel.audio.directsound.find_device_name.name8_length*/ = ((TYPE$5(*)(TYPE$30))(((CORE$DELEGATE)V$15386448/*aspel.text.length_utf16_as_utf8*/)))((V$50402136/*aspel.audio.directsound.find_device_name.name16*/));
    TYPE$1 V$50402264/*aspel.audio.directsound.find_device_name.name8*/ = CORE$NEWARRINIT((CORE$U64)((V$50402200/*aspel.audio.directsound.find_device_name.name8_length*/)), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    if (CORE$eq((CORE$cast_array_to_ptr((V$50402264/*aspel.audio.directsound.find_device_name.name8*/))),(CORE$null_pointer))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$19(*)(TYPE$30,TYPE$1))(((CORE$DELEGATE)V$15386768/*aspel.text.convert_utf16_to_utf8*/)))((V$50402136/*aspel.audio.directsound.find_device_name.name16*/), (V$50402264/*aspel.audio.directsound.find_device_name.name8*/))),((V$46966304/*aspel.text.UTF_CONVERSION_OK*/)))) {
    {
    CORE$DEL((void*)(((V$50402264/*aspel.audio.directsound.find_device_name.name8*/)).a));    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    TYPE$1 RET$VAL = (V$50402264/*aspel.audio.directsound.find_device_name.name8*/);
    return RET$VAL;
    }
    }
}

TYPE$16 V$47870880/*aspel.audio.directsound.device_callback*/(TYPE$19 V$50402328/*aspel.audio.directsound.device_callback.guid*/, TYPE$19 V$50402392/*aspel.audio.directsound.device_callback.description*/, TYPE$19 V$50402456/*aspel.audio.directsound.device_callback.module*/, TYPE$19 V$50402520/*aspel.audio.directsound.device_callback.context*/)
{
    {
    TYPE$6 V$50402584/*aspel.audio.directsound.device_callback.is_input*/ = CORE$cast_to_bool((V$50402520/*aspel.audio.directsound.device_callback.context*/));
    if (CORE$ne(((V$50402328/*aspel.audio.directsound.device_callback.guid*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$671 V$50402648/*aspel.audio.directsound.device_callback..handle*/ = (CORE$PTR)(CORE$NEW(16));
    if (CORE$eq(((V$50402648/*aspel.audio.directsound.device_callback..handle*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$558 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$558*)(CORE$cast_regular(TYPE$671, (V$50402328/*aspel.audio.directsound.device_callback.guid*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$558*)((V$50402648/*aspel.audio.directsound.device_callback..handle*/))));
    *TEMP$PTR0 = CORE$cast_type_pun(TYPE$558, TEMP$VAL0);
    }
    TYPE$1 V$50402712/*aspel.audio.directsound.device_callback..name*/ = ((TYPE$1(*)(TYPE$671,TYPE$19))(((CORE$DELEGATE)V$47870800/*aspel.audio.directsound.find_device_name*/)))((V$50402648/*aspel.audio.directsound.device_callback..handle*/), (V$50402392/*aspel.audio.directsound.device_callback.description*/));
    if (CORE$eq((CORE$cast_array_to_ptr((V$50402712/*aspel.audio.directsound.device_callback..name*/))),(CORE$null_pointer))) {
    {
    CORE$DEL((void*)(((V$50402648/*aspel.audio.directsound.device_callback..handle*/))));    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$272,TYPE$1,TYPE$7,TYPE$6))(((CORE$DELEGATE)V$47873440/*aspel.audio.add_audio_device*/)))((V$50374680/*aspel.audio.directsound.the_directsound_context*/), (V$50402712/*aspel.audio.directsound.device_callback..name*/), CORE$cast_regular(TYPE$7, (V$50402648/*aspel.audio.directsound.device_callback..handle*/)), (V$50402584/*aspel.audio.directsound.device_callback.is_input*/))))) {
    {
    CORE$DEL((void*)(((V$50402648/*aspel.audio.directsound.device_callback..handle*/))));    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL));
    CORE$DEL((void*)(((V$50402712/*aspel.audio.directsound.device_callback..name*/)).a));    return RET$VAL;
    }
    }
    }
    CORE$DEL((void*)(((V$50402712/*aspel.audio.directsound.device_callback..name*/)).a));    }
    }
    {
    TYPE$16 RET$VAL = CORE$cast_regular(TYPE$16, (CORE$S64)(1ULL));
    return RET$VAL;
    }
    }
}

TYPE$8 V$47870960/*aspel.audio.directsound.directsound_detect_devices*/(TYPE$272 V$50402776/*aspel.audio.directsound.directsound_detect_devices.context*/)
{
    {
    TYPE$672 V$50402840/*aspel.audio.directsound.directsound_detect_devices.callback*/ = ((CORE$DELEGATE)V$47870880/*aspel.audio.directsound.device_callback*/);
    TYPE$19 V$50402904/*aspel.audio.directsound.directsound_detect_devices.foreign_callback*/ = (*(TYPE$19*)(CORE$cast_regular(TYPE$673, ((CORE$PTR) &((V$50402840/*aspel.audio.directsound.directsound_detect_devices.callback*/))))));
    ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19))((V$50401752/*aspel.audio.directsound.DirectSoundEnumerate*/)))((V$50402904/*aspel.audio.directsound.directsound_detect_devices.foreign_callback*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19))((V$50401880/*aspel.audio.directsound.DirectSoundCaptureEnumerate*/)))((V$50402904/*aspel.audio.directsound.directsound_detect_devices.foreign_callback*/), CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    }
}

TYPE$8 V$47871040/*aspel.audio.directsound.directsound_free_device_handle*/(TYPE$272 V$50402968/*aspel.audio.directsound.directsound_free_device_handle.context*/, TYPE$7 V$50403032/*aspel.audio.directsound.directsound_free_device_handle.handle*/)
{
    {
    TYPE$671 V$50403096/*aspel.audio.directsound.directsound_free_device_handle.guid*/ = CORE$cast_regular(TYPE$671, (V$50403032/*aspel.audio.directsound.directsound_free_device_handle.handle*/));
    CORE$DEL((void*)(((V$50403096/*aspel.audio.directsound.directsound_free_device_handle.guid*/))));    }
}

TYPE$6 V$47871120/*aspel.audio.directsound.directsound_open_device*/(TYPE$272 V$50403736/*aspel.audio.directsound.directsound_open_device.context*/, TYPE$270 V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)
{
    {
    TYPE$19 V$50403864/*aspel.audio.directsound.directsound_open_device.guid*/ = CORE$cast_regular(TYPE$19, (((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m1));
    TYPE$676 V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/ = (CORE$PTR)(CORE$NEWINIT(44, [&] (void* data) {
    typedef TYPE$675 type;
    type* val = (type*) data;
    {
    { (((*val).m0)) = (0); }
    { (((*val).m1)) = (0); }
    { (((*val).m2)) = (0); }
    { (((*val).m3)) = (0); }
    { (((*val).m4)) = (0); }
    { (((*val).m5)) = (0); }
    { (((*val).m6)) = (0); }
    { ((((*val).m7)).a) = (0); }
{ ((((*val).m7)).n) = (0); }
}
}));
    if (CORE$eq(((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$7, (V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    if ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m2)) {
    {
    TYPE$16 V$50403992/*aspel.audio.directsound.directsound_open_device..result*/;
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19))((V$50401816/*aspel.audio.directsound.DirectSoundCaptureCreate8*/)))((V$50403864/*aspel.audio.directsound.directsound_open_device.guid*/), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m2)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50403992/*aspel.audio.directsound.directsound_open_device..result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50403992/*aspel.audio.directsound.directsound_open_device..result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    TYPE$16 V$50404056/*aspel.audio.directsound.directsound_open_device..result*/;
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19))((V$50401688/*aspel.audio.directsound.DirectSoundCreate8*/)))((V$50403864/*aspel.audio.directsound.directsound_open_device.guid*/), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m0)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50404056/*aspel.audio.directsound.directsound_open_device..result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50404056/*aspel.audio.directsound.directsound_open_device..result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47867760/*aspel.audio.directsound.IDirectSound_SetCooperativeLevel*/)))((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m0), ((TYPE$19(CORE$STDCALL*)())(((CORE$DELEGATE)V$51749736/*aspel.internal.win32.GetDesktopWindow*/)))(), (V$50381400/*aspel.audio.directsound.DSSCL_NORMAL*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50404056/*aspel.audio.directsound.directsound_open_device..result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50404056/*aspel.audio.directsound.directsound_open_device..result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$267))(((CORE$DELEGATE)V$47873040/*aspel.audio.resolve_audio_format*/)))(((CORE$PTR) &((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$28 V$50404120/*aspel.audio.directsound.directsound_open_device.desired_sample_format*/ = ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1);
    while (CORE$true) {
    {
    if (CORE$lor((CORE$lor((CORE$lor((CORE$eq((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50412248/*aspel.audio.SAMPLE_UINT8*/)))),(CORE$eq((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50412568/*aspel.audio.SAMPLE_INT16*/)))))),(CORE$eq((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50412952/*aspel.audio.SAMPLE_INT32*/)))))),(CORE$eq((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50413144/*aspel.audio.SAMPLE_FLOAT32*/)))))) {
    {
    CORE$ASSERT(((CORE$BOOL)(((TYPE$6(*)(TYPE$267))(((CORE$DELEGATE)V$47873040/*aspel.audio.resolve_audio_format*/)))(((CORE$PTR) &((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(173)));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19(*)(TYPE$267))(((CORE$DELEGATE)V$47873120/*aspel.audio.get_audio_buffer_size*/)))(((CORE$PTR) &((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(8ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$19 V$50404184/*aspel.audio.directsound.directsound_open_device...buffer_size*/ = CORE$cast_regular(TYPE$19, CORE$mul(((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m4)),((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m5))));
    if (CORE$lor((CORE$lt(((V$50404184/*aspel.audio.directsound.directsound_open_device...buffer_size*/)),((V$50382424/*aspel.audio.directsound.DSBSIZE_MIN*/)))),(CORE$gt(((V$50404184/*aspel.audio.directsound.directsound_open_device...buffer_size*/)),((V$50382488/*aspel.audio.directsound.DSBSIZE_MAX*/)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$559 V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/;
    {
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m0) = (0); }
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m1) = (0); }
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m2) = (0); }
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m3) = (0); }
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m4) = (0); }
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m5) = (0); }
    { (V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/.m6) = (0); }
}
    if (CORE$ne((CORE$band((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50376088/*aspel.audio.directsound.WAVE_FORMAT_IEEE_FLOAT*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50376024/*aspel.audio.directsound.WAVE_FORMAT_PCM*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, CORE$band((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$28, ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m2)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m0)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mul((CORE$cast_regular(TYPE$28, ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m2))),(CORE$cast_regular(TYPE$28, CORE$div((CORE$band((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mul((((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m2)),(CORE$cast_regular(TYPE$19, ((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m4)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    if ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m2)) {
    {
    TYPE$562 V$50404312/*aspel.audio.directsound.directsound_open_device....format*/;
    {
    { (V$50404312/*aspel.audio.directsound.directsound_open_device....format*/.m0) = (0); }
    { (V$50404312/*aspel.audio.directsound.directsound_open_device....format*/.m1) = (0); }
    { (V$50404312/*aspel.audio.directsound.directsound_open_device....format*/.m2) = (0); }
    { (V$50404312/*aspel.audio.directsound.directsound_open_device....format*/.m3) = (0); }
    { (V$50404312/*aspel.audio.directsound.directsound_open_device....format*/.m4) = (0); }
}
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$U64)(20)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404312/*aspel.audio.directsound.directsound_open_device....format*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50393560/*aspel.audio.directsound.DSCBCAPS_WAVEMAPPED*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404312/*aspel.audio.directsound.directsound_open_device....format*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50404184/*aspel.audio.directsound.directsound_open_device...buffer_size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404312/*aspel.audio.directsound.directsound_open_device....format*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404312/*aspel.audio.directsound.directsound_open_device....format*/).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$680 V$50404376/*aspel.audio.directsound.directsound_open_device....capture_buffer*/ = ((CORE$PTR) &((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m3)));
    TYPE$16 V$50404440/*aspel.audio.directsound.directsound_open_device....result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47869680/*aspel.audio.directsound.IDirectSoundCapture_CreateCaptureBuffer*/)))((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m2), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50404312/*aspel.audio.directsound.directsound_open_device....format*/)))), CORE$cast_regular(TYPE$19, (V$50404376/*aspel.audio.directsound.directsound_open_device....capture_buffer*/)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    if (CORE$ne(((V$50404440/*aspel.audio.directsound.directsound_open_device....result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47870400/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Start*/)))((*(TYPE$19*)((V$50404376/*aspel.audio.directsound.directsound_open_device....capture_buffer*/))), (V$50393880/*aspel.audio.directsound.DSCBSTART_LOOPING*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50404440/*aspel.audio.directsound.directsound_open_device....result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50404440/*aspel.audio.directsound.directsound_open_device....result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47867440/*aspel.audio.directsound.IUnknown_Release*/)))(CORE$cast_regular(TYPE$19, (*(TYPE$19*)((V$50404376/*aspel.audio.directsound.directsound_open_device....capture_buffer*/)))));
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    else {
    {
    TYPE$562 V$50404504/*aspel.audio.directsound.directsound_open_device....format*/;
    {
    { (V$50404504/*aspel.audio.directsound.directsound_open_device....format*/.m0) = (0); }
    { (V$50404504/*aspel.audio.directsound.directsound_open_device....format*/.m1) = (0); }
    { (V$50404504/*aspel.audio.directsound.directsound_open_device....format*/.m2) = (0); }
    { (V$50404504/*aspel.audio.directsound.directsound_open_device....format*/.m3) = (0); }
    { (V$50404504/*aspel.audio.directsound.directsound_open_device....format*/.m4) = (0); }
}
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$U64)(20)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404504/*aspel.audio.directsound.directsound_open_device....format*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$bor(((V$50378840/*aspel.audio.directsound.DSBCAPS_GETCURRENTPOSITION2*/)),((V$50378776/*aspel.audio.directsound.DSBCAPS_GLOBALFOCUS*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404504/*aspel.audio.directsound.directsound_open_device....format*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50404184/*aspel.audio.directsound.directsound_open_device...buffer_size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404504/*aspel.audio.directsound.directsound_open_device....format*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50404504/*aspel.audio.directsound.directsound_open_device....format*/).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$683 V$50404568/*aspel.audio.directsound.directsound_open_device....sound_buffer*/ = ((CORE$PTR) &((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m1)));
    TYPE$16 V$50404632/*aspel.audio.directsound.directsound_open_device....result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47867520/*aspel.audio.directsound.IDirectSound_CreateSoundBuffer*/)))((((TYPE$675*)((V$50403928/*aspel.audio.directsound.directsound_open_device.ds_device*/)))->m0), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50404504/*aspel.audio.directsound.directsound_open_device....format*/)))), CORE$cast_regular(TYPE$19, (V$50404568/*aspel.audio.directsound.directsound_open_device....sound_buffer*/)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    if (CORE$ne(((V$50404632/*aspel.audio.directsound.directsound_open_device....result*/)),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47869120/*aspel.audio.directsound.IDirectSoundBuffer_SetFormat*/)))((*(TYPE$19*)((V$50404568/*aspel.audio.directsound.directsound_open_device....sound_buffer*/))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50404248/*aspel.audio.directsound.directsound_open_device...wfmt*/)))));
    }
    }
    {
    break;
    }
    }
    }
    else {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28(*)(TYPE$28,TYPE$28))(((CORE$DELEGATE)V$47872960/*aspel.audio.next_sample_format*/)))((V$50404120/*aspel.audio.directsound.directsound_open_device.desired_sample_format*/), ((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    if (CORE$eq((((((TYPE$271*)((V$50403800/*aspel.audio.directsound.directsound_open_device.device*/)))->m3).m1)),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    {
    continue;
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47871200/*aspel.audio.directsound.directsound_close_device*/(TYPE$272 V$50404696/*aspel.audio.directsound.directsound_close_device.context*/, TYPE$270 V$50404760/*aspel.audio.directsound.directsound_close_device.device*/)
{
    {
    if (CORE$ne(((((TYPE$271*)((V$50404760/*aspel.audio.directsound.directsound_close_device.device*/)))->m7)),(CORE$null_pointer))) {
    {
    TYPE$676 V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/ = CORE$cast_regular(TYPE$676, (((TYPE$271*)((V$50404760/*aspel.audio.directsound.directsound_close_device.device*/)))->m7));
    if (CORE$ne(((((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m1)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47869440/*aspel.audio.directsound.IDirectSoundBuffer_Stop*/)))((((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m1));
    ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47867440/*aspel.audio.directsound.IUnknown_Release*/)))(CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m1)));
    }
    }
    if (CORE$ne(((((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m0)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47867440/*aspel.audio.directsound.IUnknown_Release*/)))(CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m0)));
    }
    }
    if (CORE$ne(((((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m3)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47870480/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Stop*/)))((((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m3));
    ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47867440/*aspel.audio.directsound.IUnknown_Release*/)))(CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m3)));
    }
    }
    if (CORE$ne(((((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m2)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$19(*)(TYPE$19))(((CORE$DELEGATE)V$47867440/*aspel.audio.directsound.IUnknown_Release*/)))(CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/)))->m2)));
    }
    }
    CORE$DEL((void*)(((V$50404824/*aspel.audio.directsound.directsound_close_device..ds_device*/))));    }
    }
    }
}

TYPE$1 V$47871280/*aspel.audio.directsound.directsound_get_buffer*/(TYPE$272 V$50404888/*aspel.audio.directsound.directsound_get_buffer.context*/, TYPE$270 V$50404952/*aspel.audio.directsound.directsound_get_buffer.device*/)
{
    {
    TYPE$676 V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/ = CORE$cast_regular(TYPE$676, (((TYPE$271*)((V$50404952/*aspel.audio.directsound.directsound_get_buffer.device*/)))->m7));
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m7));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    TYPE$19 V$50405080/*aspel.audio.directsound.directsound_get_buffer.play_cursor*/;
    { (V$50405080/*aspel.audio.directsound.directsound_get_buffer.play_cursor*/) = (0); }
    TYPE$19 V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/;
    { (V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/) = (0); }
    TYPE$16 V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868320/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition*/)))((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405080/*aspel.audio.directsound.directsound_get_buffer.play_cursor*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/)))));
    if (CORE$eq(((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/)),((V$50376280/*aspel.audio.directsound.DSERR_BUFFERLOST*/)))) {
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47869600/*aspel.audio.directsound.IDirectSoundBuffer_Restore*/)))((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m1));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868320/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition*/)))((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405080/*aspel.audio.directsound.directsound_get_buffer.play_cursor*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m4)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/));
    *TEMP$PTR0 = (*TEMP$PTR0) / CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mod((CORE$add(((V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))),(CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m5)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m4)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/));
    *TEMP$PTR0 = (*TEMP$PTR0) * CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    TYPE$19 V$50405272/*aspel.audio.directsound.directsound_get_buffer.buffer_pointer*/;
    { (V$50405272/*aspel.audio.directsound.directsound_get_buffer.buffer_pointer*/) = (0); }
    TYPE$19 V$50405336/*aspel.audio.directsound.directsound_get_buffer.length1*/;
    { (V$50405336/*aspel.audio.directsound.directsound_get_buffer.length1*/) = (0); }
    TYPE$19 V$50405400/*aspel.audio.directsound.directsound_get_buffer.length2*/;
    { (V$50405400/*aspel.audio.directsound.directsound_get_buffer.length2*/) = (0); }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868880/*aspel.audio.directsound.IDirectSoundBuffer_Lock*/)))((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m1), (V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/), CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m4)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405272/*aspel.audio.directsound.directsound_get_buffer.buffer_pointer*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405336/*aspel.audio.directsound.directsound_get_buffer.length1*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405400/*aspel.audio.directsound.directsound_get_buffer.length2*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$eq(((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/)),((V$50376280/*aspel.audio.directsound.DSERR_BUFFERLOST*/)))) {
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47869600/*aspel.audio.directsound.IDirectSoundBuffer_Restore*/)))((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m1));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868880/*aspel.audio.directsound.IDirectSoundBuffer_Lock*/)))((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m1), (V$50405144/*aspel.audio.directsound.directsound_get_buffer.write_cursor*/), CORE$cast_regular(TYPE$19, (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m4)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405272/*aspel.audio.directsound.directsound_get_buffer.buffer_pointer*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405336/*aspel.audio.directsound.directsound_get_buffer.length1*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405400/*aspel.audio.directsound.directsound_get_buffer.length2*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$50405208/*aspel.audio.directsound.directsound_get_buffer.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$1 RET$VAL = CORE$null_array;
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$50405272/*aspel.audio.directsound.directsound_get_buffer.buffer_pointer*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m7).a));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m4)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m7).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$1 RET$VAL = (((TYPE$675*)((V$50405016/*aspel.audio.directsound.directsound_get_buffer.ds_device*/)))->m7);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47871360/*aspel.audio.directsound.directsound_play*/(TYPE$272 V$50405464/*aspel.audio.directsound.directsound_play.context*/, TYPE$270 V$50405528/*aspel.audio.directsound.directsound_play.device*/)
{
    {
    TYPE$676 V$50405592/*aspel.audio.directsound.directsound_play.ds_device*/ = CORE$cast_regular(TYPE$676, (((TYPE$271*)((V$50405528/*aspel.audio.directsound.directsound_play.device*/)))->m7));
    if (CORE$ne((CORE$cast_array_to_ptr((((TYPE$675*)((V$50405592/*aspel.audio.directsound.directsound_play.ds_device*/)))->m7))),(CORE$null_pointer))) {
    {
    ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47869520/*aspel.audio.directsound.IDirectSoundBuffer_Unlock*/)))((((TYPE$675*)((V$50405592/*aspel.audio.directsound.directsound_play.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((((TYPE$675*)((V$50405592/*aspel.audio.directsound.directsound_play.ds_device*/)))->m7).a)), CORE$cast_regular(TYPE$19, ((((TYPE$675*)((V$50405592/*aspel.audio.directsound.directsound_play.ds_device*/)))->m7).n)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    }
    }
    }
}

TYPE$8 V$47871440/*aspel.audio.directsound.directsound_wait*/(TYPE$272 V$50405656/*aspel.audio.directsound.directsound_wait.context*/, TYPE$270 V$50405720/*aspel.audio.directsound.directsound_wait.device*/)
{
    {
    TYPE$676 V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/ = CORE$cast_regular(TYPE$676, (((TYPE$271*)((V$50405720/*aspel.audio.directsound.directsound_wait.device*/)))->m7));
    TYPE$19 V$50405848/*aspel.audio.directsound.directsound_wait.play_cursor*/;
    { (V$50405848/*aspel.audio.directsound.directsound_wait.play_cursor*/) = (0); }
    TYPE$19 V$50405912/*aspel.audio.directsound.directsound_wait.write_cursor*/;
    { (V$50405912/*aspel.audio.directsound.directsound_wait.write_cursor*/) = (0); }
    TYPE$16 V$50405976/*aspel.audio.directsound.directsound_wait.result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868320/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405848/*aspel.audio.directsound.directsound_wait.play_cursor*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405912/*aspel.audio.directsound.directsound_wait.write_cursor*/)))));
    if (CORE$ne(((V$50405976/*aspel.audio.directsound.directsound_wait.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    if (CORE$eq(((V$50405976/*aspel.audio.directsound.directsound_wait.result*/)),((V$50376280/*aspel.audio.directsound.DSERR_BUFFERLOST*/)))) {
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47869600/*aspel.audio.directsound.IDirectSoundBuffer_Restore*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1));
    }
    }
    {
    return;
    }
    }
    }
    while (CORE$eq((CORE$div((CORE$cast_regular(TYPE$19, (V$50405912/*aspel.audio.directsound.directsound_wait.write_cursor*/))),((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m4)))),((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m6)))) {
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$15380128/*aspel.thread.sleep*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TYPE$19 V$50406040/*aspel.audio.directsound.directsound_wait..status*/;
    ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868720/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406040/*aspel.audio.directsound.directsound_wait..status*/)))));
    if (CORE$ne((CORE$band(((V$50406040/*aspel.audio.directsound.directsound_wait..status*/)),((V$50382104/*aspel.audio.directsound.DSBSTATUS_BUFFERLOST*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$16(*)(TYPE$19))(((CORE$DELEGATE)V$47869600/*aspel.audio.directsound.IDirectSoundBuffer_Restore*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1));
    ((TYPE$16(*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868720/*aspel.audio.directsound.IDirectSoundBuffer_GetStatus*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406040/*aspel.audio.directsound.directsound_wait..status*/)))));
    if (CORE$ne((CORE$band(((V$50406040/*aspel.audio.directsound.directsound_wait..status*/)),((V$50382104/*aspel.audio.directsound.DSBSTATUS_BUFFERLOST*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    return;
    }
    }
    }
    }
    }
    if (CORE$eq((CORE$band(((V$50406040/*aspel.audio.directsound.directsound_wait..status*/)),((V$50382040/*aspel.audio.directsound.DSBSTATUS_PLAYING*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868960/*aspel.audio.directsound.IDirectSoundBuffer_Play*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), (V$50381656/*aspel.audio.directsound.DSBPLAY_LOOPING*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405976/*aspel.audio.directsound.directsound_wait.result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50405976/*aspel.audio.directsound.directsound_wait.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    return;
    }
    }
    }
    {
    continue;
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47868320/*aspel.audio.directsound.IDirectSoundBuffer_GetCurrentPosition*/)))((((TYPE$675*)((V$50405784/*aspel.audio.directsound.directsound_wait.ds_device*/)))->m1), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405848/*aspel.audio.directsound.directsound_wait.play_cursor*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50405912/*aspel.audio.directsound.directsound_wait.write_cursor*/))))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50405976/*aspel.audio.directsound.directsound_wait.result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50405976/*aspel.audio.directsound.directsound_wait.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    return;
    }
    }
    }
    }
    }
    }
}

TYPE$19 V$47871520/*aspel.audio.directsound.directsound_input*/(TYPE$272 V$50406104/*aspel.audio.directsound.directsound_input.context*/, TYPE$270 V$50406168/*aspel.audio.directsound.directsound_input.device*/, TYPE$10 V$50406232/*aspel.audio.directsound.directsound_input.target*/, TYPE$19 V$50406296/*aspel.audio.directsound.directsound_input.desired_amount*/)
{
    {
    TYPE$676 V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/ = CORE$cast_regular(TYPE$676, (((TYPE$271*)((V$50406168/*aspel.audio.directsound.directsound_input.device*/)))->m7));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((V$50406296/*aspel.audio.directsound.directsound_input.desired_amount*/)),((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m4))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(365)));
    while (CORE$true) {
    {
    if (CORE$ne((CORE$band((CORE$cast_regular(TYPE$19, ((TYPE$16(*)(TYPE$90))(((CORE$DELEGATE)V$15379168/*aspel.thread.atomic.atomic_get*/)))(((CORE$PTR) &((((TYPE$271*)((V$50406168/*aspel.audio.directsound.directsound_input.device*/)))->m4)))))),((V$50416728/*aspel.audio.AUDIO_DEVICE_SHUTDOWN*/)))),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, (V$50406232/*aspel.audio.directsound.directsound_input.target*/)), CORE$cast_regular(TYPE$5, (V$50406296/*aspel.audio.directsound.directsound_input.desired_amount*/)), ((TYPE$2(*)(TYPE$28))(((CORE$DELEGATE)V$47872880/*aspel.audio.get_silence_value*/)))(((((TYPE$271*)((V$50406168/*aspel.audio.directsound.directsound_input.device*/)))->m3).m1)));
    {
    TYPE$19 RET$VAL = (V$50406296/*aspel.audio.directsound.directsound_input.desired_amount*/);
    return RET$VAL;
    }
    }
    }
    TYPE$19 V$50406424/*aspel.audio.directsound.directsound_input..capture_cursor*/;
    TYPE$19 V$50406488/*aspel.audio.directsound.directsound_input..read_cursor*/;
    TYPE$16 V$50406552/*aspel.audio.directsound.directsound_input..result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47870000/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition*/)))((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m3), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406424/*aspel.audio.directsound.directsound_input..capture_cursor*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406488/*aspel.audio.directsound.directsound_input..read_cursor*/)))));
    if (CORE$ne(((V$50406552/*aspel.audio.directsound.directsound_input..result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$19 RET$VAL = (V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/);
    return RET$VAL;
    }
    }
    }
    if (CORE$eq((CORE$div((CORE$cast_regular(TYPE$19, (V$50406488/*aspel.audio.directsound.directsound_input..read_cursor*/))),((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m4)))),((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m6)))) {
    {
    ((TYPE$8(*)(TYPE$19))(((CORE$DELEGATE)V$15380128/*aspel.thread.sleep*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    }
    }
    else {
    {
    {
    break;
    }
    }
    }
    }
    }
    TYPE$19 V$50406616/*aspel.audio.directsound.directsound_input.audio_pointer1*/;
    TYPE$19 V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/;
    TYPE$19 V$50406744/*aspel.audio.directsound.directsound_input.audio_pointer2*/;
    TYPE$19 V$50406808/*aspel.audio.directsound.directsound_input.audio_length2*/;
    TYPE$16 V$50406872/*aspel.audio.directsound.directsound_input.result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47870320/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Lock*/)))((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m3), CORE$mul(((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m6)),((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m4))), (((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m4), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406616/*aspel.audio.directsound.directsound_input.audio_pointer1*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406744/*aspel.audio.directsound.directsound_input.audio_pointer2*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50406808/*aspel.audio.directsound.directsound_input.audio_length2*/)))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    if (CORE$ne(((V$50406872/*aspel.audio.directsound.directsound_input.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$19 RET$VAL = (V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/);
    return RET$VAL;
    }
    }
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$eq((CORE$cast_regular(TYPE$19, (V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/))),((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m4))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(397)));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((V$50406744/*aspel.audio.directsound.directsound_input.audio_pointer2*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(398)));
    CORE$ASSERT(((CORE$BOOL)(CORE$eq(((V$50406808/*aspel.audio.directsound.directsound_input.audio_length2*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x75\x64\x69\x6F\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\\\x64\x69\x72\x65\x63\x74\x73\x6F\x75\x6E\x64\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(399)));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51735176/*aspel.copy*/)))(CORE$cast_regular(TYPE$7, (V$50406616/*aspel.audio.directsound.directsound_input.audio_pointer1*/)), CORE$cast_regular(TYPE$7, (V$50406232/*aspel.audio.directsound.directsound_input.target*/)), CORE$cast_regular(TYPE$5, (V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/)));
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$51735096/*aspel.repeat*/)))(CORE$cast_regular(TYPE$7, (V$50406616/*aspel.audio.directsound.directsound_input.audio_pointer1*/)), CORE$cast_regular(TYPE$5, (V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/)), CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL)));
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47870560/*aspel.audio.directsound.IDirectSoundCaptureBuffer_Unlock*/)))((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m3), (V$50406616/*aspel.audio.directsound.directsound_input.audio_pointer1*/), (V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/), (V$50406744/*aspel.audio.directsound.directsound_input.audio_pointer2*/), (V$50406808/*aspel.audio.directsound.directsound_input.audio_length2*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50406872/*aspel.audio.directsound.directsound_input.result*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    if (CORE$ne(((V$50406872/*aspel.audio.directsound.directsound_input.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    TYPE$19 RET$VAL = (V$50419224/*aspel.audio.AUDIO_BACKEND_INPUT_FAILURE*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$mod((CORE$add(((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m6)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))),((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m5))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50406360/*aspel.audio.directsound.directsound_input.ds_device*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$19 RET$VAL = (V$50406680/*aspel.audio.directsound.directsound_input.audio_length1*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$47871600/*aspel.audio.directsound.directsound_flush_input*/(TYPE$272 V$50406936/*aspel.audio.directsound.directsound_flush_input.context*/, TYPE$270 V$50407000/*aspel.audio.directsound.directsound_flush_input.device*/)
{
    {
    TYPE$676 V$50407064/*aspel.audio.directsound.directsound_flush_input.ds_device*/ = CORE$cast_regular(TYPE$676, (((TYPE$271*)((V$50407000/*aspel.audio.directsound.directsound_flush_input.device*/)))->m7));
    TYPE$19 V$50407128/*aspel.audio.directsound.directsound_flush_input.capture_cursor*/;
    { (V$50407128/*aspel.audio.directsound.directsound_flush_input.capture_cursor*/) = (0); }
    TYPE$19 V$50407192/*aspel.audio.directsound.directsound_flush_input.read_cursor*/;
    { (V$50407192/*aspel.audio.directsound.directsound_flush_input.read_cursor*/) = (0); }
    TYPE$16 V$50407256/*aspel.audio.directsound.directsound_flush_input.result*/ = ((TYPE$16(*)(TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$47870000/*aspel.audio.directsound.IDirectSoundCaptureBuffer_GetCurrentPosition*/)))((((TYPE$675*)((V$50407064/*aspel.audio.directsound.directsound_flush_input.ds_device*/)))->m3), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50407128/*aspel.audio.directsound.directsound_flush_input.capture_cursor*/)))), CORE$cast_regular(TYPE$19, ((CORE$PTR) &((V$50407192/*aspel.audio.directsound.directsound_flush_input.read_cursor*/)))));
    if (CORE$eq(((V$50407256/*aspel.audio.directsound.directsound_flush_input.result*/)),((V$50376216/*aspel.audio.directsound.DS_OK*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$div((CORE$cast_regular(TYPE$19, (V$50407192/*aspel.audio.directsound.directsound_flush_input.read_cursor*/))),((((TYPE$675*)((V$50407064/*aspel.audio.directsound.directsound_flush_input.ds_device*/)))->m4))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$675*)((V$50407064/*aspel.audio.directsound.directsound_flush_input.ds_device*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$6 V$47871680/*aspel.audio.io.seek_to_chunk*/(TYPE$153 V$50408024/*aspel.audio.io.seek_to_chunk.source*/, TYPE$19 V$50408088/*aspel.audio.io.seek_to_chunk.chunk_id*/, TYPE$103 V$50408152/*aspel.audio.io.seek_to_chunk.chunk_size*/)
{
    {
    while (CORE$true) {
    {
    TYPE$19 V$50408216/*aspel.audio.io.seek_to_chunk..id*/;
    TYPE$19 V$50408280/*aspel.audio.io.seek_to_chunk..size*/;
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393488/*aspel.io.read_be32*/)))((V$50408024/*aspel.audio.io.seek_to_chunk.source*/), ((CORE$PTR) &((V$50408216/*aspel.audio.io.seek_to_chunk..id*/))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393728/*aspel.io.read_le32*/)))((V$50408024/*aspel.audio.io.seek_to_chunk.source*/), ((CORE$PTR) &((V$50408280/*aspel.audio.io.seek_to_chunk..size*/))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$50408216/*aspel.audio.io.seek_to_chunk..id*/)),((V$50408088/*aspel.audio.io.seek_to_chunk.chunk_id*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50408280/*aspel.audio.io.seek_to_chunk..size*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$19*)((V$50408152/*aspel.audio.io.seek_to_chunk.chunk_size*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$50408344/*aspel.audio.io.seek_to_chunk..current*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((V$50408024/*aspel.audio.io.seek_to_chunk.source*/));
    if (CORE$eq(((V$50408344/*aspel.audio.io.seek_to_chunk..current*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))(((CORE$DELEGATE)V$15392608/*aspel.io.seek*/)))((V$50408024/*aspel.audio.io.seek_to_chunk.source*/), CORE$cast_regular(TYPE$4, (V$50408280/*aspel.audio.io.seek_to_chunk..size*/)), (V$47563144/*aspel.io.SEEK_CURRENT*/))),(CORE$add(((V$50408344/*aspel.audio.io.seek_to_chunk..current*/)),(CORE$cast_regular(TYPE$4, (V$50408280/*aspel.audio.io.seek_to_chunk..size*/))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
}

TYPE$153 V$47871760/*aspel.audio.io.open_wave_input_stream*/(TYPE$153 V$50408408/*aspel.audio.io.open_wave_input_stream.source*/, TYPE$267 V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)
{
    {
    TYPE$19 V$50408536/*aspel.audio.io.open_wave_input_stream.chunk_id*/;
    TYPE$19 V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/;
    TYPE$19 V$50408664/*aspel.audio.io.open_wave_input_stream.riff_format*/;
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393488/*aspel.io.read_be32*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408536/*aspel.audio.io.open_wave_input_stream.chunk_id*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393728/*aspel.io.read_le32*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$eq(((V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/)),((V$50407704/*aspel.audio.io.WAVE*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50407704/*aspel.audio.io.WAVE*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50408664/*aspel.audio.io.open_wave_input_stream.riff_format*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50408536/*aspel.audio.io.open_wave_input_stream.chunk_id*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50407640/*aspel.audio.io.RIFF*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50408536/*aspel.audio.io.open_wave_input_stream.chunk_id*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    else {
    {
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393488/*aspel.io.read_be32*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408664/*aspel.audio.io.open_wave_input_stream.riff_format*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    }
    }
    if (CORE$ne(((V$50408536/*aspel.audio.io.open_wave_input_stream.chunk_id*/)),((V$50407640/*aspel.audio.io.RIFF*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((V$50408664/*aspel.audio.io.open_wave_input_stream.riff_format*/)),((V$50407704/*aspel.audio.io.WAVE*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19,TYPE$103))(((CORE$DELEGATE)V$47871680/*aspel.audio.io.seek_to_chunk*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), (V$50407768/*aspel.audio.io.FMT*/), ((CORE$PTR) &((V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$28 V$50408728/*aspel.audio.io.open_wave_input_stream.encoding*/;
    TYPE$19 V$50408792/*aspel.audio.io.open_wave_input_stream.byte_rate*/;
    TYPE$28 V$50408856/*aspel.audio.io.open_wave_input_stream.block_align*/;
    TYPE$28 V$50408920/*aspel.audio.io.open_wave_input_stream.bits_per_sample*/;
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393648/*aspel.io.read_le16*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408728/*aspel.audio.io.open_wave_input_stream.encoding*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393648/*aspel.io.read_le16*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m2))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393728/*aspel.io.read_le32*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m0))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$103))(((CORE$DELEGATE)V$15393728/*aspel.io.read_le32*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408792/*aspel.audio.io.open_wave_input_stream.byte_rate*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393648/*aspel.io.read_le16*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408856/*aspel.audio.io.open_wave_input_stream.block_align*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$31))(((CORE$DELEGATE)V$15393648/*aspel.io.read_le16*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), ((CORE$PTR) &((V$50408920/*aspel.audio.io.open_wave_input_stream.bits_per_sample*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$6 V$50408984/*aspel.audio.io.open_wave_input_stream.float_encoding*/ = CORE$false;
    {
    TYPE$28 SWITCH$TEMP = (V$50408728/*aspel.audio.io.open_wave_input_stream.encoding*/);
    if ((SWITCH$TEMP == ((V$50407896/*aspel.audio.io.PCM*/)))) {
    {
    }
    }
    else if ((SWITCH$TEMP == ((V$50407960/*aspel.audio.io.IEEE_FLOAT*/)))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50408984/*aspel.audio.io.open_wave_input_stream.float_encoding*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    }
    if ((V$50408984/*aspel.audio.io.open_wave_input_stream.float_encoding*/)) {
    {
    if (CORE$ne(((V$50408920/*aspel.audio.io.open_wave_input_stream.bits_per_sample*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(32ULL))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50411992/*aspel.audio.SAMPLE_FLOAT*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$28 SWITCH$TEMP = (V$50408920/*aspel.audio.io.open_wave_input_stream.bits_per_sample*/);
    if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50412248/*aspel.audio.SAMPLE_UINT8*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(16ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50412568/*aspel.audio.SAMPLE_INT16*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == (CORE$cast_regular(TYPE$28, (CORE$S64)(32ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50412952/*aspel.audio.SAMPLE_INT32*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    }
    }
    }
    if (CORE$ne(((V$50408792/*aspel.audio.io.open_wave_input_stream.byte_rate*/)),(CORE$mul((CORE$mul(((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m0)),(CORE$cast_regular(TYPE$19, (((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m2))))),(CORE$cast_regular(TYPE$19, CORE$div(((V$50408920/*aspel.audio.io.open_wave_input_stream.bits_per_sample*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL)))))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if (CORE$ne(((V$50408856/*aspel.audio.io.open_wave_input_stream.block_align*/)),(CORE$mul(((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m2)),(CORE$div(((V$50408920/*aspel.audio.io.open_wave_input_stream.bits_per_sample*/)),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$265*)((V$50408472/*aspel.audio.io.open_wave_input_stream.format*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19,TYPE$103))(((CORE$DELEGATE)V$47871680/*aspel.audio.io.seek_to_chunk*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/), (V$50407832/*aspel.audio.io.DATA*/), ((CORE$PTR) &((V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$4 V$50409048/*aspel.audio.io.open_wave_input_stream.data_position*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/));
    if (CORE$eq(((V$50409048/*aspel.audio.io.open_wave_input_stream.data_position*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$689 V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/ = (CORE$PTR)(CORE$NEW(72));
    if (CORE$eq(((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872480/*aspel.audio.io.available_reader*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m0).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872560/*aspel.audio.io.seek_reader*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m0).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872640/*aspel.audio.io.read_reader*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m0).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872160/*aspel.audio.io.forbid_write*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m0).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872240/*aspel.audio.io.forbid_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m0).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872720/*aspel.audio.io.close_reader*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m0).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$153 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50408408/*aspel.audio.io.open_wave_input_stream.source*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$153, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50409048/*aspel.audio.io.open_wave_input_stream.data_position*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50408600/*aspel.audio.io.open_wave_input_stream.chunk_size*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$686*)((V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/)))->m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, (V$50409112/*aspel.audio.io.open_wave_input_stream.wave*/));
    return RET$VAL;
    }
    }
}

TYPE$153 V$47871840/*aspel.audio.io.open_wave_output_stream*/(TYPE$153 V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/, TYPE$267 V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)
{
    {
    TYPE$4 V$50409304/*aspel.audio.io.open_wave_output_stream.header_position*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/));
    if (CORE$eq(((V$50409304/*aspel.audio.io.open_wave_output_stream.header_position*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394288/*aspel.io.write_be32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (V$50407640/*aspel.audio.io.RIFF*/))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394288/*aspel.io.write_be32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (V$50407704/*aspel.audio.io.WAVE*/))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$28 V$50409368/*aspel.audio.io.open_wave_output_stream.encoding*/ = (V$50407896/*aspel.audio.io.PCM*/);
    if (CORE$ne((CORE$band(((((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m1)),((V$50411992/*aspel.audio.SAMPLE_FLOAT*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50407960/*aspel.audio.io.IEEE_FLOAT*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50409368/*aspel.audio.io.open_wave_output_stream.encoding*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394288/*aspel.io.write_be32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (V$50407768/*aspel.audio.io.FMT*/))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), CORE$cast_regular(TYPE$19, (CORE$S64)(16ULL)))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$28))(((CORE$DELEGATE)V$15394448/*aspel.io.write_le16*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (V$50409368/*aspel.audio.io.open_wave_output_stream.encoding*/))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$28))(((CORE$DELEGATE)V$15394448/*aspel.io.write_le16*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m2))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m0))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), CORE$mul((CORE$mul(((((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m0)),(CORE$cast_regular(TYPE$19, (((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m2))))),(CORE$cast_regular(TYPE$19, CORE$div((CORE$band(((((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m1)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$28))(((CORE$DELEGATE)V$15394448/*aspel.io.write_le16*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), CORE$mul(((((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m2)),(CORE$cast_regular(TYPE$28, CORE$div((CORE$band(((((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m1)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))),(CORE$cast_regular(TYPE$28, (CORE$S64)(8ULL))))))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$28))(((CORE$DELEGATE)V$15394448/*aspel.io.write_le16*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), CORE$cast_regular(TYPE$28, CORE$band(((((TYPE$265*)((V$50409240/*aspel.audio.io.open_wave_output_stream.format*/)))->m1)),((V$50411736/*aspel.audio.SAMPLE_SIZE*/)))))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394288/*aspel.io.write_be32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), (V$50407832/*aspel.audio.io.DATA*/))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    TYPE$689 V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/ = (CORE$PTR)(CORE$NEW(72));
    if (CORE$eq(((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, CORE$null_pointer);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$236 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47871920/*aspel.audio.io.forbid_available*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m0).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$236, TEMP$VAL0);
    }
    {
    typedef TYPE$245 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872000/*aspel.audio.io.forbid_seek*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m0).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$245, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872080/*aspel.audio.io.forbid_read*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m0).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$160 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872320/*aspel.audio.io.forward_write*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m0).m3));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$160, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872400/*aspel.audio.io.forward_flush*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m0).m4));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$237 TEMP$TYPE0;
    auto TEMP$VAL0 = (((CORE$DELEGATE)V$47872800/*aspel.audio.io.close_writer*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m0).m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$237, TEMP$VAL0);
    }
    {
    typedef TYPE$153 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50409176/*aspel.audio.io.open_wave_output_stream.destination*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$153, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50409304/*aspel.audio.io.open_wave_output_stream.header_position*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$686*)((V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/)))->m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    TYPE$153 RET$VAL = CORE$cast_regular(TYPE$153, (V$50409432/*aspel.audio.io.open_wave_output_stream.wave*/));
    return RET$VAL;
    }
    }
}

TYPE$4 V$47871920/*aspel.audio.io.forbid_available*/(TYPE$153 V$50409496/*aspel.audio.io.forbid_available.stream*/)
{
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872000/*aspel.audio.io.forbid_seek*/(TYPE$153 V$50409560/*aspel.audio.io.forbid_seek.stream*/, TYPE$4 V$50409624/*aspel.audio.io.forbid_seek.offset*/, TYPE$19 V$50409688/*aspel.audio.io.forbid_seek.origin*/)
{
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872080/*aspel.audio.io.forbid_read*/(TYPE$153 V$50409752/*aspel.audio.io.forbid_read.stream*/, TYPE$7 V$50409816/*aspel.audio.io.forbid_read.ptr*/, TYPE$4 V$50409880/*aspel.audio.io.forbid_read.count*/)
{
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872160/*aspel.audio.io.forbid_write*/(TYPE$153 V$50409944/*aspel.audio.io.forbid_write.stream*/, TYPE$7 V$50410008/*aspel.audio.io.forbid_write.ptr*/, TYPE$4 V$50410072/*aspel.audio.io.forbid_write.count*/)
{
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
}

TYPE$6 V$47872240/*aspel.audio.io.forbid_flush*/(TYPE$153 V$50410136/*aspel.audio.io.forbid_flush.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872320/*aspel.audio.io.forward_write*/(TYPE$153 V$50410200/*aspel.audio.io.forward_write.stream*/, TYPE$7 V$50410264/*aspel.audio.io.forward_write.ptr*/, TYPE$4 V$50410328/*aspel.audio.io.forward_write.count*/)
{
    {
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392848/*aspel.io.write*/)))((((TYPE$686*)(CORE$cast_regular(TYPE$689, (V$50410200/*aspel.audio.io.forward_write.stream*/))))->m1), (V$50410264/*aspel.audio.io.forward_write.ptr*/), (V$50410328/*aspel.audio.io.forward_write.count*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47872400/*aspel.audio.io.forward_flush*/(TYPE$153 V$50410392/*aspel.audio.io.forward_flush.stream*/)
{
    {
    {
    TYPE$6 RET$VAL = ((TYPE$6(*)(TYPE$153))(((CORE$DELEGATE)V$15392928/*aspel.io.flush*/)))((((TYPE$686*)(CORE$cast_regular(TYPE$689, (V$50410392/*aspel.audio.io.forward_flush.stream*/))))->m1));
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872480/*aspel.audio.io.available_reader*/(TYPE$153 V$50410456/*aspel.audio.io.available_reader.stream*/)
{
    {
    TYPE$689 V$50410520/*aspel.audio.io.available_reader.wave*/ = CORE$cast_regular(TYPE$689, (V$50410456/*aspel.audio.io.available_reader.stream*/));
    TYPE$4 V$50410584/*aspel.audio.io.available_reader.current*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((((TYPE$686*)((V$50410520/*aspel.audio.io.available_reader.wave*/)))->m1));
    if (CORE$eq(((V$50410584/*aspel.audio.io.available_reader.current*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50410520/*aspel.audio.io.available_reader.wave*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410584/*aspel.audio.io.available_reader.current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$lt(((V$50410584/*aspel.audio.io.available_reader.current*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410584/*aspel.audio.io.available_reader.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$50410584/*aspel.audio.io.available_reader.current*/)),((((TYPE$686*)((V$50410520/*aspel.audio.io.available_reader.wave*/)))->m3)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50410520/*aspel.audio.io.available_reader.wave*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410584/*aspel.audio.io.available_reader.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 RET$VAL = CORE$sub(((((TYPE$686*)((V$50410520/*aspel.audio.io.available_reader.wave*/)))->m3)),((V$50410584/*aspel.audio.io.available_reader.current*/)));
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872560/*aspel.audio.io.seek_reader*/(TYPE$153 V$50410648/*aspel.audio.io.seek_reader.stream*/, TYPE$4 V$50410712/*aspel.audio.io.seek_reader.offset*/, TYPE$19 V$50410776/*aspel.audio.io.seek_reader.origin*/)
{
    {
    TYPE$689 V$50410840/*aspel.audio.io.seek_reader.wave*/ = CORE$cast_regular(TYPE$689, (V$50410648/*aspel.audio.io.seek_reader.stream*/));
    TYPE$4 V$50410904/*aspel.audio.io.seek_reader.new_position*/;
    {
    TYPE$19 SWITCH$TEMP = (V$50410776/*aspel.audio.io.seek_reader.origin*/);
    if ((SWITCH$TEMP == ((V$47563080/*aspel.io.SEEK_BEGIN*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50410712/*aspel.audio.io.seek_reader.offset*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410904/*aspel.audio.io.seek_reader.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47563144/*aspel.io.SEEK_CURRENT*/)))) {
    {
    TYPE$4 V$50410968/*aspel.audio.io.seek_reader..current*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m1));
    if (CORE$eq(((V$50410968/*aspel.audio.io.seek_reader..current*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410968/*aspel.audio.io.seek_reader..current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$lt(((V$50410968/*aspel.audio.io.seek_reader..current*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410968/*aspel.audio.io.seek_reader..current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$50410968/*aspel.audio.io.seek_reader..current*/)),((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m3)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410968/*aspel.audio.io.seek_reader..current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50410968/*aspel.audio.io.seek_reader..current*/)),((V$50410712/*aspel.audio.io.seek_reader.offset*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410904/*aspel.audio.io.seek_reader.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else if ((SWITCH$TEMP == ((V$47563208/*aspel.io.SEEK_END*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m3)),((V$50410712/*aspel.audio.io.seek_reader.offset*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410904/*aspel.audio.io.seek_reader.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    }
    if (CORE$lt(((V$50410904/*aspel.audio.io.seek_reader.new_position*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410904/*aspel.audio.io.seek_reader.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$50410904/*aspel.audio.io.seek_reader.new_position*/)),((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m3)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50410904/*aspel.audio.io.seek_reader.new_position*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    TYPE$4 V$50411032/*aspel.audio.io.seek_reader.low_position*/ = CORE$add(((V$50410904/*aspel.audio.io.seek_reader.new_position*/)),((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m2)));
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))(((CORE$DELEGATE)V$15392608/*aspel.io.seek*/)))((((TYPE$686*)((V$50410840/*aspel.audio.io.seek_reader.wave*/)))->m1), (V$50411032/*aspel.audio.io.seek_reader.low_position*/), (V$47563080/*aspel.io.SEEK_BEGIN*/))),((V$50411032/*aspel.audio.io.seek_reader.low_position*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    TYPE$4 RET$VAL = (V$50410904/*aspel.audio.io.seek_reader.new_position*/);
    return RET$VAL;
    }
    }
}

TYPE$4 V$47872640/*aspel.audio.io.read_reader*/(TYPE$153 V$50411096/*aspel.audio.io.read_reader.stream*/, TYPE$7 V$50411160/*aspel.audio.io.read_reader.ptr*/, TYPE$4 V$50411224/*aspel.audio.io.read_reader.count*/)
{
    {
    TYPE$689 V$50411288/*aspel.audio.io.read_reader.wave*/ = CORE$cast_regular(TYPE$689, (V$50411096/*aspel.audio.io.read_reader.stream*/));
    TYPE$4 V$50411352/*aspel.audio.io.read_reader.current*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m1));
    if (CORE$eq(((V$50411352/*aspel.audio.io.read_reader.current*/)),((V$47563272/*aspel.io.IO_ERROR*/)))) {
    {
    {
    TYPE$4 RET$VAL = (V$47563272/*aspel.io.IO_ERROR*/);
    return RET$VAL;
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m2));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50411352/*aspel.audio.io.read_reader.current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    if (CORE$lt(((V$50411352/*aspel.audio.io.read_reader.current*/)),((CORE$S64)(0ULL)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50411352/*aspel.audio.io.read_reader.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt(((V$50411352/*aspel.audio.io.read_reader.current*/)),((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m3)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m3));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50411352/*aspel.audio.io.read_reader.current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$gt((CORE$add(((V$50411352/*aspel.audio.io.read_reader.current*/)),((V$50411224/*aspel.audio.io.read_reader.count*/)))),((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m3)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$sub(((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m3)),((V$50411352/*aspel.audio.io.read_reader.current*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50411224/*aspel.audio.io.read_reader.count*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 RET$VAL = ((TYPE$4(*)(TYPE$153,TYPE$7,TYPE$4))(((CORE$DELEGATE)V$15392768/*aspel.io.read*/)))((((TYPE$686*)((V$50411288/*aspel.audio.io.read_reader.wave*/)))->m1), (V$50411160/*aspel.audio.io.read_reader.ptr*/), (V$50411224/*aspel.audio.io.read_reader.count*/));
    return RET$VAL;
    }
    }
}

TYPE$6 V$47872720/*aspel.audio.io.close_reader*/(TYPE$153 V$50411416/*aspel.audio.io.close_reader.stream*/)
{
    {
    CORE$DEL((void*)(((V$50411416/*aspel.audio.io.close_reader.stream*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47872800/*aspel.audio.io.close_writer*/(TYPE$153 V$50411480/*aspel.audio.io.close_writer.stream*/)
{
    {
    TYPE$689 V$50411544/*aspel.audio.io.close_writer.wave*/ = CORE$cast_regular(TYPE$689, (V$50411480/*aspel.audio.io.close_writer.stream*/));
    TYPE$4 V$50411608/*aspel.audio.io.close_writer.wave_size*/ = ((TYPE$4(*)(TYPE$153))(((CORE$DELEGATE)V$15392688/*aspel.io.position*/)))((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m1));
    if (CORE$lt(((V$50411608/*aspel.audio.io.close_writer.wave_size*/)),(CORE$add(((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m2)),((CORE$S64)(44ULL)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))(((CORE$DELEGATE)V$15392608/*aspel.io.seek*/)))((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m1), CORE$add(((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m2)),((CORE$S64)(4ULL))), (V$47563080/*aspel.io.SEEK_BEGIN*/))),(CORE$add(((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m2)),((CORE$S64)(4ULL)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m1), CORE$cast_regular(TYPE$19, CORE$sub(((V$50411608/*aspel.audio.io.close_writer.wave_size*/)),((CORE$S64)(8ULL)))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    return RET$VAL;
    }
    }
    }
    if (CORE$ne((((TYPE$4(*)(TYPE$153,TYPE$4,TYPE$19))(((CORE$DELEGATE)V$15392608/*aspel.io.seek*/)))((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m1), CORE$add(((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m2)),((CORE$S64)(40ULL))), (V$47563080/*aspel.io.SEEK_BEGIN*/))),(CORE$add(((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m2)),((CORE$S64)(40ULL)))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    return RET$VAL;
    }
    }
    }
    if ((!(((TYPE$6(*)(TYPE$153,TYPE$19))(((CORE$DELEGATE)V$15394528/*aspel.io.write_le32*/)))((((TYPE$686*)((V$50411544/*aspel.audio.io.close_writer.wave*/)))->m1), CORE$cast_regular(TYPE$19, CORE$sub(((V$50411608/*aspel.audio.io.close_writer.wave_size*/)),((CORE$S64)(44ULL)))))))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    return RET$VAL;
    }
    }
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    return RET$VAL;
    }
    CORE$DEL((void*)(((V$50411544/*aspel.audio.io.close_writer.wave*/))));    }
}

TYPE$8 V$47875920/*aspel.algorithm.sorting.insertion_sort*/(TYPE$7 V$50422680/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50422744/*aspel.algorithm.sorting.insertion_sort.size*/, TYPE$5 V$50422808/*aspel.algorithm.sorting.insertion_sort.count*/, TYPE$469 V$50422872/*aspel.algorithm.sorting.insertion_sort.comparator*/)
{
    {
    TYPE$10 V$50422936/*aspel.algorithm.sorting.insertion_sort.bytes*/ = CORE$cast_regular(TYPE$10, (V$50422680/*aspel.algorithm.sorting.insertion_sort.data*/));
    TYPE$5 V$50423000/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50423000/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50422808/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$1 V$50423064/*aspel.algorithm.sorting.insertion_sort..x*/ = CORE$PUSHARR((CORE$U64)((V$50422744/*aspel.algorithm.sorting.insertion_sort.size*/)), (CORE$U64)(1));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_array_to_ptr((V$50423064/*aspel.algorithm.sorting.insertion_sort..x*/)), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50422936/*aspel.algorithm.sorting.insertion_sort.bytes*/)))[(CORE$U64)((V$50423000/*aspel.algorithm.sorting.insertion_sort.i*/))]))), (V$50422744/*aspel.algorithm.sorting.insertion_sort.size*/));
    TYPE$5 V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50423000/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50422872/*aspel.algorithm.sorting.insertion_sort.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50422936/*aspel.algorithm.sorting.insertion_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$sub(((V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50422744/*aspel.algorithm.sorting.insertion_sort.size*/))))]))), CORE$cast_array_to_ptr((V$50423064/*aspel.algorithm.sorting.insertion_sort..x*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50422936/*aspel.algorithm.sorting.insertion_sort.bytes*/)))[(CORE$U64)((V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50422936/*aspel.algorithm.sorting.insertion_sort.bytes*/)))[(CORE$U64)(CORE$sub(((V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))), (V$50422744/*aspel.algorithm.sorting.insertion_sort.size*/));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50422936/*aspel.algorithm.sorting.insertion_sort.bytes*/)))[(CORE$U64)((V$50423128/*aspel.algorithm.sorting.insertion_sort..j*/))]))), CORE$cast_array_to_ptr((V$50423064/*aspel.algorithm.sorting.insertion_sort..x*/)), (V$50422744/*aspel.algorithm.sorting.insertion_sort.size*/));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50423000/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876000/*aspel.algorithm.sorting.insertion_sort*/(TYPE$691 V$50423192/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50423256/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50423320/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50423320/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50423256/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$170 V$50423384/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$170*)((V$50423192/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50423320/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50423320/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$170*)((V$50423192/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50423384/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50423192/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50423192/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50423384/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50423192/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50423448/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50423320/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876080/*aspel.algorithm.sorting.insertion_sort*/(TYPE$693 V$50423512/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$691,TYPE$5))(((CORE$DELEGATE)V$47876000/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50423512/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50423512/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47876160/*aspel.algorithm.sorting.insertion_sort*/(TYPE$695 V$50423576/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50423640/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50423704/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50423704/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50423640/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$171 V$50423768/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$171*)((V$50423576/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50423704/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50423704/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$171*)((V$50423576/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50423768/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50423576/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50423576/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50423768/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50423576/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50423832/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50423704/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876240/*aspel.algorithm.sorting.insertion_sort*/(TYPE$697 V$50423896/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$695,TYPE$5))(((CORE$DELEGATE)V$47876160/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50423896/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50423896/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47876320/*aspel.algorithm.sorting.insertion_sort*/(TYPE$86 V$50423960/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50424024/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50424088/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50424088/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50424024/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$16 V$50424152/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$16*)((V$50423960/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424088/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50424088/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$16*)((V$50423960/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50424152/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50423960/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50423960/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50424152/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50423960/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424216/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50424088/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876400/*aspel.algorithm.sorting.insertion_sort*/(TYPE$700 V$50424280/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$86,TYPE$5))(((CORE$DELEGATE)V$47876320/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50424280/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50424280/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47876480/*aspel.algorithm.sorting.insertion_sort*/(TYPE$139 V$50424344/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50424408/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50424472/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50424472/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50424408/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$4 V$50424536/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$4*)((V$50424344/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424472/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50424472/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$4*)((V$50424344/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50424536/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50424344/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50424344/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50424536/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50424344/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424600/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50424472/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876560/*aspel.algorithm.sorting.insertion_sort*/(TYPE$703 V$50424664/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$139,TYPE$5))(((CORE$DELEGATE)V$47876480/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50424664/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50424664/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47876640/*aspel.algorithm.sorting.insertion_sort*/(TYPE$10 V$50424728/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50424792/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50424856/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50424856/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50424792/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$2 V$50424920/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$2*)((V$50424728/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424856/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50424856/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$2*)((V$50424728/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50424920/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50424728/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50424728/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50424920/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50424728/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50424984/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50424856/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876720/*aspel.algorithm.sorting.insertion_sort*/(TYPE$1 V$50425048/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$10,TYPE$5))(((CORE$DELEGATE)V$47876640/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50425048/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50425048/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47876800/*aspel.algorithm.sorting.insertion_sort*/(TYPE$31 V$50425112/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50425176/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50425240/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50425240/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50425176/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$28 V$50425304/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$28*)((V$50425112/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50425240/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50425240/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$28*)((V$50425112/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50425304/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50425112/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50425112/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50425304/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50425112/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50425368/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50425240/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47876880/*aspel.algorithm.sorting.insertion_sort*/(TYPE$30 V$50425432/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$31,TYPE$5))(((CORE$DELEGATE)V$47876800/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50425432/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50425432/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47876960/*aspel.algorithm.sorting.insertion_sort*/(TYPE$103 V$50425496/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50425560/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50425624/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50425624/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50425560/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$19 V$50425688/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$19*)((V$50425496/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50425624/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50425624/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$19*)((V$50425496/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50425688/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50425496/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50425496/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50425688/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50425496/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50425752/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50425624/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47877040/*aspel.algorithm.sorting.insertion_sort*/(TYPE$184 V$50425816/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$103,TYPE$5))(((CORE$DELEGATE)V$47876960/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50425816/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50425816/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47877120/*aspel.algorithm.sorting.insertion_sort*/(TYPE$54 V$50425880/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50425944/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50426008/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50426008/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50425944/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$5 V$50426072/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$5*)((V$50425880/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426008/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50426008/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$5*)((V$50425880/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50426072/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50425880/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50425880/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50426072/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50425880/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426136/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50426008/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47877200/*aspel.algorithm.sorting.insertion_sort*/(TYPE$712 V$50426200/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$54,TYPE$5))(((CORE$DELEGATE)V$47877120/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50426200/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50426200/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47877280/*aspel.algorithm.sorting.insertion_sort*/(TYPE$506 V$50426264/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50426328/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50426392/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50426392/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50426328/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$172 V$50426456/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$172*)((V$50426264/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426392/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50426392/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$172*)((V$50426264/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50426456/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50426264/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50426264/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50426456/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50426264/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426520/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50426392/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47877360/*aspel.algorithm.sorting.insertion_sort*/(TYPE$715 V$50426584/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$506,TYPE$5))(((CORE$DELEGATE)V$47877280/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50426584/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50426584/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47877440/*aspel.algorithm.sorting.insertion_sort*/(TYPE$143 V$50426648/*aspel.algorithm.sorting.insertion_sort.data*/, TYPE$5 V$50426712/*aspel.algorithm.sorting.insertion_sort.count*/)
{
    {
    TYPE$5 V$50426776/*aspel.algorithm.sorting.insertion_sort.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL));
    while (CORE$lt(((V$50426776/*aspel.algorithm.sorting.insertion_sort.i*/)),((V$50426712/*aspel.algorithm.sorting.insertion_sort.count*/)))) {
    {
    TYPE$51 V$50426840/*aspel.algorithm.sorting.insertion_sort..x*/ = ((TYPE$51*)((V$50426648/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426776/*aspel.algorithm.sorting.insertion_sort.i*/))];
    TYPE$5 V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/ = (V$50426776/*aspel.algorithm.sorting.insertion_sort.i*/);
    while (CORE$land((CORE$gt(((V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))),(CORE$gt((((TYPE$51*)((V$50426648/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),((V$50426840/*aspel.algorithm.sorting.insertion_sort..x*/)))))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50426648/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)(CORE$sub(((V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50426648/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50426840/*aspel.algorithm.sorting.insertion_sort..x*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50426648/*aspel.algorithm.sorting.insertion_sort.data*/)))[(CORE$U64)((V$50426904/*aspel.algorithm.sorting.insertion_sort..j*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50426776/*aspel.algorithm.sorting.insertion_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$47877520/*aspel.algorithm.sorting.insertion_sort*/(TYPE$364 V$50426968/*aspel.algorithm.sorting.insertion_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$143,TYPE$5))(((CORE$DELEGATE)V$47877440/*aspel.algorithm.sorting.insertion_sort*/)))(CORE$cast_array_to_ptr((V$50426968/*aspel.algorithm.sorting.insertion_sort.data*/)), ((V$50426968/*aspel.algorithm.sorting.insertion_sort.data*/).n));
    }
}

TYPE$8 V$47877600/*aspel.algorithm.sorting.radix_sort*/(TYPE$7 V$50427032/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50427096/*aspel.algorithm.sorting.radix_sort.size*/, TYPE$5 V$50427160/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$5,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$47877760/*aspel.algorithm.sorting.radix_sort_recursion*/)))(CORE$cast_regular(TYPE$10, (V$50427032/*aspel.algorithm.sorting.radix_sort.data*/)), (V$50427096/*aspel.algorithm.sorting.radix_sort.size*/), (V$50427160/*aspel.algorithm.sorting.radix_sort.count*/), CORE$sub(((V$50427096/*aspel.algorithm.sorting.radix_sort.size*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))), CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL)));
    }
}

TYPE$8 V$47877920/*aspel.algorithm.sorting.radix_sort*/(TYPE$691 V$50428312/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50428376/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/)))(CORE$cast_regular(TYPE$7, (V$50428312/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(1), (V$50428376/*aspel.algorithm.sorting.radix_sort.count*/), CORE$false);
    }
}

TYPE$8 V$47878000/*aspel.algorithm.sorting.radix_sort*/(TYPE$693 V$50428440/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$691,TYPE$5))(((CORE$DELEGATE)V$47877920/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50428440/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50428440/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47878080/*aspel.algorithm.sorting.radix_sort*/(TYPE$695 V$50428504/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50428568/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/)))(CORE$cast_regular(TYPE$7, (V$50428504/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(2), (V$50428568/*aspel.algorithm.sorting.radix_sort.count*/), CORE$false);
    }
}

TYPE$8 V$47878160/*aspel.algorithm.sorting.radix_sort*/(TYPE$697 V$50428632/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$695,TYPE$5))(((CORE$DELEGATE)V$47878080/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50428632/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50428632/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47878240/*aspel.algorithm.sorting.radix_sort*/(TYPE$86 V$50428696/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50428760/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/)))(CORE$cast_regular(TYPE$7, (V$50428696/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(4), (V$50428760/*aspel.algorithm.sorting.radix_sort.count*/), CORE$false);
    }
}

TYPE$8 V$47878320/*aspel.algorithm.sorting.radix_sort*/(TYPE$700 V$50428824/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$86,TYPE$5))(((CORE$DELEGATE)V$47878240/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50428824/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50428824/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47878400/*aspel.algorithm.sorting.radix_sort*/(TYPE$139 V$50428888/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50428952/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/)))(CORE$cast_regular(TYPE$7, (V$50428888/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(8), (V$50428952/*aspel.algorithm.sorting.radix_sort.count*/), CORE$false);
    }
}

TYPE$8 V$47878480/*aspel.algorithm.sorting.radix_sort*/(TYPE$703 V$50429016/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$139,TYPE$5))(((CORE$DELEGATE)V$47878400/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50429016/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50429016/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47878560/*aspel.algorithm.sorting.radix_sort*/(TYPE$10 V$50429080/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50429144/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47877600/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_regular(TYPE$7, (V$50429080/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(1), (V$50429144/*aspel.algorithm.sorting.radix_sort.count*/));
    }
}

TYPE$8 V$47878640/*aspel.algorithm.sorting.radix_sort*/(TYPE$1 V$50429208/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$10,TYPE$5))(((CORE$DELEGATE)V$47878560/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50429208/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50429208/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47878720/*aspel.algorithm.sorting.radix_sort*/(TYPE$31 V$50429272/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50429336/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47877600/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_regular(TYPE$7, (V$50429272/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(2), (V$50429336/*aspel.algorithm.sorting.radix_sort.count*/));
    }
}

TYPE$8 V$47878800/*aspel.algorithm.sorting.radix_sort*/(TYPE$30 V$50429400/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$31,TYPE$5))(((CORE$DELEGATE)V$47878720/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50429400/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50429400/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47878880/*aspel.algorithm.sorting.radix_sort*/(TYPE$103 V$50429464/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50429528/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47877600/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_regular(TYPE$7, (V$50429464/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(4), (V$50429528/*aspel.algorithm.sorting.radix_sort.count*/));
    }
}

TYPE$8 V$47878960/*aspel.algorithm.sorting.radix_sort*/(TYPE$184 V$50429592/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$103,TYPE$5))(((CORE$DELEGATE)V$47878880/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50429592/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50429592/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47879040/*aspel.algorithm.sorting.radix_sort*/(TYPE$54 V$50429656/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50429720/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47877600/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_regular(TYPE$7, (V$50429656/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(8), (V$50429720/*aspel.algorithm.sorting.radix_sort.count*/));
    }
}

TYPE$8 V$47879120/*aspel.algorithm.sorting.radix_sort*/(TYPE$712 V$50429784/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$54,TYPE$5))(((CORE$DELEGATE)V$47879040/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50429784/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50429784/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47879200/*aspel.algorithm.sorting.radix_sort*/(TYPE$506 V$50429848/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50429912/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/)))(CORE$cast_regular(TYPE$7, (V$50429848/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(4), (V$50429912/*aspel.algorithm.sorting.radix_sort.count*/), CORE$true);
    }
}

TYPE$8 V$47879280/*aspel.algorithm.sorting.radix_sort*/(TYPE$715 V$50429976/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$506,TYPE$5))(((CORE$DELEGATE)V$47879200/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50429976/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50429976/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47879360/*aspel.algorithm.sorting.radix_sort*/(TYPE$143 V$50430040/*aspel.algorithm.sorting.radix_sort.data*/, TYPE$5 V$50430104/*aspel.algorithm.sorting.radix_sort.count*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/)))(CORE$cast_regular(TYPE$7, (V$50430040/*aspel.algorithm.sorting.radix_sort.data*/)), (CORE$U64)(8), (V$50430104/*aspel.algorithm.sorting.radix_sort.count*/), CORE$true);
    }
}

TYPE$8 V$47879440/*aspel.algorithm.sorting.radix_sort*/(TYPE$364 V$50430168/*aspel.algorithm.sorting.radix_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$143,TYPE$5))(((CORE$DELEGATE)V$47879360/*aspel.algorithm.sorting.radix_sort*/)))(CORE$cast_array_to_ptr((V$50430168/*aspel.algorithm.sorting.radix_sort.data*/)), ((V$50430168/*aspel.algorithm.sorting.radix_sort.data*/).n));
    }
}

TYPE$8 V$47877680/*aspel.algorithm.sorting.radix_sort_signed*/(TYPE$7 V$50427224/*aspel.algorithm.sorting.radix_sort_signed.data*/, TYPE$5 V$50427288/*aspel.algorithm.sorting.radix_sort_signed.size*/, TYPE$5 V$50427352/*aspel.algorithm.sorting.radix_sort_signed.count*/, TYPE$6 V$50427416/*aspel.algorithm.sorting.radix_sort_signed.reverse_negative*/)
{
    {
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47877600/*aspel.algorithm.sorting.radix_sort*/)))((V$50427224/*aspel.algorithm.sorting.radix_sort_signed.data*/), (V$50427288/*aspel.algorithm.sorting.radix_sort_signed.size*/), (V$50427352/*aspel.algorithm.sorting.radix_sort_signed.count*/));
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$5,TYPE$6))(((CORE$DELEGATE)V$47877840/*aspel.algorithm.sorting.radix_sort_repair_sign*/)))(CORE$cast_regular(TYPE$10, (V$50427224/*aspel.algorithm.sorting.radix_sort_signed.data*/)), (V$50427288/*aspel.algorithm.sorting.radix_sort_signed.size*/), (V$50427352/*aspel.algorithm.sorting.radix_sort_signed.count*/), (V$50427416/*aspel.algorithm.sorting.radix_sort_signed.reverse_negative*/));
    }
}

TYPE$8 V$47877760/*aspel.algorithm.sorting.radix_sort_recursion*/(TYPE$10 V$50427480/*aspel.algorithm.sorting.radix_sort_recursion.data*/, TYPE$5 V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/, TYPE$5 V$50427608/*aspel.algorithm.sorting.radix_sort_recursion.count*/, TYPE$5 V$50427672/*aspel.algorithm.sorting.radix_sort_recursion.offset*/, TYPE$2 V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/)
{
    {
    if (CORE$le(((V$50427608/*aspel.algorithm.sorting.radix_sort_recursion.count*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    TYPE$5 V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/ = (V$50427608/*aspel.algorithm.sorting.radix_sort_recursion.count*/);
    TYPE$5 V$50427864/*aspel.algorithm.sorting.radix_sort_recursion.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$lt(((V$50427864/*aspel.algorithm.sorting.radix_sort_recursion.low*/)),((V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/)))) {
    {
    if (CORE$ne((CORE$band((((TYPE$2*)((V$50427480/*aspel.algorithm.sorting.radix_sort_recursion.data*/)))[(CORE$U64)(CORE$add((CORE$mul(((V$50427864/*aspel.algorithm.sorting.radix_sort_recursion.low*/)),((V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/)))),((V$50427672/*aspel.algorithm.sorting.radix_sort_recursion.offset*/))))]),((V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734696/*aspel.algorithm.swap*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50427480/*aspel.algorithm.sorting.radix_sort_recursion.data*/)))[(CORE$U64)(CORE$mul(((V$50427864/*aspel.algorithm.sorting.radix_sort_recursion.low*/)),((V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50427480/*aspel.algorithm.sorting.radix_sort_recursion.data*/)))[(CORE$U64)(CORE$mul(((V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/)),((V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/))))]))), (V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/));
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50427864/*aspel.algorithm.sorting.radix_sort_recursion.low*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/));
    *TEMP$PTR0 = (*TEMP$PTR0) >> CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    if (CORE$land((CORE$eq(((V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL))))),(CORE$gt(((V$50427672/*aspel.algorithm.sorting.radix_sort_recursion.offset*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50427672/*aspel.algorithm.sorting.radix_sort_recursion.offset*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    if (CORE$ne(((V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/)),(CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$5,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$47877760/*aspel.algorithm.sorting.radix_sort_recursion*/)))((V$50427480/*aspel.algorithm.sorting.radix_sort_recursion.data*/), (V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/), (V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/), (V$50427672/*aspel.algorithm.sorting.radix_sort_recursion.offset*/), (V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/));
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$5,TYPE$5,TYPE$2))(((CORE$DELEGATE)V$47877760/*aspel.algorithm.sorting.radix_sort_recursion*/)))(((CORE$PTR) &(((TYPE$2*)((V$50427480/*aspel.algorithm.sorting.radix_sort_recursion.data*/)))[(CORE$U64)(CORE$mul(((V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/)),((V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/))))])), (V$50427544/*aspel.algorithm.sorting.radix_sort_recursion.size*/), CORE$sub(((V$50427608/*aspel.algorithm.sorting.radix_sort_recursion.count*/)),((V$50427800/*aspel.algorithm.sorting.radix_sort_recursion.high*/))), (V$50427672/*aspel.algorithm.sorting.radix_sort_recursion.offset*/), (V$50427736/*aspel.algorithm.sorting.radix_sort_recursion.mask*/));
    }
    }
    }
}

TYPE$8 V$47877840/*aspel.algorithm.sorting.radix_sort_repair_sign*/(TYPE$10 V$50427928/*aspel.algorithm.sorting.radix_sort_repair_sign.data*/, TYPE$5 V$50427992/*aspel.algorithm.sorting.radix_sort_repair_sign.size*/, TYPE$5 V$50428056/*aspel.algorithm.sorting.radix_sort_repair_sign.count*/, TYPE$6 V$50428120/*aspel.algorithm.sorting.radix_sort_repair_sign.reverse_negative*/)
{
    {
    TYPE$19 V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    while (CORE$lt((CORE$cast_regular(TYPE$5, (V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/))),((V$50428056/*aspel.algorithm.sorting.radix_sort_repair_sign.count*/)))) {
    {
    if (CORE$ne((CORE$band((((TYPE$2*)((V$50427928/*aspel.algorithm.sorting.radix_sort_repair_sign.data*/)))[(CORE$U64)(CORE$sub((CORE$add((CORE$mul((CORE$cast_regular(TYPE$5, (V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/))),((V$50427992/*aspel.algorithm.sorting.radix_sort_repair_sign.size*/)))),((V$50427992/*aspel.algorithm.sorting.radix_sort_repair_sign.size*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]),(CORE$cast_regular(TYPE$2, (CORE$S64)(128ULL))))),(CORE$cast_regular(TYPE$2, (CORE$S64)(0ULL))))) {
    {
    {
    break;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    {
    return;
    }
    }
    }
    if (CORE$eq((CORE$cast_regular(TYPE$5, (V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/))),((V$50428056/*aspel.algorithm.sorting.radix_sort_repair_sign.count*/)))) {
    {
    {
    return;
    }
    }
    }
    TYPE$5 V$50428248/*aspel.algorithm.sorting.radix_sort_repair_sign.negative_count*/ = CORE$sub(((V$50428056/*aspel.algorithm.sorting.radix_sort_repair_sign.count*/)),(CORE$cast_regular(TYPE$5, (V$50428184/*aspel.algorithm.sorting.radix_sort_repair_sign.first_negative_index*/))));
    ((TYPE$8(*)(TYPE$7,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$51734856/*aspel.algorithm.rotate*/)))(CORE$cast_regular(TYPE$7, (V$50427928/*aspel.algorithm.sorting.radix_sort_repair_sign.data*/)), (V$50427992/*aspel.algorithm.sorting.radix_sort_repair_sign.size*/), (V$50428056/*aspel.algorithm.sorting.radix_sort_repair_sign.count*/), (V$50428248/*aspel.algorithm.sorting.radix_sort_repair_sign.negative_count*/));
    if ((V$50428120/*aspel.algorithm.sorting.radix_sort_repair_sign.reverse_negative*/)) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734776/*aspel.algorithm.reverse*/)))(CORE$cast_regular(TYPE$7, (V$50427928/*aspel.algorithm.sorting.radix_sort_repair_sign.data*/)), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50427928/*aspel.algorithm.sorting.radix_sort_repair_sign.data*/)))[(CORE$U64)(CORE$mul((CORE$sub(((V$50428248/*aspel.algorithm.sorting.radix_sort_repair_sign.negative_count*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50427992/*aspel.algorithm.sorting.radix_sort_repair_sign.size*/))))]))), (V$50427992/*aspel.algorithm.sorting.radix_sort_repair_sign.size*/));
    }
    }
    }
}

TYPE$6 V$47879520/*aspel.algorithm.sorting.merge_sort*/(TYPE$7 V$50430232/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50430296/*aspel.algorithm.sorting.merge_sort.size*/, TYPE$5 V$50430360/*aspel.algorithm.sorting.merge_sort.count*/, TYPE$469 V$50430424/*aspel.algorithm.sorting.merge_sort.comparator*/)
{
    {
    TYPE$10 V$50430488/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)(CORE$mul(((V$50430360/*aspel.algorithm.sorting.merge_sort.count*/)),((V$50430296/*aspel.algorithm.sorting.merge_sort.size*/)))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50430488/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$10,TYPE$5,TYPE$5,TYPE$469))(((CORE$DELEGATE)V$47879600/*aspel.algorithm.sorting.merge_sort_recursion*/)))(CORE$cast_regular(TYPE$10, (V$50430232/*aspel.algorithm.sorting.merge_sort.data*/)), (V$50430296/*aspel.algorithm.sorting.merge_sort.size*/), (V$50430488/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50430360/*aspel.algorithm.sorting.merge_sort.count*/), (V$50430424/*aspel.algorithm.sorting.merge_sort.comparator*/));
    CORE$DEL((void*)(((V$50430488/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47879760/*aspel.algorithm.sorting.merge_sort*/(TYPE$691 V$50431576/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50431640/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$691 V$50431704/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50431640/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$170 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50431704/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$691,TYPE$691,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47879840/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50431576/*aspel.algorithm.sorting.merge_sort.data*/), (V$50431704/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50431640/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50431704/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47880000/*aspel.algorithm.sorting.merge_sort*/(TYPE$695 V$50432728/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50432792/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$695 V$50432856/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50432792/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(2), [] (void* data) {
    typedef TYPE$171 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50432856/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$695,TYPE$695,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880080/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50432728/*aspel.algorithm.sorting.merge_sort.data*/), (V$50432856/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50432792/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50432856/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47880240/*aspel.algorithm.sorting.merge_sort*/(TYPE$86 V$50433880/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50433944/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$86 V$50434008/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50433944/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$16 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50434008/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$86,TYPE$86,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880320/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50433880/*aspel.algorithm.sorting.merge_sort.data*/), (V$50434008/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50433944/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50434008/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47880480/*aspel.algorithm.sorting.merge_sort*/(TYPE$139 V$50435032/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50435096/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$139 V$50435160/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50435096/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(8), [] (void* data) {
    typedef TYPE$4 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50435160/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$139,TYPE$139,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880560/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50435032/*aspel.algorithm.sorting.merge_sort.data*/), (V$50435160/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50435096/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50435160/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47880720/*aspel.algorithm.sorting.merge_sort*/(TYPE$10 V$50436184/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50436248/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$10 V$50436312/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50436248/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50436312/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$10,TYPE$10,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880800/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50436184/*aspel.algorithm.sorting.merge_sort.data*/), (V$50436312/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50436248/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50436312/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47880960/*aspel.algorithm.sorting.merge_sort*/(TYPE$31 V$50437336/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50437400/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$31 V$50437464/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50437400/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(2), [] (void* data) {
    typedef TYPE$28 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50437464/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$31,TYPE$31,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881040/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50437336/*aspel.algorithm.sorting.merge_sort.data*/), (V$50437464/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50437400/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50437464/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47881200/*aspel.algorithm.sorting.merge_sort*/(TYPE$103 V$50438488/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50438552/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$103 V$50438616/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50438552/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$19 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50438616/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$103,TYPE$103,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881280/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50438488/*aspel.algorithm.sorting.merge_sort.data*/), (V$50438616/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50438552/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50438616/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47881440/*aspel.algorithm.sorting.merge_sort*/(TYPE$54 V$50439640/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50439704/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$54 V$50439768/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50439704/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(8), [] (void* data) {
    typedef TYPE$5 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50439768/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$54,TYPE$54,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881520/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50439640/*aspel.algorithm.sorting.merge_sort.data*/), (V$50439768/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50439704/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50439768/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47881680/*aspel.algorithm.sorting.merge_sort*/(TYPE$506 V$50440792/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50440856/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$506 V$50440920/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50440856/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(4), [] (void* data) {
    typedef TYPE$172 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50440920/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$506,TYPE$506,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881760/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50440792/*aspel.algorithm.sorting.merge_sort.data*/), (V$50440920/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50440856/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50440920/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$6 V$47881920/*aspel.algorithm.sorting.merge_sort*/(TYPE$143 V$50441944/*aspel.algorithm.sorting.merge_sort.data*/, TYPE$5 V$50442008/*aspel.algorithm.sorting.merge_sort.count*/)
{
    {
    TYPE$143 V$50442072/*aspel.algorithm.sorting.merge_sort.buffer*/ = CORE$cast_array_to_ptr(CORE$NEWARRINIT((CORE$U64)((V$50442008/*aspel.algorithm.sorting.merge_sort.count*/)), (CORE$U64)(8), [] (void* data) {
    typedef TYPE$51 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    if (CORE$eq(((V$50442072/*aspel.algorithm.sorting.merge_sort.buffer*/)),(CORE$null_pointer))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    ((TYPE$8(*)(TYPE$143,TYPE$143,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47882000/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50441944/*aspel.algorithm.sorting.merge_sort.data*/), (V$50442072/*aspel.algorithm.sorting.merge_sort.buffer*/), CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)), (V$50442008/*aspel.algorithm.sorting.merge_sort.count*/));
    CORE$DEL((void*)(((V$50442072/*aspel.algorithm.sorting.merge_sort.buffer*/))));    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$8 V$47879600/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$10 V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$5 V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/, TYPE$10 V$50430680/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/, TYPE$469 V$50430872/*aspel.algorithm.sorting.merge_sort_recursion.comparator*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50430872/*aspel.algorithm.sorting.merge_sort_recursion.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$mul(((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),((V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$mul((CORE$add(((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/))))]))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734696/*aspel.algorithm.swap*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$mul(((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),((V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$mul((CORE$add(((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/))))]))), (V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/));
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50430936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$10,TYPE$5,TYPE$5,TYPE$469))(((CORE$DELEGATE)V$47879600/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/), (V$50430680/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50430936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50430872/*aspel.algorithm.sorting.merge_sort_recursion.comparator*/));
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$10,TYPE$5,TYPE$5,TYPE$469))(((CORE$DELEGATE)V$47879600/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/), (V$50430680/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50430936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/), (V$50430872/*aspel.algorithm.sorting.merge_sort_recursion.comparator*/));
    ((TYPE$8(*)(TYPE$10,TYPE$5,TYPE$10,TYPE$5,TYPE$5,TYPE$5,TYPE$5,TYPE$469))(((CORE$DELEGATE)V$47879680/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/), (V$50430680/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50430936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50430936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/), (V$50430872/*aspel.algorithm.sorting.merge_sort_recursion.comparator*/));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50430552/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$mul(((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),((V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/))))]))), CORE$cast_regular(TYPE$7, (V$50430680/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)), CORE$mul(((V$50430616/*aspel.algorithm.sorting.merge_sort_recursion.size*/)),(CORE$sub(((V$50430808/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50430744/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))));
    }
    }
    }
    }
    }
}

TYPE$8 V$47879840/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$691 V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$691 V$50431832/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    typedef TYPE$170 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$170, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50432024/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$691,TYPE$691,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47879840/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50431832/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50432024/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$691,TYPE$691,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47879840/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50431832/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50432024/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$691,TYPE$691,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47879920/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50431832/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50432024/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50432024/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50432088/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50431960/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50432088/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50432088/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50431832/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50432088/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50431896/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50431768/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50432088/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47880080/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$695 V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$695 V$50432984/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    typedef TYPE$171 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$171, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50433176/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$695,TYPE$695,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880080/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50432984/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50433176/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$695,TYPE$695,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880080/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50432984/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50433176/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$695,TYPE$695,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880160/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50432984/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50433176/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50433176/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50433240/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50433112/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50433240/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50433240/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50432984/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50433240/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50433048/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50432920/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50433240/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47880320/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$86 V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$86 V$50434136/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    typedef TYPE$16 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$16, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50434328/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$86,TYPE$86,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880320/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50434136/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50434328/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$86,TYPE$86,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880320/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50434136/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50434328/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$86,TYPE$86,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880400/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50434136/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50434328/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50434328/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50434392/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50434264/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50434392/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50434392/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50434136/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50434392/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50434200/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50434072/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50434392/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47880560/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$139 V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$139 V$50435288/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    typedef TYPE$4 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$4, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50435480/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$139,TYPE$139,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880560/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50435288/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50435480/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$139,TYPE$139,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880560/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50435288/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50435480/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$139,TYPE$139,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880640/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50435288/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50435480/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50435480/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50435544/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50435416/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50435544/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50435544/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50435288/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50435544/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50435352/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50435224/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50435544/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47880800/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$10 V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$10 V$50436440/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    typedef TYPE$2 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$2, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50436632/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$10,TYPE$10,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880800/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50436440/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50436632/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$10,TYPE$10,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880800/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50436440/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50436632/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$10,TYPE$10,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47880880/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50436440/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50436632/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50436632/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50436696/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50436568/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50436696/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50436696/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50436440/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50436696/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50436504/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50436376/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50436696/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47881040/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$31 V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$31 V$50437592/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    typedef TYPE$28 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$28, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50437784/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$31,TYPE$31,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881040/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50437592/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50437784/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$31,TYPE$31,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881040/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50437592/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50437784/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$31,TYPE$31,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881120/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50437592/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50437784/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50437784/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50437848/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50437720/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50437848/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50437848/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50437592/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50437848/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50437656/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50437528/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50437848/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47881280/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$103 V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$103 V$50438744/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    typedef TYPE$19 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$19, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50438936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$103,TYPE$103,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881280/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50438744/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50438936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$103,TYPE$103,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881280/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50438744/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50438936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$103,TYPE$103,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881360/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50438744/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50438936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50438936/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50439000/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50438872/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50439000/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50439000/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50438744/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50439000/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50438808/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50438680/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50439000/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47881520/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$54 V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$54 V$50439896/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    typedef TYPE$5 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$5, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50440088/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$54,TYPE$54,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881520/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50439896/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50440088/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$54,TYPE$54,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881520/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50439896/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50440088/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$54,TYPE$54,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881600/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50439896/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50440088/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50440088/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50440152/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50440024/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50440152/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50440152/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50439896/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50440152/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50439960/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50439832/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50440152/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47881760/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$506 V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$506 V$50441048/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    typedef TYPE$172 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$172, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50441240/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$506,TYPE$506,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881760/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50441048/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50441240/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$506,TYPE$506,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881760/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50441048/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50441240/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$506,TYPE$506,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47881840/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50441048/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50441240/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50441240/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50441304/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50441176/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50441304/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50441304/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50441048/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50441304/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50441112/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50440984/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50441304/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882000/*aspel.algorithm.sorting.merge_sort_recursion*/(TYPE$143 V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/, TYPE$143 V$50442200/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/, TYPE$5 V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/, TYPE$5 V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/)
{
    {
    if (CORE$eq((CORE$sub(((V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))) {
    {
    {
    return;
    }
    }
    }
    else {
    {
    if (CORE$eq((CORE$sub(((V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))) {
    {
    if (CORE$gt((((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]),(((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    typedef TYPE$51 TEMP$TYPE1;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    auto TEMP$VAL1 = (((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/))]);
    TEMP$TYPE1* TEMP$PTR1 = (TEMP$TYPE1*)&(((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)(CORE$add(((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    *TEMP$PTR1 = CORE$cast_regular(TYPE$51, TEMP$VAL1);
    }
    }
    }
    }
    }
    else {
    {
    TYPE$5 V$50442392/*aspel.algorithm.sorting.merge_sort_recursion...middle*/ = CORE$add(((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)),(CORE$div((CORE$sub(((V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    ((TYPE$8(*)(TYPE$143,TYPE$143,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47882000/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50442200/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50442392/*aspel.algorithm.sorting.merge_sort_recursion...middle*/));
    ((TYPE$8(*)(TYPE$143,TYPE$143,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47882000/*aspel.algorithm.sorting.merge_sort_recursion*/)))((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50442200/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50442392/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    ((TYPE$8(*)(TYPE$143,TYPE$143,TYPE$5,TYPE$5,TYPE$5,TYPE$5))(((CORE$DELEGATE)V$47882080/*aspel.algorithm.sorting.merge_sort_merge*/)))((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/), (V$50442200/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/), (V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/), (V$50442392/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50442392/*aspel.algorithm.sorting.merge_sort_recursion...middle*/), (V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/));
    {
    TYPE$5 V$50442456/*aspel.algorithm.sorting.merge_sort_recursion....i*/ = (TYPE$5)((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/));
    TYPE$5 FOREACH$HIGH_BOUND = (TYPE$5)(CORE$sub(((V$50442328/*aspel.algorithm.sorting.merge_sort_recursion.right*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TYPE$5 FOREACH$STEP = (TYPE$5)(1);
    V$50442456/*aspel.algorithm.sorting.merge_sort_recursion....i*/ -= FOREACH$STEP;
    while ((V$50442456/*aspel.algorithm.sorting.merge_sort_recursion....i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50442200/*aspel.algorithm.sorting.merge_sort_recursion.buffer*/)))[(CORE$U64)(CORE$sub(((V$50442456/*aspel.algorithm.sorting.merge_sort_recursion....i*/)),((V$50442264/*aspel.algorithm.sorting.merge_sort_recursion.left*/))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50442136/*aspel.algorithm.sorting.merge_sort_recursion.data*/)))[(CORE$U64)((V$50442456/*aspel.algorithm.sorting.merge_sort_recursion....i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47879680/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$10 V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$5 V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/, TYPE$10 V$50431128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50431256/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50431384/*aspel.algorithm.sorting.merge_sort_merge.right2*/, TYPE$469 V$50431448/*aspel.algorithm.sorting.merge_sort_merge.comparator*/)
{
    {
    TYPE$5 V$50431512/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50431256/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50431384/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50431448/*aspel.algorithm.sorting.merge_sort_merge.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$mul(((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$mul(((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$mul(((V$50431512/*aspel.algorithm.sorting.merge_sort_merge.index*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$mul(((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), (V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$mul(((V$50431512/*aspel.algorithm.sorting.merge_sort_merge.index*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$mul(((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), (V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/));
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50431512/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50431256/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$mul(((V$50431512/*aspel.algorithm.sorting.merge_sort_merge.index*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$mul(((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$mul(((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/)),(CORE$sub(((V$50431256/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50431192/*aspel.algorithm.sorting.merge_sort_merge.left1*/))))));
    }
    }
    if (CORE$lt(((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50431384/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$mul(((V$50431512/*aspel.algorithm.sorting.merge_sort_merge.index*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50431000/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$mul(((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/))))]))), CORE$mul(((V$50431064/*aspel.algorithm.sorting.merge_sort_merge.size*/)),(CORE$sub(((V$50431384/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50431320/*aspel.algorithm.sorting.merge_sort_merge.left2*/))))));
    }
    }
    }
}

TYPE$8 V$47879920/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$691 V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$691 V$50432216/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50432344/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50432472/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50432536/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50432344/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50432472/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$170*)((V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$170*)((V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50432216/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50432536/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50432216/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50432536/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50432536/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50432600/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50432344/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50432600/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50432600/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50432280/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50432600/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50432216/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50432536/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50432600/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50432664/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50432472/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50432664/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50432664/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50432152/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50432408/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50432664/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50432216/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50432536/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50432664/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47880160/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$695 V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$695 V$50433368/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50433496/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50433624/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50433688/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50433496/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50433624/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$171*)((V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$171*)((V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50433368/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50433688/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50433368/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50433688/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50433688/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50433752/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50433496/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50433752/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50433752/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50433432/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50433752/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50433368/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50433688/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50433752/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50433816/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50433624/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50433816/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50433816/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50433304/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50433560/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50433816/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50433368/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50433688/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50433816/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47880400/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$86 V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$86 V$50434520/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50434648/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50434776/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50434840/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50434648/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50434776/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$16*)((V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$16*)((V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50434520/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50434840/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50434520/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50434840/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50434840/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50434904/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50434648/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50434904/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50434904/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50434584/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50434904/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50434520/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50434840/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50434904/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50434968/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50434776/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50434968/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50434968/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50434456/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50434712/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50434968/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50434520/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50434840/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50434968/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47880640/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$139 V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$139 V$50435672/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50435800/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50435928/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50435992/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50435800/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50435928/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$4*)((V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$4*)((V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50435672/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50435992/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50435672/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50435992/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50435992/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50436056/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50435800/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50436056/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50436056/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50435736/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50436056/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50435672/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50435992/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50436056/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50436120/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50435928/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50436120/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50436120/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50435608/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50435864/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50436120/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50435672/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50435992/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50436120/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47880880/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$10 V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$10 V$50436824/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50436952/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50437080/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50437144/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50436952/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50437080/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$2*)((V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$2*)((V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50436824/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50437144/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50436824/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50437144/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50437144/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50437208/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50436952/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50437208/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50437208/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50436888/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50437208/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50436824/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50437144/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50437208/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50437272/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50437080/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50437272/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50437272/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50436760/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50437016/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50437272/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50436824/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50437144/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50437272/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47881120/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$31 V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$31 V$50437976/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50438104/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50438232/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50438296/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50438104/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50438232/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$28*)((V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$28*)((V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50437976/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50438296/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50437976/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50438296/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50438296/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50438360/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50438104/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50438360/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50438360/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50438040/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50438360/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50437976/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50438296/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50438360/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50438424/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50438232/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50438424/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50438424/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50437912/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50438168/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50438424/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50437976/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50438296/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50438424/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47881360/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$103 V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$103 V$50439128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50439256/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50439384/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50439448/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50439256/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50439384/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$19*)((V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$19*)((V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50439128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50439448/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50439128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50439448/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50439448/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50439512/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50439256/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50439512/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50439512/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50439192/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50439512/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50439128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50439448/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50439512/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50439576/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50439384/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50439576/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50439576/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50439064/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50439320/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50439576/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50439128/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50439448/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50439576/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47881600/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$54 V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$54 V$50440280/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50440408/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50440536/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50440600/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50440408/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50440536/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$5*)((V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$5*)((V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50440280/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50440600/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50440280/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50440600/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50440600/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50440664/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50440408/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50440664/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50440664/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50440344/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50440664/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50440280/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50440600/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50440664/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50440728/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50440536/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50440728/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50440728/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50440216/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50440472/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50440728/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50440280/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50440600/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50440728/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47881840/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$506 V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$506 V$50441432/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50441560/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50441688/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50441752/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50441560/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50441688/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$172*)((V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$172*)((V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50441432/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50441752/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50441432/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50441752/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50441752/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50441816/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50441560/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50441816/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50441816/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50441496/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50441816/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50441432/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50441752/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50441816/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50441880/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50441688/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50441880/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50441880/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50441368/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50441624/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50441880/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50441432/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50441752/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50441880/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47882080/*aspel.algorithm.sorting.merge_sort_merge*/(TYPE$143 V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/, TYPE$143 V$50442584/*aspel.algorithm.sorting.merge_sort_merge.buffer*/, TYPE$5 V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/, TYPE$5 V$50442712/*aspel.algorithm.sorting.merge_sort_merge.right1*/, TYPE$5 V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/, TYPE$5 V$50442840/*aspel.algorithm.sorting.merge_sort_merge.right2*/)
{
    {
    TYPE$5 V$50442904/*aspel.algorithm.sorting.merge_sort_merge.index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$land((CORE$lt(((V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),((V$50442712/*aspel.algorithm.sorting.merge_sort_merge.right1*/)))),(CORE$lt(((V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),((V$50442840/*aspel.algorithm.sorting.merge_sort_merge.right2*/)))))) {
    {
    if (CORE$lt((((TYPE$51*)((V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]),(((TYPE$51*)((V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50442584/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50442904/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)((V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50442584/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)((V$50442904/*aspel.algorithm.sorting.merge_sort_merge.index*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50442904/*aspel.algorithm.sorting.merge_sort_merge.index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    {
    TYPE$4 V$50442968/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50442712/*aspel.algorithm.sorting.merge_sort_merge.right1*/)),((V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50442968/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50442968/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50442648/*aspel.algorithm.sorting.merge_sort_merge.left1*/)),(CORE$cast_regular(TYPE$5, (V$50442968/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50442584/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50442904/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50442968/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    }
    {
    TYPE$4 V$50443032/*aspel.algorithm.sorting.merge_sort_merge..i*/ = (TYPE$4)((CORE$S64)(0ULL));
    TYPE$4 FOREACH$HIGH_BOUND = (TYPE$4)(CORE$cast_regular(TYPE$4, CORE$sub((CORE$sub(((V$50442840/*aspel.algorithm.sorting.merge_sort_merge.right2*/)),((V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))));
    TYPE$4 FOREACH$STEP = (TYPE$4)(1);
    V$50443032/*aspel.algorithm.sorting.merge_sort_merge..i*/ -= FOREACH$STEP;
    while ((V$50443032/*aspel.algorithm.sorting.merge_sort_merge..i*/ += FOREACH$STEP) <= FOREACH$HIGH_BOUND) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50442520/*aspel.algorithm.sorting.merge_sort_merge.data*/)))[(CORE$U64)(CORE$add(((V$50442776/*aspel.algorithm.sorting.merge_sort_merge.left2*/)),(CORE$cast_regular(TYPE$5, (V$50443032/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50442584/*aspel.algorithm.sorting.merge_sort_merge.buffer*/)))[(CORE$U64)(CORE$add(((V$50442904/*aspel.algorithm.sorting.merge_sort_merge.index*/)),(CORE$cast_regular(TYPE$5, (V$50443032/*aspel.algorithm.sorting.merge_sort_merge..i*/)))))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    }
    }
    }
    }
}

TYPE$8 V$47882160/*aspel.algorithm.sorting.quick_sort*/(TYPE$7 V$50443096/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50443160/*aspel.algorithm.sorting.quick_sort.size*/, TYPE$5 V$50443224/*aspel.algorithm.sorting.quick_sort.count*/, TYPE$469 V$50443288/*aspel.algorithm.sorting.quick_sort.comparator*/)
{
    {
    TYPE$10 V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/ = CORE$cast_regular(TYPE$10, (V$50443096/*aspel.algorithm.sorting.quick_sort.data*/));
    TYPE$703 V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50443480/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50443544/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$1 V$50443608/*aspel.algorithm.sorting.quick_sort.pivot*/ = CORE$PUSHARR((CORE$U64)((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/)), (CORE$U64)(1));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(17)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50443224/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(18)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50443672/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(22));
    TYPE$4 V$50443736/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(23))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_array_to_ptr((V$50443608/*aspel.algorithm.sorting.quick_sort.pivot*/)), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443672/*aspel.algorithm.sorting.quick_sort..l*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), (V$50443160/*aspel.algorithm.sorting.quick_sort.size*/));
    while (CORE$lt(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50443288/*aspel.algorithm.sorting.quick_sort.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443736/*aspel.algorithm.sorting.quick_sort..r*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), CORE$cast_array_to_ptr((V$50443608/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$lt(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443672/*aspel.algorithm.sorting.quick_sort..l*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443736/*aspel.algorithm.sorting.quick_sort..r*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), (V$50443160/*aspel.algorithm.sorting.quick_sort.size*/));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50443288/*aspel.algorithm.sorting.quick_sort.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443672/*aspel.algorithm.sorting.quick_sort..l*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), CORE$cast_array_to_ptr((V$50443608/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))),(CORE$lt(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443736/*aspel.algorithm.sorting.quick_sort..r*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443672/*aspel.algorithm.sorting.quick_sort..l*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), (V$50443160/*aspel.algorithm.sorting.quick_sort.size*/));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443736/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734616/*aspel.algorithm.copy*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50443352/*aspel.algorithm.sorting.quick_sort.bytes*/)))[(CORE$U64)(CORE$mul((CORE$cast_regular(TYPE$5, (V$50443672/*aspel.algorithm.sorting.quick_sort..l*/))),((V$50443160/*aspel.algorithm.sorting.quick_sort.size*/))))]))), CORE$cast_array_to_ptr((V$50443608/*aspel.algorithm.sorting.quick_sort.pivot*/)), (V$50443160/*aspel.algorithm.sorting.quick_sort.size*/));
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(45)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(46)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(46)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50443672/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(47)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(50))),(CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(50))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(50))),(CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(50))))))) {
    {
    TYPE$4 V$50443800/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(54)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443800/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(55)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(55)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50443800/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443416/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(56)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(58)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443800/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(59)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50443544/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(59)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50443800/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443480/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(60)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50443544/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882240/*aspel.algorithm.sorting.quick_sort*/(TYPE$691 V$50443864/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50443928/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50444056/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50444120/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$170 V$50444184/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(78)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50443928/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(79)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50444248/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(83));
    TYPE$4 V$50444312/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(84))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444184/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    while (CORE$lt(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50444184/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50444184/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444312/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444312/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50444184/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$170*)((V$50443864/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(106)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(107)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(107)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50444248/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(108)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(111))),(CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(111))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(111))),(CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(111))))))) {
    {
    TYPE$4 V$50444376/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(115)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444376/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(116)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(116)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50444376/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50443992/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(117)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(119)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444376/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(120)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444120/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(120)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50444376/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444056/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(121)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444120/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882320/*aspel.algorithm.sorting.quick_sort*/(TYPE$693 V$50444440/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$691,TYPE$5))(((CORE$DELEGATE)V$47882240/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50444440/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50444440/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47882400/*aspel.algorithm.sorting.quick_sort*/(TYPE$695 V$50444504/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50444568/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50444696/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50444760/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$171 V$50444824/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(144)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50444568/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(145)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50444888/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(149));
    TYPE$4 V$50444952/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(150))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444824/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    while (CORE$lt(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50444824/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50444824/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444952/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444952/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$171 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50444824/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$171*)((V$50444504/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$171, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(172)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(173)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(173)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50444888/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(174)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(177))),(CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(177))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(177))),(CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(177))))))) {
    {
    TYPE$4 V$50445016/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(181)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445016/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(182)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(182)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50445016/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444632/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(183)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(185)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445016/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(186)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50444760/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(186)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50445016/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50444696/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(187)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50444760/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882480/*aspel.algorithm.sorting.quick_sort*/(TYPE$697 V$50445080/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$695,TYPE$5))(((CORE$DELEGATE)V$47882400/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50445080/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50445080/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47882560/*aspel.algorithm.sorting.quick_sort*/(TYPE$86 V$50445144/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50445208/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50445336/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50445400/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$16 V$50445464/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(210)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50445208/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(211)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50445528/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(215));
    TYPE$4 V$50445592/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(216))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445464/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    while (CORE$lt(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50445464/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50445464/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445592/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445592/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$16 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50445464/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$16*)((V$50445144/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$16, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(238)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(239)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(239)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50445528/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(240)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(243))),(CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(243))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(243))),(CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(243))))))) {
    {
    TYPE$4 V$50445656/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(247)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445656/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(248)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(248)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50445656/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445272/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(249)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(251)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445656/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(252)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50445400/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(252)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50445656/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445336/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(253)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50445400/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882640/*aspel.algorithm.sorting.quick_sort*/(TYPE$700 V$50445720/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$86,TYPE$5))(((CORE$DELEGATE)V$47882560/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50445720/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50445720/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47882720/*aspel.algorithm.sorting.quick_sort*/(TYPE$139 V$50445784/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50445848/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50445976/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50446040/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$4 V$50446104/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(276)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50445848/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(277)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50446168/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(281));
    TYPE$4 V$50446232/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(282))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446104/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$lt(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50446104/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50446104/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446232/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446232/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446104/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$4*)((V$50445784/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(304)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(305)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(305)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446168/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(306)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(309))),(CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(309))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(309))),(CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(309))))))) {
    {
    TYPE$4 V$50446296/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(313)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446296/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(314)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(314)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446296/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445912/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(315)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(317)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446296/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(318)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446040/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(318)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446296/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50445976/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(319)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446040/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882800/*aspel.algorithm.sorting.quick_sort*/(TYPE$703 V$50446360/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$139,TYPE$5))(((CORE$DELEGATE)V$47882720/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50446360/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50446360/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47882880/*aspel.algorithm.sorting.quick_sort*/(TYPE$10 V$50446424/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50446488/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50446616/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50446680/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$2 V$50446744/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(342)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50446488/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(343)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50446808/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(347));
    TYPE$4 V$50446872/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(348))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446744/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    while (CORE$lt(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50446744/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50446744/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446872/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446872/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446744/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50446424/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(370)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(371)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(371)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446808/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(372)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(375))),(CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(375))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(375))),(CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(375))))))) {
    {
    TYPE$4 V$50446936/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(379)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446936/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(380)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(380)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446936/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446552/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(381)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(383)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446936/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(384)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50446680/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(384)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50446936/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50446616/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(385)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50446680/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47882960/*aspel.algorithm.sorting.quick_sort*/(TYPE$1 V$50447000/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$10,TYPE$5))(((CORE$DELEGATE)V$47882880/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50447000/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50447000/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47883040/*aspel.algorithm.sorting.quick_sort*/(TYPE$31 V$50447064/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50447128/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50447256/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50447320/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$28 V$50447384/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(408)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50447128/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(409)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50447448/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(413));
    TYPE$4 V$50447512/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(414))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447384/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    while (CORE$lt(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50447384/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50447384/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447512/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447512/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$28 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50447384/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$28*)((V$50447064/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$28, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(436)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(437)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(437)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50447448/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(438)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(441))),(CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(441))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(441))),(CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(441))))))) {
    {
    TYPE$4 V$50447576/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(445)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447576/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(446)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(446)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50447576/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447192/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(447)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(449)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447576/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(450)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447320/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(450)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50447576/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447256/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(451)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447320/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47883120/*aspel.algorithm.sorting.quick_sort*/(TYPE$30 V$50447640/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$31,TYPE$5))(((CORE$DELEGATE)V$47883040/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50447640/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50447640/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47883200/*aspel.algorithm.sorting.quick_sort*/(TYPE$103 V$50447704/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50447768/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50447896/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50447960/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$19 V$50448024/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(474)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50447768/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(475)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50448088/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(479));
    TYPE$4 V$50448152/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(480))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448024/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    while (CORE$lt(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50448024/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50448024/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448152/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448152/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448024/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)((V$50447704/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(502)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(503)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(503)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448088/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(504)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(507))),(CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(507))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(507))),(CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(507))))))) {
    {
    TYPE$4 V$50448216/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(511)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448216/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(512)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(512)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448216/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447832/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(513)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(515)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448216/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(516)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50447960/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(516)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448216/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50447896/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(517)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50447960/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47883280/*aspel.algorithm.sorting.quick_sort*/(TYPE$184 V$50448280/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$103,TYPE$5))(((CORE$DELEGATE)V$47883200/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50448280/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50448280/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47883360/*aspel.algorithm.sorting.quick_sort*/(TYPE$54 V$50448344/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50448408/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50448536/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50448600/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$5 V$50448664/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(540)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50448408/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(541)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50448728/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(545));
    TYPE$4 V$50448792/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(546))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448664/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    while (CORE$lt(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50448664/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50448664/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448792/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448792/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448664/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$5*)((V$50448344/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(568)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(569)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(569)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448728/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(570)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(573))),(CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(573))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(573))),(CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(573))))))) {
    {
    TYPE$4 V$50448856/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(577)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448856/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(578)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(578)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448856/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448472/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(579)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(581)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448856/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(582)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50448600/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(582)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50448856/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50448536/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(583)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50448600/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47883440/*aspel.algorithm.sorting.quick_sort*/(TYPE$712 V$50448920/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$54,TYPE$5))(((CORE$DELEGATE)V$47883360/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50448920/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50448920/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47883520/*aspel.algorithm.sorting.quick_sort*/(TYPE$506 V$50448984/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50449048/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50449176/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50449240/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$172 V$50449304/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(606)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50449048/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(607)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50449368/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(611));
    TYPE$4 V$50449432/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(612))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449304/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    while (CORE$lt(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50449304/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50449304/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449432/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449432/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$172 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50449304/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$172*)((V$50448984/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$172, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(634)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(635)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(635)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50449368/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(636)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(639))),(CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(639))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(639))),(CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(639))))))) {
    {
    TYPE$4 V$50449496/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(643)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449496/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(644)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(644)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50449496/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449112/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(645)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(647)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449496/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(648)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449240/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(648)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50449496/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449176/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(649)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449240/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47883600/*aspel.algorithm.sorting.quick_sort*/(TYPE$715 V$50449560/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$506,TYPE$5))(((CORE$DELEGATE)V$47883520/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50449560/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50449560/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$8 V$47883680/*aspel.algorithm.sorting.quick_sort*/(TYPE$143 V$50449624/*aspel.algorithm.sorting.quick_sort.data*/, TYPE$5 V$50449688/*aspel.algorithm.sorting.quick_sort.count*/)
{
    {
    TYPE$703 V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$703 V$50449816/*aspel.algorithm.sorting.quick_sort.end*/ = CORE$PUSHARR((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(128ULL))), (CORE$U64)(8));
    TYPE$170 V$50449880/*aspel.algorithm.sorting.quick_sort.i*/ = CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL));
    TYPE$51 V$50449944/*aspel.algorithm.sorting.quick_sort.pivot*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(0ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(672)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$4, (V$50449688/*aspel.algorithm.sorting.quick_sort.count*/)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(673)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    while (CORE$ge(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(0ULL))))) {
    {
    TYPE$4 V$50450008/*aspel.algorithm.sorting.quick_sort..l*/ = CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(677));
    TYPE$4 V$50450072/*aspel.algorithm.sorting.quick_sort..r*/ = CORE$sub((CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(678))),((CORE$S64)(1ULL)));
    if (CORE$lt(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449944/*aspel.algorithm.sorting.quick_sort.pivot*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    while (CORE$lt(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    while (CORE$land((CORE$ge((((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))]),((V$50449944/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    while (CORE$land((CORE$le((((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)))]),((V$50449944/*aspel.algorithm.sorting.quick_sort.pivot*/)))),(CORE$lt(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))))) {
    {
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    if (CORE$lt(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))) {
    {
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450072/*aspel.algorithm.sorting.quick_sort..r*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((CORE$S64)(1ULL));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450072/*aspel.algorithm.sorting.quick_sort..r*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$51 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50449944/*aspel.algorithm.sorting.quick_sort.pivot*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$51*)((V$50449624/*aspel.algorithm.sorting.quick_sort.data*/)))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$51, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/)),((CORE$S64)(1ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(700)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(701)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(701)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50450008/*aspel.algorithm.sorting.quick_sort..l*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(702)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    if (CORE$gt((CORE$sub((CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(705))),(CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(705))))),(CORE$sub((CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(705))),(CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(705))))))) {
    {
    TYPE$4 V$50450136/*aspel.algorithm.sorting.quick_sort....swap*/;
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(709)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450136/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(710)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(710)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50450136/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449752/*aspel.algorithm.sorting.quick_sort.beg*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(711)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(713)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450136/*aspel.algorithm.sorting.quick_sort....swap*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(714)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, (V$50449880/*aspel.algorithm.sorting.quick_sort.i*/))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(714)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    {
    typedef TYPE$4 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50450136/*aspel.algorithm.sorting.quick_sort....swap*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$4, ((V$50449816/*aspel.algorithm.sorting.quick_sort.end*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub(((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/)),(CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x73\x6F\x72\x74\x69\x6E\x67\\\x71\x75\x69\x63\x6B\x5F\x73\x6F\x72\x74\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(715)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$4, TEMP$VAL0);
    }
    }
    }
    }
    }
    else {
    {
    {
    typedef TYPE$170 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$170, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50449880/*aspel.algorithm.sorting.quick_sort.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$170, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$47883760/*aspel.algorithm.sorting.quick_sort*/(TYPE$364 V$50450200/*aspel.algorithm.sorting.quick_sort.data*/)
{
    {
    ((TYPE$8(*)(TYPE$143,TYPE$5))(((CORE$DELEGATE)V$47883680/*aspel.algorithm.sorting.quick_sort*/)))(CORE$cast_array_to_ptr((V$50450200/*aspel.algorithm.sorting.quick_sort.data*/)), ((V$50450200/*aspel.algorithm.sorting.quick_sort.data*/).n));
    }
}

TYPE$5 V$47883840/*aspel.algorithm.order.find_lower_bound*/(TYPE$7 V$50450264/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50450328/*aspel.algorithm.order.find_lower_bound.size*/, TYPE$5 V$50450392/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$7 V$50450456/*aspel.algorithm.order.find_lower_bound.value*/, TYPE$469 V$50450520/*aspel.algorithm.order.find_lower_bound.comparator*/)
{
    {
    TYPE$10 V$50450584/*aspel.algorithm.order.find_lower_bound.bytes*/ = CORE$cast_regular(TYPE$10, (V$50450264/*aspel.algorithm.order.find_lower_bound.data*/));
    TYPE$5 V$50450648/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50450712/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50450392/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50450648/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50450712/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50450776/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50450648/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50450712/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50450648/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50450520/*aspel.algorithm.order.find_lower_bound.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50450584/*aspel.algorithm.order.find_lower_bound.bytes*/)))[(CORE$U64)(CORE$mul(((V$50450776/*aspel.algorithm.order.find_lower_bound..middle*/)),((V$50450328/*aspel.algorithm.order.find_lower_bound.size*/))))]))), (V$50450456/*aspel.algorithm.order.find_lower_bound.value*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50450776/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450648/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50450776/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50450712/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50450648/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47883920/*aspel.algorithm.order.find_lower_bound*/(TYPE$691 V$50450840/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50450904/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$170 V$50450968/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50451032/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50451096/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50450904/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50451032/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50451096/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50451160/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50451032/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50451096/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50451032/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$170*)((V$50450840/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50451160/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50450968/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50451160/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50451032/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50451160/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50451096/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50451032/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884000/*aspel.algorithm.order.find_lower_bound*/(TYPE$695 V$50451224/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50451288/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$171 V$50451352/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50451416/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50451480/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50451288/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50451416/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50451480/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50451544/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50451416/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50451480/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50451416/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$171*)((V$50451224/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50451544/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50451352/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50451544/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50451416/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50451544/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50451480/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50451416/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884080/*aspel.algorithm.order.find_lower_bound*/(TYPE$86 V$50451608/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50451672/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$16 V$50451736/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50451800/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50451864/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50451672/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50451800/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50451864/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50451928/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50451800/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50451864/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50451800/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$16*)((V$50451608/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50451928/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50451736/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50451928/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50451800/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50451928/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50451864/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50451800/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884160/*aspel.algorithm.order.find_lower_bound*/(TYPE$139 V$50451992/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50452056/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$4 V$50452120/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50452184/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50452248/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50452056/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50452184/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50452248/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50452312/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50452184/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50452248/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50452184/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$4*)((V$50451992/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50452312/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50452120/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50452312/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50452184/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50452312/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50452248/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50452184/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884240/*aspel.algorithm.order.find_lower_bound*/(TYPE$10 V$50452376/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50452440/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$2 V$50452504/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50452568/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50452632/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50452440/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50452568/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50452632/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50452696/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50452568/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50452632/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50452568/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$2*)((V$50452376/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50452696/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50452504/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50452696/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50452568/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50452696/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50452632/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50452568/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884320/*aspel.algorithm.order.find_lower_bound*/(TYPE$31 V$50452760/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50452824/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$28 V$50452888/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50452952/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50453016/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50452824/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50452952/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50453016/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50453080/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50452952/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50453016/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50452952/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$28*)((V$50452760/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50453080/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50452888/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50453080/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50452952/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50453080/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50453016/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50452952/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884400/*aspel.algorithm.order.find_lower_bound*/(TYPE$103 V$50453144/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50453208/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$19 V$50453272/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50453336/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50453400/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50453208/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50453336/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50453400/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50453464/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50453336/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50453400/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50453336/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$19*)((V$50453144/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50453464/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50453272/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50453464/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50453336/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50453464/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50453400/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50453336/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884480/*aspel.algorithm.order.find_lower_bound*/(TYPE$54 V$50453528/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50453592/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$5 V$50453656/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50453720/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50453784/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50453592/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50453720/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50453784/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50453848/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50453720/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50453784/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50453720/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$5*)((V$50453528/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50453848/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50453656/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50453848/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50453720/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50453848/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50453784/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50453720/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884560/*aspel.algorithm.order.find_lower_bound*/(TYPE$506 V$50453912/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50453976/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$172 V$50454040/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50454104/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50454168/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50453976/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50454104/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50454168/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50454232/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50454104/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50454168/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50454104/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$172*)((V$50453912/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50454232/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50454040/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50454232/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50454104/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50454232/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50454168/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50454104/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884640/*aspel.algorithm.order.find_lower_bound*/(TYPE$143 V$50454296/*aspel.algorithm.order.find_lower_bound.data*/, TYPE$5 V$50454360/*aspel.algorithm.order.find_lower_bound.count*/, TYPE$51 V$50454424/*aspel.algorithm.order.find_lower_bound.value*/)
{
    {
    TYPE$5 V$50454488/*aspel.algorithm.order.find_lower_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50454552/*aspel.algorithm.order.find_lower_bound.high*/ = (V$50454360/*aspel.algorithm.order.find_lower_bound.count*/);
    while (CORE$lt(((V$50454488/*aspel.algorithm.order.find_lower_bound.low*/)),((V$50454552/*aspel.algorithm.order.find_lower_bound.high*/)))) {
    {
    TYPE$5 V$50454616/*aspel.algorithm.order.find_lower_bound..middle*/ = CORE$add(((V$50454488/*aspel.algorithm.order.find_lower_bound.low*/)),(CORE$div((CORE$sub(((V$50454552/*aspel.algorithm.order.find_lower_bound.high*/)),((V$50454488/*aspel.algorithm.order.find_lower_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$lt((((TYPE$51*)((V$50454296/*aspel.algorithm.order.find_lower_bound.data*/)))[(CORE$U64)((V$50454616/*aspel.algorithm.order.find_lower_bound..middle*/))]),((V$50454424/*aspel.algorithm.order.find_lower_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50454616/*aspel.algorithm.order.find_lower_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50454488/*aspel.algorithm.order.find_lower_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50454616/*aspel.algorithm.order.find_lower_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50454552/*aspel.algorithm.order.find_lower_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50454488/*aspel.algorithm.order.find_lower_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884720/*aspel.algorithm.order.find_upper_bound*/(TYPE$7 V$50454680/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50454744/*aspel.algorithm.order.find_upper_bound.size*/, TYPE$5 V$50454808/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$7 V$50454872/*aspel.algorithm.order.find_upper_bound.value*/, TYPE$469 V$50454936/*aspel.algorithm.order.find_upper_bound.comparator*/)
{
    {
    TYPE$10 V$50455000/*aspel.algorithm.order.find_upper_bound.bytes*/ = CORE$cast_regular(TYPE$10, (V$50454680/*aspel.algorithm.order.find_upper_bound.data*/));
    TYPE$5 V$50455064/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50455128/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50454808/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50455064/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50455128/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50455192/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50455064/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50455128/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50455064/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$16(*)(TYPE$7,TYPE$7))((V$50454936/*aspel.algorithm.order.find_upper_bound.comparator*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50455000/*aspel.algorithm.order.find_upper_bound.bytes*/)))[(CORE$U64)(CORE$mul(((V$50455192/*aspel.algorithm.order.find_upper_bound..middle*/)),((V$50454744/*aspel.algorithm.order.find_upper_bound.size*/))))]))), (V$50454872/*aspel.algorithm.order.find_upper_bound.value*/))),(CORE$cast_regular(TYPE$16, (CORE$S64)(0ULL))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50455192/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50455064/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50455192/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50455128/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50455064/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884800/*aspel.algorithm.order.find_upper_bound*/(TYPE$691 V$50455256/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50455320/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$170 V$50455384/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50455448/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50455512/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50455320/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50455448/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50455512/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50455576/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50455448/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50455512/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50455448/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$170*)((V$50455256/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50455576/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50455384/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50455576/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50455448/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50455576/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50455512/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50455448/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$47884880/*aspel.algorithm.order.find_upper_bound*/(TYPE$695 V$50455640/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50455704/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$171 V$50455768/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50455832/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50455896/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50455704/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50455832/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50455896/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50455960/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50455832/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50455896/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50455832/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$171*)((V$50455640/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50455960/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50455768/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50455960/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50455832/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50455960/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50455896/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50455832/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51733976/*aspel.algorithm.order.find_upper_bound*/(TYPE$86 V$50456024/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50456088/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$16 V$50456152/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50456216/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50456280/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50456088/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50456216/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50456280/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50456344/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50456216/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50456280/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50456216/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$16*)((V$50456024/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50456344/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50456152/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50456344/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50456216/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50456344/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50456280/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50456216/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734056/*aspel.algorithm.order.find_upper_bound*/(TYPE$139 V$50456408/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50456472/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$4 V$50456536/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50456600/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50456664/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50456472/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50456600/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50456664/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50456728/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50456600/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50456664/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50456600/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$4*)((V$50456408/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50456728/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50456536/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50456728/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50456600/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50456728/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50456664/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50456600/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734136/*aspel.algorithm.order.find_upper_bound*/(TYPE$10 V$50456792/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50456856/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$2 V$50456920/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50456984/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50457048/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50456856/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50456984/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50457048/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50457112/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50456984/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50457048/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50456984/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$2*)((V$50456792/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50457112/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50456920/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50457112/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50456984/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50457112/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50457048/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50456984/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734216/*aspel.algorithm.order.find_upper_bound*/(TYPE$31 V$50457176/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50457240/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$28 V$50457304/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50457368/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50457432/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50457240/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50457368/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50457432/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50457496/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50457368/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50457432/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50457368/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$28*)((V$50457176/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50457496/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50457304/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50457496/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50457368/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50457496/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50457432/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50457368/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734296/*aspel.algorithm.order.find_upper_bound*/(TYPE$103 V$50457560/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50457624/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$19 V$50457688/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50457752/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50457816/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50457624/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50457752/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50457816/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50457880/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50457752/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50457816/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50457752/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$19*)((V$50457560/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50457880/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50457688/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50457880/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50457752/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50457880/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50457816/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50457752/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734376/*aspel.algorithm.order.find_upper_bound*/(TYPE$54 V$50457944/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50458008/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$5 V$50458072/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50458136/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50458200/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50458008/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50458136/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50458200/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50458264/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50458136/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50458200/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50458136/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$5*)((V$50457944/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50458264/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50458072/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50458264/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50458136/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50458264/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50458200/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50458136/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734456/*aspel.algorithm.order.find_upper_bound*/(TYPE$506 V$50458328/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50458392/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$172 V$50458456/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50458520/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50458584/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50458392/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50458520/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50458584/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50458648/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50458520/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50458584/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50458520/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$172*)((V$50458328/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50458648/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50458456/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50458648/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50458520/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50458648/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50458584/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50458520/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$5 V$51734536/*aspel.algorithm.order.find_upper_bound*/(TYPE$143 V$50458712/*aspel.algorithm.order.find_upper_bound.data*/, TYPE$5 V$50458776/*aspel.algorithm.order.find_upper_bound.count*/, TYPE$51 V$50458840/*aspel.algorithm.order.find_upper_bound.value*/)
{
    {
    TYPE$5 V$50458904/*aspel.algorithm.order.find_upper_bound.low*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    TYPE$5 V$50458968/*aspel.algorithm.order.find_upper_bound.high*/ = (V$50458776/*aspel.algorithm.order.find_upper_bound.count*/);
    while (CORE$lt(((V$50458904/*aspel.algorithm.order.find_upper_bound.low*/)),((V$50458968/*aspel.algorithm.order.find_upper_bound.high*/)))) {
    {
    TYPE$5 V$50459032/*aspel.algorithm.order.find_upper_bound..middle*/ = CORE$add(((V$50458904/*aspel.algorithm.order.find_upper_bound.low*/)),(CORE$div((CORE$sub(((V$50458968/*aspel.algorithm.order.find_upper_bound.high*/)),((V$50458904/*aspel.algorithm.order.find_upper_bound.low*/)))),(CORE$cast_regular(TYPE$5, (CORE$S64)(2ULL))))));
    if (CORE$le((((TYPE$51*)((V$50458712/*aspel.algorithm.order.find_upper_bound.data*/)))[(CORE$U64)((V$50459032/*aspel.algorithm.order.find_upper_bound..middle*/))]),((V$50458840/*aspel.algorithm.order.find_upper_bound.value*/)))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50459032/*aspel.algorithm.order.find_upper_bound..middle*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50458904/*aspel.algorithm.order.find_upper_bound.low*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50459032/*aspel.algorithm.order.find_upper_bound..middle*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50458968/*aspel.algorithm.order.find_upper_bound.high*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    TYPE$5 RET$VAL = (V$50458904/*aspel.algorithm.order.find_upper_bound.low*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$51734616/*aspel.algorithm.copy*/(TYPE$7 V$50459096/*aspel.algorithm.copy.dest*/, TYPE$7 V$50459160/*aspel.algorithm.copy.src*/, TYPE$5 V$50459224/*aspel.algorithm.copy.size*/)
{
    {
    TYPE$5 V$50459288/*aspel.algorithm.copy.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$lt(((V$50459288/*aspel.algorithm.copy.i*/)),((V$50459224/*aspel.algorithm.copy.size*/)))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)(CORE$cast_regular(TYPE$10, (V$50459160/*aspel.algorithm.copy.src*/))))[(CORE$U64)((V$50459288/*aspel.algorithm.copy.i*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)(CORE$cast_regular(TYPE$10, (V$50459096/*aspel.algorithm.copy.dest*/))))[(CORE$U64)((V$50459288/*aspel.algorithm.copy.i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50459288/*aspel.algorithm.copy.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$51734696/*aspel.algorithm.swap*/(TYPE$7 V$50459352/*aspel.algorithm.swap.data1*/, TYPE$7 V$50459416/*aspel.algorithm.swap.data2*/, TYPE$5 V$50459480/*aspel.algorithm.swap.size*/)
{
    {
    TYPE$10 V$50459544/*aspel.algorithm.swap.a*/ = CORE$cast_regular(TYPE$10, (V$50459352/*aspel.algorithm.swap.data1*/));
    TYPE$10 V$50459608/*aspel.algorithm.swap.b*/ = CORE$cast_regular(TYPE$10, (V$50459416/*aspel.algorithm.swap.data2*/));
    TYPE$5 V$50459672/*aspel.algorithm.swap.i*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    while (CORE$lt(((V$50459672/*aspel.algorithm.swap.i*/)),((V$50459480/*aspel.algorithm.swap.size*/)))) {
    {
    TYPE$2 V$50459736/*aspel.algorithm.swap..temp*/ = ((TYPE$2*)((V$50459544/*aspel.algorithm.swap.a*/)))[(CORE$U64)((V$50459672/*aspel.algorithm.swap.i*/))];
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$2*)((V$50459608/*aspel.algorithm.swap.b*/)))[(CORE$U64)((V$50459672/*aspel.algorithm.swap.i*/))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50459544/*aspel.algorithm.swap.a*/)))[(CORE$U64)((V$50459672/*aspel.algorithm.swap.i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50459736/*aspel.algorithm.swap..temp*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$2*)((V$50459608/*aspel.algorithm.swap.b*/)))[(CORE$U64)((V$50459672/*aspel.algorithm.swap.i*/))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50459672/*aspel.algorithm.swap.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$51734776/*aspel.algorithm.reverse*/(TYPE$7 V$50459800/*aspel.algorithm.reverse.low*/, TYPE$7 V$50459864/*aspel.algorithm.reverse.high*/, TYPE$5 V$50459928/*aspel.algorithm.reverse.size*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$lt(((V$50459800/*aspel.algorithm.reverse.low*/)),((V$50459864/*aspel.algorithm.reverse.high*/))))), ((CORE$ARRAY){ 0, 0 }), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x61\x6C\x67\x6F\x72\x69\x74\x68\x6D\\\x6D\x61\x6E\x69\x70\x75\x6C\x61\x74\x69\x6F\x6E\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(30)));
    TYPE$10 V$50459992/*aspel.algorithm.reverse.low_bytes*/ = CORE$cast_regular(TYPE$10, (V$50459800/*aspel.algorithm.reverse.low*/));
    TYPE$10 V$50460056/*aspel.algorithm.reverse.high_bytes*/ = CORE$cast_regular(TYPE$10, (V$50459864/*aspel.algorithm.reverse.high*/));
    while (CORE$lt(((V$50459992/*aspel.algorithm.reverse.low_bytes*/)),((V$50460056/*aspel.algorithm.reverse.high_bytes*/)))) {
    {
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734696/*aspel.algorithm.swap*/)))(CORE$cast_regular(TYPE$7, (V$50459992/*aspel.algorithm.reverse.low_bytes*/)), CORE$cast_regular(TYPE$7, (V$50460056/*aspel.algorithm.reverse.high_bytes*/)), (V$50459928/*aspel.algorithm.reverse.size*/));
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$50459928/*aspel.algorithm.reverse.size*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50459992/*aspel.algorithm.reverse.low_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (V$50459928/*aspel.algorithm.reverse.size*/))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50460056/*aspel.algorithm.reverse.high_bytes*/));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$51734856/*aspel.algorithm.rotate*/(TYPE$7 V$50460120/*aspel.algorithm.rotate.data*/, TYPE$5 V$50460184/*aspel.algorithm.rotate.size*/, TYPE$5 V$50460248/*aspel.algorithm.rotate.count*/, TYPE$5 V$50460312/*aspel.algorithm.rotate.steps*/)
{
    {
    TYPE$10 V$50460376/*aspel.algorithm.rotate.bytes*/ = CORE$cast_regular(TYPE$10, (V$50460120/*aspel.algorithm.rotate.data*/));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734776/*aspel.algorithm.reverse*/)))(CORE$cast_regular(TYPE$7, (V$50460376/*aspel.algorithm.rotate.bytes*/)), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50460376/*aspel.algorithm.rotate.bytes*/)))[(CORE$U64)(CORE$mul((CORE$sub(((V$50460248/*aspel.algorithm.rotate.count*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50460184/*aspel.algorithm.rotate.size*/))))]))), (V$50460184/*aspel.algorithm.rotate.size*/));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734776/*aspel.algorithm.reverse*/)))(CORE$cast_regular(TYPE$7, (V$50460376/*aspel.algorithm.rotate.bytes*/)), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50460376/*aspel.algorithm.rotate.bytes*/)))[(CORE$U64)(CORE$mul((CORE$sub(((V$50460312/*aspel.algorithm.rotate.steps*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50460184/*aspel.algorithm.rotate.size*/))))]))), (V$50460184/*aspel.algorithm.rotate.size*/));
    ((TYPE$8(*)(TYPE$7,TYPE$7,TYPE$5))(((CORE$DELEGATE)V$51734776/*aspel.algorithm.reverse*/)))(CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50460376/*aspel.algorithm.rotate.bytes*/)))[(CORE$U64)(CORE$mul(((V$50460312/*aspel.algorithm.rotate.steps*/)),((V$50460184/*aspel.algorithm.rotate.size*/))))]))), CORE$cast_regular(TYPE$7, ((CORE$PTR) &(((TYPE$2*)((V$50460376/*aspel.algorithm.rotate.bytes*/)))[(CORE$U64)(CORE$mul((CORE$sub(((V$50460248/*aspel.algorithm.rotate.count*/)),(CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL))))),((V$50460184/*aspel.algorithm.rotate.size*/))))]))), (V$50460184/*aspel.algorithm.rotate.size*/));
    }
}

TYPE$6 V$51735816/*aspel.internal.parse_argument_from_line*/(TYPE$768 V$50464664/*aspel.internal.parse_argument_from_line.context*/)
{
    {
    TYPE$10 V$50464728/*aspel.internal.parse_argument_from_line.current*/ = (((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m1);
    TYPE$10 V$50464792/*aspel.internal.parse_argument_from_line.end*/ = (((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m2);
    if (CORE$ge(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),((V$50464792/*aspel.internal.parse_argument_from_line.end*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    TYPE$10 V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/ = ((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m4).a);
    TYPE$10 V$50464920/*aspel.internal.parse_argument_from_line.buffer_end*/ = CORE$add(((V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/)),(CORE$cast_regular(TYPE$10, ((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m4).n)))*(1));
    TYPE$5 V$50464984/*aspel.internal.parse_argument_from_line.buffer_required*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    if (CORE$land(((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m3)),(CORE$lor((CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(32ULL))))),(CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(9ULL))))))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$false);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m3));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m1));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
    }
    while (CORE$lor((CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(32ULL))))),(CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(9ULL))))))) {
    {
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464728/*aspel.internal.parse_argument_from_line.current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    if (CORE$eq(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),((V$50464792/*aspel.internal.parse_argument_from_line.end*/)))) {
    {
    {
    TYPE$6 RET$VAL = CORE$false;
    return RET$VAL;
    }
    }
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50464728/*aspel.internal.parse_argument_from_line.current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m5));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    TYPE$6 V$50465048/*aspel.internal.parse_argument_from_line.ignore_whitespace*/ = CORE$false;
    while (CORE$true) {
    {
    if (CORE$land((CORE$lor((CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(32ULL))))),(CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(9ULL))))))),((!((V$50465048/*aspel.internal.parse_argument_from_line.ignore_whitespace*/)))))) {
    {
    {
    break;
    }
    }
    }
    else {
    {
    if (CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(34ULL))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = ((!((V$50465048/*aspel.internal.parse_argument_from_line.ignore_whitespace*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50465048/*aspel.internal.parse_argument_from_line.ignore_whitespace*/));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464728/*aspel.internal.parse_argument_from_line.current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    if (CORE$eq(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),((V$50464792/*aspel.internal.parse_argument_from_line.end*/)))) {
    {
    {
    break;
    }
    }
    }
    {
    continue;
    }
    }
    }
    else {
    {
    if (CORE$eq(((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/)))),(CORE$cast_regular(TYPE$2, (CORE$S64)(92ULL))))) {
    {
    if (CORE$ne((CORE$add(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),(CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL)))*(1))),((V$50464792/*aspel.internal.parse_argument_from_line.end*/)))) {
    {
    if (CORE$lor((CORE$lor((CORE$lor((CORE$eq(((*(TYPE$2*)(CORE$add(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),(CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL)))*(1))))),(CORE$cast_regular(TYPE$2, (CORE$S64)(92ULL))))),(CORE$eq(((*(TYPE$2*)(CORE$add(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),(CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL)))*(1))))),(CORE$cast_regular(TYPE$2, (CORE$S64)(34ULL))))))),(CORE$eq(((*(TYPE$2*)(CORE$add(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),(CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL)))*(1))))),(CORE$cast_regular(TYPE$2, (CORE$S64)(32ULL))))))),(CORE$eq(((*(TYPE$2*)(CORE$add(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),(CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL)))*(1))))),(CORE$cast_regular(TYPE$2, (CORE$S64)(9ULL))))))) {
    {
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464728/*aspel.internal.parse_argument_from_line.current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    if (CORE$ne(((V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/)),(CORE$null_pointer))) {
    {
    {
    typedef TYPE$2 TEMP$TYPE0;
    auto TEMP$VAL0 = ((*(TYPE$2*)((V$50464728/*aspel.internal.parse_argument_from_line.current*/))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((*(TYPE$2*)((V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/))));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$2, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    if (CORE$eq(((V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/)),((V$50464920/*aspel.internal.parse_argument_from_line.buffer_end*/)))) {
    {
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, CORE$null_pointer));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464856/*aspel.internal.parse_argument_from_line.buffer_current*/));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    }
    }
    }
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464984/*aspel.internal.parse_argument_from_line.buffer_required*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL))*(1));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50464728/*aspel.internal.parse_argument_from_line.current*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    if (CORE$eq(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),((V$50464792/*aspel.internal.parse_argument_from_line.end*/)))) {
    {
    {
    break;
    }
    }
    }
    }
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add(((V$50464728/*aspel.internal.parse_argument_from_line.current*/)),(CORE$cast_regular(TYPE$10, (CORE$S64)(1ULL)))*(1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50464728/*aspel.internal.parse_argument_from_line.current*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m6));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$50464984/*aspel.internal.parse_argument_from_line.buffer_required*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$766*)((V$50464664/*aspel.internal.parse_argument_from_line.context*/)))->m7));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    TYPE$6 RET$VAL = CORE$true;
    return RET$VAL;
    }
    }
}

TYPE$3 V$51735896/*aspel.internal.parse_arguments*/(TYPE$1 V$50465112/*aspel.internal.parse_arguments.line*/)
{
    {
    TYPE$766 V$50465176/*aspel.internal.parse_arguments.context*/;
    {
{ (V$50465176/*aspel.internal.parse_arguments.context*/).m3 = (CORE$true); }
{ (V$50465176/*aspel.internal.parse_arguments.context*/).m4 = (CORE$null_array); }
}
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50465112/*aspel.internal.parse_arguments.line*/).a));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$add((((V$50465112/*aspel.internal.parse_arguments.line*/).a)),(CORE$cast_regular(TYPE$10, ((V$50465112/*aspel.internal.parse_arguments.line*/).n)))*(1)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m2));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    TYPE$5 V$50465240/*aspel.internal.parse_arguments.argument_count*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50465112/*aspel.internal.parse_arguments.line*/).a));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    while (((TYPE$6(*)(TYPE$768))(((CORE$DELEGATE)V$51735816/*aspel.internal.parse_argument_from_line*/)))(((CORE$PTR) &((V$50465176/*aspel.internal.parse_arguments.context*/))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50465240/*aspel.internal.parse_arguments.argument_count*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    TYPE$3 V$50465304/*aspel.internal.parse_arguments.arguments*/ = CORE$NEWARRINIT((CORE$U64)((V$50465240/*aspel.internal.parse_arguments.argument_count*/)), (CORE$U64)(16), [] (void* data) {
    typedef TYPE$1 type;
    type* val = (type*) data;
    { ((*val).a) = (0); }
{ ((*val).n) = (0); }
});
    CORE$ASSERT(((CORE$BOOL)(CORE$ne((CORE$cast_array_to_ptr((V$50465304/*aspel.internal.parse_arguments.arguments*/))),(CORE$null_pointer)))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_309B570_OFF],(CORE$U64) SHARED$STR_309B570_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x61\x72\x67\x75\x6D\x65\x6E\x74\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(126)));
    TYPE$5 V$50465368/*aspel.internal.parse_arguments.argument_index*/ = CORE$cast_regular(TYPE$5, (CORE$S64)(0ULL));
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m3));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50465112/*aspel.internal.parse_arguments.line*/).a));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    while (((TYPE$6(*)(TYPE$768))(((CORE$DELEGATE)V$51735816/*aspel.internal.parse_argument_from_line*/)))(((CORE$PTR) &((V$50465176/*aspel.internal.parse_arguments.context*/))))) {
    {
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$NEWARRINIT((CORE$U64)(((V$50465176/*aspel.internal.parse_arguments.context*/).m7)), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
}));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(CORE$ABC(TYPE$1, ((V$50465304/*aspel.internal.parse_arguments.arguments*/)), (CORE$U64)((V$50465368/*aspel.internal.parse_arguments.argument_index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x61\x72\x67\x75\x6D\x65\x6E\x74\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(133)));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    CORE$ASSERT(((CORE$BOOL)(CORE$ne((CORE$cast_array_to_ptr(CORE$ABC(TYPE$1, ((V$50465304/*aspel.internal.parse_arguments.arguments*/)), (CORE$U64)((V$50465368/*aspel.internal.parse_arguments.argument_index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x61\x72\x67\x75\x6D\x65\x6E\x74\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(134)))),(CORE$null_pointer)))), ((CORE$ARRAY)(CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_309B750_OFF],(CORE$U64) SHARED$STR_309B750_LEN))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x61\x72\x67\x75\x6D\x65\x6E\x74\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(134)));
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$ABC(TYPE$1, ((V$50465304/*aspel.internal.parse_arguments.arguments*/)), (CORE$U64)((V$50465368/*aspel.internal.parse_arguments.argument_index*/)), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x61\x72\x67\x75\x6D\x65\x6E\x74\x5F\x70\x61\x72\x73\x65\x72\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(136)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m4));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$50465368/*aspel.internal.parse_arguments.argument_index*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    {
    typedef TYPE$10 TEMP$TYPE0;
    auto TEMP$VAL0 = (((V$50465176/*aspel.internal.parse_arguments.context*/).m5));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m1));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$10, TEMP$VAL0);
    }
    ((TYPE$6(*)(TYPE$768))(((CORE$DELEGATE)V$51735816/*aspel.internal.parse_argument_from_line*/)))(((CORE$PTR) &((V$50465176/*aspel.internal.parse_arguments.context*/))));
    {
    typedef TYPE$1 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$null_array);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$50465176/*aspel.internal.parse_arguments.context*/).m4));
    *TEMP$PTR0 = (TEMP$VAL0);
    }
    }
    }
    {
    TYPE$3 RET$VAL = (V$50465304/*aspel.internal.parse_arguments.arguments*/);
    return RET$VAL;
    }
    }
}

TYPE$8 V$51736216/*aspel.internal.executable_entry*/()
{
    {
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51736056/*aspel.internal.initialize_thread*/)))();
    ((TYPE$8(*)(TYPE$3))(((CORE$DELEGATE)V$51735976/*aspel.internal.aspel_entry*/)))(CORE$null_array);
    ((TYPE$8(*)())(((CORE$DELEGATE)V$51736136/*aspel.internal.finalize_thread*/)))();
    }
}

TYPE$8 V$51736296/*aspel.internal.fatal_internal_error*/(TYPE$1 V$50465432/*aspel.internal.fatal_internal_error.description*/)
{
    {
    CORE$ASSERT(((CORE$BOOL)(CORE$false)), ((CORE$ARRAY)((V$50465432/*aspel.internal.fatal_internal_error.description*/))), ("\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x6F\x73\x2E\x61\x73\x70\x65\x6C"), ((CORE$U64)(14)));
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51753336/*aspel.internal.win32.ExitProcess*/)))(CORE$cast_regular(TYPE$19, (-((CORE$S64)(1ULL)))));
    }
}

TYPE$8 V$51737656/*aspel.internal.win32.FD_CLR*/(TYPE$19 V$54890584/*aspel.internal.win32.FD_CLR.fd*/, TYPE$333 V$54890648/*aspel.internal.win32.FD_CLR.set*/)
{
    {
    TYPE$19 V$54890712/*aspel.internal.win32.FD_CLR.i*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    while (CORE$lt(((V$54890712/*aspel.internal.win32.FD_CLR.i*/)),((((TYPE$330*)((V$54890648/*aspel.internal.win32.FD_CLR.set*/)))->m0)))) {
    {
    if (CORE$eq((((TYPE$19*)(CORE$cast_regular(TYPE$775, ((CORE$PTR) &((((TYPE$330*)((V$54890648/*aspel.internal.win32.FD_CLR.set*/)))->m1))))))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$54890712/*aspel.internal.win32.FD_CLR.i*/)))]),((V$54890584/*aspel.internal.win32.FD_CLR.fd*/)))) {
    {
    while (CORE$lt(((V$54890712/*aspel.internal.win32.FD_CLR.i*/)),(CORE$sub(((((TYPE$330*)((V$54890648/*aspel.internal.win32.FD_CLR.set*/)))->m0)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$19*)(CORE$cast_regular(TYPE$775, ((CORE$PTR) &((((TYPE$330*)((V$54890648/*aspel.internal.win32.FD_CLR.set*/)))->m1))))))[(CORE$U64)(CORE$cast_regular(TYPE$5, CORE$add(((V$54890712/*aspel.internal.win32.FD_CLR.i*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL))))))]);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)(CORE$cast_regular(TYPE$775, ((CORE$PTR) &((((TYPE$330*)((V$54890648/*aspel.internal.win32.FD_CLR.set*/)))->m1))))))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$54890712/*aspel.internal.win32.FD_CLR.i*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$54890712/*aspel.internal.win32.FD_CLR.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$330*)((V$54890648/*aspel.internal.win32.FD_CLR.set*/)))->m0));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    break;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$54890712/*aspel.internal.win32.FD_CLR.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
}

TYPE$8 V$51737736/*aspel.internal.win32.FD_SET*/(TYPE$19 V$54890776/*aspel.internal.win32.FD_SET.fd*/, TYPE$333 V$54890840/*aspel.internal.win32.FD_SET.set*/)
{
    {
    TYPE$19 V$54890904/*aspel.internal.win32.FD_SET.i*/ = CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL));
    while (CORE$lt(((V$54890904/*aspel.internal.win32.FD_SET.i*/)),((((TYPE$330*)((V$54890840/*aspel.internal.win32.FD_SET.set*/)))->m0)))) {
    {
    if (CORE$eq((((TYPE$19*)(CORE$cast_regular(TYPE$775, ((CORE$PTR) &((((TYPE$330*)((V$54890840/*aspel.internal.win32.FD_SET.set*/)))->m1))))))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$54890904/*aspel.internal.win32.FD_SET.i*/)))]),((V$54890776/*aspel.internal.win32.FD_SET.fd*/)))) {
    {
    {
    break;
    }
    }
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((V$54890904/*aspel.internal.win32.FD_SET.i*/));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    if (CORE$eq(((V$54890904/*aspel.internal.win32.FD_SET.i*/)),((((TYPE$330*)((V$54890840/*aspel.internal.win32.FD_SET.set*/)))->m0)))) {
    {
    if (CORE$lt(((((TYPE$330*)((V$54890840/*aspel.internal.win32.FD_SET.set*/)))->m0)),(((ISOLATED$BASE.V$54888728/*aspel.internal.win32.FD_SETSIZE*/))))) {
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = ((V$54890776/*aspel.internal.win32.FD_SET.fd*/));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((TYPE$19*)(CORE$cast_regular(TYPE$775, ((CORE$PTR) &((((TYPE$330*)((V$54890840/*aspel.internal.win32.FD_SET.set*/)))->m1))))))[(CORE$U64)(CORE$cast_regular(TYPE$5, (V$54890904/*aspel.internal.win32.FD_SET.i*/)))]);
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$330*)((V$54890840/*aspel.internal.win32.FD_SET.set*/)))->m0));
    *TEMP$PTR0 = (*TEMP$PTR0) + CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
    }
    }
    }
    }
}

TYPE$8 V$51737816/*aspel.internal.win32.FD_ZERO*/(TYPE$333 V$54890968/*aspel.internal.win32.FD_ZERO.set*/)
{
    {
    {
    typedef TYPE$19 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&((((TYPE$330*)((V$54890968/*aspel.internal.win32.FD_ZERO.set*/)))->m0));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$19, TEMP$VAL0);
    }
    }
}

TYPE$16 V$51737896/*aspel.internal.win32.FD_ISSET*/(TYPE$19 V$54891032/*aspel.internal.win32.FD_ISSET.fd*/, TYPE$333 V$54891096/*aspel.internal.win32.FD_ISSET.set*/)
{
    {
    {
    TYPE$16 RET$VAL = ((TYPE$16(CORE$STDCALL*)(TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51737576/*aspel.internal.win32.__WSAFDIsSet*/)))((V$54891032/*aspel.internal.win32.FD_ISSET.fd*/), CORE$cast_regular(TYPE$19, (V$54891096/*aspel.internal.win32.FD_ISSET.set*/)));
    return RET$VAL;
    }
    }
}

TYPE$8 V$51754696/*aspel.internal.win32.report_win32_error*/()
{
    {
    TYPE$19 V$54950360/*aspel.internal.win32.report_win32_error.last_error*/ = ((TYPE$19(CORE$STDCALL*)())(((CORE$DELEGATE)V$51751496/*aspel.internal.win32.GetLastError*/)))();
    if (CORE$ne(((V$54950360/*aspel.internal.win32.report_win32_error.last_error*/)),(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))))) {
    {
    TYPE$1 V$54950424/*aspel.internal.win32.report_win32_error..message*/ = CORE$PUSHARRINIT((CORE$U64)(CORE$cast_regular(TYPE$5, (CORE$S64)(512ULL))), (CORE$U64)(1), [] (void* data) {
    typedef TYPE$2 type;
    type* val = (type*) data;
    { (*val) = (0); }
});
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, ((TYPE$19(CORE$STDCALL*)(TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19,TYPE$19))(((CORE$DELEGATE)V$51751336/*aspel.internal.win32.FormatMessageA*/)))(CORE$bor(((V$54936152/*aspel.internal.win32.FORMAT_MESSAGE_FROM_SYSTEM*/)),((V$54936216/*aspel.internal.win32.FORMAT_MESSAGE_IGNORE_INSERTS*/))), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)), (V$54950360/*aspel.internal.win32.report_win32_error.last_error*/), CORE$cast_regular(TYPE$19, (CORE$S64)(1033ULL)), CORE$cast_regular(TYPE$19, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/).a)), CORE$cast_regular(TYPE$19, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n)), CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    if (CORE$gt((CORE$cast_regular(TYPE$4, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n))),((CORE$S64)(0ULL)))) {
    {
    while (CORE$gt((CORE$cast_regular(TYPE$4, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n))),((CORE$S64)(0ULL)))) {
    {
    if (CORE$lor((CORE$eq((CORE$ABC(TYPE$2, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub((CORE$cast_regular(TYPE$4, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n))),((CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x77\x69\x6E\x64\x6F\x77\x73\\\x5F\x77\x69\x6E\x33\x32\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(30))),(CORE$cast_regular(TYPE$2, (CORE$S64)(10ULL))))),(CORE$eq((CORE$ABC(TYPE$2, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/)), (CORE$U64)(CORE$cast_regular(TYPE$5, CORE$sub((CORE$cast_regular(TYPE$4, ((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n))),((CORE$S64)(1ULL))))), "\x57\x3A\\\x61\x73\x70\x65\x6C\\\x61\x73\x70\x65\x6C\x63\\\x61\x73\x6C\\\x6C\x61\x6E\x67\\\x69\x6E\x74\x65\x72\x6E\x61\x6C\\\x77\x69\x6E\x64\x6F\x77\x73\\\x5F\x77\x69\x6E\x33\x32\x2E\x61\x73\x70\x65\x6C", (CORE$U64)(30))),(CORE$cast_regular(TYPE$2, (CORE$S64)(13ULL))))))) {
    {
    {
    typedef TYPE$5 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$cast_regular(TYPE$5, (CORE$S64)(1ULL)));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((V$54950424/*aspel.internal.win32.report_win32_error..message*/).n));
    *TEMP$PTR0 = (*TEMP$PTR0) - CORE$cast_regular(TYPE$5, TEMP$VAL0);
    }
    }
    }
    else {
    {
    {
    break;
    }
    }
    }
    }
    }
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$54950296/*aspel.internal.win32.WIN32*/);
    TYPE$19 TEMP$ARG1 = (V$47581960/*aspel.log.ERROR*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_391BB20_OFF],(CORE$U64) SHARED$STR_391BB20_LEN);
    TYPE$35 VARARGS$VALUES[2];
    VARARGS$VALUES[0] = CORE$PACK(19, (V$54950360/*aspel.internal.win32.report_win32_error.last_error*/));
    VARARGS$VALUES[1] = CORE$PACK(1, (CORE$PTR)&((V$54950424/*aspel.internal.win32.report_win32_error..message*/)));
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 2);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    }
    }
    else {
    {
    ([&]()->TYPE$8{
    TYPE$1 TEMP$ARG0 = (V$54950296/*aspel.internal.win32.WIN32*/);
    TYPE$19 TEMP$ARG1 = (V$47581960/*aspel.log.ERROR*/);
    TYPE$1 TEMP$ARG2 = CORE$MAKEARR((CORE$PTR) &SHARED$STRS[SHARED$STR_391BC20_OFF],(CORE$U64) SHARED$STR_391BC20_LEN);
    TYPE$35 VARARGS$VALUES[1];
    VARARGS$VALUES[0] = CORE$PACK(19, (V$54950360/*aspel.internal.win32.report_win32_error.last_error*/));
    CORE$ARRAY VARARGS$ARRAY = CORE$MAKEARR((CORE$PTR) VARARGS$VALUES, 1);
    return ((TYPE$8(*)(TYPE$1,TYPE$19,TYPE$1,TYPE$34))(((CORE$DELEGATE)V$47849120/*aspel.log.report*/)))(TEMP$ARG0, TEMP$ARG1, TEMP$ARG2, VARARGS$ARRAY);
})();
    }
    }
    ((TYPE$8(CORE$STDCALL*)(TYPE$19))(((CORE$DELEGATE)V$51751576/*aspel.internal.win32.SetLastError*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL)));
    }
    }
    }
}

TYPE$8 __aspel_internal__aspel_entry(TYPE$3 V$54950808/*kutikula.main.args*/)
{
    {
    TYPE$4 V$54950872/*kutikula.main.window_flags*/ = (CORE$S64)(0ULL);
    {
    typedef TYPE$7 TEMP$TYPE0;
    auto TEMP$VAL0 = (((TYPE$7(*)(TYPE$19))(((CORE$DELEGATE)V$47861920/*aspel.cml.video.create_window*/)))(CORE$cast_regular(TYPE$19, (CORE$S64)(0ULL))));
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)));
    *TEMP$PTR0 = CORE$cast_regular(TYPE$7, TEMP$VAL0);
    }
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47862560/*aspel.cml.video.set_window_size*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)), CORE$cast_regular(TYPE$16, ((ISOLATED$BASE.V$54950552/*kutikula.WINDOW_WIDTH*/))), CORE$cast_regular(TYPE$16, ((ISOLATED$BASE.V$54950616/*kutikula.WINDOW_HEIGHT*/))));
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47862640/*aspel.cml.video.set_window_maximum_size*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)), CORE$cast_regular(TYPE$16, ((ISOLATED$BASE.V$54950552/*kutikula.WINDOW_WIDTH*/))), CORE$cast_regular(TYPE$16, ((ISOLATED$BASE.V$54950616/*kutikula.WINDOW_HEIGHT*/))));
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47862720/*aspel.cml.video.set_window_minimum_size*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)), CORE$cast_regular(TYPE$16, ((ISOLATED$BASE.V$54950552/*kutikula.WINDOW_WIDTH*/))), CORE$cast_regular(TYPE$16, ((ISOLATED$BASE.V$54950616/*kutikula.WINDOW_HEIGHT*/))));
    ((TYPE$8(*)(TYPE$7,TYPE$19))(((CORE$DELEGATE)V$47862800/*aspel.cml.video.set_window_fullscreen*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)), ((ISOLATED$BASE.V$50368024/*aspel.cml.video.WINDOW_WINDOWED*/)));
    ((TYPE$8(*)(TYPE$7,TYPE$16,TYPE$16))(((CORE$DELEGATE)V$47862880/*aspel.cml.video.set_window_position*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)), ((ISOLATED$BASE.V$50367960/*aspel.cml.video.WINDOW_POSITION_CENTERED*/)), ((ISOLATED$BASE.V$50367960/*aspel.cml.video.WINDOW_POSITION_CENTERED*/)));
    ((TYPE$8(*)(TYPE$7,TYPE$1))(((CORE$DELEGATE)V$47862960/*aspel.cml.video.set_window_title*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)), ((ISOLATED$BASE.V$54950488/*kutikula.WINDOW_TITLE*/)));
    ((TYPE$8(*)(TYPE$7))(((CORE$DELEGATE)V$47863200/*aspel.cml.video.show_window*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)));
    while ((!(((ISOLATED$BASE.V$54950744/*kutikula.window_should_close*/))))) {
    {
    TYPE$440 V$54950936/*kutikula.main..event*/;
    {
    { (V$54950936/*kutikula.main..event*/.m0) = (0); }
    { (V$54950936/*kutikula.main..event*/.m1) = (0); }
    { (V$54950936/*kutikula.main..event*/.m2) = (0); }
    { (V$54950936/*kutikula.main..event*/.m3) = (0); }
    { (V$54950936/*kutikula.main..event*/.m4) = (0); }
    { (V$54950936/*kutikula.main..event*/.m5) = (0); }
    { (V$54950936/*kutikula.main..event*/.m6) = (0); }
    { (V$54950936/*kutikula.main..event*/.m7) = (0); }
}
    while (((TYPE$6(*)(TYPE$447))(((CORE$DELEGATE)V$47855040/*aspel.cml.event.poll_event*/)))(((CORE$PTR) &((V$54950936/*kutikula.main..event*/))))) {
    {
    if (CORE$eq((((V$54950936/*kutikula.main..event*/).m0)),(((ISOLATED$BASE.V$50343128/*aspel.cml.event.EVENT_QUIT*/))))) {
    {
    {
    typedef TYPE$6 TEMP$TYPE0;
    auto TEMP$VAL0 = (CORE$true);
    TEMP$TYPE0* TEMP$PTR0 = (TEMP$TYPE0*)&(((ISOLATED$BASE.V$54950744/*kutikula.window_should_close*/)));
    *TEMP$PTR0 = CORE$cast_to_bool(TEMP$VAL0);
    }
    }
    }
    }
    }
    }
    }
    ((TYPE$8(*)(TYPE$7))(((CORE$DELEGATE)V$47862000/*aspel.cml.video.delete_window*/)))(((ISOLATED$BASE.V$54950680/*kutikula.the_window*/)));
    }
}

#include "W:\aspel\aspelc/modules/coreend.h"
