package kutikula;

using aspel.text;

PIXELS_TO_METERS :: 1.0 / 100.0;
METERS_TO_PIXELS :: 100.0;

points: []Vector2 = null;

FIELD_DENSITY :: 4;
field_width := 0;
field_height := 0;
field: []Vector2;

update_logic := true;

on_mouse_press: (x: int32, y: int32)
{
    new_point: Vector2;
    new_point.x = cast(float32) x * PIXELS_TO_METERS;
    new_point.y = cast(float32) y * PIXELS_TO_METERS;

    append(&points, &new_point, sizeof(type Vector2));
    update_logic = true;
}

update: ()
{
    if !update_logic then return;
    update_logic = false;

    if field != null then
        delete field;

    field_width = window_width / FIELD_DENSITY;
    field_height = window_height / FIELD_DENSITY;
    field = new[field_width * field_height] Vector2;

    foreach index range 0, field.n - 1
    {
        x := index % field_width;
        y := index / field_width;
        where := { Vector2: x, y };
        where = mul(where, FIELD_DENSITY * PIXELS_TO_METERS);

        vector := { Vector2: 0, 0 };
        foreach point in points
        {
            delta := sub(where, point);
            radius := length(delta);
            normal := normalize_or_return(delta);

            // @CompilerBug ???
            // Doesn't work for:
            // q :: 1e-7; // q == 0
            q: float64 = 1.0;
            q /= 1000;
            q /= 1000;
            q /= 1000;
            q /= 1000;
            force := K * q / (radius * radius);
            result := mul(normal, force);
            vector = add(vector, result);
        }

        field[index] = vector;
    }
}
